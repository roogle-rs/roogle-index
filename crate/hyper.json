{"root":"0:0:1645","crate_version":"0.14.20","includes_private":false,"index":{"b:2:2871-0:770:2625":{"id":"b:2:2871-0:770:2625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2865:3112","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2873:64060"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13525:70145":{"id":"2:13525:70145","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:13053:3407","prim@char":"1:16005:2710"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13078:4910","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3268:211-0:939:2629":{"id":"a:2:3268:211-0:939:2629","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3268:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3268:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2629","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2871-0:768:2622":{"id":"b:2:2871-0:768:2622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2865:3112","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2873:64060"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13475:70131":{"id":"2:13475:70131","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:13053:3407","`DoubleEndedIterator`":"2:8447:120","str::rsplit_terminator":"1:16011:2715","str::split":"1:16011:2715","prim@char":"1:16005:2710"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:49509:5155","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13426:70128":{"id":"2:13426:70128","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:3728:224":{"id":"2:3728:224","crate_id":2,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3729:181","2:3730:4810","2:3731:686","2:3732:369"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromResidual","id":"2:3733:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"2:3728:224","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"31:110:3115":{"id":"31:110:3115","crate_id":31,"name":"FusedStream","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["31:111:6627"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Stream","id":"31:96:1926","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6107:64083":{"id":"5:6107:64083","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:16011:2715"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"30:6251:3020":{"id":"30:6251:3020","crate_id":30,"name":"LocalSpawnExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["30:6252:6502"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"LocalSpawn","id":"33:19:3011","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13428:66087":{"id":"2:13428:66087","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:16022:2724"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3774:3099":{"id":"2:3774:3099","crate_id":2,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:3504:2877":{"id":"2:3504:2877","crate_id":2,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3505:545"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Deref","id":"2:3491:116","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:44:1618":{"id":"0:44:1618","crate_id":0,"name":"common","span":{"filename":"src/common/mod.rs","begin":[1,0],"end":[39,47]},"visibility":"crate","docs":null,"links":{},"attrs":["#[macro_use]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":true}},"2:13443:1632":{"id":"2:13443:1632","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:49445:1765","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8403:151":{"id":"2:8403:151","crate_id":2,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8404:1958","2:8405:3491","2:8406:768"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:223":{"id":"0:223","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[23,27],"end":[23,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::body::Sender","name":"Sender","id":"0:312:1872","glob":false}},"2:3273:2810":{"id":"2:3273:2810","crate_id":2,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13789:767":{"id":"2:13789:767","crate_id":2,"name":"into_future","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoFuture","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"kind":"resolved_path","inner":{"name":"IntoFuture","id":"2:13781:150","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:768:2622":{"id":"b:2:3207-0:768:2622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3177:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3210:127","2:3211:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13513:70143":{"id":"2:13513:70143","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"self::pattern":"2:13053:3407","prim@char":"1:16005:2710"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedSearcher","id":"2:13083:4911","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10306:3569":{"id":"2:10306:3569","crate_id":2,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10307:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13429:59995":{"id":"2:13429:59995","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:47492:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10933:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10933:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"36:13:2247":{"id":"36:13:2247","crate_id":36,"name":"Service","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["36:15:1610","36:16:127","36:17:138","36:18:2069","36:19:376"],"generics":{"params":[{"name":"Request","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:23771:4881":{"id":"2:23771:4881","crate_id":2,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:23772:4978"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:23767:2516","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3278:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13444:11195":{"id":"2:13444:11195","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"1:16011:2715"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:49733:5165","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:774":{"id":"0:774","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[121,0],"end":[149,1]},"visibility":{"restricted":{"parent":"0:720:1622","path":"::upgrade"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:775:2652"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:931:2565":{"id":"0:931:2565","crate_id":0,"name":"MakeServiceFn","span":{"filename":"src/service/make.rs","begin":[148,0],"end":[150,1]},"visibility":"public","docs":"`MakeService` returned from [`make_service_fn`]","links":{"`make_service_fn`":"0:625:2511"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"0:485:2477":{"id":"0:485:2477","crate_id":0,"name":"execute","span":{"filename":"src/rt.rs","begin":[11,4],"end":[11,32]},"visibility":"default","docs":"Place the future into the executor to be run.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fut",{"kind":"generic","inner":"Fut"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:10241:2867":{"id":"2:10241:2867","crate_id":2,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10242:1532","2:10243:64118","2:10245:3364"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2956:177":{"id":"2:2956:177","crate_id":2,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2957:415","2:2958:3414","2:2959:1833","2:2960:3481"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2925:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2966:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13448:10935":{"id":"2:13448:10935","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:49751:5167","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"30:239:3002":{"id":"30:239:3002","crate_id":30,"name":"FutureExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["30:240:841","30:243:71939","30:245:6529","30:248:71940","30:250:71941","30:252:6576","30:253:3510","30:254:71942","30:255:3511","30:256:3512","30:258:2779","30:260:71943","30:262:71944","30:263:71945","30:264:71946","30:265:71947"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13766:138","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:4001-0:768:2622":{"id":"b:2:4001-0:768:2622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3999:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:4003:1428"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:7799:4595":{"id":"1:7799:4595","crate_id":1,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7800:67855"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3515:1880":{"id":"2:3515:1880","crate_id":2,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3516:578"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3405:4519":{"id":"2:3405:4519","crate_id":2,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3407:181","2:3408:356"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3201-0:939:2629":{"id":"b:2:3201-0:939:2629","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2629","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:3203:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:714":{"id":"0:714","crate_id":0,"name":null,"span":{"filename":"src/service/mod.rs","begin":[54,0],"end":[54,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::make::make_service_fn","name":"make_service_fn","id":"0:625:2511","glob":false}},"33:16:3012":{"id":"33:16:3012","crate_id":33,"name":"Spawn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["33:17:71929","33:18:2379"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"24:309:1818":{"id":"24:309:1818","crate_id":24,"name":"AsyncWrite","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["24:310:1835","24:311:1837","24:312:1838","24:313:1836","24:316:1839"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:22837:4967":{"id":"2:22837:4967","crate_id":2,"name":"SimdUint","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22838:68624","2:22839:1226","2:22840:1227","2:22841:68641","2:22842:68642","2:22843:68643","2:22844:68644","2:22845:69703","2:22846:69704","2:22847:69705"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3278:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22850:2516","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:10":{"id":"0:10","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[65,30],"end":[65,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::http::Method","name":"Method","id":"20:3009:1608","glob":false}},"0:487":{"id":"0:487","crate_id":0,"name":null,"span":{"filename":"src/service/mod.rs","begin":[38,0],"end":[38,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"tower_service::Service","name":"Service","id":"36:13:2247","glob":false}},"0:785":{"id":"0:785","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[191,0],"end":[195,1]},"visibility":{"restricted":{"parent":"0:720:1622","path":"::upgrade"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10291:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:786:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13505:70138":{"id":"2:13505:70138","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13063:4907":{"id":"2:13063:4907","crate_id":2,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13065:4909","2:13066:68713","2:13067:68714","2:13068:68715","2:13069:68717","2:13070:68716","2:13071:68718"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3201-0:770:2625":{"id":"b:2:3201-0:770:2625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3203:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:13785-0:770:2625":{"id":"b:2:13785-0:770:2625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13766:138","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoFuture","id":"2:13781:150","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:13787:181","2:13788:150","2:13789:767"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"F"}}},"0:782:1837":{"id":"0:782:1837","crate_id":0,"name":"poll_flush","span":{"filename":"src/upgrade.rs","begin":[178,4],"end":[180,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Pin","id":"2:47611:188","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}},"param_names":[]}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"task::Context","id":"2:14068:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:50359:190","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4082:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13543:70149":{"id":"2:13543:70149","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:16005:2710"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:49776:5169","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10304:3568":{"id":"2:10304:3568","crate_id":2,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10305:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13787:181":{"id":"2:13787:181","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13766:138","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}},"2:10529:142":{"id":"2:10529:142","crate_id":2,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10530:715","2:10532:10964"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13788:150":{"id":"2:13788:150","crate_id":2,"name":"IntoFuture","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"F"}}},"0:786:660":{"id":"0:786:660","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[192,4],"end":[194,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10251:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10240:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9259:3229-0:768:2622":{"id":"a:2:9259:3229-0:768:2622","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9259:3229","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:811:2645":{"id":"0:811:2645","crate_id":0,"name":"CanUpgrade","span":{"filename":"src/upgrade.rs","begin":[298,4],"end":[300,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:812:2647"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"31:44:3003":{"id":"31:44:3003","crate_id":31,"name":"TryFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["31:45:175","31:46:127","31:47:64073"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13766:138","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"31:39:2516","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:7927:4869":{"id":"2:7927:4869","crate_id":2,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:7928:69557","2:7929:69558","2:7930:69555","2:7931:69553","2:7932:69559","2:7933:69556","2:7934:69554"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2887:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2966:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:411:1617":{"id":"0:411:1617","crate_id":0,"name":"error","span":{"filename":"src/error.rs","begin":[1,0],"end":[630,1]},"visibility":"crate","docs":"Error and Result module.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:418:205","0:421:127"],"is_stripped":true}},"a:2:9258:3230-0:939:2629":{"id":"a:2:9258:3230-0:939:2629","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9258:3230","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9258:3230","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2629","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:946:660":{"id":"0:946:660","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[80,9],"end":[80,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10251:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10240:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6083":{"id":"5:6083","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5903:1339","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:6084:70770","5:6085:2876","5:6088:70771","5:6091:70772","5:6103:70773","5:6104:70774","5:6105:2896","5:6106:64082","5:6107:64083"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:483:2474":{"id":"0:483:2474","crate_id":0,"name":"Executor","span":{"filename":"src/rt.rs","begin":[9,0],"end":[12,1]},"visibility":"public","docs":"An executor of futures.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:485:2477"],"generics":{"params":[{"name":"Fut","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2868-0:939:2629":{"id":"b:2:2868-0:939:2629","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2862:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2629","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:2870:1922"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3168:74":{"id":"2:3168:74","crate_id":2,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3170:2028"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:13531:70147":{"id":"2:13531:70147","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:16005:2710","self::pattern":"2:13053:3407"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13078:4910","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13536:5320":{"id":"2:13536:5320","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23134:4981":{"id":"2:23134:4981","crate_id":2,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdElement","id":"2:23771:4881","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:23125:2516","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:789":{"id":"0:789","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[210,0],"end":[223,1]},"visibility":{"restricted":{"parent":"0:720:1622","path":"::upgrade"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13766:138","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:790:181","0:791:1013"],"negative":false,"synthetic":false,"blanket_impl":null}},"31:52:175":{"id":"31:52:175","crate_id":31,"name":"Ok","span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.21/src/future.rs","begin":[77,4],"end":[77,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"2:3395:4517":{"id":"2:3395:4517","crate_id":2,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3397:181","2:3398:351"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:780:1835":{"id":"0:780:1835","crate_id":0,"name":"poll_write","span":{"filename":"src/upgrade.rs","begin":[162,4],"end":[168,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Pin","id":"2:47611:188","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}},"param_names":[]}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"task::Context","id":"2:14068:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:50359:190","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4082:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3367:3111":{"id":"2:3367:3111","crate_id":2,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3369:266"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6441:4473":{"id":"1:6441:4473","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6442:4725","1:6443:4726","1:6444:8628","1:6445:68186","1:6447:68189","1:6449:1750","1:6450:68187","1:6452:68188"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10569:2516","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3383:4866":{"id":"2:3383:4866","crate_id":2,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3385:1103"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:220":{"id":"0:220","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[23,21],"end":[23,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::body::Body","name":"Body","id":"0:297:1616","glob":false}},"31:54:64073":{"id":"31:54:64073","crate_id":31,"name":"try_poll","span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.21/src/future.rs","begin":[81,4],"end":[81,81]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Pin","id":"2:47611:188","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"F"}}}}],"bindings":[]}},"param_names":[]}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Context","id":"2:14068:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:50359:190","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13766:138","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13539:64085":{"id":"2:13539:64085","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"30:6248:3021":{"id":"30:6248:3021","crate_id":30,"name":"SpawnExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["30:6249:2128"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Spawn","id":"33:16:3012","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6084:70770":{"id":"5:6084:70770","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:1943","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:5326","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:1943","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:5326","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:0:1645":{"id":"0:0:1645","crate_id":0,"name":"hyper","span":{"filename":"src/lib.rs","begin":[1,0],"end":[109,1]},"visibility":"public","docs":"# hyper\n\nhyper is a **fast** and **correct** HTTP implementation written in and for Rust.\n\n## Features\n\n- HTTP/1 and HTTP/2\n- Asynchronous design\n- Leading in performance\n- Tested and **correct**\n- Extensive production use\n- [Client](client/index.html) and [Server](server/index.html) APIs\n\nIf just starting out, **check out the [Guides](https://hyper.rs/guides)\nfirst.**\n\n## \"Low-level\"\n\nhyper is a lower-level HTTP library, meant to be a building block\nfor libraries and applications.\n\nIf looking for just a convenient HTTP client, consider the\n[reqwest](https://crates.io/crates/reqwest) crate.\n\n# Optional Features\n\nhyper uses a set of [feature flags] to reduce the amount of compiled code.\nIt is possible to just enable certain features over others. By default,\nhyper does not enable any features but allows one to enable a subset for\ntheir use case. Below is a list of the available feature flags. You may\nalso notice above each function, struct and trait there is listed one or\nmore feature flags that are required for that item to be used.\n\nIf you are new to hyper it is possible to enable the `full` feature flag\nwhich will enable all public APIs. Beware though that this will pull in\nmany extra dependencies that you may not need.\n\nThe following optional features are available:\n\n- `http1`: Enables HTTP/1 support.\n- `http2`: Enables HTTP/2 support.\n- `client`: Enables the HTTP `client`.\n- `server`: Enables the HTTP `server`.\n- `runtime`: Enables convenient integration with `tokio`, providing\n  connectors and acceptors for TCP, and a default executor.\n- `tcp`: Enables convenient implementations over TCP (using tokio).\n- `stream`: Provides `futures::Stream` capabilities.\n\n[feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","links":{},"attrs":["#![deny(missing_docs)]","#![deny(missing_debug_implementations)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:202:1615","0:475:1619","0:482:1123","0:486:1621","0:720:1622","0:7","0:10","0:13","0:16","0:19","0:22","0:25","0:28","0:31","0:35","0:38"],"is_stripped":false}},"2:13499:70136":{"id":"2:13499:70136","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"str::rmatch_indices":"1:16011:2715","`DoubleEndedIterator`":"2:8447:120","prim@char":"1:16005:2710","self::pattern":"2:13053:3407"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:49609:5159","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3212-0:770:2625":{"id":"b:2:3212-0:770:2625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3215:127","2:3216:1415"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3346:4850":{"id":"2:3346:4850","crate_id":2,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3348:181","2:3349:892"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13419:10985":{"id":"2:13419:10985","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:650:2506":{"id":"0:650:2506","crate_id":0,"name":"util","span":{"filename":"src/service/util.rs","begin":[1,0],"end":[84,52]},"visibility":{"restricted":{"parent":"0:486:1621","path":"::service"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:680:2512","0:684:2583"],"is_stripped":true}},"0:812:2647":{"id":"0:812:2647","crate_id":0,"name":"on_upgrade","span":{"filename":"src/upgrade.rs","begin":[299,8],"end":[299,41]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:770:2625":{"id":"0:770:2625","crate_id":0,"name":"OnUpgrade","span":{"filename":"src/upgrade.rs","begin":[72,0],"end":[74,1]},"visibility":"public","docs":"A future for a possible HTTP upgrade.\n\nIf no upgrade was available, or it doesn't succeed, yields an `Error`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:3268:211-0:770:2625","a:2:3309:1760-0:770:2625","a:2:9258:3230-0:770:2625","a:2:3280:220-0:770:2625","a:2:9259:3229-0:770:2625","b:2:3212-0:770:2625","b:2:3207-0:770:2625","b:2:13785-0:770:2625","b:2:2871-0:770:2625","b:2:4001-0:770:2625","b:2:2868-0:770:2625","b:2:3197-0:770:2625","b:2:3201-0:770:2625","b:30:237-0:770:2625","b:30:504-0:770:2625","b:31:48-0:770:2625","0:789","0:793"]}},"0:402:1901":{"id":"0:402:1901","crate_id":0,"name":"to_bytes","span":{"filename":"src/body/to_bytes.rs","begin":[47,0],"end":[77,1]},"visibility":"public","docs":"Concatenate the buffers from a body into a single `Bytes` asynchronously.\n\nThis may require copying the data into a single buffer. If you don't need\na contiguous buffer, prefer the [`aggregate`](crate::body::aggregate())\nfunction.\n\n# Note\n\nCare needs to be taken if the remote is untrusted. The function doesn't implement any length\nchecks and an malicious peer might make it consume arbitrary amounts of memory. Checking the\n`Content-Length` is a possibility, but it is not strictly mandated to be present.\n\n# Example\n\n```\n# #[cfg(all(feature = \"client\", feature = \"tcp\", any(feature = \"http1\", feature = \"http2\")))]\n# async fn doc() -> hyper::Result<()> {\nuse hyper::{body::HttpBody};\n\n# let request = hyper::Request::builder()\n#        .method(hyper::Method::POST)\n#        .uri(\"http://httpbin.org/post\")\n#        .header(\"content-type\", \"application/json\")\n#        .body(hyper::Body::from(r#\"{\"library\":\"hyper\"}\"#)).unwrap();\n# let client = hyper::Client::new();\nlet response = client.request(request).await?;\n\nconst MAX_ALLOWED_RESPONSE_SIZE: u64 = 1024;\n\nlet response_content_length = match response.body().size_hint().upper() {\n    Some(v) => v,\n    None => MAX_ALLOWED_RESPONSE_SIZE + 1 // Just to protect ourselves from a malicious response\n};\n\nif response_content_length < MAX_ALLOWED_RESPONSE_SIZE {\n    let body_bytes = hyper::body::to_bytes(response.into_body()).await?;\n    println!(\"body: {:?}\", body_bytes);\n}\n\n# Ok(())\n# }\n```","links":{"crate::body::aggregate()":"0:242:1898"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["body",{"kind":"generic","inner":"T"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13766:138","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47619:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"22:526:1765","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"34:470:1616","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"HttpBody","id":"34:470:1616","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":true,"abi":"Rust"}}},"2:3439:4797":{"id":"2:3439:4797","crate_id":2,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3441:1236"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6091:70772":{"id":"5:6091:70772","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5739:4438":{"id":"1:5739:4438","crate_id":1,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5740:6388","1:5741:8634"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:941:1751":{"id":"0:941:1751","crate_id":0,"name":"io","span":{"filename":"src/upgrade.rs","begin":[83,4],"end":[83,13]},"visibility":"public","docs":"The original IO object used before the upgrade.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"31:27:3114":{"id":"31:27:3114","crate_id":31,"name":"FusedFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["31:28:6627"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13766:138","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3430:4792":{"id":"2:3430:4792","crate_id":2,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3432:357"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5801:4446":{"id":"1:5801:4446","crate_id":1,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5802:6388"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3733:137":{"id":"2:3733:137","crate_id":2,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3735:687"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"2:3728:224","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"24:269:2947":{"id":"24:269:2947","crate_id":24,"name":"AsyncSeek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["24:270:71330","24:271:71331"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13512:70142":{"id":"2:13512:70142","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13445:11193":{"id":"2:13445:11193","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"1:16011:2715"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:49742:5166","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5657:4462":{"id":"1:5657:4462","crate_id":1,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5658:6125","1:5659:2067"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10569:2516","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13427:304":{"id":"2:13427:304","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"1:16011:2715","`u8`":"1:16022:2724"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2871-0:939:2629":{"id":"b:2:2871-0:939:2629","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2865:3112","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2629","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:2873:64060"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8879:3896":{"id":"2:8879:3896","crate_id":2,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8601:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:31":{"id":"0:31","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[70,0],"end":[70,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::body::Body","name":"Body","id":"0:297:1616","glob":false}},"1:6863:4454":{"id":"1:6863:4454","crate_id":1,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6864:68498"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13072:4909":{"id":"2:13072:4909","crate_id":2,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13074:4929","2:13075:922","2:13076:68867","2:13077:68868"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"30:4786:1927":{"id":"30:4786:1927","crate_id":30,"name":"TryStreamExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["30:4787:72468","30:4789:2020","30:4792:2021","30:4795:292","30:4798:6577","30:4801:72470","30:4803:72471","30:4805:6576","30:4806:6578","30:4807:3520","30:4810:6585","30:4813:6586","30:4816:6589","30:4820:3514","30:4822:6583","30:4823:6579","30:4826:6580","30:4830:6581","30:4831:3519","30:4835:6582","30:4836:6587","30:4837:6588","30:4838:72587"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryStream","id":"31:127:3006","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:24:2649-0:768:2622":{"id":"b:24:2649-0:768:2622","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_write_ext.rs","begin":[1293,0],"end":[1293,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncWrite","id":"24:309:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["write_u16","write","write_vectored","write_f64_le","write_u128_le","write_i32_le","write_u16_le","write_buf","flush","write_i32","write_u32","write_i128_le","write_u64_le","write_i16_le","write_f32","write_all_buf","shutdown","write_i64","write_i8","write_u64","write_u8","write_f32_le","write_i64_le","write_u32_le","write_f64","write_all","write_i128","write_i16","write_u128"],"trait":{"kind":"resolved_path","inner":{"name":"AsyncWriteExt","id":"24:4168:2955","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"W"}}},"0:490:1606":{"id":"0:490:1606","crate_id":0,"name":"http","span":{"filename":"src/service/http.rs","begin":[1,0],"end":[58,1]},"visibility":{"restricted":{"parent":"0:486:1621","path":"::service"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":true}},"0:232:1898":{"id":"0:232:1898","crate_id":0,"name":"aggregate","span":{"filename":"src/body/aggregate.rs","begin":[1,0],"end":[31,1]},"visibility":{"restricted":{"parent":"0:202:1615","path":"::body"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:242:1898"],"is_stripped":true}},"0:297:1616":{"id":"0:297:1616","crate_id":0,"name":"Body","span":{"filename":"src/body/body.rs","begin":[36,0],"end":[41,1]},"visibility":"public","docs":"A stream of `Bytes`, used when receiving bodies.\n\nA good default [`HttpBody`](crate::body::HttpBody) to use in many\napplications.\n\nNote: To read the full body, use [`body::to_bytes`](crate::body::to_bytes)\nor [`body::aggregate`](crate::body::aggregate).","links":{"crate::body::to_bytes":"0:402:1901","crate::body::aggregate":"0:242:1898","crate::body::HttpBody":"34:470:1616"},"attrs":["#[must_use = \"streams do nothing unless polled\"]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"2:13781:150":{"id":"2:13781:150","crate_id":2,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13782:181","2:13783:150","2:13784:767"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3165:75":{"id":"2:3165:75","crate_id":2,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3167:305"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:10933:214":{"id":"2:10933:214","crate_id":2,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:10935:181","2:10936:59995","2:10937:2044","2:10938:66085","2:10939:66086","2:10940:753","2:10941:754"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:10924:2516","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13425:2067":{"id":"2:13425:2067","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12524:5277"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5012:4493":{"id":"1:5012:4493","crate_id":1,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5013:3894","1:5014:64553"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5651:4460":{"id":"1:5651:4460","crate_id":1,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5652:64180","1:5653:5380"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10569:2516","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13078:4910":{"id":"2:13078:4910","crate_id":2,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13080:3482","2:13081:69628","2:13082:69629"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Searcher","id":"2:13072:4909","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:8362:4844":{"id":"2:8362:4844","crate_id":2,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8364:1776"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:23467:19036":{"id":"2:23467:19036","crate_id":2,"name":"SimdOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23468:68639","2:23469:68638","2:23470:68640"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdPartialOrd","id":"2:23462:4979","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:5793:4444":{"id":"1:5793:4444","crate_id":1,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5794:65852"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10569:2516","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:6865:4466":{"id":"1:6865:4466","crate_id":1,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6866:64560"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13537:6215":{"id":"2:13537:6215","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:939:2629":{"id":"0:939:2629","crate_id":0,"name":"Parts","span":{"filename":"src/upgrade.rs","begin":[81,0],"end":[94,1]},"visibility":"public","docs":"The deconstructed parts of an [`Upgraded`](Upgraded) type.\n\nIncludes the original IO type, and a read buffer of bytes that the\nHTTP state machine may have already read before completing an upgrade.","links":{"Upgraded":"0:768:2622"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":["0:941:1751","0:942:2637"],"impls":["a:2:3268:211-0:939:2629","a:2:3309:1760-0:939:2629","a:2:9258:3230-0:939:2629","a:2:3280:220-0:939:2629","a:2:9259:3229-0:939:2629","b:2:3212-0:939:2629","b:2:3207-0:939:2629","b:2:2871-0:939:2629","b:2:4001-0:939:2629","b:2:2868-0:939:2629","b:2:3197-0:939:2629","b:2:3201-0:939:2629","0:944"]}},"2:3558:3094":{"id":"2:3558:3094","crate_id":2,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3560:237","2:3561:206","2:3562:59249"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3181:227":{"id":"2:3181:227","crate_id":2,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3183:127","2:3184:1415"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"22:140:1764":{"id":"22:140:1764","crate_id":22,"name":"BufMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["22:141:3448","22:142:3449","22:143:3450","22:144:3451","22:145:1794","22:147:1834","22:148:3452","22:149:3453","22:150:3454","22:151:3455","22:152:3456","22:153:3457","22:154:3458","22:155:3459","22:156:3460","22:157:3461","22:158:3462","22:159:3463","22:160:3464","22:161:3465","22:162:3466","22:163:3467","22:164:3468","22:165:3469","22:166:3470","22:167:3471","22:168:3472","22:169:3473","22:170:3474","22:171:3475","22:172:3476","22:173:3477","22:174:3478","22:175:2903","22:176:3479","22:177:3480"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3203:681":{"id":"2:3203:681","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:779":{"id":"0:779","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[161,0],"end":[189,1]},"visibility":{"restricted":{"parent":"0:720:1622","path":"::upgrade"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["poll_write_vectored","is_write_vectored"],"trait":{"kind":"resolved_path","inner":{"name":"AsyncWrite","id":"24:309:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:780:1835","0:781:1836","0:782:1837","0:783:1838","0:784:1839"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3212-0:768:2622":{"id":"b:2:3212-0:768:2622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3215:127","2:3216:1415"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:781:1836":{"id":"0:781:1836","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/upgrade.rs","begin":[170,4],"end":[176,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Pin","id":"2:47611:188","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}},"param_names":[]}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"task::Context","id":"2:14068:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["bufs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"io::IoSlice","id":"1:11082:1762","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:50359:190","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4082:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:388:1901":{"id":"0:388:1901","crate_id":0,"name":"to_bytes","span":{"filename":"src/body/to_bytes.rs","begin":[1,0],"end":[77,1]},"visibility":{"restricted":{"parent":"0:202:1615","path":"::body"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:402:1901"],"is_stripped":true}},"0:775:2652":{"id":"0:775:2652","crate_id":0,"name":"downcast","span":{"filename":"src/upgrade.rs","begin":[136,4],"end":[148,5]},"visibility":"public","docs":"Tries to downcast the internal trait object to the type passed.\n\nOn success, returns the downcasted parts. On error, returns the\n`Upgraded` back.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47619:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2629","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncRead","id":"24:230:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncWrite","id":"24:309:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3309:1760","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:942:2637":{"id":"0:942:2637","crate_id":0,"name":"read_buf","span":{"filename":"src/upgrade.rs","begin":[92,4],"end":[92,23]},"visibility":"public","docs":"A buffer of bytes that have been read but not processed as HTTP.\n\nFor instance, if the `Connection` is used for an HTTP upgrade request,\nit is possible the server sent back the first bytes of the new protocol\nalong with the response upgrade.\n\nYou will want to check for any existing bytes if you plan to continue\ncommunicating on the IO object.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Bytes","id":"22:526:1765","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},"0:783:1838":{"id":"0:783:1838","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/upgrade.rs","begin":[182,4],"end":[184,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Pin","id":"2:47611:188","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}},"param_names":[]}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"task::Context","id":"2:14068:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:50359:190","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4082:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"33:19:3011":{"id":"33:19:3011","crate_id":33,"name":"LocalSpawn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["33:20:72819","33:21:72820"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3207-0:770:2625":{"id":"b:2:3207-0:770:2625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3177:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3210:127","2:3211:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:216":{"id":"0:216","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[22,0],"end":[22,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::aggregate::aggregate","name":"aggregate","id":"0:242:1898","glob":false}},"2:2887:104":{"id":"2:2887:104","crate_id":2,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2888:408","2:2889:410"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3276:218":{"id":"2:3276:218","crate_id":2,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:12500:5313":{"id":"2:12500:5313","crate_id":2,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12501:1958","2:12502:69243"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2966:184":{"id":"2:2966:184","crate_id":2,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2968:997","2:2969:826","2:2970:792","2:2971:713","2:2972:696"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2920:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:5837:3850":{"id":"5:5837:3850","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5839:181","5:5840:2929"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:207":{"id":"0:207","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[18,21],"end":[18,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"bytes::Bytes","name":"Bytes","id":"22:526:1765","glob":false}},"1:2576:127":{"id":"1:2576:127","crate_id":1,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2577:2293","1:2579:1857","1:2580:2204","1:2581:3731"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10291:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10298:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:8886:4868":{"id":"2:8886:4868","crate_id":2,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Step","id":"2:7927:4869","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13417:793":{"id":"2:13417:793","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:16005:2710"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6794:4473":{"id":"1:6794:4473","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6795:8629"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10569:2516","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3216:1415":{"id":"2:3216:1415","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47619:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13528:70146":{"id":"2:13528:70146","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:16005:2710","self::pattern":"2:13053:3407"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:37:6275":{"id":"23:37:6275","crate_id":23,"name":"Integer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"23:39:2516","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"20:489:2397":{"id":"20:489:2397","crate_id":20,"name":"IntoHeaderName","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"20:490:2516","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"20:543:4020":{"id":"20:543:4020","crate_id":20,"name":"AsHeaderName","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"20:544:2516","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"31:96:1926":{"id":"31:96:1926","crate_id":31,"name":"Stream","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["31:97:1958","31:98:2037","31:99:2052"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3371:4545":{"id":"2:3371:4545","crate_id":2,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3373:1355"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3518:130":{"id":"2:3518:130","crate_id":2,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3520:376"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"2:3521:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3521:131":{"id":"2:3521:131","crate_id":2,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3523:377"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"2:3524:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13466:2944":{"id":"2:13466:2944","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:13053:3407","str::split_whitespace":"1:16011:2715","`DoubleEndedIterator`":"2:8447:120","prim@char":"1:16005:2710","str::rsplit":"1:16011:2715"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:49459:2874","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"30:3545:3005":{"id":"30:3545:3005","crate_id":30,"name":"StreamExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["30:3546:922","30:3547:767","30:3548:841","30:3551:3503","30:3552:3501","30:3555:3502","30:3559:6529","30:3562:2817","30:3564:3529","30:3569:432","30:3570:495","30:3571:3532","30:3572:3521","30:3576:294","30:3579:276","30:3582:3510","30:3583:6533","30:3585:3509","30:3588:72073","30:3592:3508","30:3597:3505","30:3600:3506","30:3603:6528","30:3605:3500","30:3608:6535","30:3612:1795","30:3613:1307","30:3614:3511","30:3615:3513","30:3616:2779","30:3618:71943","30:3620:2850","30:3621:6532","30:3622:3497","30:3624:3447","30:3626:3504","30:3627:6530","30:3628:6531","30:3629:3512","30:3631:72074","30:3633:72075","30:3635:72076","30:3636:6527"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Stream","id":"31:96:1926","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3174:135":{"id":"2:3174:135","crate_id":2,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3176:681"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:717":{"id":"0:717","crate_id":0,"name":null,"span":{"filename":"src/service/mod.rs","begin":[55,0],"end":[55,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::util::service_fn","name":"service_fn","id":"0:680:2512","glob":false}},"2:13447:70130":{"id":"2:13447:70130","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:49723:5164","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:778:1828":{"id":"0:778:1828","crate_id":0,"name":"poll_read","span":{"filename":"src/upgrade.rs","begin":[152,4],"end":[158,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Pin","id":"2:47611:188","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}},"param_names":[]}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"task::Context","id":"2:14068:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ReadBuf","id":"24:369:1819","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:50359:190","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4082:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3309:1760":{"id":"2:3309:1760","crate_id":2,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3200:1801":{"id":"2:3200:1801","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3174:135"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3491:116":{"id":"2:3491:116","crate_id":2,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3492:221","2:3493:543"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13766:138":{"id":"2:13766:138","crate_id":2,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13767:181","2:13768:1013"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10310:3570":{"id":"2:10310:3570","crate_id":2,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10311:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3103:4871":{"id":"2:3103:4871","crate_id":2,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:3102:2516","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:6791:4471":{"id":"1:6791:4471","crate_id":1,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6792:64208","1:6793:64209"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10569:2516","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:8399:136":{"id":"2:8399:136","crate_id":2,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8401:684"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3426:4790":{"id":"2:3426:4790","crate_id":2,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3428:354"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10539:146":{"id":"2:10539:146","crate_id":2,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10540:652","2:10541:2164","2:10542:64383","2:10543:64384","2:10544:64385","2:10545:64386","2:10546:64387","2:10547:64388","2:10548:64389","2:10549:64390","2:10550:64391","2:10551:64392","2:10552:64393","2:10553:64394","2:10554:64395","2:10555:1532"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3309:1760-0:770:2625":{"id":"a:2:3309:1760-0:770:2625","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3309:1760","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:6105:2896":{"id":"5:6105:2896","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3280:220-0:770:2625":{"id":"a:2:3280:220-0:770:2625","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3280:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13507:70139":{"id":"2:13507:70139","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4670:2864":{"id":"1:4670:2864","crate_id":1,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4671:1849","1:4672:64230","1:4674:64231","1:4675:6351","1:4676:2865","1:4677:1851","1:4678:2637","1:4680:64232","1:4681:3513","1:4682:1632","1:4683:3447","1:4685:1795"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13418:1786":{"id":"2:13418:1786","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3416:4785":{"id":"2:3416:4785","crate_id":2,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3418:181","2:3419:1235"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13439:66105":{"id":"2:13439:66105","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"1:16011:2715"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9259:3229-0:939:2629":{"id":"a:2:9259:3229-0:939:2629","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9259:3229","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9259:3229","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2629","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:6411:223":{"id":"5:6411:223","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6412:1396"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"24:4168:2955":{"id":"24:4168:2955","crate_id":24,"name":"AsyncWriteExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["24:4169:2164","24:4171:6321","24:4174:6297","24:4177:6295","24:4180:6293","24:4184:64383","24:4186:64389","24:4188:64384","24:4190:64390","24:4192:64385","24:4194:64391","24:4196:64386","24:4198:64392","24:4200:64387","24:4202:64393","24:4204:71706","24:4206:71707","24:4208:71708","24:4210:71709","24:4212:71710","24:4214:71711","24:4216:71712","24:4218:71713","24:4220:71714","24:4222:71715","24:4224:71716","24:4226:71717","24:4182:5581","24:4183:6292"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncWrite","id":"24:309:1818","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13481:66117":{"id":"2:13481:66117","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"str::rsplitn":"1:16011:2715","prim@char":"1:16005:2710","self::pattern":"2:13053:3407"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:49563:5128","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13469:11194":{"id":"2:13469:11194","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"self::pattern":"2:13053:3407","prim@char":"1:16005:2710"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:12845:5122","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:684:2583":{"id":"0:684:2583","crate_id":0,"name":"ServiceFn","span":{"filename":"src/service/util.rs","begin":[39,0],"end":[42,1]},"visibility":"public","docs":"Service returned by [`service_fn`]","links":{"`service_fn`":"0:680:2512"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"1:5745:4441":{"id":"1:5745:4441","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5746:9297","1:5747:67858","1:5748:6388","1:5749:67859","1:5750:4725","1:5751:4726","1:5752:67860","1:5753:1303","1:5754:67861","1:5755:67862","1:5756:67863","1:5757:67864","1:5758:67865","1:5759:67866","1:5760:67867","1:5761:67868"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"30:506:3004":{"id":"30:506:3004","crate_id":30,"name":"TryFutureExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["30:507:2020","30:510:72467","30:514:2021","30:517:72468","30:519:72469","30:521:292","30:524:6577","30:527:72470","30:529:72471","30:531:6581","30:532:72472","30:533:1827","30:535:767","30:536:72473"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFuture","id":"31:44:3003","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:5789:4443":{"id":"1:5789:4443","crate_id":1,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5790:67858"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:772:959":{"id":"0:772:959","crate_id":0,"name":"on","span":{"filename":"src/upgrade.rs","begin":[104,0],"end":[106,1]},"visibility":"public","docs":"Gets a pending HTTP upgrade from this message.\n\nThis can be called on the following types:\n\n- `http::Request<B>`\n- `http::Response<B>`\n- `&mut http::Request<B>`\n- `&mut http::Response<B>`","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["msg",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"sealed::CanUpgrade","id":"0:811:2645","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3580:4971":{"id":"2:3580:4971","crate_id":2,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3582:754"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"2:3576:4619","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3177:228":{"id":"2:3177:228","crate_id":2,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3179:127","2:3180:1416"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13440:66106":{"id":"2:13440:66106","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:16011:2715"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13433:66085":{"id":"2:13433:66085","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10933:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10933:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:13455:66123":{"id":"2:13455:66123","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:16005:2710","self::pattern":"2:13053:3407"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13078:4910","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:16":{"id":"0:16","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[65,47],"end":[65,55]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::http::Response","name":"Response","id":"20:1494:1610","glob":false}},"2:10298:119":{"id":"2:10298:119","crate_id":2,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10299:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:14165:141":{"id":"2:14165:141","crate_id":2,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14166:277","2:14167:518","2:14168:280","2:14169:1079"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5731:4440":{"id":"1:5731:4440","crate_id":1,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5732:6388","1:5733:64533","1:5734:64534"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2925:124":{"id":"2:2925:124","crate_id":2,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2920:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:2920:183":{"id":"2:2920:183","crate_id":2,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2922:604","2:2923:907"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:3357:4855":{"id":"2:3357:4855","crate_id":2,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3359:181","2:3360:1102"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3363:4858":{"id":"2:3363:4858","crate_id":2,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3364:181","2:3365:913"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13522:66124":{"id":"2:13522:66124","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:13053:3407","prim@char":"1:16005:2710"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13078:4910","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6963:4453":{"id":"1:6963:4453","crate_id":1,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6964:64621"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:4001-0:770:2625":{"id":"b:2:4001-0:770:2625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3999:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:4003:1428"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13416":{"id":"2:13416","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:12513:1339","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:13417:793","2:13418:1786","2:13419:10985","2:13420:70126","2:13422:70127","2:13425:2067","2:13426:70128","2:13427:304","2:13428:66087","2:13429:59995","2:13431:2044","2:13433:66085","2:13435:66086","2:13437:4534","2:13438:70129","2:13439:66105","2:13440:66106","2:13441:5186","2:13442:4936","2:13443:1632","2:13444:11195","2:13445:11193","2:13446:5658","2:13447:70130","2:13448:10935","2:13449:66121","2:13452:66122","2:13455:66123","2:13458:3524","2:13462:3487","2:13466:2944","2:13469:11194","2:13472:66115","2:13475:70131","2:13478:70132","2:13481:66117","2:13484:66119","2:13487:70133","2:13490:70134","2:13493:2270","2:13496:70135","2:13499:70136","2:13502:70137","2:13505:70138","2:13507:70139","2:13509:70140","2:13511:70141","2:13512:70142","2:13513:70143","2:13516:70144","2:13519:10587","2:13522:66124","2:13525:70145","2:13528:70146","2:13531:70147","2:13534:5083","2:13536:5320","2:13537:6215","2:13538:64084","2:13539:64085","2:13540:70148","2:13542:4482","2:13543:70149"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13438:70129":{"id":"2:13438:70129","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"crate::ops::IndexMut":"2:3580:4971","`str`":"1:16011:2715","str::slice_unchecked":"1:16011:2715"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:944":{"id":"0:944","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[80,9],"end":[80,14]},"visibility":{"restricted":{"parent":"0:720:1622","path":"::upgrade"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Debug","id":"2:10291:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10291:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2629","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:946:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5723:4439":{"id":"1:5723:4439","crate_id":1,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5724:68456","1:5725:68458","1:5726:68457","1:5727:68459"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:482:1123":{"id":"0:482:1123","crate_id":0,"name":"rt","span":{"filename":"src/rt.rs","begin":[1,0],"end":[12,1]},"visibility":"public","docs":"Runtime components\n\nBy default, hyper includes the [tokio](https://tokio.rs) runtime.\n\nIf the `runtime` feature is disabled, the types in this module can be used\nto plug in other runtimes.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:483:2474"],"is_stripped":false}},"0:807:2515":{"id":"0:807:2515","crate_id":0,"name":"sealed","span":{"filename":"src/upgrade.rs","begin":[295,0],"end":[295,10]},"visibility":{"restricted":{"parent":"0:720:1622","path":"::upgrade"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:811:2645"],"is_stripped":true}},"2:13493:2270":{"id":"2:13493:2270","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"`DoubleEndedIterator`":"2:8447:120","self::pattern":"2:13053:3407","str::matches":"1:16011:2715","prim@char":"1:16005:2710"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:49663:5162","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3336:3110":{"id":"2:3336:3110","crate_id":2,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3338:181","2:3339:265"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3647:5218":{"id":"2:3647:5218","crate_id":2,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3649:69465","2:3650:69466","2:3651:66121"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:625:2511":{"id":"0:625:2511","crate_id":0,"name":"make_service_fn","span":{"filename":"src/service/make.rs","begin":[138,0],"end":[144,1]},"visibility":"public","docs":"Create a `MakeService` from a function.\n\n# Example\n\n```\n# #[cfg(feature = \"runtime\")]\n# async fn run() {\nuse std::convert::Infallible;\nuse hyper::{Body, Request, Response, Server};\nuse hyper::server::conn::AddrStream;\nuse hyper::service::{make_service_fn, service_fn};\n\nlet addr = ([127, 0, 0, 1], 3000).into();\n\nlet make_svc = make_service_fn(|socket: &AddrStream| {\n    let remote_addr = socket.remote_addr();\n    async move {\n        Ok::<_, Infallible>(service_fn(move |_: Request<Body>| async move {\n            Ok::<_, Infallible>(\n                Response::new(Body::from(format!(\"Hello, {}!\", remote_addr)))\n            )\n        }))\n    }\n});\n\n// Then bind and serve...\nlet server = Server::bind(&addr)\n    .serve(make_svc);\n\n// Finally, spawn `server` onto an Executor...\nif let Err(e) = server.await {\n    eprintln!(\"server error: {}\", e);\n}\n# }\n# fn main() {}\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"MakeServiceFn","id":"0:931:2565","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Target","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Ret","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"2:3521:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Target"}}}],"output":{"kind":"generic","inner":"Ret"}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Ret"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13766:138","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3268:211":{"id":"2:3268:211","crate_id":2,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:4003:1428":{"id":"2:4003:1428","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:46028:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:19":{"id":"0:19","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[65,57],"end":[65,67]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::http::StatusCode","name":"StatusCode","id":"20:3102:1611","glob":false}},"0:82:1751":{"id":"0:82:1751","crate_id":0,"name":"io","span":{"filename":"src/common/io/mod.rs","begin":[1,0],"end":[3,36]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":true}},"0:720:1622":{"id":"0:720:1622","crate_id":0,"name":"upgrade","span":{"filename":"src/upgrade.rs","begin":[1,0],"end":[382,1]},"visibility":"public","docs":"HTTP Upgrades\n\nThis module deals with managing [HTTP Upgrades][mdn] in hyper. Since\nseveral concepts in HTTP allow for first talking HTTP, and then converting\nto a different protocol, this module conflates them into a single API.\nThose include:\n\n- HTTP/1.1 Upgrades\n- HTTP `CONNECT`\n\nYou are responsible for any other pre-requisites to establish an upgrade,\nsuch as sending the appropriate headers, methods, and status codes. You can\nthen use [`on`][] to grab a `Future` which will resolve to the upgraded\nconnection object, or an error if the upgrade fails.\n\n[mdn]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism\n\n# Client\n\nSending an HTTP upgrade from the [`client`](super::client) involves setting\neither the appropriate method, if wanting to `CONNECT`, or headers such as\n`Upgrade` and `Connection`, on the `http::Request`. Once receiving the\n`http::Response` back, you must check for the specific information that the\nupgrade is agreed upon by the server (such as a `101` status code), and then\nget the `Future` from the `Response`.\n\n# Server\n\nReceiving upgrade requests in a server requires you to check the relevant\nheaders in a `Request`, and if an upgrade should be done, you then send the\ncorresponding headers in a response. To then wait for hyper to finish the\nupgrade, you call `on()` with the `Request`, and then can spawn a task\nawaiting it.\n\n# Example\n\nSee [this example][example] showing how upgrades work with both\nClients and Servers.\n\n[example]: https://github.com/hyperium/hyper/blob/master/examples/upgrades.rs","links":{"`on`":"0:772:959"},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:768:2622","0:770:2625","0:939:2629","0:772:959"],"is_stripped":false}},"2:13442:4936":{"id":"2:13442:4936","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:16005:2710"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49435:5151","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:12992:3933":{"id":"2:12992:3933","crate_id":2,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12993:126","2:12994:65799"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3811:3100":{"id":"2:3811:3100","crate_id":2,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:794:660":{"id":"0:794:660","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[226,4],"end":[228,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10251:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10240:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10574:4516":{"id":"2:10574:4516","crate_id":2,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10575:146","2:10576:10683","2:10577:65822"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:242:1898":{"id":"0:242:1898","crate_id":0,"name":"aggregate","span":{"filename":"src/body/aggregate.rs","begin":[16,0],"end":[31,1]},"visibility":"public","docs":"Aggregate the data buffers from a body asynchronously.\n\nThe returned `impl Buf` groups the `Buf`s from the `HttpBody` without\ncopying them. This is ideal if you don't require a contiguous buffer.\n\n# Note\n\nCare needs to be taken if the remote is untrusted. The function doesn't implement any length\nchecks and an malicious peer might make it consume arbitrary amounts of memory. Checking the\n`Content-Length` is a possibility, but it is not strictly mandated to be present.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["body",{"kind":"generic","inner":"T"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13766:138","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47619:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"22:42:1763","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"34:470:1616","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"HttpBody","id":"34:470:1616","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":true,"abi":"Rust"}}},"2:13452:66122":{"id":"2:13452:66122","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:16005:2710","self::pattern":"2:13053:3407"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:35":{"id":"0:35","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,23],"end":[71,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::error::Error","name":"Error","id":"0:421:127","glob":false}},"5:6088:70771":{"id":"5:6088:70771","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:770:2625":{"id":"b:2:2868-0:770:2625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2862:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2870:1922"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:38":{"id":"0:38","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,30],"end":[71,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::error::Result","name":"Result","id":"0:418:205","glob":false}},"24:4163:2954":{"id":"24:4163:2954","crate_id":24,"name":"AsyncSeekExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["24:4164:2945","24:4165:1815","24:4166:65928"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncSeek","id":"24:269:2947","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:8472:2811":{"id":"2:8472:2811","crate_id":2,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8473:793","2:8474:1786"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8601:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13516:70144":{"id":"2:13516:70144","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:13053:3407","prim@char":"1:16005:2710"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:7":{"id":"0:7","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[65,22],"end":[65,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::http::header","name":"header","id":"20:5:1607","glob":false}},"0:202:1615":{"id":"0:202:1615","crate_id":0,"name":"body","span":{"filename":"src/body/mod.rs","begin":[1,0],"end":[65,1]},"visibility":"public","docs":"Streaming bodies for Requests and Responses\n\nFor both [Clients](crate::client) and [Servers](crate::server), requests and\nresponses use streaming bodies, instead of complete buffering. This\nallows applications to not use memory they don't need, and allows exerting\nback-pressure on connections by only reading when asked.\n\nThere are two pieces to this in hyper:\n\n- **The [`HttpBody`](HttpBody) trait** describes all possible bodies.\n  hyper allows any body type that implements `HttpBody`, allowing\n  applications to have fine-grained control over their streaming.\n- **The [`Body`](Body) concrete type**, which is an implementation of\n  `HttpBody`, and returned by hyper as a \"receive stream\" (so, for server\n  requests and client responses). It is also a decent default implementation\n  if you don't have very custom needs of your send streams.","links":{"HttpBody":"34:470:1616","Body":"0:297:1616"},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:204","0:207","0:210","0:213","0:216","0:220","0:223","0:229"],"is_stripped":false}},"2:13542:4482":{"id":"2:13542:4482","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:16005:2710"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:49767:4483","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8882:3897":{"id":"2:8882:3897","crate_id":2,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8601:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:22748:5030":{"id":"2:22748:5030","crate_id":2,"name":"SimdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22749:4978","2:22750:68624","2:22751:68625","2:22752:68626","2:22753:68627","2:22754:45262","2:22755:68628","2:22756:68629","2:22757:68630","2:22758:68631","2:22759:68632","2:22760:68633","2:22761:68634","2:22762:68635","2:22763:10987","2:22764:68636","2:22765:68637","2:22766:10324","2:22767:68638","2:22768:68639","2:22769:68640","2:22770:68641","2:22771:68642","2:22772:68643","2:22773:68644"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3278:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22850:2516","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10291:109":{"id":"2:10291:109","crate_id":2,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10292:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:790:181":{"id":"0:790:181","crate_id":0,"name":"Output","span":{"filename":"src/upgrade.rs","begin":[211,4],"end":[211,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47619:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:421:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}},"2:3388:4777":{"id":"2:3388:4777","crate_id":2,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3389:181","2:3390:952"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:486:1621":{"id":"0:486:1621","crate_id":0,"name":"service","span":{"filename":"src/service/mod.rs","begin":[1,0],"end":[55,31]},"visibility":"public","docs":"Asynchronous Services\n\nA [`Service`](Service) is a trait representing an asynchronous\nfunction of a request to a response. It's similar to\n`async fn(Request) -> Result<Response, Error>`.\n\nThe argument and return value isn't strictly required to be for HTTP.\nTherefore, hyper uses several \"trait aliases\" to reduce clutter around\nbounds. These are:\n\n- `HttpService`: This is blanketly implemented for all types that\n  implement `Service<http::Request<B1>, Response = http::Response<B2>>`.\n- `MakeService`: When a `Service` returns a new `Service` as its \"response\",\n  we consider it a `MakeService`. Again, blanketly implemented in those cases.\n- `MakeConnection`: A `Service` that returns a \"connection\", a type that\n  implements `AsyncRead` and `AsyncWrite`.\n\n# HttpService\n\nIn hyper, especially in the server setting, a `Service` is usually bound\nto a single connection. It defines how to respond to **all** requests that\nconnection will receive.\n\nThe helper [`service_fn`](service_fn) should be sufficient for most cases, but\nif you need to implement `Service` for a type manually, you can follow the example\nin `service_struct_impl.rs`.\n\n# MakeService\n\nSince a `Service` is bound to a single connection, a [`Server`](crate::Server)\nneeds a way to make them as it accepts connections. This is what a\n`MakeService` does.\n\nResources that need to be shared by all `Service`s can be put into a\n`MakeService`, and then passed to individual `Service`s when `call`\nis called.","links":{"service_fn":"0:680:2512","Service":"36:13:2247"},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:487","0:714","0:717"],"is_stripped":false}},"2:2862:97":{"id":"2:2862:97","crate_id":2,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2864:1922"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:3341:4520":{"id":"2:3341:4520","crate_id":2,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3343:181","2:3344:1354"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10308:189":{"id":"2:10308:189","crate_id":2,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10309:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13511:70141":{"id":"2:13511:70141","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3524:132":{"id":"2:3524:132","crate_id":2,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3526:181","2:3527:378"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3379:4864":{"id":"2:3379:4864","crate_id":2,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3381:559"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:24:2497-0:768:2622":{"id":"b:24:2497-0:768:2622","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","begin":[1294,0],"end":[1294,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncRead","id":"24:230:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["read_i64","read_u32","read_i8","chain","take","read_to_string","read_buf","read_i128_le","read_u64_le","read_f64","read_u128","read_i32","read_u16","read_exact","read_u16_le","read_u32_le","read_f32_le","read_i64_le","read_i16_le","read_i128","read_u64","read_i16","read","read_u8","read_to_end","read_f64_le","read_u128_le","read_i32_le","read_f32"],"trait":{"kind":"resolved_path","inner":{"name":"AsyncReadExt","id":"24:4104:1840","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"R"}}},"a:2:3309:1760-0:939:2629":{"id":"a:2:3309:1760-0:939:2629","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3309:1760","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3309:1760","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2629","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:791:1013":{"id":"0:791:1013","crate_id":0,"name":"poll","span":{"filename":"src/upgrade.rs","begin":[213,4],"end":[222,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Pin","id":"2:47611:188","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}},"param_names":[]}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"task::Context","id":"2:14068:1830","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:50359:190","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:13766:138","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2870:1922":{"id":"2:2870:1922","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13490:70134":{"id":"2:13490:70134","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13078:4910","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:247:1615":{"id":"0:247:1615","crate_id":0,"name":"body","span":{"filename":"src/body/body.rs","begin":[1,0],"end":[785,1]},"visibility":{"restricted":{"parent":"0:202:1615","path":"::body"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:297:1616","0:312:1872"],"is_stripped":true}},"2:3280:220":{"id":"2:3280:220","crate_id":2,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6103:70773":{"id":"5:6103:70773","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13538:64084":{"id":"2:13538:64084","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"24:230:1817":{"id":"24:230:1817","crate_id":24,"name":"AsyncRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["24:231:1828"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3197-0:939:2629":{"id":"b:2:3197-0:939:2629","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2629","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:3200:1801"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:4745:2868":{"id":"1:4745:2868","crate_id":1,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4746:2945","1:4747:1815","1:4748:65927","1:4749:65928"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6561:4489":{"id":"1:6561:4489","crate_id":1,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6562:65908","1:6563:65909"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:28":{"id":"0:28","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[68,0],"end":[68,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::http::HeaderMap","name":"HeaderMap","id":"20:2392:1614","glob":false}},"b:2:3207-0:939:2629":{"id":"b:2:3207-0:939:2629","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3177:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2629","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:3210:127","2:3211:1416"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3215:127":{"id":"2:3215:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:38805:2978","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"b:30:504-0:770:2625":{"id":"b:30:504-0:770:2625","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","begin":[134,0],"end":[134,50]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Fut","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Fut"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFuture","id":"31:44:3003","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["unwrap_or_else","inspect_err","map_ok","or_else","err_into","and_then","try_flatten_stream","map_err","ok_into","try_flatten","into_future","try_poll_unpin","inspect_ok","map_ok_or_else"],"trait":{"kind":"resolved_path","inner":{"name":"TryFutureExt","id":"30:506:3004","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Fut"}}},"0:680:2512":{"id":"0:680:2512","crate_id":0,"name":"service_fn","span":{"filename":"src/service/util.rs","begin":[27,0],"end":[36,1]},"visibility":"public","docs":"Create a `Service` from a function.\n\n# Example\n\n```\nuse hyper::{Body, Request, Response, Version};\nuse hyper::service::service_fn;\n\nlet service = service_fn(|req: Request<Body>| async move {\n    if req.version() == Version::HTTP_11 {\n        Ok(Response::new(Body::from(\"Hello World\")))\n    } else {\n        // Note: it's usually better to return a Response\n        // with an appropriate StatusCode instead of an Err.\n        Err(\"not HTTP/1.1, abort connection\")\n    }\n});\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"ServiceFn","id":"0:684:2583","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"2:3521:131","args":{"parenthesized":{"inputs":[{"kind":"resolved_path","inner":{"name":"Request","id":"20:1361:1609","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}}],"output":{"kind":"generic","inner":"S"}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13766:138","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:22801:4976":{"id":"2:22801:4976","crate_id":2,"name":"SimdInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22802:4978","2:22803:68624","2:22804:1226","2:22805:1227","2:22806:45262","2:22807:69777","2:22808:11152","2:22809:69778","2:22810:69779","2:22811:68637","2:22812:68641","2:22813:68642","2:22814:68643","2:22815:68644","2:22816:69703","2:22817:69704","2:22818:69705"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3278:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22850:2516","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"31:127:3006":{"id":"31:127:3006","crate_id":31,"name":"TryStream","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["31:128:175","31:129:127","31:130:72822"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Stream","id":"31:96:1926","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"31:122:2516","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13083:4911":{"id":"2:13083:4911","crate_id":2,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13078:4910","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3309:1760-0:768:2622":{"id":"a:2:3309:1760-0:768:2622","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3309:1760","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:793":{"id":"0:793","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[225,0],"end":[229,1]},"visibility":{"restricted":{"parent":"0:720:1622","path":"::upgrade"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10291:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:794:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:25":{"id":"0:25","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[65,74],"end":[65,81]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::http::Version","name":"Version","id":"20:3283:1613","glob":false}},"2:3739:4810":{"id":"2:3739:4810","crate_id":2,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3741:65263"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3171:149":{"id":"2:3171:149","crate_id":2,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3173:1801"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:22":{"id":"0:22","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[65,69],"end":[65,72]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::http::Uri","name":"Uri","id":"20:3227:1612","glob":false}},"1:4727:2867":{"id":"1:4727:2867","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4728:2164","1:4729:6321","1:4731:1839","1:4732:5581","1:4733:6293","1:4734:10631","1:4735:3364","1:4744:3513"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3400:4518":{"id":"2:3400:4518","crate_id":2,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3402:181","2:3403:353"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6867:4467":{"id":"1:6867:4467","crate_id":1,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6868:67935"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9259:3229-0:770:2625":{"id":"a:2:9259:3229-0:770:2625","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9259:3229","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:13462:3487":{"id":"2:13462:3487","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"self::pattern":"2:13053:3407","prim@char":"1:16005:2710","`None`":"2:47492:176"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13078:4910","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23086:19017":{"id":"2:23086:19017","crate_id":2,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23087:9834","2:23088:69622","2:23089:69623"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:23079:2516","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:14239:4540":{"id":"2:14239:4540","crate_id":2,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14240:68124","2:14241:68125","2:14242:68126","2:14243:68127","2:14244:68128","2:14245:68129","2:14246:3513"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:784:1839":{"id":"0:784:1839","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/upgrade.rs","begin":[186,4],"end":[188,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3716:5219":{"id":"2:3716:5219","crate_id":2,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RangeBounds","id":"2:3647:5218","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13502:70137":{"id":"2:13502:70137","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"prim@char":"1:16005:2710","`DoubleEndedIterator`":"2:8447:120","self::pattern":"2:13053:3407","str::match_indices":"1:16011:2715"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:49627:5160","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13078:4910","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:768:2622":{"id":"b:2:2868-0:768:2622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2862:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2870:1922"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13449:66121":{"id":"2:13449:66121","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"self::pattern":"2:13053:3407","prim@char":"1:16005:2710"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13496:70135":{"id":"2:13496:70135","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"`DoubleEndedIterator`":"2:8447:120","self::pattern":"2:13053:3407","prim@char":"1:16005:2710","str::matches":"1:16011:2715"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:49681:5163","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13078:4910","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3434:4794":{"id":"2:3434:4794","crate_id":2,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3436:1233"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:4050:2982":{"id":"2:4050:2982","crate_id":2,"name":"Provider","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4051:3731"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:768:2622":{"id":"0:768:2622","crate_id":0,"name":"Upgraded","span":{"filename":"src/upgrade.rs","begin":[65,0],"end":[67,1]},"visibility":"public","docs":"An upgraded HTTP connection.\n\nThis type holds a trait object internally of the original IO that\nwas used to speak HTTP before the upgrade. It can be used directly\nas a `Read` or `Write` for convenience.\n\nAlternatively, if the exact type is known, this can be deconstructed\ninto its parts.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:774","a:2:3268:211-0:768:2622","a:2:3309:1760-0:768:2622","a:2:9258:3230-0:768:2622","a:2:3280:220-0:768:2622","a:2:9259:3229-0:768:2622","b:2:3212-0:768:2622","b:2:3207-0:768:2622","b:2:2871-0:768:2622","b:2:4001-0:768:2622","b:2:2868-0:768:2622","b:2:3197-0:768:2622","b:2:3201-0:768:2622","b:24:2649-0:768:2622","b:24:2497-0:768:2622","0:777","0:779","0:785"]}},"0:421:127":{"id":"0:421:127","crate_id":0,"name":"Error","span":{"filename":"src/error.rs","begin":[11,0],"end":[13,1]},"visibility":"public","docs":"Represents errors that can occur handling HTTP streams.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"31:53:127":{"id":"31:53:127","crate_id":31,"name":"Error","span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.21/src/future.rs","begin":[78,4],"end":[78,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"E"}}},"0:475:1619":{"id":"0:475:1619","crate_id":0,"name":"ext","span":{"filename":"src/ext.rs","begin":[1,0],"end":[227,1]},"visibility":"public","docs":"HTTP extensions.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":false}},"b:31:48-0:770:2625":{"id":"b:31:48-0:770:2625","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.21/src/future.rs","begin":[73,0],"end":[73,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13766:138","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47619:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}},"param_names":[]}}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFuture","id":"31:44:3003","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["31:52:175","31:53:127","31:54:64073"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"F"}}},"2:8601:157":{"id":"2:8601:157","crate_id":2,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8602:1958","2:8603:922","2:8604:3492","2:8607:2052","2:8608:495","2:8610:3493","2:8613:3494","2:8614:3495","2:8615:3496","2:8616:3447","2:8618:3497","2:8620:3498","2:8621:3499","2:8623:841","2:8626:3500","2:8633:3501","2:8635:3502","2:8638:3503","2:8639:3504","2:8640:3505","2:8642:3506","2:8644:3507","2:8647:1307","2:8648:1795","2:8649:3508","2:8653:3509","2:8656:3510","2:8657:3511","2:8658:3512","2:8660:3513","2:8661:2817","2:8663:3514","2:8666:3515","2:8668:3516","2:8678:3517","2:8693:3518","2:8695:3519","2:8699:3520","2:8708:3521","2:8711:3522","2:8713:3523","2:8716:276","2:8723:294","2:8730:3524","2:8737:3525","2:8746:3526","2:8756:1014","2:8763:3527","2:8770:3414","2:8771:1833","2:8772:3416","2:8784:3415","2:8791:3413","2:8803:3412","2:8810:3528","2:8811:3529","2:8816:3530","2:8819:3531","2:8822:3532","2:8823:1776","2:8825:3533","2:8827:415","2:8830:3534","2:8833:997","2:8836:3535","2:8839:604","2:8842:3536","2:8845:907","2:8847:826","2:8849:792","2:8851:713","2:8853:696","2:8855:3537","2:8856:3538","2:8864:3539"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8447:120":{"id":"2:8447:120","crate_id":2,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8448:3482","2:8449:3483","2:8450:3484","2:8451:3485","2:8455:3486","2:8458:3487"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8601:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13431:2044":{"id":"2:13431:2044","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:47492:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10933:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10933:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:418:205":{"id":"0:418:205","crate_id":0,"name":"Result","span":{"filename":"src/error.rs","begin":[6,0],"end":[6,51]},"visibility":"public","docs":"Result type often returned from methods that can have hyper `Error`s.","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"std::result::Result","id":"2:47619:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:421:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"0:204":{"id":"0:204","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[18,16],"end":[18,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"bytes::Buf","name":"Buf","id":"22:42:1763","glob":false}},"2:13484:66119":{"id":"2:13484:66119","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:16005:2710","str::splitn":"1:16011:2715","self::pattern":"2:13053:3407"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:49581:5129","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13078:4910","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:312:1872":{"id":"0:312:1872","crate_id":0,"name":"Sender","span":{"filename":"src/body/body.rs","begin":[109,0],"end":[113,1]},"visibility":"public","docs":"A sender half created through [`Body::channel()`].\n\nUseful when wanting to stream chunks from another thread.\n\n## Body Closing\n\nNote that the request body will always be closed normally when the sender is dropped (meaning\nthat the empty terminating chunk will be sent to the remote). If you desire to close the\nconnection with an incomplete response (e.g. in the case of an error during asynchronous\nprocessing), call the [`Sender::abort()`] method to abort the body in an abnormal fashion.\n\n[`Body::channel()`]: struct.Body.html#method.channel\n[`Sender::abort()`]: struct.Sender.html#method.abort","links":{},"attrs":["#[must_use = \"Sender does nothing unless sent on\"]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"b:2:3212-0:939:2629":{"id":"b:2:3212-0:939:2629","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2629","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:3215:127","2:3216:1415"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13437:4534":{"id":"2:13437:4534","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"crate::ops::Index":"2:3576:4619","str::slice_mut_unchecked":"1:16011:2715","`str`":"1:16011:2715"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:5779:4442":{"id":"1:5779:4442","crate_id":1,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5780:64183","1:5781:64184","1:5782:64185","1:5783:64186"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3210:127":{"id":"2:3210:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}}},"b:2:3197-0:768:2622":{"id":"b:2:3197-0:768:2622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3200:1801"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"22:42:1763":{"id":"22:42:1763","crate_id":22,"name":"Buf","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["22:43:1775","22:44:1777","22:45:1783","22:47:1780","22:48:1772","22:49:3420","22:50:3421","22:51:3422","22:52:3423","22:53:3424","22:54:3425","22:55:3426","22:56:3427","22:57:3428","22:58:3429","22:59:3430","22:60:3431","22:61:3432","22:62:3433","22:63:3434","22:64:3435","22:65:3436","22:66:3437","22:67:3438","22:68:3439","22:69:3440","22:70:3441","22:71:3442","22:72:3443","22:73:3444","22:74:3445","22:75:3446","22:76:1788","22:80:1795","22:81:3447","22:83:2973"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8412:2812":{"id":"2:8412:2812","crate_id":2,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8414:3488","2:8416:3489","2:8417:3490"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:1079:4480":{"id":"1:1079:4480","crate_id":1,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:1080:2065","1:1081:5320","1:1082:64082","1:1083:64083","1:1084:6215","1:1085:64084","1:1086:64085"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6085:2876":{"id":"5:6085:2876","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"24:4104:1840":{"id":"24:4104:1840","crate_id":24,"name":"AsyncReadExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["24:4105:3447","24:4107:1849","24:4109:2637","24:4112:1851","24:4119:71353","24:4121:71354","24:4123:71355","24:4125:71356","24:4127:71357","24:4129:71358","24:4131:71359","24:4133:71360","24:4135:71361","24:4137:71362","24:4139:71363","24:4141:71364","24:4143:5493","24:4145:71365","24:4147:47206","24:4149:71366","24:4151:71367","24:4153:71368","24:4155:71369","24:4157:71370","24:4159:71371","24:4161:71372","24:4114:6351","24:4116:2865","24:4118:1795"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncRead","id":"24:230:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9258:3230-0:768:2622":{"id":"a:2:9258:3230-0:768:2622","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9258:3230","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:3278:106":{"id":"2:3278:106","crate_id":2,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2887:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13478:70132":{"id":"2:13478:70132","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"str::split_terminator":"1:16011:2715","self::pattern":"2:13053:3407","prim@char":"1:16005:2710","str::split":"1:16011:2715"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:49527:5156","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13078:4910","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:210":{"id":"0:210","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[19,0],"end":[19,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"http_body::Body","name":"HttpBody","id":"34:470:1616","glob":false}},"5:6106:64082":{"id":"5:6106:64082","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:16011:2715"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3280:220-0:939:2629":{"id":"a:2:3280:220-0:939:2629","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3280:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3280:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2629","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"34:470:1616":{"id":"34:470:1616","crate_id":34,"name":"Body","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["34:471:1905","34:472:127","34:473:2039","34:474:2047","34:475:2023","34:476:2052","34:477:1921","34:478:2080","34:479:3732","34:482:2021","34:485:2779","34:486:3733"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3999:68":{"id":"2:3999:68","crate_id":2,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4000:1428"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"2:13534:5083":{"id":"2:13534:5083","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"`FromStr`":"2:12992:3933","FromStr::Err":"2:12992:3933"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47619:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12992:3933","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12992:3933","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3268:211-0:768:2622":{"id":"a:2:3268:211-0:768:2622","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3268:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3375:4862":{"id":"2:3375:4862","crate_id":2,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3377:893"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:23462:4979":{"id":"2:23462:4979","crate_id":2,"name":"SimdPartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23463:1269","2:23464:1268","2:23465:1266","2:23466:1265"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdPartialEq","id":"2:22874:5031","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:5833:5322":{"id":"5:5833:5322","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5835:181","5:5836:432"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:13472:66115":{"id":"2:13472:66115","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"`DoubleEndedIterator`":"2:8447:120","prim@char":"1:16005:2710","self::pattern":"2:13053:3407","str::split":"1:16011:2715"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:49477:5125","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13078:4910","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13509:70140":{"id":"2:13509:70140","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2865:3112":{"id":"2:2865:3112","crate_id":2,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2867:64060"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2862:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3201-0:768:2622":{"id":"b:2:3201-0:768:2622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3203:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13435:66086":{"id":"2:13435:66086","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10933:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10933:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:6689:4441":{"id":"1:6689:4441","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6690:65860","1:6691:9638","1:6692:9639","1:6693:9641","1:6694:9640","1:6695:9642","1:6696:9643","1:6697:9645","1:6698:7388","1:6699:9648","1:6700:9649","1:6701:9650","1:6702:9651","1:6703:9652","1:6704:9653","1:6705:9646","1:6706:9647"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:229":{"id":"0:229","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[25,0],"end":[25,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::to_bytes::to_bytes","name":"to_bytes","id":"0:402:1901","glob":false}},"2:3576:4619":{"id":"2:3576:4619","crate_id":2,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3578:181","2:3579:753"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"24:188:2946":{"id":"24:188:2946","crate_id":24,"name":"AsyncBufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["24:189:71309","24:190:67949"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncRead","id":"24:230:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13519:10587":{"id":"2:13519:10587","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:13053:3407","prim@char":"1:16005:2710"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3351:4852":{"id":"2:3351:4852","crate_id":2,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3353:181","2:3354:558"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:537:2505":{"id":"0:537:2505","crate_id":0,"name":"make","span":{"filename":"src/service/make.rs","begin":[1,0],"end":[187,1]},"visibility":{"restricted":{"parent":"0:486:1621","path":"::service"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:625:2511","0:931:2565"],"is_stripped":true}},"2:22874:5031":{"id":"2:22874:5031","crate_id":2,"name":"SimdPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22875:4978","2:22876:1246","2:22877:1271"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:22937:4478":{"id":"2:22937:4478","crate_id":2,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22927:2516","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10300:3566":{"id":"2:10300:3566","crate_id":2,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10301:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3280:220-0:768:2622":{"id":"a:2:3280:220-0:768:2622","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3280:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"1:9347:4475":{"id":"1:9347:4475","crate_id":1,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9348:67514","1:9349:67515","1:9350:67516","1:9351:67517","1:9352:67518","1:9353:41900","1:9354:67513"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10569:2516","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:213":{"id":"0:213","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[20,0],"end":[20,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"http_body::SizeHint","name":"SizeHint","id":"34:642:1897","glob":false}},"2:13422:70127":{"id":"2:13422:70127","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:16011:2715"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13441:5186":{"id":"2:13441:5186","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:16005:2710"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49429:5150","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6463:4486":{"id":"1:6463:4486","crate_id":1,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6464:2671","1:6465:9713","1:6466:64588","1:6467:64589","1:6468:64590","1:6469:2670"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10569:2516","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13458:3524":{"id":"2:13458:3524","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"prim@char":"1:16005:2710","self::pattern":"2:13053:3407","`None`":"2:47492:176"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"24:442:4493":{"id":"24:442:4493","crate_id":24,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ToSocketAddrsPriv","id":"24:498:71301","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3268:211-0:770:2625":{"id":"a:2:3268:211-0:770:2625","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3268:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:13":{"id":"0:13","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[65,38],"end":[65,45]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::http::Request","name":"Request","id":"20:1361:1609","glob":false}},"2:9258:3230":{"id":"2:9258:3230","crate_id":2,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:4001-0:939:2629":{"id":"b:2:4001-0:939:2629","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3999:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2629","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:4003:1428"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:777":{"id":"0:777","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[151,0],"end":[159,1]},"visibility":{"restricted":{"parent":"0:720:1622","path":"::upgrade"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"AsyncRead","id":"24:230:1817","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:778:1828"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3410:4782":{"id":"2:3410:4782","crate_id":2,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3412:181","2:3413:1232"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3197-0:770:2625":{"id":"b:2:3197-0:770:2625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3174:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3171:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3200:1801"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"24:4094:2953":{"id":"24:4094:2953","crate_id":24,"name":"AsyncBufReadExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["24:4095:2870","24:4097:6361","24:4099:2944","24:4100:6359","24:4101:67949","24:4102:5658"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncBufRead","id":"24:188:2946","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13420:70126":{"id":"2:13420:70126","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10312:3571":{"id":"2:10312:3571","crate_id":2,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10313:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9258:3230-0:770:2625":{"id":"a:2:9258:3230-0:770:2625","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9258:3230","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:13487:70133":{"id":"2:13487:70133","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47492:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13063:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13446:5658":{"id":"2:13446:5658","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:49713:2875","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8366:4842":{"id":"2:8366:4842","crate_id":2,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8368:3533"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:9259:3229":{"id":"2:9259:3229","crate_id":2,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13540:70148":{"id":"2:13540:70148","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:16005:2710"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:49758:5168","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:30:237-0:770:2625":{"id":"b:30:237-0:770:2625","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","begin":[119,0],"end":[119,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13766:138","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3273:2810","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["map_into","fuse","now_or_never","unit_error","right_future","flatten","into_stream","poll_unpin","boxed_local","left_future","then","boxed","inspect","never_error","flatten_stream","map"],"trait":{"kind":"resolved_path","inner":{"name":"FutureExt","id":"30:239:3002","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3246:115":{"id":"2:3246:115","crate_id":2,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3247:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2873:64060":{"id":"2:2873:64060","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10302:3567":{"id":"2:10302:3567","crate_id":2,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10303:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:4752:2871":{"id":"1:4752:2871","crate_id":1,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4753:6359","1:4754:67949","1:4755:67950","1:4757:2870","1:4758:6361","1:4760:2944","1:4761:5658"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Read","id":"1:4670:2864","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3277:217":{"id":"2:3277:217","crate_id":2,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:4782:4905":{"id":"2:4782:4905","crate_id":2,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4783:1958","2:4784:2037","2:4785:2052"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3211:1416":{"id":"2:3211:1416","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47619:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3181:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3422:4788":{"id":"2:3422:4788","crate_id":2,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3424:352"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"33:258:3014":{"id":"33:258:3014","crate_id":33,"name":"UnsafeFutureObj","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["33:261:2670","33:262:578"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"outlives":"'a"}],"implementations":[]}},"5:6104:70774":{"id":"5:6104:70774","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:432:1943","`String`":"5:8368:216"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:1943","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:5326","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:783:222":{"id":"5:783:222","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:784:2065","5:785:3541","5:786:3542"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"paths":{"24:8616:3134":{"crate_id":24,"path":["tokio","sync","batch_semaphore","Semaphore"],"kind":"struct"},"20:2429:4024":{"crate_id":20,"path":["http","header","map","Keys"],"kind":"struct"},"2:3286:2571":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"17:9933:7245":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"6:6176:9718":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"29:4333:9311":{"crate_id":29,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:52243:5007":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"24:11653:6308":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI32Le"],"kind":"struct"},"20:1494:1610":{"crate_id":20,"path":["http","response","Response"],"kind":"struct"},"1:2598:8547":{"crate_id":1,"path":["std","error","from","StringError"],"kind":"struct"},"17:13377:7828":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"1:16010:2714":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:22874:5031":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"18:838:4909":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"18:783:6967":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"24:13127:6360":{"crate_id":24,"path":["tokio","io","util","fill_buf","FillBuf"],"kind":"struct"},"24:12290:6318":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU64"],"kind":"struct"},"24:9679:6475":{"crate_id":24,"path":["tokio","sync","notify","NotificationType"],"kind":"enum"},"16:5707:5697":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"2:50404:2989":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:46768:4825":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"17:13356:7824":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"2:5029:3582":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:10310:3570":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:3686:2878":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"2:21:672":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"6:3957:9173":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"30:12331:6610":{"crate_id":30,"path":["futures_util","stream","try_stream","try_buffer_unordered","TryBufferUnordered"],"kind":"struct"},"16:5815:5706":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"29:530:8904":{"crate_id":29,"path":["libc","unix","rlimit"],"kind":"struct"},"30:10218:6547":{"crate_id":30,"path":["futures_util","stream","stream","peek","NextIfEq"],"kind":"struct"},"2:4751:102":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"17:12010:7475":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"20:3357:2824":{"crate_id":20,"path":["http","extensions","Extensions"],"kind":"struct"},"2:3999:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"24:5363:3749":{"crate_id":24,"path":["tokio","runtime","task","state","State"],"kind":"struct"},"30:9276:71585":{"crate_id":30,"path":["futures_util","stream","stream","enumerate","_","__Origin"],"kind":"struct"},"17:10095:6135":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"2:52129:5019":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"8:0:2684":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"17:12195:7505":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"16:7392:5799":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"9:1020:5544":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"24:13678:6345":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU16Le"],"kind":"struct"},"17:13924:7991":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"35:439:3739":{"crate_id":35,"path":["futures_channel","mpsc","BoundedSenderInner"],"kind":"struct"},"30:9658:6541":{"crate_id":30,"path":["futures_util","stream","stream","all","All"],"kind":"struct"},"24:10949:7042":{"crate_id":24,"path":["tokio","time","driver","wheel","Wheel"],"kind":"struct"},"2:3278:106":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"30:9829:3824":{"crate_id":30,"path":["futures_util","stream","stream","Inspect"],"kind":"struct"},"17:9404:7145":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:3662:6790":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"6:5522:9571":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:28051:4847":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"29:5514:9571":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"18:821:6156":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"16:5231:8055":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"29:1546:8979":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"27:977:6154":{"crate_id":27,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"24:12883:71585":{"crate_id":24,"path":["tokio","io","util","split","_","__Origin"],"kind":"struct"},"2:51313:4993":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"30:11300:3835":{"crate_id":30,"path":["futures_util","stream","try_stream","InspectOk"],"kind":"struct"},"1:6703:9652":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"24:6566:6398":{"crate_id":24,"path":["tokio","runtime","blocking","pool","Spawner"],"kind":"struct"},"20:3252:2886":{"crate_id":20,"path":["http","uri","ErrorKind"],"kind":"enum"},"12:1666:5621":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"1:12223:3039":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"24:5976:6439":{"crate_id":24,"path":["tokio","runtime","basic_scheduler","BasicScheduler"],"kind":"struct"},"17:8849:6062":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"1:14937:6739":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"17:12712:7607":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"5:7780:234":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"30:10833:6551":{"crate_id":30,"path":["futures_util","stream","stream","buffer_unordered","BufferUnordered"],"kind":"struct"},"30:10112:71585":{"crate_id":30,"path":["futures_util","stream","stream","peek","_","__Origin"],"kind":"struct"},"36:0:1642":{"crate_id":36,"path":["tower_service"],"kind":"module"},"30:8956:3867":{"crate_id":30,"path":["futures_util","future","either","Either"],"kind":"enum"},"29:3970:9183":{"crate_id":29,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"24:8913:3139":{"crate_id":24,"path":["tokio","sync","rwlock","owned_write_guard_mapped","OwnedRwLockMappedWriteGuard"],"kind":"struct"},"2:46325:5064":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"17:12327:7524":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"30:11891:71585":{"crate_id":30,"path":["futures_util","stream","try_stream","try_flatten","_","__Origin"],"kind":"struct"},"35:461:202":{"crate_id":35,"path":["futures_channel","mpsc","Receiver"],"kind":"struct"},"1:5972:4759":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"24:4497:6999":{"crate_id":24,"path":["tokio","io","util","vec_with_initialized","VecWithInitialized"],"kind":"struct"},"1:13919:4587":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"24:13009:6353":{"crate_id":24,"path":["tokio","io","util","read_to_string","ReadToString"],"kind":"struct"},"17:13788:7954":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"29:5183:9435":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:10448:6108":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"24:1776:4451":{"crate_id":24,"path":["tokio","fs","open_options","OpenOptions"],"kind":"struct"},"29:1709:9088":{"crate_id":29,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:9162:6065":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"30:8239:71585":{"crate_id":30,"path":["futures_util","future","poll_immediate","_","__Origin"],"kind":"struct"},"30:9071:6539":{"crate_id":30,"path":["futures_util","stream","stream","unzip","Unzip"],"kind":"struct"},"1:9631:64078":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"17:12685:7603":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"20:3188:1848":{"crate_id":20,"path":["http","uri","builder","Builder"],"kind":"struct"},"6:3862:9109":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:5100:5105":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"24:4104:1840":{"crate_id":24,"path":["tokio","io","util","async_read_ext","AsyncReadExt"],"kind":"trait"},"29:4411:9347":{"crate_id":29,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:46340:5302":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:2193:4426":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"2:53515:8525":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:8163:68705":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"2:51442:5026":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"30:11145:71585":{"crate_id":30,"path":["futures_util","stream","stream","for_each_concurrent","_","__Origin"],"kind":"struct"},"20:2445:4030":{"crate_id":20,"path":["http","header","map","ValuesMut"],"kind":"struct"},"1:11449:4472":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"24:13727:6331":{"crate_id":24,"path":["tokio","io","util","read_int","ReadF64"],"kind":"struct"},"7:0:1480":{"crate_id":7,"path":["unwind"],"kind":"module"},"1:11116:2872":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"17:12610:7588":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"2:13083:4911":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"25:65:6738":{"crate_id":25,"path":["pin_project_lite","__private","UnsafeOverwriteGuard"],"kind":"struct"},"16:7761:5871":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"24:13629:6347":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU32Le"],"kind":"struct"},"24:7370:202":{"crate_id":24,"path":["tokio","sync","broadcast","Receiver"],"kind":"struct"},"12:933:4609":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"1:10878:2677":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"29:1609:9021":{"crate_id":29,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"17:13477:7852":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"24:7981:6749":{"crate_id":24,"path":["tokio","sync","mpsc","list","Tx"],"kind":"struct"},"2:50179:5178":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"30:12916:3895":{"crate_id":30,"path":["futures_util","stream","select_all","IterMut"],"kind":"struct"},"0:768:2622":{"crate_id":0,"path":["hyper","upgrade","Upgraded"],"kind":"struct"},"30:12838:3895":{"crate_id":30,"path":["futures_util","stream","futures_unordered","iter","IterMut"],"kind":"struct"},"16:2866:5964":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"1:16009:2713":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:10312:3571":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"24:4505:2898":{"crate_id":24,"path":["tokio","io","util","repeat","Repeat"],"kind":"struct"},"0:475:1619":{"crate_id":0,"path":["hyper","ext"],"kind":"module"},"24:14650:2956":{"crate_id":24,"path":["tokio","io","util","buf_stream","BufStream"],"kind":"struct"},"30:13042:6966":{"crate_id":30,"path":["futures_util","fns","MergeResultFn"],"kind":"struct"},"17:12537:7575":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"27:820:6166":{"crate_id":27,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"24:14119:6346":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU32"],"kind":"struct"},"14:47:8303":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"30:6551:3822":{"crate_id":30,"path":["futures_util","future","future","flatten","Flatten"],"kind":"enum"},"1:2460:8545":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:24496:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"2:13063:4907":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"17:9186:6043":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"24:6874:6747":{"crate_id":24,"path":["tokio","runtime","thread_pool","queue","Local"],"kind":"struct"},"17:13240:7793":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2:56361:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"12:777:3491":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"24:14021:6342":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU128"],"kind":"struct"},"24:11173:3019":{"crate_id":24,"path":["tokio","util","wake","WakerRef"],"kind":"struct"},"1:7667:4586":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"6:1708:9082":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"24:6502:6419":{"crate_id":24,"path":["tokio","runtime","handle","TryCurrentErrorKind"],"kind":"enum"},"2:24234:5211":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"24:6659:6415":{"crate_id":24,"path":["tokio","runtime","handle","HandleInner"],"kind":"struct"},"2:53299:5003":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:24700:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"16:7971:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"2:8399:136":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"31:110:3115":{"crate_id":31,"path":["futures_core","stream","FusedStream"],"kind":"trait"},"2:2862:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"24:14459:2875":{"crate_id":24,"path":["tokio","io","util","lines","Lines"],"kind":"struct"},"29:1650:9052":{"crate_id":29,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"6:4371:9327":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"25:55:6737":{"crate_id":25,"path":["pin_project_lite","__private","UnsafeDropInPlaceGuard"],"kind":"struct"},"2:3165:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"24:8166:162":{"crate_id":24,"path":["tokio","sync","mutex","Mutex"],"kind":"struct"},"2:53477:8523":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"30:11739:6600":{"crate_id":30,"path":["futures_util","stream","try_stream","try_filter","TryFilter"],"kind":"struct"},"2:10291:109":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:3336:3110":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"16:7146:5859":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"1:10805:4451":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"16:6569:5997":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"1:1432:3895":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"2:8879:3896":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"6:6923:9769":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"17:12946:7646":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"35:519:3747":{"crate_id":35,"path":["futures_channel","mpsc","UnboundedInner"],"kind":"struct"},"16:2912:5965":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"6:5185:9432":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"5:5536:3034":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"1:9643:64080":{"crate_id":1,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"1:7736:4589":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"6:4193:9268":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"16:5736:5700":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"17:11653:7400":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"29:5274:9474":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:13497:7859":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"6:632:8962":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"6:1617:9021":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"29:4369:9330":{"crate_id":29,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"17:12467:7565":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"1:15033:4591":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"24:1920:6986":{"crate_id":24,"path":["tokio","io","blocking","Blocking"],"kind":"struct"},"20:3098:1848":{"crate_id":20,"path":["http","response","Builder"],"kind":"struct"},"17:10988:7327":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"1:12057:9925":{"crate_id":1,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"34:651:3107":{"crate_id":34,"path":["http_body","combinators","map_data","MapData"],"kind":"struct"},"24:13482:6336":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI16Le"],"kind":"struct"},"16:6219:5842":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"5:8298:5377":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"16:7205:5864":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"21:20:8753":{"crate_id":21,"path":["fnv","FnvHasher"],"kind":"struct"},"2:48519:133":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"24:498:71301":{"crate_id":24,"path":["tokio","net","addr","sealed","ToSocketAddrsPriv"],"kind":"trait"},"30:0:1635":{"crate_id":30,"path":["futures_util"],"kind":"module"},"2:8106:2059":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"2:13781:150":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"2:49248:5132":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"16:6491:5848":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"2:48255:3567":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"24:13286:6330":{"crate_id":24,"path":["tokio","io","util","read_int","ReadF32Le"],"kind":"struct"},"24:14556:2872":{"crate_id":24,"path":["tokio","io","util","chain","Chain"],"kind":"struct"},"2:22748:5030":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"16:6768:6004":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"16:3522:7160":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"1:11681:4572":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"34:37:2059":{"crate_id":34,"path":["http_body","empty","Empty"],"kind":"struct"},"30:7595:71585":{"crate_id":30,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"30:8252:201":{"crate_id":30,"path":["futures_util","future","ready","Ready"],"kind":"struct"},"2:3273:2810":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"30:8174:3845":{"crate_id":30,"path":["futures_util","future","option","OptionFuture"],"kind":"struct"},"2:3521:131":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"35:486:3744":{"crate_id":35,"path":["futures_channel","mpsc","TrySendError"],"kind":"struct"},"29:609:8952":{"crate_id":29,"path":["libc","unix","tms"],"kind":"struct"},"1:16030:2732":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"16:5330:7233":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"5:923:5446":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"1:4727:2867":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"24:5663:6739":{"crate_id":24,"path":["tokio","runtime","enter","exit","Reset"],"kind":"struct"},"24:11064:7052":{"crate_id":24,"path":["tokio","util","rand","FastRand"],"kind":"struct"},"1:9770:6804":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"16:0:2691":{"crate_id":16,"path":["gimli"],"kind":"module"},"9:927:47186":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"29:4075:9233":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"27:987:6155":{"crate_id":27,"path":["memchr","memmem","Finder"],"kind":"struct"},"5:3336:4512":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"29:3989:9196":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"20:2594:6185":{"crate_id":20,"path":["http","header","map","Links"],"kind":"struct"},"6:569:8927":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"16:6424:5847":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"30:11394:71585":{"crate_id":30,"path":["futures_util","stream","try_stream","_","__Origin"],"kind":"struct"},"2:45942:197":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"0:720:1622":{"crate_id":0,"path":["hyper","upgrade"],"kind":"module"},"17:10052:7253":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"24:9019:3049":{"crate_id":24,"path":["tokio","sync","rwlock","write_guard","RwLockWriteGuard"],"kind":"struct"},"1:1450:4024":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"17:12917:7626":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"6:1736:9094":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"24:10903:3769":{"crate_id":24,"path":["tokio","time","clock","Inner"],"kind":"struct"},"23:24:4552":{"crate_id":23,"path":["itoa","Buffer"],"kind":"struct"},"6:4501:9379":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"29:6850:9755":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"17:13772:7950":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"17:11458:7362":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"17:11254:6064":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"24:9538:3037":{"crate_id":24,"path":["tokio","sync","barrier","BarrierWaitResult"],"kind":"struct"},"1:1156:8537":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"24:10594:3769":{"crate_id":24,"path":["tokio","time","driver","Inner"],"kind":"struct"},"35:467:3742":{"crate_id":35,"path":["futures_channel","mpsc","UnboundedReceiver"],"kind":"struct"},"2:5155:5106":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"29:6915:9769":{"crate_id":29,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:3379:4864":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"30:10962:6553":{"crate_id":30,"path":["futures_util","stream","stream","flatten_unordered","FlattenUnordered"],"kind":"struct"},"30:5673:6735":{"crate_id":30,"path":["futures_util","stream","futures_unordered","abort","abort","DoublePanic"],"kind":"struct"},"1:5377:4704":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"1:14602:4663":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"16:5855:5707":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"2:49776:5169":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"18:651:6163":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"24:8469:3769":{"crate_id":24,"path":["tokio","sync","oneshot","Inner"],"kind":"struct"},"29:1564:8990":{"crate_id":29,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:13957:4589":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"17:12040:7478":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"2:5038:5100":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"5:3040:9845":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"30:11027:6534":{"crate_id":30,"path":["futures_util","stream","stream","FlatMapUnordered"],"kind":"struct"},"6:5292:9481":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:15499:5639":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"24:148:3097":{"crate_id":24,"path":["tokio","future","poll_fn","PollFn"],"kind":"struct"},"30:12858:3894":{"crate_id":30,"path":["futures_util","stream","futures_unordered","iter","Iter"],"kind":"struct"},"17:10887:7316":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"2:11244:5123":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:5012:4493":{"crate_id":1,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"2:2291:4888":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"20:793:4032":{"crate_id":20,"path":["http","header","value","InvalidHeaderValue"],"kind":"struct"},"1:1045:4492":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"29:536:8907":{"crate_id":29,"path":["libc","unix","rusage"],"kind":"struct"},"17:681:7154":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"17:11822:7444":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"6:6221:9740":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"16:7738:5870":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"5:4699:6767":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"30:8148:3843":{"crate_id":30,"path":["futures_util","future","maybe_done","MaybeDone"],"kind":"enum"},"6:1540:8974":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"5:3048:69854":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"29:556:8924":{"crate_id":29,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"30:6897:3827":{"crate_id":30,"path":["futures_util","future","future","MapInto"],"kind":"struct"},"27:1013:4909":{"crate_id":27,"path":["memchr","memmem","Searcher"],"kind":"struct"},"24:12899:2229":{"crate_id":24,"path":["tokio","io","util","shutdown","Shutdown"],"kind":"struct"},"24:14605:2883":{"crate_id":24,"path":["tokio","io","util","buf_writer","BufWriter"],"kind":"struct"},"2:48133:3035":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"6:4387:9333":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"16:7477:5816":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"24:4163:2954":{"crate_id":24,"path":["tokio","io","util","async_seek_ext","AsyncSeekExt"],"kind":"trait"},"24:9714:1872":{"crate_id":24,"path":["tokio","sync","oneshot","Sender"],"kind":"struct"},"6:6935:9771":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"6:3905:9137":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:46424:5300":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"16:5580:5693":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"12:183:5616":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"19:117:9782":{"crate_id":19,"path":["panic_unwind","dwarf","eh","EHContext"],"kind":"struct"},"30:10267:4819":{"crate_id":30,"path":["futures_util","stream","stream","skip","Skip"],"kind":"struct"},"2:2396:3096":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"16:6269:5844":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"30:8500:71585":{"crate_id":30,"path":["futures_util","future","join","_","__Origin"],"kind":"struct"},"5:432:1943":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"5:8391:5333":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"0:939:2629":{"crate_id":0,"path":["hyper","upgrade","Parts"],"kind":"struct"},"2:37624:178":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"29:598:8947":{"crate_id":29,"path":["libc","unix","sigval"],"kind":"struct"},"24:7985:6750":{"crate_id":24,"path":["tokio","sync","mpsc","list","Rx"],"kind":"struct"},"17:9332:6113":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"2:46727:4817":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"17:10611:7276":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"1:7619:4583":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"17:10160:7257":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:8412:2812":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"5:4599:6766":{"crate_id":5,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"2:3558:3094":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"24:5789:6392":{"crate_id":24,"path":["tokio","runtime","task","Id"],"kind":"struct"},"35:473:3743":{"crate_id":35,"path":["futures_channel","mpsc","SendError"],"kind":"struct"},"1:10958:2886":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"29:617:8957":{"crate_id":29,"path":["libc","unix","servent"],"kind":"struct"},"27:170:55703":{"crate_id":27,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:48007:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"22:1248:6225":{"crate_id":22,"path":["bytes","buf","limit","Limit"],"kind":"struct"},"2:47015:8393":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:15413:4711":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"24:4696:162":{"crate_id":24,"path":["tokio","loom","std","mutex","Mutex"],"kind":"struct"},"2:3745:4809":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"5:7453:6763":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"1:1497:4607":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"2:49839:4908":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"2:24219:5255":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"30:239:3002":{"crate_id":30,"path":["futures_util","future","future","FutureExt"],"kind":"trait"},"1:8492:4626":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"16:7024:6011":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"2:3728:224":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"30:9173:107":{"crate_id":30,"path":["futures_util","stream","stream","count","Count"],"kind":"struct"},"2:3296:2917":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"16:4734:8045":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"5:8280:101":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"1:7796:4593":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"2:48091:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:46688:4827":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"9:900:9839":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"17:11947:7460":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"1:5651:4460":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:3515:1880":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"30:11203:71585":{"crate_id":30,"path":["futures_util","stream","try_stream","and_then","_","__Origin"],"kind":"struct"},"20:1580:2380":{"crate_id":20,"path":["http","status","InvalidStatusCode"],"kind":"struct"},"1:10948:4603":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"24:2323:2949":{"crate_id":24,"path":["tokio","io","split","WriteHalf"],"kind":"struct"},"30:12488:3894":{"crate_id":30,"path":["futures_util","stream","iter","Iter"],"kind":"struct"},"1:4084:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"16:3241:5972":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"5:7642:5366":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"2:13816:3843":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:1442:3491":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"5:2330:5414":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"30:12979:3868":{"crate_id":30,"path":["futures_util","abortable","AbortHandle"],"kind":"struct"},"1:12278:4542":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"17:11328:7343":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"22:1233:2872":{"crate_id":22,"path":["bytes","buf","chain","Chain"],"kind":"struct"},"5:783:222":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"16:5632:5695":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"17:11045:49415":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"17:11847:7448":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"1:9775:6805":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"2:46656:8439":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"2:12734:5154":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"22:1261:2873":{"crate_id":22,"path":["bytes","buf","take","Take"],"kind":"struct"},"30:7186:150":{"crate_id":30,"path":["futures_util","future","try_future","into_future","IntoFuture"],"kind":"struct"},"2:45809:3095":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"2:47839:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"24:10897:7034":{"crate_id":24,"path":["tokio","time","clock","Clock"],"kind":"struct"},"2:47755:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:11204:4499":{"crate_id":1,"path":["std","net","ip","IpAddr"],"kind":"enum"},"6:6100:9668":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:49445:1765":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"24:13531:6343":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU128Le"],"kind":"struct"},"1:5801:4446":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"30:8718:71585":{"crate_id":30,"path":["futures_util","future","try_join","_","__Origin"],"kind":"struct"},"1:2755:2976":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"27:920:71205":{"crate_id":27,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"5:7824:6774":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"24:12241:6312":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU128"],"kind":"struct"},"17:9961:7246":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"21:0:2809":{"crate_id":21,"path":["fnv"],"kind":"module"},"12:2052:4511":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"5:1618:3491":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"24:14168:6344":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU16"],"kind":"struct"},"17:10353:6083":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"29:4104:9247":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"29:4387:9337":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"34:606:71585":{"crate_id":34,"path":["http_body","limited","_","__Origin"],"kind":"struct"},"24:11996:6299":{"crate_id":24,"path":["tokio","io","util","write_int","WriteF32"],"kind":"struct"},"17:12182:7504":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"20:3227:1612":{"crate_id":20,"path":["http","uri","Uri"],"kind":"struct"},"30:6527:6524":{"crate_id":30,"path":["futures_util","fns","IntoFn"],"kind":"struct"},"24:11751:6313":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU128Le"],"kind":"struct"},"29:4038:9214":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:4739:4897":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"2:23661:4477":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"18:850:6158":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"16:6126:5838":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"24:10920:7038":{"crate_id":24,"path":["tokio","time","driver","entry","TimerShared"],"kind":"struct"},"30:7112:71585":{"crate_id":30,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"6:6858:9755":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:56348:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:5269:9468":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"14:56:7363":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"16:7378:5798":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"17:11970:7467":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"2:6510:3822":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:52435:4984":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:11664:3894":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"34:250:3109":{"crate_id":34,"path":["http_body","combinators","box_body","UnsyncBoxBody"],"kind":"struct"},"6:4183:9267":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"29:4087:9239":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"30:10035:6545":{"crate_id":30,"path":["futures_util","stream","stream","select_next_some","SelectNextSome"],"kind":"struct"},"2:52400:5002":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"2:53451:8521":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"6:6106:9669":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:11604:7391":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"16:7856:5873":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:12168:7285":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"17:11696:7411":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"30:10293:71585":{"crate_id":30,"path":["futures_util","stream","stream","skip","_","__Origin"],"kind":"struct"},"17:12771:7343":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"2:22601:68790":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"17:13154:7773":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"24:14254:6350":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU8"],"kind":"struct"},"27:826:6163":{"crate_id":27,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"2:49297:5137":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"16:7236:5867":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"17:12741:7610":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"1:12738:4661":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"43:0:2684":{"crate_id":43,"path":["cfg_if"],"kind":"module"},"30:9395:71585":{"crate_id":30,"path":["futures_util","stream","stream","filter_map","_","__Origin"],"kind":"struct"},"24:13335:6334":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI128Le"],"kind":"struct"},"5:8176:5331":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"29:6192:9728":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:23136:4978":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"20:2543:2677":{"crate_id":20,"path":["http","header","map","Cursor"],"kind":"enum"},"6:1729:4717":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"24:13176:6362":{"crate_id":24,"path":["tokio","io","util","read_line","ReadLine"],"kind":"struct"},"1:16020:2722":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"22:531:6232":{"crate_id":22,"path":["bytes","bytes","Vtable"],"kind":"struct"},"29:6927:9771":{"crate_id":29,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"2:3341:4520":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"17:10106:6136":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"29:4185:9268":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"24:1832:3843":{"crate_id":24,"path":["tokio","future","maybe_done","MaybeDone"],"kind":"enum"},"6:5274:9469":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"17:10864:7315":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"6:4203:9269":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"24:1808:4662":{"crate_id":24,"path":["tokio","fs","read_dir","DirEntry"],"kind":"struct"},"24:9674:3131":{"crate_id":24,"path":["tokio","sync","notify","Notify"],"kind":"struct"},"6:6200:9728":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"1:16016:2718":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"27:930:71206":{"crate_id":27,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"1:15054:4542":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"17:10558:7270":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"20:2521:4028":{"crate_id":20,"path":["http","header","map","ValueIterMut"],"kind":"struct"},"16:7549:5802":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"30:6621:71585":{"crate_id":30,"path":["futures_util","future","future","fuse","_","__Origin"],"kind":"struct"},"12:856:4029":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"2:24666:4654":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"30:7491:3832":{"crate_id":30,"path":["futures_util","future","try_future","AndThen"],"kind":"struct"},"2:11396:5128":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"5:8138:5449":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"17:11539:7379":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"30:11958:6603":{"crate_id":30,"path":["futures_util","stream","try_stream","try_concat","TryConcat"],"kind":"struct"},"5:8160:3491":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"24:11898:6315":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU16Le"],"kind":"struct"},"16:2733:5717":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"12:1881:145":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"17:11026:7330":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"12:432:5613":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:11066:2059":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"6:6864:9756":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"5:1195:69882":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"17:11750:7417":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"16:5314:7232":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:46028:1906":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:9258:3230":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:51073:5024":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"24:7248:7013":{"crate_id":24,"path":["tokio","coop","Budget"],"kind":"struct"},"2:3388:4777":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"24:9597:3744":{"crate_id":24,"path":["tokio","sync","mpsc","error","TrySendError"],"kind":"enum"},"17:13637:7897":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:12771:5157":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"29:3897:9137":{"crate_id":29,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"20:630:4031":{"crate_id":20,"path":["http","header","name","InvalidHeaderName"],"kind":"struct"},"17:13296:7807":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"35:346:202":{"crate_id":35,"path":["futures_channel","oneshot","Receiver"],"kind":"struct"},"6:5998:9633":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:12845:5122":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"9:686:5475":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"2:49663:5162":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"2:32397:68903":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"1:14030:4588":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"17:13582:7882":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"30:8136:1757":{"crate_id":30,"path":["futures_util","future","lazy","Lazy"],"kind":"struct"},"12:787:4607":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:49358:5141":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"17:10071:6141":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"24:9647:6464":{"crate_id":24,"path":["tokio","sync","mpsc","error","SendTimeoutError"],"kind":"enum"},"1:6865:4466":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"16:3145:5978":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"20:2421:3491":{"crate_id":20,"path":["http","header","map","IntoIter"],"kind":"struct"},"17:13933:7995":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"30:12925:3491":{"crate_id":30,"path":["futures_util","stream","select_all","IntoIter"],"kind":"struct"},"24:5568:6476":{"crate_id":24,"path":["tokio","runtime","task","Notified"],"kind":"struct"},"29:4264:9280":{"crate_id":29,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"29:6213:9740":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"16:6101:5789":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"30:8942:3865":{"crate_id":30,"path":["futures_util","future","try_select","TrySelect"],"kind":"struct"},"37:324:1610":{"crate_id":37,"path":["httparse","Response"],"kind":"struct"},"2:3576:4619":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:51718:4983":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:47923:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"29:6177:9721":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"20:489:2397":{"crate_id":20,"path":["http","header","map","into_header_name","IntoHeaderName"],"kind":"trait"},"5:3882:2677":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"1:4304:1819":{"crate_id":1,"path":["std","io","readbuf","ReadBuf"],"kind":"struct"},"24:9838:1875":{"crate_id":24,"path":["tokio","sync","watch","Shared"],"kind":"struct"},"5:3894:5383":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"1:9865:6806":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"24:14070:6348":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU64"],"kind":"struct"},"1:12112:3894":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"30:8382:71585":{"crate_id":30,"path":["futures_util","future","join","_","__Origin"],"kind":"struct"},"9:27:5526":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"30:12544:71585":{"crate_id":30,"path":["futures_util","stream","once","_","__Origin"],"kind":"struct"},"12:1256:4614":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"24:1794:3749":{"crate_id":24,"path":["tokio","fs","read_dir","State"],"kind":"enum"},"17:13986:8004":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"24:9704:3749":{"crate_id":24,"path":["tokio","sync","notify","State"],"kind":"enum"},"1:4514:2890":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"17:11628:7395":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2:49336:5139":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:16004:2709":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"1:15475:8640":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"29:5247:9467":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"29:5399:9544":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"6:5371:9529":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"5:374:5408":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"16:3338:5714":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:24065:8401":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"18:755:71206":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"1:9067:3045":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"29:1519:8968":{"crate_id":29,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"16:3172:5969":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"24:14344:1819":{"crate_id":24,"path":["tokio","io","util","read_buf","ReadBuf"],"kind":"struct"},"33:203:3010":{"crate_id":33,"path":["futures_task","future_obj","LocalFutureObj"],"kind":"struct"},"18:169:55703":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"1:12167:3746":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"2:46350:5303":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"34:642:1897":{"crate_id":34,"path":["http_body","size_hint","SizeHint"],"kind":"struct"},"27:896:6969":{"crate_id":27,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"16:6252:5843":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:22990:4978":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"17:13282:7806":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"30:7092:3828":{"crate_id":30,"path":["futures_util","future","future","NeverError"],"kind":"struct"},"24:80:6739":{"crate_id":24,"path":["tokio","macros","scoped_tls","set","Reset"],"kind":"struct"},"9:234:5502":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"17:10407:6075":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"17:12028:7476":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"16:4890:8050":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"24:4311:6995":{"crate_id":24,"path":["tokio","io","util","mem","Pipe"],"kind":"struct"},"30:10406:71585":{"crate_id":30,"path":["futures_util","stream","stream","take","_","__Origin"],"kind":"struct"},"2:10300:3566":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"1:11094:2869":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"24:11203:6732":{"crate_id":24,"path":["tokio","util","try_lock","TryLock"],"kind":"struct"},"2:49402:5229":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:3309:1760":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"24:11058:6370":{"crate_id":24,"path":["tokio","time","interval","Interval"],"kind":"struct"},"24:12094:6309":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI64"],"kind":"struct"},"2:51592:5006":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:15976:13811":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"16:4386:8035":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"17:10236:6061":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"6:4101:9242":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"30:11231:3833":{"crate_id":30,"path":["futures_util","stream","try_stream","ErrInto"],"kind":"struct"},"30:6336:6636":{"crate_id":30,"path":["futures_util","fns","FnOnce1"],"kind":"trait"},"2:13053:3407":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"35:547:3754":{"crate_id":35,"path":["futures_channel","mpsc","SenderTask"],"kind":"struct"},"1:7799:4595":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"1:8650:3037":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"30:13115:6594":{"crate_id":30,"path":["futures_util","fns","InspectErrFn"],"kind":"struct"},"29:1532:8974":{"crate_id":29,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"17:13041:7729":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"24:5672:6744":{"crate_id":24,"path":["tokio","runtime","enter","DisallowBlockingGuard"],"kind":"struct"},"29:1622:9028":{"crate_id":29,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:8366:4842":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"29:4292:9293":{"crate_id":29,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"24:10969:7045":{"crate_id":24,"path":["tokio","time","driver","ClockTime"],"kind":"struct"},"1:16027:2729":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"35:426:3758":{"crate_id":35,"path":["futures_channel","mpsc","queue","Queue"],"kind":"struct"},"6:5282:9474":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"30:9948:4815":{"crate_id":30,"path":["futures_util","stream","stream","FlatMap"],"kind":"struct"},"2:50175:5179":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"20:2533:4027":{"crate_id":20,"path":["http","header","map","ValueDrain"],"kind":"struct"},"17:12051:7479":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"17:12287:7517":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"16:6087:5791":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"2:47492:176":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"2:3357:4855":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"17:9368:7144":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"12:979:4613":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"1:11176:4496":{"crate_id":1,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"2:46587:2872":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"6:4470:9369":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"30:12027:71585":{"crate_id":30,"path":["futures_util","stream","try_stream","try_chunks","_","__Origin"],"kind":"struct"},"17:13192:7784":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"1:5793:4444":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"22:1242:3491":{"crate_id":22,"path":["bytes","buf","iter","IntoIter"],"kind":"struct"},"16:3264:5973":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"24:13825:6333":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI128"],"kind":"struct"},"29:4273:9285":{"crate_id":29,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:47713:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"30:6847:3825":{"crate_id":30,"path":["futures_util","future","future","IntoStream"],"kind":"struct"},"35:349:1872":{"crate_id":35,"path":["futures_channel","oneshot","Sender"],"kind":"struct"},"5:8115:3491":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:5164:3583":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"12:2072:4514":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"16:4852:8049":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"1:8136:4651":{"crate_id":1,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"1:2170:4510":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"1:11410:4758":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"1:6203:4721":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"24:546:88":{"crate_id":24,"path":["tokio","loom","std","atomic_u16","AtomicU16"],"kind":"struct"},"17:13172:7778":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"24:11128:1928":{"crate_id":24,"path":["tokio","util","sync_wrapper","SyncWrapper"],"kind":"struct"},"18:721:6969":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"2:9260:3228":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"14:216:47761":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"24:8966:3048":{"crate_id":24,"path":["tokio","sync","rwlock","read_guard","RwLockReadGuard"],"kind":"struct"},"29:4356:9325":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"29:4119:9254":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"6:1596:9007":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:50167:5174":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"1:3329:4667":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"24:14686:2882":{"crate_id":24,"path":["tokio","io","util","buf_reader","BufReader"],"kind":"struct"},"2:48632:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"29:5122:9393":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"29:5540:9586":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"6:4419:9347":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"12:162:5612":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"30:8354:3850":{"crate_id":30,"path":["futures_util","future","join","Join"],"kind":"struct"},"6:605:8947":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"17:13205:7789":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"17:10403:6088":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"17:14000:8007":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"29:4431:9356":{"crate_id":29,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"24:12811:2873":{"crate_id":24,"path":["tokio","io","util","take","Take"],"kind":"struct"},"30:10878:6552":{"crate_id":30,"path":["futures_util","stream","stream","buffered","Buffered"],"kind":"struct"},"20:2602:6186":{"crate_id":20,"path":["http","header","map","RawLinks"],"kind":"struct"},"12:1121:4025":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"7:38:47082":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"27:843:6168":{"crate_id":27,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"17:10673:49599":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"17:10179:7258":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"30:10087:6548":{"crate_id":30,"path":["futures_util","stream","stream","peek","Peek"],"kind":"struct"},"6:5420:9548":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:2915:415":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"33:22:3013":{"crate_id":33,"path":["futures_task","spawn","SpawnError"],"kind":"struct"},"6:4364:9325":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"17:10788:7312":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"6:3978:9183":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"1:16012:2716":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"20:5:1607":{"crate_id":20,"path":["http","header"],"kind":"module"},"24:9696:6476":{"crate_id":24,"path":["tokio","sync","notify","Notified"],"kind":"struct"},"6:3881:9119":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"1:1637:4025":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"2:7755:4831":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"12:2253:4022":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"29:4350:9322":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:47550:3491":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:51375:4982":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:23079:2516":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"17:13221:7792":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:2181:4512":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"34:633:3105":{"crate_id":34,"path":["http_body","next","Trailers"],"kind":"struct"},"2:8886:4868":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"17:9264:7232":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"16:2773:5989":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"24:6881:3769":{"crate_id":24,"path":["tokio","runtime","thread_pool","queue","Inner"],"kind":"struct"},"2:51922:8472":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"12:2040:4021":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"29:3943:9171":{"crate_id":29,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"30:13103:6595":{"crate_id":30,"path":["futures_util","fns","InspectOkFn"],"kind":"struct"},"16:7406:5797":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"9:157:5494":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"12:895:5600":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"6:5159:9417":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"34:738:71585":{"crate_id":34,"path":["http_body","combinators","map_err","_","__Origin"],"kind":"struct"},"30:9597:68":{"crate_id":30,"path":["futures_util","stream","stream","any","Any"],"kind":"struct"},"17:13402:7833":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"17:11337:6114":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"30:10493:6549":{"crate_id":30,"path":["futures_util","stream","stream","take_until","TakeUntil"],"kind":"struct"},"30:7032:3824":{"crate_id":30,"path":["futures_util","future","future","Inspect"],"kind":"struct"},"45:0:6645":{"crate_id":45,"path":["try_lock"],"kind":"module"},"24:9787:3136":{"crate_id":24,"path":["tokio","sync","semaphore","OwnedSemaphorePermit"],"kind":"struct"},"24:9885:6494":{"crate_id":24,"path":["tokio","sync","watch","state","AtomicState"],"kind":"struct"},"2:46600:4824":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"29:3937:9170":{"crate_id":29,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"17:11640:7398":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"30:11458:71585":{"crate_id":30,"path":["futures_util","stream","try_stream","into_stream","_","__Origin"],"kind":"struct"},"16:6014:5837":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"24:11389:71585":{"crate_id":24,"path":["tokio","task","task_local","_","__Origin"],"kind":"struct"},"2:49043:5317":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"14:194:47756":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"1:2192:4514":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"24:4290:6994":{"crate_id":24,"path":["tokio","io","util","copy_buf","CopyBuf"],"kind":"struct"},"24:7166:6442":{"crate_id":24,"path":["tokio","runtime","thread_pool","ThreadPool"],"kind":"struct"},"1:14959:6813":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"16:7884:5801":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"2:3371:4545":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:8293:4651":{"crate_id":1,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"1:12079:8783":{"crate_id":1,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"1:10673:4615":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"24:9619:3746":{"crate_id":24,"path":["tokio","sync","mpsc","error","TryRecvError"],"kind":"enum"},"2:48580:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"30:11840:71585":{"crate_id":30,"path":["futures_util","stream","try_stream","try_filter_map","_","__Origin"],"kind":"struct"},"17:9600:71197":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"24:10986:1939":{"crate_id":24,"path":["tokio","time","error","Kind"],"kind":"enum"},"1:14551:4474":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"2:50238:5238":{"crate_id":2,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"1:8197:3758":{"crate_id":1,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"30:6363:6525":{"crate_id":30,"path":["futures_util","fns","OkFn"],"kind":"struct"},"24:11702:6306":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI16Le"],"kind":"struct"},"30:11256:71585":{"crate_id":30,"path":["futures_util","stream","try_stream","_","__Origin"],"kind":"struct"},"2:14068:1830":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"30:12768:71585":{"crate_id":30,"path":["futures_util","stream","unfold","_","__Origin"],"kind":"struct"},"29:603:8949":{"crate_id":29,"path":["libc","unix","itimerval"],"kind":"struct"},"30:11718:71585":{"crate_id":30,"path":["futures_util","stream","try_stream","try_for_each","_","__Origin"],"kind":"struct"},"24:9669:3045":{"crate_id":24,"path":["tokio","sync","mutex","TryLockError"],"kind":"struct"},"30:10153:71585":{"crate_id":30,"path":["futures_util","stream","stream","peek","_","__Origin"],"kind":"struct"},"2:4669:2856":{"crate_id":2,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"2:49276:5135":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"17:13799:7958":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"30:8525:3853":{"crate_id":30,"path":["futures_util","future","join","Join5"],"kind":"struct"},"17:9759:7242":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"16:7333:5813":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"29:5233:9456":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"1:15755:6814":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"29:5339:9517":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"17:11304:49417":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"29:5220:9447":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"29:1752:9103":{"crate_id":29,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"6:5210:9437":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"16:7823:5805":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"5:1843:6763":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"16:6166:5839":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"24:7412:6449":{"crate_id":24,"path":["tokio","sync","broadcast","RecvGuard"],"kind":"struct"},"1:8478:202":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"30:10424:4821":{"crate_id":30,"path":["futures_util","stream","stream","take_while","TakeWhile"],"kind":"struct"},"30:12602:3855":{"crate_id":30,"path":["futures_util","stream","select","Select"],"kind":"struct"},"5:3329:3894":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"2:51048:8460":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"24:230:1817":{"crate_id":24,"path":["tokio","io","async_read","AsyncRead"],"kind":"trait"},"32:0:2992":{"crate_id":32,"path":["pin_utils"],"kind":"module"},"6:6887:9762":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:46618:4811":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"29:4093:9242":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"29:6862:9757":{"crate_id":29,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:51543:5021":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"17:10420:6074":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:38805:2978":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"24:4703:2921":{"crate_id":24,"path":["tokio","loom","std","unsafe_cell","UnsafeCell"],"kind":"struct"},"17:9769:71194":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"5:5315:200":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:48817:146":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"30:3424:6734":{"crate_id":30,"path":["futures_util","stream","stream","flatten_unordered","PollStateBomb"],"kind":"struct"},"1:14610:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"0:0:1645":{"crate_id":0,"path":["hyper"],"kind":"module"},"31:44:3003":{"crate_id":31,"path":["futures_core","future","TryFuture"],"kind":"trait"},"30:9112:71585":{"crate_id":30,"path":["futures_util","stream","stream","unzip","_","__Origin"],"kind":"struct"},"2:3491:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"30:12506:6962":{"crate_id":30,"path":["futures_util","stream","repeat_with","RepeatWith"],"kind":"struct"},"1:4036:4606":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"12:2280:4026":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"1:7121:3218":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"16:7571:5790":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"2:49862:4912":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"2:48800:8446":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"19:0:994":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"5:5837:3850":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"17:12725:7608":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"24:937:6740":{"crate_id":24,"path":["tokio","coop","with_budget","ResetGuard"],"kind":"struct"},"5:792:108":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"5:3370:4511":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"29:3910:9147":{"crate_id":29,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"29:4298:9296":{"crate_id":29,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:11113:3894":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"17:607:7153":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"30:7638:3833":{"crate_id":30,"path":["futures_util","future","try_future","ErrInto"],"kind":"struct"},"30:11503:71585":{"crate_id":30,"path":["futures_util","stream","try_stream","_","__Origin"],"kind":"struct"},"12:114:71184":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"33:380:72831":{"crate_id":33,"path":["futures_task","noop_waker","noop_waker_ref","SyncRawWaker"],"kind":"struct"},"20:2609:6187":{"crate_id":20,"path":["http","header","map","ExtraValue"],"kind":"struct"},"2:2920:183":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"37:28:1765":{"crate_id":37,"path":["httparse","iter","Bytes"],"kind":"struct"},"17:13810:7959":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"29:1514:8966":{"crate_id":29,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"24:7367:1872":{"crate_id":24,"path":["tokio","sync","broadcast","Sender"],"kind":"struct"},"9:1056:5537":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"24:9761:3133":{"crate_id":24,"path":["tokio","sync","batch_semaphore","TryAcquireError"],"kind":"enum"},"17:10128:6138":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"30:8142:187":{"crate_id":30,"path":["futures_util","future","pending","Pending"],"kind":"struct"},"1:16026:2728":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"29:1614:9023":{"crate_id":29,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"17:13884:7980":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"30:12847:6623":{"crate_id":30,"path":["futures_util","stream","futures_unordered","iter","IterPinRef"],"kind":"struct"},"2:50203:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"20:2437:4029":{"crate_id":20,"path":["http","header","map","Values"],"kind":"struct"},"2:3811:3100":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:9598:6802":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"30:11682:6599":{"crate_id":30,"path":["futures_util","stream","try_stream","try_for_each","TryForEach"],"kind":"struct"},"29:1682:9075":{"crate_id":29,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"17:13506:7860":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"1:4401:4691":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"30:9719:6542":{"crate_id":30,"path":["futures_util","stream","stream","for_each","ForEach"],"kind":"struct"},"20:3102:1611":{"crate_id":20,"path":["http","status","StatusCode"],"kind":"struct"},"16:6152:5793":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"24:12192:6305":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI16"],"kind":"struct"},"30:12975:3869":{"crate_id":30,"path":["futures_util","abortable","AbortRegistration"],"kind":"struct"},"16:7894:5830":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"17:11082:6044":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"17:13386:7829":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"6:519:8899":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"24:14291:6328":{"crate_id":24,"path":["tokio","io","util","read_exact","ReadExact"],"kind":"struct"},"1:4752:2871":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"29:6804:9753":{"crate_id":29,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"5:4215:4021":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"30:7380:6614":{"crate_id":30,"path":["futures_util","future","try_future","TryFlattenErr"],"kind":"struct"},"2:3363:4858":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"2:50448:2979":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"5:1644:4029":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"29:3884:9127":{"crate_id":29,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"18:830:6157":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"17:12234:7510":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"24:4509:2899":{"crate_id":24,"path":["tokio","io","util","sink","Sink"],"kind":"struct"},"1:14634:1762":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"20:2808:6211":{"crate_id":20,"path":["http","header","name","StandardHeader"],"kind":"enum"},"20:3061:3931":{"crate_id":20,"path":["http","method","extension","InlineExtension"],"kind":"struct"},"1:7336:186":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"24:4228:6377":{"crate_id":24,"path":["tokio","io","util","buf_reader","SeekState"],"kind":"enum"},"2:46394:5298":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"24:10960:6441":{"crate_id":24,"path":["tokio","time","driver","Driver"],"kind":"struct"},"6:4262:9273":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"16:5927:5710":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"2:3524:132":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:13857:187":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"1:15510:5639":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:46483:5225":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"5:3362:4513":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"24:6649:6441":{"crate_id":24,"path":["tokio","runtime","driver","Driver"],"kind":"struct"},"24:1108:2927":{"crate_id":24,"path":["tokio","select"],"kind":"macro"},"24:7815:6749":{"crate_id":24,"path":["tokio","sync","mpsc","chan","Tx"],"kind":"struct"},"30:12788:6964":{"crate_id":30,"path":["futures_util","stream","futures_ordered","OrderWrapper"],"kind":"struct"},"2:3177:228":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"2:53377:4988":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:50225:4546":{"crate_id":2,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"16:7303:5869":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"24:11016:59252":{"crate_id":24,"path":["tokio","time","error","InsertError"],"kind":"enum"},"6:4272:9280":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"5:5093:660":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"16:4671:8043":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"24:11342:71585":{"crate_id":24,"path":["tokio","task","unconstrained","_","__Origin"],"kind":"struct"},"24:6667:6417":{"crate_id":24,"path":["tokio","runtime","handle","EnterGuard"],"kind":"struct"},"2:23462:4979":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"34:0:1636":{"crate_id":34,"path":["http_body"],"kind":"module"},"30:10353:71585":{"crate_id":30,"path":["futures_util","stream","stream","skip_while","_","__Origin"],"kind":"struct"},"27:698:6164":{"crate_id":27,"path":["memchr","cow","CowBytes"],"kind":"struct"},"29:625:8962":{"crate_id":29,"path":["libc","unix","protoent"],"kind":"struct"},"2:22850:2516":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"29:4379:9333":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"6:4478:9371":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"20:2673:4606":{"crate_id":20,"path":["http","header","name","Repr"],"kind":"enum"},"20:2410:3895":{"crate_id":20,"path":["http","header","map","IterMut"],"kind":"struct"},"1:10870:2884":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"35:412:3771":{"crate_id":35,"path":["futures_channel","lock","Lock"],"kind":"struct"},"1:15202:4529":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"30:9978:71585":{"crate_id":30,"path":["futures_util","stream","stream","_","__Origin"],"kind":"struct"},"2:3103:4871":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"2:12992:3933":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"6:1690:9075":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"17:13627:7892":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"22:1255:5725":{"crate_id":22,"path":["bytes","buf","reader","Reader"],"kind":"struct"},"17:10061:7254":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"17:10599:7275":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"24:4306:2957":{"crate_id":24,"path":["tokio","io","util","mem","DuplexStream"],"kind":"struct"},"24:10303:7028":{"crate_id":24,"path":["tokio","time","driver","entry","StateCell"],"kind":"struct"},"24:5707:6391":{"crate_id":24,"path":["tokio","runtime","task","error","JoinError"],"kind":"struct"},"1:12154:3964":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"24:7187:3749":{"crate_id":24,"path":["tokio","runtime","thread_pool","idle","State"],"kind":"struct"},"2:13129:4914":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:1534:4613":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"30:8771:71585":{"crate_id":30,"path":["futures_util","future","try_join","_","__Origin"],"kind":"struct"},"6:4449:9362":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"16:547:5701":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"22:1040:7056":{"crate_id":22,"path":["bytes","fmt","BytesRef"],"kind":"struct"},"2:9973:5108":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"16:3091:6026":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"2:50359:190":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"2:51520:5018":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"40:0:6643":{"crate_id":40,"path":["tracing_core"],"kind":"module"},"5:5415:2856":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"6:4358:9322":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"29:5378:9531":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"16:7226:5866":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"2:3280:220":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"20:2716:6209":{"crate_id":20,"path":["http","header","name","MaybeLower"],"kind":"struct"},"2:46736:4818":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2:46021:4873":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"29:4417:9348":{"crate_id":29,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"24:9800:3142":{"crate_id":24,"path":["tokio","sync","once_cell","SetError"],"kind":"enum"},"1:16022:2724":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"30:11478:3836":{"crate_id":30,"path":["futures_util","stream","try_stream","MapOk"],"kind":"struct"},"16:2889:5983":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"30:12666:6943":{"crate_id":30,"path":["futures_util","stream","select_with_strategy","SelectWithStrategy"],"kind":"struct"},"30:10043:4816":{"crate_id":30,"path":["futures_util","stream","stream","peek","Peekable"],"kind":"struct"},"1:1492:4030":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:50195:5175":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"24:12758:2867":{"crate_id":24,"path":["tokio","io","util","write","Write"],"kind":"struct"},"17:13453:7845":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"29:4052:9221":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"6:6881:9761":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"16:3772:8029":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"16:6110:5832":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:49742:5166":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"6:4459:9363":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:7857:4805":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"2:47542:3895":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"16:3392:5980":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"24:6587:1872":{"crate_id":24,"path":["tokio","runtime","blocking","shutdown","Sender"],"kind":"struct"},"2:4065:2981":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"30:11572:71585":{"crate_id":30,"path":["futures_util","stream","try_stream","_","__Origin"],"kind":"struct"},"16:3320:6027":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"1:14627:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"17:12073:7488":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"14:231:5335":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"24:1746:118":{"crate_id":24,"path":["tokio","fs","dir_builder","DirBuilder"],"kind":"struct"},"17:10149:7244":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:47593:3227":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"2:8447:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"2:51355:8462":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:8179:3030":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"20:3201:3952":{"crate_id":20,"path":["http","uri","scheme","Scheme2"],"kind":"enum"},"30:12235:71585":{"crate_id":30,"path":["futures_util","stream","try_stream","try_skip_while","_","__Origin"],"kind":"struct"},"23:39:2516":{"crate_id":23,"path":["itoa","private","Sealed"],"kind":"trait"},"2:47611:188":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"30:7344:71585":{"crate_id":30,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"30:12985:6638":{"crate_id":30,"path":["futures_util","abortable","AbortInner"],"kind":"struct"},"30:11613:3839":{"crate_id":30,"path":["futures_util","stream","try_stream","or_else","OrElse"],"kind":"struct"},"1:10569:2516":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"6:5191:9435":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"16:5672:5696":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"17:13978:8001":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"6:5379:9530":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"29:4285:9292":{"crate_id":29,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:48528:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"24:8409:1925":{"crate_id":24,"path":["tokio","sync","oneshot"],"kind":"module"},"22:140:1764":{"crate_id":22,"path":["bytes","buf","buf_mut","BufMut"],"kind":"trait"},"20:2582:5612":{"crate_id":20,"path":["http","header","map","Bucket"],"kind":"struct"},"16:2794:5718":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"20:2649:2373":{"crate_id":20,"path":["http","header","name","HeaderName"],"kind":"struct"},"17:10041:7252":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"24:1044:6985":{"crate_id":24,"path":["tokio","util","linked_list","Pointers"],"kind":"struct"},"6:4395:9337":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"5:8446:4510":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"24:12339:6316":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU32"],"kind":"struct"},"30:7846:71585":{"crate_id":30,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"1:11139:2874":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"24:7642:1872":{"crate_id":24,"path":["tokio","sync","mpsc","bounded","Sender"],"kind":"struct"},"29:5979:9628":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"17:13609:7889":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"2:11137:3895":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"2:24118:8406":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:16006:2711":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"1:13782:4597":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"24:5087:2856":{"crate_id":24,"path":["tokio","runtime","task","harness","poll_future","Guard"],"kind":"struct"},"17:12456:7564":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"2:46287:8427":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"17:11406:2234":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"30:8435:71585":{"crate_id":30,"path":["futures_util","future","join","_","__Origin"],"kind":"struct"},"24:10936:5417":{"crate_id":24,"path":["tokio","time","driver","handle","Handle"],"kind":"struct"},"2:48049:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"30:8950:3866":{"crate_id":30,"path":["futures_util","future","select_ok","SelectOk"],"kind":"struct"},"1:12183:4627":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"2:14129:201":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"1:3198:4662":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:46465:100":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"20:2392:1614":{"crate_id":20,"path":["http","header","map","HeaderMap"],"kind":"struct"},"6:4306:9296":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:51177:5025":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"16:4790:8047":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"2:3383:4866":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"17:12307:7523":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"1:6561:4489":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"1:4438:2893":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"24:9824:1872":{"crate_id":24,"path":["tokio","sync","watch","Sender"],"kind":"struct"},"1:11133:1765":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"1:1194:13810":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"2:12500:5313":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"20:2402:3894":{"crate_id":20,"path":["http","header","map","Iter"],"kind":"struct"},"1:10795:4488":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"3:0:430":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"5:8197:3491":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"17:12408:7559":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"2:48616:3565":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"2:50183:5182":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"20:1361:1609":{"crate_id":20,"path":["http","request","Request"],"kind":"struct"},"6:4517:9386":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"16:5273:5721":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"17:4008:7158":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:48558:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"30:7943:3108":{"crate_id":30,"path":["futures_util","future","try_future","MapErr"],"kind":"struct"},"6:4127:9254":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"30:13160:71928":{"crate_id":30,"path":["futures_util","unfold_state","UnfoldState"],"kind":"enum"},"24:8857:3138":{"crate_id":24,"path":["tokio","sync","rwlock","owned_write_guard","OwnedRwLockWriteGuard"],"kind":"struct"},"1:6086:4713":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"17:11030:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"6:4033:9210":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"31:122:2516":{"crate_id":31,"path":["futures_core","stream","private_try_stream","Sealed"],"kind":"trait"},"30:7724:71585":{"crate_id":30,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"2:24836:164":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"29:4044:9216":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"30:12867:3491":{"crate_id":30,"path":["futures_util","stream","futures_unordered","iter","IntoIter"],"kind":"struct"},"1:11350:4706":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"1:11152:4495":{"crate_id":1,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"30:10923:6961":{"crate_id":30,"path":["futures_util","stream","stream","flatten_unordered","SharedPollState"],"kind":"struct"},"24:5560:3959":{"crate_id":24,"path":["tokio","runtime","task","Task"],"kind":"struct"},"1:14242:2890":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"24:13070:6352":{"crate_id":24,"path":["tokio","io","util","read_to_end","ReadToEnd"],"kind":"struct"},"12:1682:5622":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"17:9719:7241":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:5630:779":{"crate_id":2,"path":["core","iter"],"kind":"module"},"24:611:92":{"crate_id":24,"path":["tokio","loom","std","atomic_usize","AtomicUsize"],"kind":"struct"},"2:3276:218":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"24:4754:7002":{"crate_id":24,"path":["tokio","park","thread","UnparkThread"],"kind":"struct"},"16:6682:5807":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"30:4786:1927":{"crate_id":30,"path":["futures_util","stream","try_stream","TryStreamExt"],"kind":"trait"},"2:46748:4819":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"17:10529:7266":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"16:5456:5684":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"27:0:2693":{"crate_id":27,"path":["memchr"],"kind":"module"},"6:5312:9497":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"12:1183:5609":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"24:10978:127":{"crate_id":24,"path":["tokio","time","error","Error"],"kind":"struct"},"2:47688:178":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"17:10938:7323":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"12:353:9830":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"29:3949:9173":{"crate_id":29,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"29:3860:9110":{"crate_id":29,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"6:4300:9293":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:22599:68792":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"2:50187:5180":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"29:5177:9432":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"16:3549:8027":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"29:3964:9180":{"crate_id":29,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"24:11277:71585":{"crate_id":24,"path":["tokio","time","timeout","_","__Origin"],"kind":"struct"},"17:9005:49409":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"6:1630:9028":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:2925:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"2:4782:4905":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:47619:205":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"16:7928:1868":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"12:1103:4022":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"17:12343:7529":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"17:9592:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"2:11162:2874":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"24:9855:3964":{"crate_id":24,"path":["tokio","sync","watch","error","RecvError"],"kind":"struct"},"18:812:6155":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"16:6744:6002":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"35:140:3746":{"crate_id":35,"path":["futures_channel","mpsc","TryRecvError"],"kind":"struct"},"2:48546:107":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"27:812:6967":{"crate_id":27,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"20:3247:2383":{"crate_id":20,"path":["http","uri","InvalidUriParts"],"kind":"struct"},"6:624:8957":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"24:12851:2874":{"crate_id":24,"path":["tokio","io","util","split","Split"],"kind":"struct"},"1:11246:4501":{"crate_id":1,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"12:2412:9836":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"5:8313:5225":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"29:6606:9749":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"2:49477:5125":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"6:4073:9226":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"16:4762:8046":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"17:299:7150":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:50199:5176":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"29:5461:9560":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:6633:69455":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"2:56322:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:51670:4998":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:5380:4705":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"24:7836:1946":{"crate_id":24,"path":["tokio","sync","mpsc","chan","Chan"],"kind":"struct"},"2:53047:5016":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:53126:5000":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:897:4635":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"16:5790:5705":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"24:12581:6298":{"crate_id":24,"path":["tokio","io","util","write_buf","WriteBuf"],"kind":"struct"},"30:8606:3855":{"crate_id":30,"path":["futures_util","future","select","Select"],"kind":"struct"},"17:2512:6076":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"34:470:1616":{"crate_id":34,"path":["http_body","Body"],"kind":"trait"},"29:1900:43552":{"crate_id":29,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"1:14103:6811":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"5:1215:5412":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"2:46056:4975":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"17:13054:7736":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"24:1576:2865":{"crate_id":24,"path":["tokio","fs","read_to_string","read_to_string"],"kind":"function"},"30:6812:71585":{"crate_id":30,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"30:12466:71585":{"crate_id":30,"path":["futures_util","stream","try_stream","try_for_each_concurrent","_","__Origin"],"kind":"struct"},"30:1080:3854":{"crate_id":30,"path":["futures_util","future","join_all","JoinAll"],"kind":"struct"},"29:4441:9362":{"crate_id":29,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"17:11147:7335":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"17:11835:7445":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"29:4195:9269":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"24:2320:2948":{"crate_id":24,"path":["tokio","io","split","ReadHalf"],"kind":"struct"},"29:1700:9082":{"crate_id":29,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:53338:5023":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"2:53553:8527":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"17:13348:7821":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"16:7786:5804":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"9:1075:5545":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:13766:138":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"2:57696:8534":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"28:0:2923":{"crate_id":28,"path":["num_cpus"],"kind":"module"},"1:4477:2895":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"2:3274:2915":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"2:49956:4920":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"34:246:3106":{"crate_id":34,"path":["http_body","combinators","box_body","BoxBody"],"kind":"struct"},"17:10516:6119":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"1:10370:7154":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"24:14634:71585":{"crate_id":24,"path":["tokio","io","util","buf_writer","_","__Origin"],"kind":"struct"},"17:12275:7516":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"0:202:1615":{"crate_id":0,"path":["hyper","body"],"kind":"module"},"17:13590:7884":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"30:9133:5322":{"crate_id":30,"path":["futures_util","stream","stream","concat","Concat"],"kind":"struct"},"20:0:1606":{"crate_id":20,"path":["http"],"kind":"module"},"29:5202:9437":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:5110:3581":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"17:10635:7278":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"29:5189:9436":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"14:0:2689":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"16:6691:5854":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"29:3873:9119":{"crate_id":29,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:53462:8522":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"30:5875:6625":{"crate_id":30,"path":["futures_util","stream","futures_unordered","ready_to_run_queue","ReadyToRunQueue"],"kind":"struct"},"16:7804:5803":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"30:10550:3829":{"crate_id":30,"path":["futures_util","stream","stream","then","Then"],"kind":"struct"},"17:13780:7953":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"2:51818:8469":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"24:4094:2953":{"crate_id":24,"path":["tokio","io","util","async_buf_read_ext","AsyncBufReadExt"],"kind":"trait"},"2:3774:3099":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:9259:3229":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"20:2248:127":{"crate_id":20,"path":["http","error","Error"],"kind":"struct"},"17:2484:49499":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"16:3429:5719":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"30:10805:71585":{"crate_id":30,"path":["futures_util","stream","stream","scan","_","__Origin"],"kind":"struct"},"24:13923:6337":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI32"],"kind":"struct"},"24:7199:6398":{"crate_id":24,"path":["tokio","runtime","thread_pool","Spawner"],"kind":"struct"},"24:9935:10249":{"crate_id":24,"path":["tokio","task","yield_now","yield_now","YieldNow"],"kind":"struct"},"27:958:6967":{"crate_id":27,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"27:880:6967":{"crate_id":27,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"30:6737:3831":{"crate_id":30,"path":["futures_util","future","future","FlattenStream"],"kind":"struct"},"29:4470:9371":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:37648:3411":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2:52322:4995":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:11520:4557":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"2:46296:5061":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"6:1676:9064":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"29:4005:9201":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:50351:3093":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"16:5295:47832":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"30:6709:71585":{"crate_id":30,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"6:5414:9545":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"30:8399:3851":{"crate_id":30,"path":["futures_util","future","join","Join3"],"kind":"struct"},"24:369:1819":{"crate_id":24,"path":["tokio","io","read_buf","ReadBuf"],"kind":"struct"},"16:7360:194":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"23:0:1639":{"crate_id":23,"path":["itoa"],"kind":"module"},"6:1572:8990":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"30:8161:3844":{"crate_id":30,"path":["futures_util","future","try_maybe_done","TryMaybeDone"],"kind":"enum"},"35:552:3770":{"crate_id":35,"path":["futures_channel","oneshot","Cancellation"],"kind":"struct"},"6:4439:9356":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"30:8103:71585":{"crate_id":30,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"17:9088:49412":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"30:6248:3021":{"crate_id":30,"path":["futures_util","task","spawn","SpawnExt"],"kind":"trait"},"30:12172:71585":{"crate_id":30,"path":["futures_util","stream","try_stream","try_unfold","_","__Origin"],"kind":"struct"},"17:2543:6115":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"16:5346:5792":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"24:9545:3743":{"crate_id":24,"path":["tokio","sync","broadcast","error","SendError"],"kind":"struct"},"2:23467:19036":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"2:46799:4822":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:12019:4590":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"5:8106:5326":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"30:11649:71585":{"crate_id":30,"path":["futures_util","stream","try_stream","or_else","_","__Origin"],"kind":"struct"},"1:10822:4452":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"17:13912:7989":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"1:5964:4757":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"1:5789:4443":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"29:5371:9530":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"6:6636:9750":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"24:4266:106":{"crate_id":24,"path":["tokio","io","util","copy","Copy"],"kind":"struct"},"2:3375:4862":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"17:10962:7325":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"5:3759:3894":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"30:8614:3856":{"crate_id":30,"path":["futures_util","future","select_all","SelectAll"],"kind":"struct"},"17:9065:49411":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"29:6206:9737":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"1:7511:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"1:2462:8546":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"16:6620:5995":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"6:1717:9088":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"24:9776:3134":{"crate_id":24,"path":["tokio","sync","semaphore","Semaphore"],"kind":"struct"},"12:2269:4025":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"18:668:6168":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"29:5351:9522":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"16:6413:5627":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"5:6764:2856":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"1:4643:2856":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"24:2106:2890":{"crate_id":24,"path":["tokio","io","stderr","Stderr"],"kind":"struct"},"20:3079:3932":{"crate_id":20,"path":["http","method","extension","AllocatedExtension"],"kind":"struct"},"35:21:6732":{"crate_id":35,"path":["futures_channel","lock","TryLock"],"kind":"struct"},"12:2392:9833":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"2:13962:10254":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"24:1280:128":{"crate_id":24,"path":["tokio","fs","file","File"],"kind":"struct"},"1:1528:4612":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"1:11146:2875":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"24:11207:6758":{"crate_id":24,"path":["tokio","util","try_lock","LockGuard"],"kind":"struct"},"2:11205:5122":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:10381:8641":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"5:994:5447":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"5:3038:2065":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"16:6949:6008":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"30:9895:3826":{"crate_id":30,"path":["futures_util","stream","stream","map","Map"],"kind":"struct"},"5:5875:6770":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"1:1501:4608":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"30:8836:71585":{"crate_id":30,"path":["futures_util","future","try_join","_","__Origin"],"kind":"struct"},"20:2620:6188":{"crate_id":20,"path":["http","header","map","Link"],"kind":"enum"},"20:3192:3954":{"crate_id":20,"path":["http","uri","path","PathAndQuery"],"kind":"struct"},"29:1525:8971":{"crate_id":29,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:22801:4976":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"2:3422:4788":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"29:3997:9198":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"30:12193:6608":{"crate_id":30,"path":["futures_util","stream","try_stream","try_skip_while","TrySkipWhile"],"kind":"struct"},"27:1061:6161":{"crate_id":27,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"6:1563:8984":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"30:11865:3840":{"crate_id":30,"path":["futures_util","stream","try_stream","try_flatten","TryFlatten"],"kind":"struct"},"24:9532:4728":{"crate_id":24,"path":["tokio","sync","barrier","BarrierState"],"kind":"struct"},"5:7257:6763":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"17:12756:7614":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"1:14571:9928":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"23:37:6275":{"crate_id":23,"path":["itoa","Integer"],"kind":"trait"},"5:8263:2844":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"5:2777:5417":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"29:5151:9417":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"1:15332:4502":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"1:2938:180":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"1:2366:600":{"crate_id":1,"path":["std","env"],"kind":"module"},"6:4066:9223":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"17:10584:6047":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"1:15971:8784":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"24:4102:5658":{"crate_id":24,"path":["tokio","io","util","async_buf_read_ext","AsyncBufReadExt","lines"],"kind":"foreign_type"},"2:14:2164":{"crate_id":2,"path":["core","write"],"kind":"macro"},"2:3395:4517":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"30:7907:71585":{"crate_id":30,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"18:867:6160":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:24632:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"41:0:3128":{"crate_id":41,"path":["once_cell"],"kind":"module"},"27:950:6967":{"crate_id":27,"path":["memchr","memmem","x86","avx","std","Forward"],"kind":"struct"},"6:1744:9098":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"5:3396:4514":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:51144:4992":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2:51489:5014":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"6:4005:9198":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"29:504:8894":{"crate_id":29,"path":["libc","unix","group"],"kind":"struct"},"2:49891:4918":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:12810:5161":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"17:9839:6092":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"30:12735:6948":{"crate_id":30,"path":["futures_util","stream","unfold","Unfold"],"kind":"struct"},"9:0:2685":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"6:5386:9531":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"24:7849:7014":{"crate_id":24,"path":["tokio","sync","mpsc","chan","RxFields"],"kind":"struct"},"27:870:6169":{"crate_id":27,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"1:16003:2708":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"2:46609:4826":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"6:1658:9052":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"30:6251:3020":{"crate_id":30,"path":["futures_util","task","spawn","LocalSpawnExt"],"kind":"trait"},"17:13547:7874":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"17:10266:6079":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"16:7295:5811":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"6:6155:2311":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"20:2475:4022":{"crate_id":20,"path":["http","header","map","Entry"],"kind":"enum"},"1:11293:6725":{"crate_id":1,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"17:9210:49414":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"2:47004:6962":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"16:4304:8033":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"20:2488:4026":{"crate_id":20,"path":["http","header","map","VacantEntry"],"kind":"struct"},"30:10527:71585":{"crate_id":30,"path":["futures_util","stream","stream","take_until","_","__Origin"],"kind":"struct"},"29:4219:9271":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:46470:5224":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:16023:2725":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"5:8130:4021":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"12:2419:2843":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"16:6605:5808":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:5583:13812":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"18:152:55702":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"2:49723:5164":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:4611:2898":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"5:3839:6763":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"20:543:4020":{"crate_id":20,"path":["http","header","map","as_header_name","AsHeaderName"],"kind":"trait"},"30:6959:3829":{"crate_id":30,"path":["futures_util","future","future","Then"],"kind":"struct"},"24:13972:6335":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI16"],"kind":"struct"},"17:11809:7440":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"1:1522:4611":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"24:12519:6296":{"crate_id":24,"path":["tokio","io","util","write_all_buf","WriteAllBuf"],"kind":"struct"},"30:11909:6602":{"crate_id":30,"path":["futures_util","stream","try_stream","try_collect","TryCollect"],"kind":"struct"},"29:5266:9469":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"1:15484:65916":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:11355:5126":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"24:10956:3769":{"crate_id":24,"path":["tokio","time","driver","sleep","Inner"],"kind":"struct"},"17:8902:49407":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"1:11611:4568":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"29:4015:9207":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"6:6085:9663":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"24:1755:3749":{"crate_id":24,"path":["tokio","fs","file","State"],"kind":"enum"},"16:6518:5849":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"29:4515:9389":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:9943:71192":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"30:10128:5446":{"crate_id":30,"path":["futures_util","stream","stream","peek","PeekMut"],"kind":"struct"},"1:4745:2868":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"1:8843:6881":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"30:12360:71585":{"crate_id":30,"path":["futures_util","stream","try_stream","try_buffer_unordered","_","__Origin"],"kind":"struct"},"1:10642:13807":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"20:2989:4033":{"crate_id":20,"path":["http","header","value","ToStrError"],"kind":"struct"},"24:2116:2894":{"crate_id":24,"path":["tokio","io","stdout","Stdout"],"kind":"struct"},"42:0:6644":{"crate_id":42,"path":["log"],"kind":"module"},"33:258:3014":{"crate_id":33,"path":["futures_task","future_obj","UnsafeFutureObj"],"kind":"trait"},"2:53396:8516":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"6:591:8939":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"2:46986:8442":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"30:10716:6550":{"crate_id":30,"path":["futures_util","stream","stream","ready_chunks","ReadyChunks"],"kind":"struct"},"17:13098:7767":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"1:15020:4590":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"27:1042:6160":{"crate_id":27,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:47534:3894":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"2:24144:41633":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"2:14078:2990":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"14:11:8303":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"15:0:2690":{"crate_id":15,"path":["addr2line"],"kind":"module"},"24:6632:6417":{"crate_id":24,"path":["tokio","runtime","context","EnterGuard"],"kind":"struct"},"1:10862:4684":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"20:3094:1848":{"crate_id":20,"path":["http","request","Builder"],"kind":"struct"},"24:9340:3141":{"crate_id":24,"path":["tokio","sync","once_cell","OnceCell"],"kind":"struct"},"1:13564:8544":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"17:8954:6045":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"2:3518:130":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"17:13163:7777":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"1:5504:4711":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"17:12783:7617":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"1:4475:2894":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"0:770:2625":{"crate_id":0,"path":["hyper","upgrade","OnUpgrade"],"kind":"struct"},"6:670:42581":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"30:9528:6540":{"crate_id":30,"path":["futures_util","stream","stream","fold","Fold"],"kind":"struct"},"1:14566:9926":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"30:11778:71585":{"crate_id":30,"path":["futures_util","stream","try_stream","try_filter","_","__Origin"],"kind":"struct"},"2:53405:8517":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"20:1973:3955":{"crate_id":20,"path":["http","uri","port","Port"],"kind":"struct"},"2:51121:5004":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:22837:4967":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"29:4058:9223":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"30:10859:71585":{"crate_id":30,"path":["futures_util","stream","stream","buffer_unordered","_","__Origin"],"kind":"struct"},"17:11993:7472":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"24:959:6741":{"crate_id":24,"path":["tokio","util","atomic_cell","AtomicCell"],"kind":"struct"},"5:3772:3895":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"29:592:8944":{"crate_id":29,"path":["libc","unix","linger"],"kind":"struct"},"1:11453:9637":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"16:2816:5982":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"24:9254:1867":{"crate_id":24,"path":["tokio","sync","task","atomic_waker","AtomicWaker"],"kind":"struct"},"30:10764:4818":{"crate_id":30,"path":["futures_util","stream","stream","scan","Scan"],"kind":"struct"},"17:9440:7146":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"17:11434:7348":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"2:46977:1945":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"20:2500:4025":{"crate_id":20,"path":["http","header","map","OccupiedEntry"],"kind":"struct"},"29:1721:4717":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"11:46:9838":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"6:4425:9348":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"6:1584:8999":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:10854:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"29:5304:9497":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"2:49609:5159":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"16:4535:8040":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"9:749:5479":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"2:46548:6782":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:15131:4599":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"30:5934:6736":{"crate_id":30,"path":["futures_util","stream","futures_unordered","poll_next","Bomb"],"kind":"struct"},"17:12431:7560":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"16:5488:5688":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"2:50034:4923":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"27:966:6153":{"crate_id":27,"path":["memchr","memmem","FindIter"],"kind":"struct"},"6:1700:9081":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:13655:4556":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"30:11325:71585":{"crate_id":30,"path":["futures_util","stream","try_stream","_","__Origin"],"kind":"struct"},"5:8362:9847":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"1:11654:4569":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"6:6028:9655":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"29:6902:9768":{"crate_id":29,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"24:9726:3964":{"crate_id":24,"path":["tokio","sync","oneshot","error","RecvError"],"kind":"struct"},"2:46363:5169":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"17:11499:7368":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:10812:4663":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"17:13331:7816":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"16:5753:5703":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"10:0:2686":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"30:9820:6543":{"crate_id":30,"path":["futures_util","stream","stream","into_future","StreamFuture"],"kind":"struct"},"6:5528:9572":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"24:6239:6420":{"crate_id":24,"path":["tokio","runtime","blocking","task","BlockingTask"],"kind":"struct"},"17:13540:7873":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"6:6005:9637":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:24530:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"2:3647:5218":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"17:13733:7935":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"24:1028:160":{"crate_id":24,"path":["tokio","util","linked_list","LinkedList"],"kind":"struct"},"6:1547:8976":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"17:11015:7329":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"29:4175:9267":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"30:10697:71585":{"crate_id":30,"path":["futures_util","stream","stream","chunks","_","__Origin"],"kind":"struct"},"24:11007:7049":{"crate_id":24,"path":["tokio","time","error","Elapsed"],"kind":"struct"},"5:1091:6763":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"17:12645:7600":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:49509:5155":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"16:7843:5872":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"1:1306:143":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"17:13963:8000":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:32693:4430":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"2:3739:4810":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"30:12932:3870":{"crate_id":30,"path":["futures_util","abortable","Abortable"],"kind":"struct"},"6:5130:9393":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:23767:2516":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"18:886:6161":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"1:3652:2883":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"1:12006:181":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"2:51639:4994":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"5:1607:3895":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"17:13564:7878":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"33:407:3019":{"crate_id":33,"path":["futures_task","waker_ref","WakerRef"],"kind":"struct"},"6:5359:9522":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"38:0:1638":{"crate_id":38,"path":["httpdate"],"kind":"module"},"24:3039:10246":{"crate_id":24,"path":["tokio","io","util","copy_bidirectional","CopyBidirectional"],"kind":"struct"},"20:3024:3769":{"crate_id":20,"path":["http","method","Inner"],"kind":"enum"},"5:6954:2991":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"1:12243:3041":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"2:46670:3823":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"35:504:3745":{"crate_id":35,"path":["futures_channel","mpsc","SendErrorKind"],"kind":"enum"},"24:6049:6746":{"crate_id":24,"path":["tokio","runtime","basic_scheduler","CoreGuard"],"kind":"struct"},"2:45965:199":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"24:2111:2892":{"crate_id":24,"path":["tokio","io","stdin","Stdin"],"kind":"struct"},"30:8200:71585":{"crate_id":30,"path":["futures_util","future","option","_","__Origin"],"kind":"struct"},"6:5459:9558":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"5:8379:5332":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"16:5960:5712":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"2:2768:579":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"16:7514:5814":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:24126:8407":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"35:433:3738":{"crate_id":35,"path":["futures_channel","mpsc","UnboundedSenderInner"],"kind":"struct"},"29:5213:9445":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:32497:68902":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"17:11962:7465":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"29:6844:9754":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"17:2314:6082":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"12:1147:4026":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"17:12552:7579":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"17:10279:6090":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"17:9551:6063":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"6:6870:9757":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"30:9802:71585":{"crate_id":30,"path":["futures_util","stream","stream","fuse","_","__Origin"],"kind":"struct"},"24:2167:2856":{"crate_id":24,"path":["tokio","io","split","Guard"],"kind":"struct"},"6:3972:9180":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"29:0:798":{"crate_id":29,"path":["libc"],"kind":"module"},"17:12982:7677":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"14:189:8303":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:8472:2811":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"20:3233:2629":{"crate_id":20,"path":["http","uri","Parts"],"kind":"struct"},"2:46995:2898":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:3268:211":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"30:11984:71585":{"crate_id":30,"path":["futures_util","stream","try_stream","try_concat","_","__Origin"],"kind":"struct"},"24:6593:202":{"crate_id":24,"path":["tokio","runtime","blocking","shutdown","Receiver"],"kind":"struct"},"24:69:71599":{"crate_id":24,"path":["tokio","macros","scoped_tls","ScopedKey"],"kind":"struct"},"17:10571:7273":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"2:23673:68772":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"2:46388:4483":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"29:154:42256":{"crate_id":29,"path":["libc","unix","fpos_t"],"kind":"enum"},"11:0:2687":{"crate_id":11,"path":["adler"],"kind":"module"},"6:1527:8968":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"24:12437:6311":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI8"],"kind":"struct"},"37:261:2235":{"crate_id":37,"path":["httparse","Status"],"kind":"enum"},"17:13598:7885":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"30:1343:3864":{"crate_id":30,"path":["futures_util","future","try_join_all","TryJoinAll"],"kind":"struct"},"30:8005:3837":{"crate_id":30,"path":["futures_util","future","try_future","MapOkOrElse"],"kind":"struct"},"17:11519:7378":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:24049:8779":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"30:3439:71925":{"crate_id":30,"path":["futures_util","stream","stream","flatten_unordered","InnerWaker"],"kind":"struct"},"2:22578:68789":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"16:6554:5850":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"6:5978:9627":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"24:12643:6294":{"crate_id":24,"path":["tokio","io","util","write_all","WriteAll"],"kind":"struct"},"24:11408:6499":{"crate_id":24,"path":["tokio","task","local","RunUntil"],"kind":"struct"},"2:47663:3894":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"2:22927:2516":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:11264:4553":{"crate_id":1,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"30:7699:3838":{"crate_id":30,"path":["futures_util","future","try_future","OkInto"],"kind":"struct"},"30:7760:3835":{"crate_id":30,"path":["futures_util","future","try_future","InspectOk"],"kind":"struct"},"29:6628:9750":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"6:5400:9542":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"27:1025:6158":{"crate_id":27,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"29:4509:9386":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"16:6577:5851":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"9:469:8756":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:51231:5017":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"16:7467:5795":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"29:1736:9098":{"crate_id":29,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"24:9073:3140":{"crate_id":24,"path":["tokio","sync","rwlock","write_guard_mapped","RwLockMappedWriteGuard"],"kind":"struct"},"5:8168:194":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"17:11714:7412":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"30:10904:71585":{"crate_id":30,"path":["futures_util","stream","stream","buffered","_","__Origin"],"kind":"struct"},"24:7652:202":{"crate_id":24,"path":["tokio","sync","mpsc","bounded","Receiver"],"kind":"struct"},"24:4867:2234":{"crate_id":24,"path":["tokio","runtime","task","core","Header"],"kind":"struct"},"24:14491:71585":{"crate_id":24,"path":["tokio","io","util","lines","_","__Origin"],"kind":"struct"},"29:6856:9756":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"2:48808:4964":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"6:3945:9170":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:49877:4915":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"0:482:1123":{"crate_id":0,"path":["hyper","rt"],"kind":"module"},"1:15093:4541":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"2:32345:68901":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"30:12828:6622":{"crate_id":30,"path":["futures_util","stream","futures_unordered","iter","IterPinMut"],"kind":"struct"},"5:3300:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"29:524:8851":{"crate_id":29,"path":["libc","unix","timespec"],"kind":"struct"},"5:6672:3034":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"6:5197:9436":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"9:603:8771":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"29:662:42581":{"crate_id":29,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:11424:5130":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"6:6852:9754":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"30:12521:1945":{"crate_id":30,"path":["futures_util","stream","once","Once"],"kind":"struct"},"12:2066:4513":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"2:49417:4801":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"2:51096:5012":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"12:2059:4512":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"30:9359:4814":{"crate_id":30,"path":["futures_util","stream","stream","filter_map","FilterMap"],"kind":"struct"},"29:571:8933":{"crate_id":29,"path":["libc","unix","iovec"],"kind":"struct"},"16:7342:5827":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"6:6910:9768":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"30:11804:6601":{"crate_id":30,"path":["futures_util","stream","try_stream","try_filter_map","TryFilterMap"],"kind":"struct"},"17:13685:7934":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:24734:165":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"29:4112:9252":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"29:6636:9752":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"17:11482:7363":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"6:6893:9763":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"30:10380:2873":{"crate_id":30,"path":["futures_util","stream","stream","take","Take"],"kind":"struct"},"17:12659:7601":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:7927:4869":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"30:11369:3834":{"crate_id":30,"path":["futures_util","stream","try_stream","InspectErr"],"kind":"struct"},"29:6879:9762":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"18:897:6162":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"29:1668:9064":{"crate_id":29,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"24:13776:6329":{"crate_id":24,"path":["tokio","io","util","read_int","ReadF32"],"kind":"struct"},"2:46558:8438":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"30:11941:71585":{"crate_id":30,"path":["futures_util","stream","try_stream","try_collect","_","__Origin"],"kind":"struct"},"24:9848:3743":{"crate_id":24,"path":["tokio","sync","watch","error","SendError"],"kind":"struct"},"17:11118:49416":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"6:4145:9265":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"17:10814:6034":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"16:2754:5716":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"29:4309:9301":{"crate_id":29,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"27:888:3411":{"crate_id":27,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"24:9552:3964":{"crate_id":24,"path":["tokio","sync","broadcast","error","RecvError"],"kind":"enum"},"17:9896:71193":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"29:5363:9529":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"1:8643:3036":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"29:1728:9094":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"17:11665:7401":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"6:4377:9330":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"29:4493:9379":{"crate_id":29,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:4:979":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"1:2175:4511":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"12:1162:5608":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"2:14239:4540":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"1:11416:4716":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"2:24247:5210":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"16:6238:5796":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"5:1653:4030":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"1:3343:4671":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"2:2956:177":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"20:2702:4604":{"crate_id":20,"path":["http","header","name","Custom"],"kind":"struct"},"24:8177:3130":{"crate_id":24,"path":["tokio","sync","mutex","MappedMutexGuard"],"kind":"struct"},"29:6092:9668":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"5:1597:3894":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"16:7264:5809":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"22:0:1632":{"crate_id":22,"path":["bytes"],"kind":"module"},"18:767:6978":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"17:9133:49413":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"29:4402:9341":{"crate_id":29,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"24:14735:2868":{"crate_id":24,"path":["tokio","io","seek","Seek"],"kind":"struct"},"2:4964:3580":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"24:6786:4656":{"crate_id":24,"path":["tokio","runtime","thread_pool","park","Parker"],"kind":"struct"},"2:51027:8459":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"6:610:8949":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"1:1646:4026":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"29:6873:9761":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"1:8807:162":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"20:2561:6183":{"crate_id":20,"path":["http","header","map","Pos"],"kind":"struct"},"1:16024:2726":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"1:11189:4497":{"crate_id":1,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"16:7073:5858":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"1:9064:3044":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"6:1554:8979":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:12262:7515":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"2:51394:8463":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:10706:2872":{"crate_id":1,"path":["std","error","Chain"],"kind":"struct"},"24:6128:6440":{"crate_id":24,"path":["tokio","runtime","blocking","pool","BlockingPool"],"kind":"struct"},"24:9526:3036":{"crate_id":24,"path":["tokio","sync","barrier","Barrier"],"kind":"struct"},"5:7111:6774":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"1:14236:2892":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"34:575:3104":{"crate_id":34,"path":["http_body","limited","Limited"],"kind":"struct"},"16:3064:6025":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"1:12000:4588":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"2:46679:3824":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"17:13574:7881":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"1:3345:4672":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:48269:3568":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"5:1694:5410":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"29:512:8899":{"crate_id":29,"path":["libc","unix","utimbuf"],"kind":"struct"},"24:5514:3019":{"crate_id":24,"path":["tokio","runtime","task","waker","WakerRef"],"kind":"struct"},"29:1692:9081":{"crate_id":29,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"12:399:5614":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"29:3854:9109":{"crate_id":29,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"17:12385:7550":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"17:12795:7624":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"24:4771:7003":{"crate_id":24,"path":["tokio","park","thread","CachedParkThread"],"kind":"struct"},"2:23771:4881":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"30:8973:2872":{"crate_id":30,"path":["futures_util","stream","stream","chain","Chain"],"kind":"struct"},"2:53500:8524":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"6:599:8944":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"1:10570:4632":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"20:1365:2629":{"crate_id":20,"path":["http","request","Parts"],"kind":"struct"},"12:2032:3894":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"5:7379:3491":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"20:3352:8754":{"crate_id":20,"path":["http","extensions","IdHasher"],"kind":"struct"},"27:1005:6157":{"crate_id":27,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"24:10221:4632":{"crate_id":24,"path":["tokio","task","task_local","AccessError"],"kind":"struct"},"6:157:42255":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"17:10844:6092":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"29:6116:9679":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:46638:4813":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"30:12589:71585":{"crate_id":30,"path":["futures_util","stream","poll_immediate","_","__Origin"],"kind":"struct"},"2:3168:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"6:5167:9419":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:32156:5250":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"17:12118:7495":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"20:3184:3953":{"crate_id":20,"path":["http","uri","authority","Authority"],"kind":"struct"},"1:12298:4543":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"1:11228:4500":{"crate_id":1,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"6:3997:9196":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"24:10206:6498":{"crate_id":24,"path":["tokio","task","local","LocalSet"],"kind":"struct"},"2:47602:3543":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:6699:9648":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"2:49581:5129":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"29:5428:9552":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"1:5956:4756":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"30:11998:6604":{"crate_id":30,"path":["futures_util","stream","try_stream","try_chunks","TryChunks"],"kind":"struct"},"34:534:2060":{"crate_id":34,"path":["http_body","full","Full"],"kind":"struct"},"5:0:277":{"crate_id":5,"path":["alloc"],"kind":"module"},"30:9210:4811":{"crate_id":30,"path":["futures_util","stream","stream","cycle","Cycle"],"kind":"struct"},"1:6867:4467":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"1:4082:205":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"29:6043:9656":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"17:13842:7974":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"29:150:42255":{"crate_id":29,"path":["libc","unix","FILE"],"kind":"enum"},"30:7460:71585":{"crate_id":30,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"24:568:89":{"crate_id":24,"path":["tokio","loom","std","atomic_u32","AtomicU32"],"kind":"struct"},"2:32331:3923":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"5:1674:4608":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"2:46758:4820":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"2:48839:8451":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"16:4506:8039":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"17:10623:7277":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"24:8170:3040":{"crate_id":24,"path":["tokio","sync","mutex","MutexGuard"],"kind":"struct"},"1:12199:3744":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"30:9333:71585":{"crate_id":30,"path":["futures_util","stream","stream","filter","_","__Origin"],"kind":"struct"},"16:5975:5835":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"30:12408:71585":{"crate_id":30,"path":["futures_util","stream","try_stream","try_buffered","_","__Origin"],"kind":"struct"},"18:611:6164":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"6:6214:9737":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"1:2159:3894":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"5:4242:6763":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"1:11594:4567":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"24:9590:3743":{"crate_id":24,"path":["tokio","sync","mpsc","error","SendError"],"kind":"struct"},"30:8456:3852":{"crate_id":30,"path":["futures_util","future","join","Join4"],"kind":"struct"},"5:3341:5337":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"29:5284:9481":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"6:4255:4723":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"6:0:798":{"crate_id":6,"path":["libc"],"kind":"module"},"30:9420:3822":{"crate_id":30,"path":["futures_util","stream","stream","flatten","Flatten"],"kind":"struct"},"1:8912:1945":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"2:13078:4910":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:51282:5005":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"24:309:1818":{"crate_id":24,"path":["tokio","io","async_write","AsyncWrite"],"kind":"trait"},"12:1703:5623":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"12:2404:71183":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"1:4688:2866":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:56400:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:15073:8854":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"1:14822:4592":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"17:11588:7390":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"29:6891:9764":{"crate_id":29,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:47965:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"17:12632:7599":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"20:3283:1613":{"crate_id":20,"path":["http","version","Version"],"kind":"struct"},"30:7565:3839":{"crate_id":30,"path":["futures_util","future","try_future","OrElse"],"kind":"struct"},"17:13520:7867":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"18:775:6967":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"37:350:2234":{"crate_id":37,"path":["httparse","Header"],"kind":"struct"},"17:10502:7265":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"30:12111:71585":{"crate_id":30,"path":["futures_util","stream","try_stream","try_fold","_","__Origin"],"kind":"struct"},"2:45898:195":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:3102:2516":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"16:7185:5862":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"30:10169:6546":{"crate_id":30,"path":["futures_util","stream","stream","peek","NextIf"],"kind":"struct"},"24:11040:6369":{"crate_id":24,"path":["tokio","time","interval","MissedTickBehavior"],"kind":"enum"},"20:2567:6184":{"crate_id":20,"path":["http","header","map","HashValue"],"kind":"struct"},"24:11251:7020":{"crate_id":24,"path":["tokio","time","timeout","Timeout"],"kind":"struct"},"1:11398:4495":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"6:3918:9147":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"16:6780:5855":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"16:5595:5694":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"20:3197:3956":{"crate_id":20,"path":["http","uri","scheme","Scheme"],"kind":"struct"},"30:10611:4822":{"crate_id":30,"path":["futures_util","stream","stream","zip","Zip"],"kind":"struct"},"16:5717:5699":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"6:5241:9456":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"29:4247:4723":{"crate_id":29,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"5:6688:5389":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"17:10468:6117":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"5:69:5360":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"24:4244:6377":{"crate_id":24,"path":["tokio","io","util","buf_writer","SeekState"],"kind":"enum"},"13:0:2682":{"crate_id":13,"path":["std_detect"],"kind":"module"},"24:11021:4541":{"crate_id":24,"path":["tokio","time","instant","Instant"],"kind":"struct"},"2:24212:9849":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"30:13073:6597":{"crate_id":30,"path":["futures_util","fns","MapOkFn"],"kind":"struct"},"16:5433:5683":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"17:13746:7941":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"2:3410:4782":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2:12794:5158":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"17:11100:6069":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"1:10657:13808":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"2:24010:8399":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"17:13942:7997":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"17:13620:7890":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"6:5255:9467":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:56335:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:12134:3743":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"2:47559:3226":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"6:1723:9091":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"30:10311:4820":{"crate_id":30,"path":["futures_util","stream","stream","skip_while","SkipWhile"],"kind":"struct"},"2:3400:4518":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"24:11604:6310":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI64Le"],"kind":"struct"},"2:53425:8519":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:14165:141":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"2:50191:5181":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"17:13119:7772":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"17:4157:6048":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"24:6877:9773":{"crate_id":24,"path":["tokio","runtime","thread_pool","queue","Steal"],"kind":"struct"},"1:786:6806":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"2:5407:5294":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"16:5029:8054":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:50171:5177":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"5:2262:5415":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"1:3204:2865":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"17:13318:7811":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"30:8577:71585":{"crate_id":30,"path":["futures_util","future","join","_","__Origin"],"kind":"struct"},"24:11311:71585":{"crate_id":24,"path":["tokio","time","driver","sleep","_","__Origin"],"kind":"struct"},"0:772:959":{"crate_id":0,"path":["hyper","upgrade","on"],"kind":"function"},"1:2401:8543":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"1:14239:2894":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"2:10304:3568":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:3430:4792":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"16:5766:5704":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"1:12049:4592":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"6:537:8904":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"1:12128:3491":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"3:300:205":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"11:54:5598":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"30:12262:6609":{"crate_id":30,"path":["futures_util","stream","try_stream","try_take_while","TryTakeWhile"],"kind":"struct"},"20:2981:2374":{"crate_id":20,"path":["http","header","value","HeaderValue"],"kind":"struct"},"1:16025:2727":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"1:0:1330":{"crate_id":1,"path":["std"],"kind":"module"},"4:0:2683":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"2:3351:4852":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"24:9780:3135":{"crate_id":24,"path":["tokio","sync","semaphore","SemaphorePermit"],"kind":"struct"},"7:85:47089":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"2:4727:4896":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"18:713:3411":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"24:8047:3740":{"crate_id":24,"path":["tokio","sync","mpsc","unbounded","UnboundedSender"],"kind":"struct"},"30:9923:71585":{"crate_id":30,"path":["futures_util","stream","stream","map","_","__Origin"],"kind":"struct"},"24:4724:3867":{"crate_id":24,"path":["tokio","park","either","Either"],"kind":"enum"},"2:4377:3491":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"5:3044:69855":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"24:9877:7027":{"crate_id":24,"path":["tokio","sync","watch","state","StateSnapshot"],"kind":"struct"},"17:11794:7434":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"1:10953:4604":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"1:14644:68278":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"35:43:1924":{"crate_id":35,"path":["futures_channel","mpsc"],"kind":"module"},"1:12120:4625":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"30:7319:3840":{"crate_id":30,"path":["futures_util","future","try_future","TryFlatten"],"kind":"struct"},"30:10586:71585":{"crate_id":30,"path":["futures_util","stream","stream","then","_","__Origin"],"kind":"struct"},"24:8796:3137":{"crate_id":24,"path":["tokio","sync","rwlock","owned_read_guard","OwnedRwLockReadGuard"],"kind":"struct"},"1:11405:4755":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"1:16028:2730":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"17:13062:7738":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"5:8203:3491":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"12:764:3895":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:47679:3491":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"6:5953:9609":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"16:5407:5681":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"30:6867:71585":{"crate_id":30,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"20:3332:3951":{"crate_id":20,"path":["http","byte_str","ByteStr"],"kind":"struct"},"2:50068:8454":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunk"],"kind":"struct"},"1:16021:2723":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:52793:5028":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:45988:2837":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"1:7290:8550":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:11001:7328":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:10240:205":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"17:10912:7318":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"30:12557:187":{"crate_id":30,"path":["futures_util","stream","pending","Pending"],"kind":"struct"},"2:52936:4996":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"29:4156:9266":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"20:2510:2398":{"crate_id":20,"path":["http","header","map","ValueIter"],"kind":"struct"},"17:11726:7415":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"12:971:4612":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"1:10431:6807":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"30:8035:71585":{"crate_id":30,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"30:825:3097":{"crate_id":30,"path":["futures_util","future","poll_fn","PollFn"],"kind":"struct"},"1:15230:4536":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"2:51693:5001":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"18:740:6974":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"1:4670:2864":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"17:9476:7147":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"30:13058:6523":{"crate_id":30,"path":["futures_util","fns","InspectFn"],"kind":"struct"},"17:10656:7280":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"1:14805:8559":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"24:1038:6188":{"crate_id":24,"path":["tokio","util","linked_list","Link"],"kind":"trait"},"24:7234:1939":{"crate_id":24,"path":["tokio","runtime","Kind"],"kind":"enum"},"29:5970:9627":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:46699:3826":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"16:6136:5833":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"2:51866:8470":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"24:1453:1849":{"crate_id":24,"path":["tokio","fs","read","read"],"kind":"function"},"1:11073:2899":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"2:3367:3111":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"5:8330:5378":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"17:9280:7233":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"17:12155:7500":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"16:6021:5962":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"24:12696:6322":{"crate_id":24,"path":["tokio","io","util","write_vectored","WriteVectored"],"kind":"struct"},"17:10950:7324":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"34:686:71585":{"crate_id":34,"path":["http_body","combinators","map_data","_","__Origin"],"kind":"struct"},"17:542:5727":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"35:0:1633":{"crate_id":35,"path":["futures_channel"],"kind":"module"},"29:1715:9091":{"crate_id":29,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:49039:5318":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"16:7119:5724":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"29:5159:9419":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"20:3303:4167":{"crate_id":20,"path":["http","version","Http"],"kind":"enum"},"2:49323:5138":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"16:7195:5863":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"5:3375:5338":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"17:9296:7143":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"24:188:2946":{"crate_id":24,"path":["tokio","io","async_buf_read","AsyncBufRead"],"kind":"trait"},"29:5406:9545":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"30:10668:5133":{"crate_id":30,"path":["futures_util","stream","stream","chunks","Chunks"],"kind":"struct"},"14:244:8307":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"17:9729:71190":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"5:1663:4607":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:10302:3567":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"12:1238:5611":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"16:5522:5690":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"17:13272:7805":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"17:13760:7947":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"24:14507:6291":{"crate_id":24,"path":["tokio","io","util","flush","Flush"],"kind":"struct"},"6:5969:9621":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:24182:41634":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"17:10377:6081":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"12:880:4510":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"24:11947:6301":{"crate_id":24,"path":["tokio","io","util","write_int","WriteF64"],"kind":"struct"},"34:624:1905":{"crate_id":34,"path":["http_body","next","Data"],"kind":"struct"},"17:10827:6035":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"17:11981:7470":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"17:11378:6038":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"1:2576:127":{"crate_id":1,"path":["std","error","Error"],"kind":"trait"},"1:1486:4510":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"2:47881:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"17:9245:6036":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"2:46578:4823":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:11082:1762":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"1:15186:4528":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"1:13935:64076":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"2:49713:2875":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"27:836:6167":{"crate_id":27,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"6:4013:9201":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"16:4922:8051":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"30:13088:6596":{"crate_id":30,"path":["futures_util","fns","MapErrFn"],"kind":"struct"},"1:6441:4473":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"1:10591:1848":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"29:4339:9314":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"37:225:127":{"crate_id":37,"path":["httparse","Error"],"kind":"enum"},"6:4095:9239":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"24:9862:1613":{"crate_id":24,"path":["tokio","sync","watch","state","Version"],"kind":"struct"},"30:11674:6598":{"crate_id":30,"path":["futures_util","stream","try_stream","try_next","TryNext"],"kind":"struct"},"18:791:6153":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"2:10306:3569":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"16:3041:5968":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"1:15987:65917":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"5:6652:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"24:12045:6303":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI128"],"kind":"struct"},"29:5261:9468":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"24:5733:6745":{"crate_id":24,"path":["tokio","runtime","task","inject","Inject"],"kind":"struct"},"16:4448:8037":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"1:16005:2710":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"2:46779:2873":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"30:7785:71585":{"crate_id":30,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"16:5384:5680":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"24:7823:6750":{"crate_id":24,"path":["tokio","sync","mpsc","chan","Rx"],"kind":"struct"},"1:10663:4522":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"17:13306:7808":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"6:4511:9384":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"1:13418:4718":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"24:9720:202":{"crate_id":24,"path":["tokio","sync","oneshot","Receiver"],"kind":"struct"},"1:14809:1763":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"5:1685:194":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"30:9250:4812":{"crate_id":30,"path":["futures_util","stream","stream","enumerate","Enumerate"],"kind":"struct"},"24:13384:6340":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI64Le"],"kind":"struct"},"29:4233:9272":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:55964:4877":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"2:56374:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"5:3039:69853":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"2:2268:4883":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"17:10801:7314":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"12:466:71185":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"2:49459:2874":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"30:7140:3830":{"crate_id":30,"path":["futures_util","future","future","UnitError"],"kind":"struct"},"17:9886:7244":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"24:12837:71585":{"crate_id":24,"path":["tokio","io","util","take","_","__Origin"],"kind":"struct"},"6:578:8933":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"29:6168:9718":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"30:12136:6607":{"crate_id":30,"path":["futures_util","stream","try_stream","try_unfold","TryUnfold"],"kind":"struct"},"29:4254:9273":{"crate_id":29,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"29:1555:8984":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"1:3740:2885":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"26:0:2922":{"crate_id":26,"path":["tokio_macros"],"kind":"module"},"24:12388:6314":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU16"],"kind":"struct"},"6:3868:9110":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"5:7620:5365":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"1:16008:2712":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"24:9755:3749":{"crate_id":24,"path":["tokio","sync","oneshot","State"],"kind":"struct"},"30:12907:3894":{"crate_id":30,"path":["futures_util","stream","select_all","Iter"],"kind":"struct"},"2:46431:5301":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"2:3504:2877":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"5:1235:5413":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"17:9971:71198":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"6:5945:9604":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"1:5862:4751":{"crate_id":1,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"30:12710:71585":{"crate_id":30,"path":["futures_util","stream","select_with_strategy","_","__Origin"],"kind":"struct"},"17:11555:7383":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"13:120:47728":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"30:7057:71585":{"crate_id":30,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"24:4168:2955":{"crate_id":24,"path":["tokio","io","util","async_write_ext","AsyncWriteExt"],"kind":"trait"},"6:6812:9753":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"16:6718:6000":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"12:472:71186":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"1:12258:4541":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:46049:1868":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"17:12480:7567":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"30:9495:71585":{"crate_id":30,"path":["futures_util","stream","stream","_","__Origin"],"kind":"struct"},"17:11358:6039":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"17:10317:6077":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"20:2466:4023":{"crate_id":20,"path":["http","header","map","GetAll"],"kind":"struct"},"29:584:8939":{"crate_id":29,"path":["libc","unix","winsize"],"kind":"struct"},"17:12507:7570":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"30:9022:6538":{"crate_id":30,"path":["futures_util","stream","stream","collect","Collect"],"kind":"struct"},"12:2036:3491":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:9380:4907":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:10211:7260":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"1:10581:65915":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"1:9370:1377":{"crate_id":1,"path":["std","task"],"kind":"module"},"1:1021:4651":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"6:6051:9656":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"24:13237:6332":{"crate_id":24,"path":["tokio","io","util","read_int","ReadF64Le"],"kind":"struct"},"27:942:6978":{"crate_id":27,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"6:4023:9207":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:49627:5160":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:9762:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"0:483:2474":{"crate_id":0,"path":["hyper","rt","Executor"],"kind":"trait"},"24:5283:6393":{"crate_id":24,"path":["tokio","runtime","task","raw","RawTask"],"kind":"struct"},"1:7979:3758":{"crate_id":1,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"16:3714:8028":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"2:48829:3749":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"16:7042:6012":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"30:7663:71585":{"crate_id":30,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"27:137:55701":{"crate_id":27,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:4398:4690":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"1:8485:1872":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"22:526:1765":{"crate_id":22,"path":["bytes","bytes","Bytes"],"kind":"struct"},"1:11361:2229":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"1:12238:3040":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"17:13532:7870":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"30:10248:71585":{"crate_id":30,"path":["futures_util","stream","stream","peek","_","__Origin"],"kind":"struct"},"6:4133:9256":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"17:10926:7322":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"6:4317:9301":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:13072:4909":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"6:3892:9127":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"1:4516:2891":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"5:7212:4021":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"6:88:42189":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"6:4120:9252":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:5184:2921":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"2:50045:4924":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"2:23086:19017":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"2:10446:8395":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"1:10614:3556":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"30:9294:4813":{"crate_id":30,"path":["futures_util","stream","stream","filter","Filter"],"kind":"struct"},"24:13433:6338":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI32Le"],"kind":"struct"},"1:8694:3038":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"1:1419:3894":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"6:5228:9447":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"2:6892:4828":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:4884:5098":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"2:53252:4985":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:49429:5150":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"18:730:71204":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:5033:5099":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"1:10697:8559":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"1:1655:4614":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"5:1011:3894":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"5:1457:4026":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"24:6653:5417":{"crate_id":24,"path":["tokio","runtime","handle","Handle"],"kind":"struct"},"29:6098:9669":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"16:6366:5628":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"16:7158:5860":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"1:8977:3051":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"30:11547:3108":{"crate_id":30,"path":["futures_util","stream","try_stream","MapErr"],"kind":"struct"},"2:3757:4872":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"2:12524:5277":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"2:2062:2856":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"15:248:5631":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"6:4052:9216":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"29:4451:9363":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"30:12304:71585":{"crate_id":30,"path":["futures_util","stream","try_stream","try_take_while","_","__Origin"],"kind":"struct"},"1:4736:64145":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"6:3966:9178":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"17:13819:7961":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"17:10458:7194":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"2:32337:4429":{"crate_id":2,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"30:10745:71585":{"crate_id":30,"path":["futures_util","stream","stream","ready_chunks","_","__Origin"],"kind":"struct"},"16:6731:6001":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"6:5221:9445":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:3733:137":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"30:7882:3836":{"crate_id":30,"path":["futures_util","future","try_future","MapOk"],"kind":"struct"},"12:0:2688":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"6:6185:9721":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"30:12379:6611":{"crate_id":30,"path":["futures_util","stream","try_stream","try_buffered","TryBuffered"],"kind":"struct"},"1:5731:4440":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"5:8463:5361":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2:48513:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"5:3970:6763":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"17:10028:7251":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"24:0:1641":{"crate_id":24,"path":["tokio"],"kind":"module"},"5:4643:6767":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:53592:8528":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"24:9817:202":{"crate_id":24,"path":["tokio","sync","watch","Receiver"],"kind":"struct"},"22:786:1766":{"crate_id":22,"path":["bytes","bytes_mut","BytesMut"],"kind":"struct"},"2:25240:5068":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"27:1033:6159":{"crate_id":27,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"30:3545:3005":{"crate_id":30,"path":["futures_util","stream","stream","StreamExt"],"kind":"trait"},"6:4410:9341":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:16018:2720":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"2:3416:4785":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"16:5561:5692":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"1:7936:64079":{"crate_id":1,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"24:9830:3581":{"crate_id":24,"path":["tokio","sync","watch","Ref"],"kind":"struct"},"2:8601:157":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"18:705:6967":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"29:3982:9192":{"crate_id":29,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:16017:2719":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"12:2398:9834":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"1:12072:64174":{"crate_id":1,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"16:4995:8053":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"2:49983:4921":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:50418:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"6:6239:9743":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:2507:4906":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"24:6570:10027":{"crate_id":24,"path":["tokio","runtime","blocking","pool","Mandatory"],"kind":"enum"},"30:7222:3840":{"crate_id":30,"path":["futures_util","future","try_future","try_flatten","TryFlatten"],"kind":"enum"},"2:50395:2988":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"6:6091:9665":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:2966:184":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:12253:3049":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"34:562:71585":{"crate_id":34,"path":["http_body","full","_","__Origin"],"kind":"struct"},"17:13180:7779":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"24:8174:3129":{"crate_id":24,"path":["tokio","sync","mutex","OwnedMutexGuard"],"kind":"struct"},"6:616:8952":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"2:49266:5134":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"30:12497:2898":{"crate_id":30,"path":["futures_util","stream","repeat","Repeat"],"kind":"struct"},"16:3365:5715":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:48792:4618":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"5:1472:4025":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:47525:1958":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"5:6475:4021":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"16:4704:8044":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"17:10477:6116":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"2:53436:8520":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:5739:4438":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"18:678:142":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"6:1622:9023":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"22:1298:6227":{"crate_id":22,"path":["bytes","buf","writer","Writer"],"kind":"struct"},"30:8913:71585":{"crate_id":30,"path":["futures_util","future","try_join","_","__Origin"],"kind":"struct"},"2:10539:146":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"35:528:3748":{"crate_id":35,"path":["futures_channel","mpsc","BoundedInner"],"kind":"struct"},"16:6176:5840":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"5:3488:4510":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"2:8362:4844":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:45857:196":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"24:9566:3746":{"crate_id":24,"path":["tokio","sync","broadcast","error","TryRecvError"],"kind":"enum"},"16:6357:5845":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"2:46108:5039":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"34:620:3103":{"crate_id":34,"path":["http_body","limited","LengthLimitError"],"kind":"struct"},"30:8792:3862":{"crate_id":30,"path":["futures_util","future","try_join","TryJoin4"],"kind":"struct"},"30:12046:6605":{"crate_id":30,"path":["futures_util","stream","try_stream","try_chunks","TryChunksError"],"kind":"struct"},"2:46970:8392":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"2:46628:4812":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:12740:6810":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"17:12494:7569":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"1:16015:2717":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:3174:135":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"20:1244:2378":{"crate_id":20,"path":["http","method","InvalidMethod"],"kind":"struct"},"2:48847:8452":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"30:6598:3823":{"crate_id":30,"path":["futures_util","future","future","fuse","Fuse"],"kind":"struct"},"2:45873:194":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"1:11126:2873":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"24:11291:6372":{"crate_id":24,"path":["tokio","time","driver","sleep","Sleep"],"kind":"struct"},"16:3118:5979":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"24:1764:5856":{"crate_id":24,"path":["tokio","fs","file","Operation"],"kind":"enum"},"35:419:5382":{"crate_id":35,"path":["futures_channel","mpsc","queue","Node"],"kind":"struct"},"27:708:7142":{"crate_id":27,"path":["memchr","cow","Imp"],"kind":"enum"},"17:10435:7263":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"2:51208:5013":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"20:544:2516":{"crate_id":20,"path":["http","header","map","as_header_name","Sealed"],"kind":"trait"},"29:6083:9665":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"16:5421:5682":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:24802:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"24:11555:6304":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI128Le"],"kind":"struct"},"1:12731:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"27:1072:6162":{"crate_id":27,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"20:3217:2404":{"crate_id":20,"path":["http","uri","scheme","Protocol"],"kind":"enum"},"35:454:3740":{"crate_id":35,"path":["futures_channel","mpsc","UnboundedSender"],"kind":"struct"},"9:996:5543":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"5:920:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"29:4317:9304":{"crate_id":29,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"16:3287:5974":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"2:24090:5085":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"5:1939:4510":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"2:2186:578":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"30:10649:71585":{"crate_id":30,"path":["futures_util","stream","stream","zip","_","__Origin"],"kind":"struct"},"16:7174:5861":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"24:6677:6418":{"crate_id":24,"path":["tokio","runtime","handle","TryCurrentError"],"kind":"struct"},"9:809:3749":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2:45919:198":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"30:13021:6965":{"crate_id":30,"path":["futures_util","fns","ChainFn"],"kind":"struct"},"1:3327:4666":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"30:10069:71585":{"crate_id":30,"path":["futures_util","stream","stream","peek","_","__Origin"],"kind":"struct"},"29:4137:9265":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"17:10224:7261":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"30:12894:71585":{"crate_id":30,"path":["futures_util","stream","select_all","_","__Origin"],"kind":"struct"},"16:6964:3226":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"1:2797:2977":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"29:4323:9305":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:48262:3566":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"16:2843:5963":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"29:5451:9558":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"30:11167:3832":{"crate_id":30,"path":["futures_util","stream","try_stream","and_then","AndThen"],"kind":"struct"},"30:6346:72586":{"crate_id":30,"path":["futures_util","fns","FnMut1"],"kind":"trait"},"17:12247:7512":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"2:5604:4965":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"35:560:2211":{"crate_id":35,"path":["futures_channel","oneshot","Canceled"],"kind":"struct"},"18:695:6169":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:23939:5194":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"2:3171:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"29:4393:9338":{"crate_id":29,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"29:3958:9178":{"crate_id":29,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"1:11571:3749":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"16:3195:5970":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"2:52082:5015":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"12:928:4030":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"2:10241:2867":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"17:510:7151":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"29:6077:9663":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:53530:8526":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"24:8622:65":{"crate_id":24,"path":["tokio","sync","batch_semaphore","Acquire"],"kind":"struct"},"24:5580:6743":{"crate_id":24,"path":["tokio","runtime","task","UnownedTask"],"kind":"struct"},"24:5768:4492":{"crate_id":24,"path":["tokio","runtime","task","join","JoinHandle"],"kind":"struct"},"2:52160:5022":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"22:374:6226":{"crate_id":22,"path":["bytes","buf","uninit_slice","UninitSlice"],"kind":"struct"},"30:12961:71585":{"crate_id":30,"path":["futures_util","abortable","_","__Origin"],"kind":"struct"},"17:13394:7831":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"1:14317:3556":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"2:49563:5128":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"24:442:4493":{"crate_id":24,"path":["tokio","net","addr","ToSocketAddrs"],"kind":"trait"},"2:2282:4887":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"17:9574:6068":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"6:5347:9517":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:22533:3411":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"29:5961:9621":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"12:940:4610":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"24:14406:2864":{"crate_id":24,"path":["tokio","io","util","read","Read"],"kind":"struct"},"1:11313:64179":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"2:49257:5133":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"17:8929:49408":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"1:7653:4585":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"2:5207:3584":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"17:13258:7801":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"30:11435:3825":{"crate_id":30,"path":["futures_util","stream","try_stream","into_stream","IntoStream"],"kind":"struct"},"16:3800:8030":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"6:6614:9749":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"17:11159:7336":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"1:8929:4737":{"crate_id":1,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"1:6701:9650":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"2:11410:5129":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"24:10916:7037":{"crate_id":24,"path":["tokio","time","driver","entry","TimerHandle"],"kind":"struct"},"17:10200:7259":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"1:13583:64081":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"24:11322:10252":{"crate_id":24,"path":["tokio","task","unconstrained","Unconstrained"],"kind":"struct"},"6:4341:9311":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"29:5945:9609":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:49197:5127":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"30:9159:71585":{"crate_id":30,"path":["futures_util","stream","stream","concat","_","__Origin"],"kind":"struct"},"17:10304:6078":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"1:15046:68280":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"1:6323:4722":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"9:963:5542":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"6:543:8907":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"16:3218:5971":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"6:4164:9266":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"24:5782:7005":{"crate_id":24,"path":["tokio","runtime","task","state","Snapshot"],"kind":"struct"},"24:7416:6450":{"crate_id":24,"path":["tokio","sync","broadcast","Recv"],"kind":"struct"},"1:4404:4692":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"29:5392:9542":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"17:10001:49461":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"24:11152:6507":{"crate_id":24,"path":["tokio","util","vec_deque_cell","VecDequeCell"],"kind":"struct"},"34:703:3108":{"crate_id":34,"path":["http_body","combinators","map_err","MapErr"],"kind":"struct"},"16:2945:5988":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"12:952:4611":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"16:5505:5689":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"24:7649:6462":{"crate_id":24,"path":["tokio","sync","mpsc","bounded","OwnedPermit"],"kind":"struct"},"17:12671:7602":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"2:13278:8397":{"crate_id":2,"path":["core","str","lossy","Utf8Lossy"],"kind":"struct"},"2:51741:4986":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"24:4302:2059":{"crate_id":24,"path":["tokio","io","util","empty","Empty"],"kind":"struct"},"17:9659:71199":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"17:11915:7450":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"1:9347:4475":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"29:6060:9658":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"30:10466:71585":{"crate_id":30,"path":["futures_util","stream","stream","take_while","_","__Origin"],"kind":"struct"},"30:8735:3861":{"crate_id":30,"path":["futures_util","future","try_join","TryJoin3"],"kind":"struct"},"2:47671:3895":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"24:11849:6317":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU32Le"],"kind":"struct"},"18:621:7142":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"16:6591:5852":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"25:49:59966":{"crate_id":25,"path":["pin_project_lite","__private","AlwaysUnpin"],"kind":"struct"},"24:7228:6397":{"crate_id":24,"path":["tokio","runtime","Runtime"],"kind":"struct"},"30:10199:71585":{"crate_id":30,"path":["futures_util","stream","stream","peek","_","__Origin"],"kind":"struct"},"30:9755:71585":{"crate_id":30,"path":["futures_util","stream","stream","for_each","_","__Origin"],"kind":"struct"},"6:6068:9658":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"1:12401:8545":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"29:5997:9637":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"30:7209:71585":{"crate_id":30,"path":["futures_util","future","try_future","into_future","_","__Origin"],"kind":"struct"},"30:6922:71585":{"crate_id":30,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"15:269:5635":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"30:12515:2059":{"crate_id":30,"path":["futures_util","stream","empty","Empty"],"kind":"struct"},"24:14673:71585":{"crate_id":24,"path":["tokio","io","util","buf_stream","_","__Origin"],"kind":"struct"},"5:2553:5418":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"2:24032:5090":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:52586:5008":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:6791:4471":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"6:1522:8966":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"1:1511:4610":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"1:12248:3048":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"1:8742:3050":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"16:7279:6013":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"1:3565:2882":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"5:4628:235":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"24:13874:6339":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI64"],"kind":"struct"},"18:858:6159":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"20:3242:2382":{"crate_id":20,"path":["http","uri","InvalidUri"],"kind":"struct"},"24:7267:6748":{"crate_id":24,"path":["tokio","coop","RestoreOnPending"],"kind":"struct"},"1:903:4636":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"29:1588:9007":{"crate_id":29,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"17:12208:7507":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"24:4801:6742":{"crate_id":24,"path":["tokio","runtime","enter","Enter"],"kind":"struct"},"30:9054:71585":{"crate_id":30,"path":["futures_util","stream","stream","collect","_","__Origin"],"kind":"struct"},"2:6437:4815":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"18:661:6167":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"17:11738:7416":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"5:1560:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"30:7440:3841":{"crate_id":30,"path":["futures_util","future","try_future","TryFlattenStream"],"kind":"struct"},"17:12373:7548":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"12:1203:5610":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"33:237:3009":{"crate_id":33,"path":["futures_task","future_obj","FutureObj"],"kind":"struct"},"12:750:3894":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"2:3246:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"6:4227:9271":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:49758:5168":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:3405:4519":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:5985:4760":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"29:5412:9548":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:46789:4821":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:2887:104":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"1:11336:8608":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"25:0:1640":{"crate_id":25,"path":["pin_project_lite"],"kind":"module"},"17:9649:7240":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:32296:4428":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"18:802:6154":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"12:815:4608":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"5:5833:5322":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:57675:8533":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"2:8403:151":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"31:27:3114":{"crate_id":31,"path":["futures_core","future","FusedFuture"],"kind":"trait"},"20:2453:4021":{"crate_id":20,"path":["http","header","map","Drain"],"kind":"struct"},"5:8250:2843":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"6:1533:8971":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"30:12631:71585":{"crate_id":30,"path":["futures_util","stream","select","_","__Origin"],"kind":"struct"},"2:22561:68769":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"29:6885:9763":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:49681:5163":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"24:10909:6515":{"crate_id":24,"path":["tokio","time","driver","entry","TimerEntry"],"kind":"struct"},"1:16019:2721":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"2:46500:5226":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"2:46281:4483":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"30:8078:3842":{"crate_id":30,"path":["futures_util","future","try_future","UnwrapOrElse"],"kind":"struct"},"29:81:42189":{"crate_id":29,"path":["libc","unix","DIR"],"kind":"enum"},"24:1789:4661":{"crate_id":24,"path":["tokio","fs","read_dir","ReadDir"],"kind":"struct"},"5:1441:4022":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"6:5428:9550":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"24:11355:10251":{"crate_id":24,"path":["tokio","task","task_local","TaskLocalFuture"],"kind":"struct"},"16:2991:5977":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"29:4125:9256":{"crate_id":29,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:12769:8623":{"crate_id":1,"path":["std","sys","unix","fs","TimespecDebugAdapter"],"kind":"struct"},"27:915:6974":{"crate_id":27,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"6:4494:9376":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"6:4523:9389":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:13488:7856":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"16:7250:5868":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"2:24166:41625":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"2:46717:4816":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"29:5420:9550":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:49378:5143":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:12221:7508":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"1:7445:185":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"6:3951:9171":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"30:9854:71585":{"crate_id":30,"path":["futures_util","stream","stream","_","__Origin"],"kind":"struct"},"2:8882:3897":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"5:8146:69863":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"16:6208:5841":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"30:6989:71585":{"crate_id":30,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"1:9471:8717":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"1:14576:4451":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"16:4417:8036":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"17:11767:7425":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"2:49751:5167":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"17:1311:6142":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"24:6684:6398":{"crate_id":24,"path":["tokio","runtime","spawner","Spawner"],"kind":"enum"},"30:8213:3846":{"crate_id":30,"path":["futures_util","future","poll_immediate","PollImmediate"],"kind":"struct"},"2:22580:68787":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"24:9792:3047":{"crate_id":24,"path":["tokio","sync","rwlock","RwLock"],"kind":"struct"},"1:10701:2236":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"16:4823:8048":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"6:4046:9214":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"6:511:8894":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"31:127:3006":{"crate_id":31,"path":["futures_core","stream","TryStream"],"kind":"trait"},"2:49286:5136":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"1:3201:1849":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:24870:5197":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"30:12874:3856":{"crate_id":30,"path":["futures_util","stream","select_all","SelectAll"],"kind":"struct"},"2:4050:2982":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"1:3370:1751":{"crate_id":1,"path":["std","io"],"kind":"module"},"2:53189:5020":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"37:251:3907":{"crate_id":37,"path":["httparse","InvalidChunkSize"],"kind":"struct"},"9:776:5524":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"17:3743:6031":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"6:4347:9314":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"1:5779:4442":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"17:9528:1765":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"17:10081:6090":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"1:1079:4480":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"24:11457:6302":{"crate_id":24,"path":["tokio","io","util","write_int","WriteF64Le"],"kind":"struct"},"2:3439:4797":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:5934:4754":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"16:3506:5975":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"2:46450:5066":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"6:5436:9552":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"24:2099:6988":{"crate_id":24,"path":["tokio","io","stdio_common","SplitByUtf8BoundaryIfWindows"],"kind":"struct"},"2:46647:4814":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"29:577:8936":{"crate_id":29,"path":["libc","unix","pollfd"],"kind":"struct"},"29:1657:9056":{"crate_id":29,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:3181:227":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"29:4423:9351":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:52369:4999":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:15392:4705":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"6:584:8936":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"30:12067:6606":{"crate_id":30,"path":["futures_util","stream","try_stream","try_fold","TryFold"],"kind":"struct"},"30:6787:3826":{"crate_id":30,"path":["futures_util","future","future","Map"],"kind":"struct"},"2:56387:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:46410:5168":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"6:4431:9351":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"6:1602:9009":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"17:13370:7826":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:48276:3569":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"2:51336:4997":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"5:8121:5448":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"29:5937:9604":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"30:8861:3863":{"crate_id":30,"path":["futures_util","future","try_join","TryJoin5"],"kind":"struct"},"1:1505:4609":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"16:6999:5857":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:24768:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"17:10489:6118":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"30:7821:3834":{"crate_id":30,"path":["futures_util","future","try_future","InspectErr"],"kind":"struct"},"20:1498:2629":{"crate_id":20,"path":["http","response","Parts"],"kind":"struct"},"17:9034:49410":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"24:7067:6739":{"crate_id":24,"path":["tokio","runtime","thread_pool","worker","block_in_place","Reset"],"kind":"struct"},"1:11502:3219":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:9978:5109":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"6:4083:9233":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"30:12990:3871":{"crate_id":30,"path":["futures_util","abortable","Aborted"],"kind":"struct"},"6:531:8851":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"30:5199:3097":{"crate_id":30,"path":["futures_util","stream","poll_fn","PollFn"],"kind":"struct"},"1:699:4631":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"6:1908:43552":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"33:16:3012":{"crate_id":33,"path":["futures_task","spawn","Spawn"],"kind":"trait"},"2:23134:4981":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"16:7216:5865":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"2:3346:4850":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"16:6636:5810":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"1:1463:4029":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"29:5990:9633":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:11438:5131":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"30:5897:6621":{"crate_id":30,"path":["futures_util","stream","futures_unordered","FuturesUnordered"],"kind":"struct"},"16:7453:5794":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"29:6020:9655":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"1:2187:4513":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"6:4331:9305":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"37:287:3908":{"crate_id":37,"path":["httparse","ParserConfig"],"kind":"struct"},"5:4306:3895":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"1:5745:4441":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"17:9849:71195":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"24:11800:6319":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU64Le"],"kind":"struct"},"5:3951:4510":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"24:7565:4029":{"crate_id":24,"path":["tokio","sync","mpsc","block","Values"],"kind":"struct"},"9:722:5478":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"2:45781:3898":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"18:136:55701":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"6:4215:9270":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"6:4060:9221":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"30:8690:3860":{"crate_id":30,"path":["futures_util","future","try_join","TryJoin"],"kind":"struct"},"2:52003:5027":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"2:10579:4963":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"17:11678:7402":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"30:6634:3826":{"crate_id":30,"path":["futures_util","future","future","map","Map"],"kind":"enum"},"0:486:1621":{"crate_id":0,"path":["hyper","service"],"kind":"module"},"1:5657:4462":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"16:6464:5806":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"12:2045:4510":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"24:6297:1848":{"crate_id":24,"path":["tokio","runtime","builder","Builder"],"kind":"struct"},"5:2310:5456":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"1:7633:4584":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"1:1623:4022":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:38868:2918":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:16011:2715":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"2:2218:1050":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"1:12061:68078":{"crate_id":1,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"1:11424:4706":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"24:14217:6341":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI8"],"kind":"struct"},"27:853:142":{"crate_id":27,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"29:4503:9384":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"2:50055:4925":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:10574:4516":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:10933:214":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"17:12699:7606":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"6:4325:9304":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"1:8031:4651":{"crate_id":1,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"1:9143:3047":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"16:4230:8032":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"24:4760:3769":{"crate_id":24,"path":["tokio","park","thread","Inner"],"kind":"struct"},"1:1476:4021":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"6:3990:9192":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:46371:5297":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"6:5563:9597":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"16:7420:5815":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"24:13580:6349":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU64Le"],"kind":"struct"},"1:14589:8635":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"6:6899:9764":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"1:11475:4464":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"5:6411:223":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"1:11430:4724":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"2:46708:4829":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"5:4515:5436":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"24:10128:2856":{"crate_id":24,"path":["tokio","task","task_local","with_task","Guard"],"kind":"struct"},"1:11670:4571":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"17:13429:7837":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"1:9722:4699":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"24:6906:71302":{"crate_id":24,"path":["tokio","runtime","thread_pool","queue","push_overflow","BatchTaskIter"],"kind":"struct"},"1:6794:4473":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"17:11199:7339":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"30:6757:71585":{"crate_id":30,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"18:637:6967":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:8384:4651":{"crate_id":1,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"5:5889:6772":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"17:0:2692":{"crate_id":17,"path":["object"],"kind":"module"},"1:6863:4454":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"2:13283:41865":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunksIter"],"kind":"struct"},"1:14953:6812":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"1:9737:4700":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"31:0:1634":{"crate_id":31,"path":["futures_core"],"kind":"module"},"24:12948:6363":{"crate_id":24,"path":["tokio","io","util","read_until","ReadUntil"],"kind":"struct"},"18:745:71205":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"12:559:143":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"2:22937:4478":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"17:12442:7562":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"29:4462:9369":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"27:153:55702":{"crate_id":27,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"30:12563:3846":{"crate_id":30,"path":["futures_util","stream","poll_immediate","PollImmediate"],"kind":"struct"},"17:1236:7155":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"1:9178:6881":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"33:19:3011":{"crate_id":33,"path":["futures_task","spawn","LocalSpawn"],"kind":"trait"},"24:5636:71290":{"crate_id":24,"path":["tokio","runtime","enter","EnterContext"],"kind":"enum"},"17:11186:7337":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"37:202:6728":{"crate_id":37,"path":["httparse","parse_headers_iter_uninit","ShrinkOnDrop"],"kind":"struct"},"2:51766:4987":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:10529:142":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"5:2218:5340":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"17:12521:7573":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:23868:5193":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:8392:3749":{"crate_id":1,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"29:4025:9210":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"1:16029:2731":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"2:11923:5144":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"29:562:8927":{"crate_id":29,"path":["libc","unix","hostent"],"kind":"struct"},"24:10097:4631":{"crate_id":24,"path":["tokio","task","task_local","LocalKey"],"kind":"struct"},"17:11277:7340":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"30:506:3004":{"crate_id":30,"path":["futures_util","future","try_future","TryFutureExt"],"kind":"trait"},"29:1594:9009":{"crate_id":29,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"33:0:2993":{"crate_id":33,"path":["futures_task"],"kind":"module"},"16:5360:5679":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"12:379:5615":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"24:990:6488":{"crate_id":24,"path":["tokio","util","wake_list","WakeList"],"kind":"struct"},"5:2200:6765":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2:49527:5156":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"24:14718:71585":{"crate_id":24,"path":["tokio","io","util","buf_reader","_","__Origin"],"kind":"struct"},"5:1635:4024":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"6:4040:9213":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"16:4614:8041":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"1:15123:8636":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"6:5548:9586":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"1:2437:8544":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"1:1136:2983":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"2:47797:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"17:12142:7497":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:7669:3497":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"2:13892:3097":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"9:41:5527":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"14:250:8308":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"6:161:42256":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"17:10140:6092":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"12:843:4024":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"2:12056:6788":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"2:10251:134":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"24:10431:6917":{"crate_id":24,"path":["tokio","time","driver","wheel","level","Level"],"kind":"struct"},"17:9689:71196":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"16:3018:5967":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:10924:2516":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"2:9767:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:6963:4453":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"24:9635:3964":{"crate_id":24,"path":["tokio","sync","mpsc","error","RecvError"],"kind":"struct"},"6:6644:9752":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"17:13465:7851":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"6:5469:9560":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"24:6556:6398":{"crate_id":24,"path":["tokio","runtime","basic_scheduler","Spawner"],"kind":"struct"},"20:2639:6189":{"crate_id":20,"path":["http","header","map","Danger"],"kind":"enum"},"6:4281:9285":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:49368:5142":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"2:11956:5145":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"29:4486:9376":{"crate_id":29,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"29:1539:8976":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"5:8368:216":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"24:520:86":{"crate_id":24,"path":["tokio","loom","std","atomic_ptr","AtomicPtr"],"kind":"struct"},"29:4363:9327":{"crate_id":29,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"16:3604:7164":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"24:9740:3746":{"crate_id":24,"path":["tokio","sync","oneshot","error","TryRecvError"],"kind":"enum"},"5:4443:3894":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"30:9005:71585":{"crate_id":30,"path":["futures_util","stream","stream","chain","_","__Origin"],"kind":"struct"},"17:12095:7489":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"31:39:2516":{"crate_id":31,"path":["futures_core","future","private_try_future","Sealed"],"kind":"trait"},"6:5987:9628":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"24:12143:6307":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI32"],"kind":"struct"},"6:4401:9338":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"16:4350:8034":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"16:5941:189":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"29:518:8902":{"crate_id":29,"path":["libc","unix","timeval"],"kind":"struct"},"17:10543:7267":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"6:6124:9679":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"31:194:1867":{"crate_id":31,"path":["futures_core","task","__internal","atomic_waker","AtomicWaker"],"kind":"struct"},"2:24103:5086":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"24:8056:3742":{"crate_id":24,"path":["tokio","sync","mpsc","unbounded","UnboundedReceiver"],"kind":"struct"},"16:7870:5800":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"17:9799:7243":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"17:294:7149":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"24:1928:1763":{"crate_id":24,"path":["tokio","io","blocking","Buf"],"kind":"struct"},"1:1161:13809":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"1:2166:4021":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:10308:189":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"29:4207:9270":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"27:905:71204":{"crate_id":27,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"17:13865:7975":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"5:8344:5379":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"16:4477:8038":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"1:11356:4707":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:11282:5124":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:50341:201":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"2:49435:5151":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"13:232:8755":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"20:490:2516":{"crate_id":20,"path":["http","header","map","into_header_name","Sealed"],"kind":"trait"},"24:10943:7041":{"crate_id":24,"path":["tokio","time","driver","wheel","level","Expiration"],"kind":"struct"},"5:5788:6763":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"1:10456:6736":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"5:6257:5365":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"6:563:8924":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"24:4750:7001":{"crate_id":24,"path":["tokio","park","thread","ParkThread"],"kind":"struct"},"27:996:6156":{"crate_id":27,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:49767:4483":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:11317:5125":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"17:11779:7428":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:49908:4919":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"16:6072:5812":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:3434:4794":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:10596:4650":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"1:7931:3769":{"crate_id":1,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"24:9771:3132":{"crate_id":24,"path":["tokio","sync","batch_semaphore","AcquireError"],"kind":"struct"},"29:6147:2311":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:10298:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"1:10836:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"29:5520:9572":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"18:645:6166":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"2:50020:4922":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:46417:5299":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"17:10117:6137":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"30:5804:3959":{"crate_id":30,"path":["futures_util","stream","futures_unordered","task","Task"],"kind":"struct"},"29:1576:8999":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"16:2968:5966":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"29:5555:9597":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"30:12647:60332":{"crate_id":30,"path":["futures_util","stream","select_with_strategy","PollNext"],"kind":"enum"},"16:4955:8052":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"35:310:1925":{"crate_id":35,"path":["futures_channel","oneshot"],"kind":"module"},"24:10337:7029":{"crate_id":24,"path":["tokio","time","driver","entry","TimerSharedPadded"],"kind":"struct"},"1:15236:4537":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"30:9572:71585":{"crate_id":30,"path":["futures_util","stream","stream","fold","_","__Origin"],"kind":"struct"},"36:13:2247":{"crate_id":36,"path":["tower_service","Service"],"kind":"trait"},"1:6689:4441":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"2:3277:217":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"1:9638:6803":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"17:11572:7385":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"30:9776:3823":{"crate_id":30,"path":["futures_util","stream","stream","fuse","Fuse"],"kind":"struct"},"16:6391:5846":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"2:3426:4790":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"5:7849:6780":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"39:0:1643":{"crate_id":39,"path":["tracing"],"kind":"module"},"6:1760:9103":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:2865:3112":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"2:51898:8471":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"17:12598:7586":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"24:10926:7040":{"crate_id":24,"path":["tokio","time","driver","entry","CachePadded"],"kind":"struct"},"2:23125:2516":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"31:96:1926":{"crate_id":31,"path":["futures_core","stream","Stream"],"kind":"trait"},"1:1153:8535":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"16:6807:5856":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"5:1486:4614":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"2:4920:3141":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"35:539:3749":{"crate_id":35,"path":["futures_channel","mpsc","State"],"kind":"struct"},"16:5996:5836":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"1:823:6806":{"crate_id":1,"path":["std","thread","local","os","Key"],"kind":"struct"},"17:13898:7982":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:53416:8518":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"17:10331:6092":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"17:11932:7456":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"24:590:91":{"crate_id":24,"path":["tokio","loom","std","atomic_u8","AtomicU8"],"kind":"struct"},"17:10975:7326":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"44:0:1644":{"crate_id":44,"path":["want"],"kind":"module"},"24:9689:4736":{"crate_id":24,"path":["tokio","sync","notify","Waiter"],"kind":"struct"},"2:24598:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"16:5472:5687":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"30:12427:6612":{"crate_id":30,"path":["futures_util","stream","try_stream","try_for_each_concurrent","TryForEachConcurrent"],"kind":"struct"},"22:42:1763":{"crate_id":22,"path":["bytes","buf","buf_impl","Buf"],"kind":"trait"},"1:7681:4587":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"12:869:4021":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"1:8414:5382":{"crate_id":1,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"17:11231:6066":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"17:11616:7394":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"30:10027:6544":{"crate_id":30,"path":["futures_util","stream","stream","next","Next"],"kind":"struct"},"30:6689:3822":{"crate_id":30,"path":["futures_util","future","future","Flatten"],"kind":"struct"},"37:298:1609":{"crate_id":37,"path":["httparse","Request"],"kind":"struct"},"16:3488:5976":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"2:46309:5062":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:2031:145":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"1:2163:3491":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"29:6231:9743":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"6:1665:9056":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:48495:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"24:7645:6461":{"crate_id":24,"path":["tokio","sync","mpsc","bounded","Permit"],"kind":"struct"},"18:0:2693":{"crate_id":18,"path":["memchr"],"kind":"module"},"30:9475:3822":{"crate_id":30,"path":["futures_util","stream","stream","Flatten"],"kind":"struct"},"37:0:1637":{"crate_id":37,"path":["httparse"],"kind":"module"},"1:3196:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"1:7259:8550":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"5:3748:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"30:7521:71585":{"crate_id":30,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"6:4241:9272":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:0:488":{"crate_id":2,"path":["core"],"kind":"module"},"29:4032:9213":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:22546:68769":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"2:51250:8461":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"30:5539:6949":{"crate_id":30,"path":["futures_util","stream","futures_ordered","FuturesOrdered"],"kind":"struct"},"30:7160:71585":{"crate_id":30,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"17:12568:7580":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"1:15217:4530":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"16:4641:8042":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"35:447:1872":{"crate_id":35,"path":["futures_channel","mpsc","Sender"],"kind":"struct"},"24:1933:3749":{"crate_id":24,"path":["tokio","io","blocking","State"],"kind":"enum"},"2:3580:4971":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"20:2663:6206":{"crate_id":20,"path":["http","header","name","HdrName"],"kind":"struct"},"1:3355:4677":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"17:12582:7582":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"2:46063:3581":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"1:5723:4439":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"30:9236:71585":{"crate_id":30,"path":["futures_util","stream","stream","cycle","_","__Origin"],"kind":"struct"},"1:2399:8542":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"2:49349:5140":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"17:9809:71191":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"1:12034:4591":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"6:4293:9292":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"24:12478:6320":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU8"],"kind":"struct"},"24:11506:6300":{"crate_id":24,"path":["tokio","io","util","write_int","WriteF32Le"],"kind":"struct"},"9:692:5477":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"6:5407:9544":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"6:4112:9247":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"1:10680:14795":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:3716:5219":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"2:10294:109":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"17:10253:6080":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"30:7269:6614":{"crate_id":30,"path":["futures_util","future","try_future","try_flatten_err","TryFlattenErr"],"kind":"enum"},"24:269:2947":{"crate_id":24,"path":["tokio","io","async_seek","AsyncSeek"],"kind":"trait"},"17:13446:7844":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"2:24564:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"30:10929:10245":{"crate_id":30,"path":["futures_util","stream","stream","flatten_unordered","PollStreamFut"],"kind":"struct"},"2:50436:2980":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"20:3009:1608":{"crate_id":20,"path":["http","method","Method"],"kind":"struct"},"2:22931:4476":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"16:6644:5853":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"15:230:5630":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"1:6941:4465":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"1:6463:4486":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"24:4257:6992":{"crate_id":24,"path":["tokio","io","util","copy","CopyBuffer"],"kind":"struct"},"17:13554:7875":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"29:4065:9226":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:10800:4661":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"30:13127:6618":{"crate_id":30,"path":["futures_util","fns","UnwrapOrElseFn"],"kind":"struct"},"1:4436:2892":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"1:15354:4704":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"6:525:8902":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"16:3939:8031":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"30:11106:6554":{"crate_id":30,"path":["futures_util","stream","stream","for_each_concurrent","ForEachConcurrent"],"kind":"struct"},"12:1784:6761":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"30:7968:71585":{"crate_id":30,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"2:49733:5165":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:2941:179":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"16:6032:5723":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"}},"external_crates":{"36":{"name":"tower_service","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"23":{"name":"itoa","html_root_url":"https://docs.rs/itoa/1.0.2/"},"45":{"name":"try_lock","html_root_url":"https://docs.rs/try-lock/0.2.3/"},"43":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"26":{"name":"tokio_macros","html_root_url":null},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"28":{"name":"num_cpus","html_root_url":null},"21":{"name":"fnv","html_root_url":null},"40":{"name":"tracing_core","html_root_url":"https://docs.rs/tracing-core/0.1.22/"},"31":{"name":"futures_core","html_root_url":null},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"35":{"name":"futures_channel","html_root_url":null},"44":{"name":"want","html_root_url":"https://docs.rs/want/0.3.0/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"24":{"name":"tokio","html_root_url":null},"42":{"name":"log","html_root_url":"https://docs.rs/log/0.4.17/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"27":{"name":"memchr","html_root_url":null},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"41":{"name":"once_cell","html_root_url":null},"20":{"name":"http","html_root_url":"https://docs.rs/http/0.2.8/"},"38":{"name":"httpdate","html_root_url":null},"29":{"name":"libc","html_root_url":null},"22":{"name":"bytes","html_root_url":null},"34":{"name":"http_body","html_root_url":"https://docs.rs/http-body/0.4.5/"},"39":{"name":"tracing","html_root_url":"https://docs.rs/tracing/0.1.35/"},"33":{"name":"futures_task","html_root_url":null},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"30":{"name":"futures_util","html_root_url":null},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"32":{"name":"pin_utils","html_root_url":"https://docs.rs/pin-utils/0.1.0/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"37":{"name":"httparse","html_root_url":null},"25":{"name":"pin_project_lite","html_root_url":null}},"format_version":16}