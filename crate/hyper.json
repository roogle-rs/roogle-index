{"root":"0:0:2034","crate_version":"1.2.0","includes_private":false,"index":{"0:250:2761":{"id":"0:250:2761","crate_id":0,"name":"Sealed","span":{"filename":"src/rt/timer.rs","begin":[126,4],"end":[126,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":[]}}},"0:505:779":{"id":"0:505:779","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[81,9],"end":[81,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10226:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10207:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13139:27509":{"id":"2:13139:27509","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41510:190"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41508:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10908:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10908:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[525,0],"end":[529,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10257:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:145:779"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:6-20:2448:2013":{"id":"0:6-20:2448:2013","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,30],"end":[96,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Method","name":"Method","id":"20:2448:2013","glob":false}}},"2:13138:2843":{"id":"2:13138:2843","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12312:1799"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5597":{"id":"5:5597","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5598:35393","5:5599:3263","5:5602:35394","5:5605:35395","5:5613:35396","5:5614:35397","5:5615:3784","5:5616:28704","5:5617:28705"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:380":{"id":"0:380","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[225,0],"end":[242,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Future","id":"2:44281:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:381:198","0:382:1270"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13130:34676":{"id":"2:13130:34676","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:503":{"id":"0:503","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[81,9],"end":[81,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10252:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10252:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:498:3030","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:505:779"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:5-20:5:2012":{"id":"0:5-20:5:2012","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,22],"end":[96,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::header","name":"header","id":"20:5:2012","glob":false}}},"0:11-20:2742:2018":{"id":"0:11-20:2742:2018","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,74],"end":[96,81]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Version","name":"Version","id":"20:2742:2018","glob":false}}},"0:9-20:2564:2016":{"id":"0:9-20:2564:2016","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,57],"end":[96,67]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::StatusCode","name":"StatusCode","id":"20:2564:2016","glob":false}}},"0:31:2022":{"id":"0:31:2022","crate_id":0,"name":"body","span":{"filename":"src/body/mod.rs","begin":[1,0],"end":[46,1]},"visibility":"public","docs":"Streaming bodies for Requests and Responses\n\nFor both [Clients](crate::client) and [Servers](crate::server), requests and\nresponses use streaming bodies, instead of complete buffering. This\nallows applications to not use memory they don't need, and allows exerting\nback-pressure on connections by only reading when asked.\n\nThere are two pieces to this in hyper:\n\n- **The [`Body`] trait** describes all possible bodies.\n  hyper allows any body type that implements `Body`, allowing\n  applications to have fine-grained control over their streaming.\n- **The [`Incoming`] concrete type**, which is an implementation\n  of `Body`, and returned by hyper as a \"receive stream\" (so, for server\n  requests and client responses).\n\nThere are additional implementations available in [`http-body-util`][],\nsuch as a `Full` or `Empty` body.\n\n[`http-body-util`]: https://docs.rs/http-body-util","links":{"`Body`":"24:42:2184","`Incoming`":"0:50:2188"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:33-22:22:2182","0:34-22:395:2183","0:35-24:42:2184","0:36-24:89:2185","0:37-24:106:2186","0:38-0:50:2188"],"is_stripped":false}}},"a:2:32044:2428-0:185:2724":{"id":"a:2:32044:2428-0:185:2724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32044:2428","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:185:2724","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:725-0:494:3026":{"id":"b:5:725-0:494:3026","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2628:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:721:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:727:3664","5:728:3665","5:729:3666"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13127:973":{"id":"2:13127:973","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12295:458"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13257:34698":{"id":"2:13257:34698","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4903:34698"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:43669:6459","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:31987:236-0:119:136":{"id":"a:2:31987:236-0:119:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31987:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2902-0:494:3026":{"id":"b:2:2902-0:494:3026","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2861:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2871:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2905:136","2:2906:1754"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:382:1270":{"id":"0:382:1270","crate_id":0,"name":"poll","span":{"filename":"src/upgrade.rs","begin":[228,4],"end":[241,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41613:2195","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13631:115","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44306:206","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:44281:149","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:176:2429":{"id":"0:176:2429","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[38,4],"end":[42,42]},"visibility":"default","docs":"Attempts to read bytes into the `buf`.\n\nOn success, returns `Poll::Ready(Ok(()))` and places data in the\nunfilled portion of `buf`. If no data was read (`buf.remaining()` is\nunchanged), it implies that EOF has been reached.\n\nIf no data is available for reading, the method returns `Poll::Pending`\nand arranges for the current task (via `cx.waker()`) to receive a\nnotification when the object becomes readable or is closed.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41613:2195","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13631:115","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2420","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44306:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:41621:225","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:3022:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:217":{"id":"0:217","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[347,0],"end":[349,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31988:2847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Write","id":"0:177:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:32044:2428","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["poll_write_vectored","is_write_vectored"],"trait":{"name":"Write","id":"0:177:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Box","id":"5:296:2462","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:484:2437","0:485:2438","0:486:2443","0:487:2441","0:488:2442"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3720-0:185:2724":{"id":"b:2:3720-0:185:2724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31988:2847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3718:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:185:2724","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3722:1769"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2905:136":{"id":"2:2905:136","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:31915:3237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:240:2897":{"id":"0:240:2897","crate_id":0,"name":"sleep_until","span":{"filename":"src/rt/timer.rs","begin":[75,4],"end":[75,68]},"visibility":"default","docs":"Return a future that resolves at `deadline`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["deadline",{"resolved_path":{"name":"Instant","id":"1:9399:161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Pin","id":"2:41613:2195","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:296:2462","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Sleep","id":"0:242:2725","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:400:3046":{"id":"0:400:3046","crate_id":0,"name":"CanUpgrade","span":{"filename":"src/upgrade.rs","begin":[321,4],"end":[323,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:401:3048"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"0:361:3023":{"id":"0:361:3023","crate_id":0,"name":"Upgraded","span":{"filename":"src/upgrade.rs","begin":[65,0],"end":[67,1]},"visibility":"public","docs":"An upgraded HTTP connection.\n\nThis type holds a trait object internally of the original IO that\nwas used to speak HTTP before the upgrade. It can be used directly\nas a `Read` or `Write` for convenience.\n\nAlternatively, if the exact type is known, this can be deconstructed\ninto its parts.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:365","a:2:41603:3550-0:361:3023","a:2:3110:246-0:361:3023","a:2:32044:2428-0:361:3023","a:2:31987:236-0:361:3023","a:2:41602:3551-0:361:3023","a:2:3145:3330-0:361:3023","b:2:2891-0:361:3023","b:2:2612-0:361:3023","b:2:2887-0:361:3023","b:2:2902-0:361:3023","b:2:2897-0:361:3023","b:2:3720-0:361:3023","b:2:2615-0:361:3023","0:370","0:376","0:368"]}}},"a:2:32044:2428-0:494:3026":{"id":"a:2:32044:2428-0:494:3026","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32044:2428","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:494:3026":{"id":"0:494:3026","crate_id":0,"name":"OnUpgrade","span":{"filename":"src/upgrade.rs","begin":[73,0],"end":[75,1]},"visibility":"public","docs":"A future for a possible HTTP upgrade.\n\nIf no upgrade was available, or it doesn't succeed, yields an `Error`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:41603:3550-0:494:3026","a:2:3110:246-0:494:3026","a:2:32044:2428-0:494:3026","a:2:31987:236-0:494:3026","a:2:41602:3551-0:494:3026","a:2:3145:3330-0:494:3026","b:2:2891-0:494:3026","b:2:2612-0:494:3026","b:2:2887-0:494:3026","b:2:2902-0:494:3026","b:2:13437-0:494:3026","b:2:2897-0:494:3026","b:2:3720-0:494:3026","b:2:2615-0:494:3026","b:5:725-0:494:3026","0:384","0:380","0:496"]}}},"2:13154:6394":{"id":"2:13154:6394","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12295:458"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43340:6386","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2891-0:119:136":{"id":"b:2:2891-0:119:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2864:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2893:809"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:374:2442":{"id":"0:374:2442","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/upgrade.rs","begin":[197,4],"end":[199,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41613:2195","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13631:115","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44306:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:3020:225","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:201:779":{"id":"0:201:779","crate_id":0,"name":"fmt","span":{"filename":"src/rt/io.rs","begin":[215,4],"end":[221,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10226:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10207:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3145:3330-0:119:136":{"id":"a:2:3145:3330-0:119:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3145:3330","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:3722:1769":{"id":"2:3722:1769","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39286:2891","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:162:2024":{"id":"0:162:2024","crate_id":0,"name":"ext","span":{"filename":"src/ext/mod.rs","begin":[1,0],"end":[236,1]},"visibility":"public","docs":"HTTP extensions.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[],"is_stripped":false}}},"a:2:41603:3550-0:50:2188":{"id":"a:2:41603:3550-0:50:2188","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41603:3550","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:62:2262":{"id":"0:62:2262","crate_id":0,"name":"is_end_stream","span":{"filename":"src/body/incoming.rs","begin":[281,4],"end":[291,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3145:3330-0:476:2420":{"id":"a:2:3145:3330-0:476:2420","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3145:3330","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2420","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:41603:3550-0:476:2420":{"id":"a:2:41603:3550-0:476:2420","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41603:3550","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2420","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:486:2443":{"id":"0:486:2443","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:195:2826":{"id":"0:195:2826","crate_id":0,"name":"unfilled","span":{"filename":"src/rt/io.rs","begin":[167,4],"end":[177,5]},"visibility":"public","docs":"Get a cursor to the unfilled portion of the buffer.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'cursor","mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2420","args":{"angle_bracketed":{"args":[{"lifetime":"'cursor"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'cursor","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:60:136":{"id":"0:60:136","crate_id":0,"name":"Error","span":{"filename":"src/body/incoming.rs","begin":[190,4],"end":[190,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:119:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:2897-0:476:2420":{"id":"b:2:2897-0:476:2420","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2871:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2867:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2420","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2900:136","2:2901:1756"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:493:2442":{"id":"0:493:2442","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41613:2195","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13631:115","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44306:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3020:225","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:314:2984":{"id":"0:314:2984","crate_id":0,"name":"ServiceFn","span":{"filename":"src/service/util.rs","begin":[42,0],"end":[45,1]},"visibility":"public","docs":"Service returned by [`service_fn`]","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}}},"b:2:2612-0:361:3023":{"id":"b:2:2612-0:361:3023","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31988:2847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2606:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:3023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2614:3181"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13439:198":{"id":"2:13439:198","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"Future","id":"2:44281:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"0:487:2441":{"id":"0:487:2441","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41613:2195","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13631:115","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44306:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3020:225","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:7-20:2525:2014":{"id":"0:7-20:2525:2014","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,38],"end":[96,45]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Request","name":"Request","id":"20:2525:2014","glob":false}}},"0:14-0:119:136":{"id":"0:14-0:119:136","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[101,23],"end":[101,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::error::Error","name":"Error","id":"0:119:136","glob":false}}},"5:5849:1729":{"id":"5:5849:1729","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7616:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13159:30069":{"id":"2:13159:30069","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:43624:3759","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13182:27541":{"id":"2:13182:27541","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12295:458","self::pattern":"2:12817:3512"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12633:6373","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:221":{"id":"0:221","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[355,0],"end":[387,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"DerefMut","id":"2:3331:2771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"","id":"2:3318:124","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Write","id":"0:177:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["poll_write_vectored","is_write_vectored"],"trait":{"name":"Write","id":"0:177:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"std::pin::Pin","id":"2:41613:2195","args":{"angle_bracketed":{"args":[{"type":{"generic":"P"}}],"bindings":[]}}}},"items":["0:223:2437","0:224:2438","0:225:2443","0:226:2441","0:227:2442"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13232:27218":{"id":"2:13232:27218","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns the substring after the prefix,\nwrapped in `Some`. Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12295:458","self::pattern":"2:12817:3512"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41508:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13250:27441":{"id":"2:13250:27441","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39472:14621","Self::is_ascii":"2:13249:27440"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41508:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39472:14621","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13259:9165":{"id":"2:13259:9165","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4904:9165"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:43678:6318","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2890:2350":{"id":"2:2890:2350","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2864:143"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:211":{"id":"0:211","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[294,0],"end":[296,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31988:2847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Read","id":"0:175:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:32044:2428","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:175:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"items":["0:483:2429"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3110:246-0:50:2188":{"id":"a:2:3110:246-0:50:2188","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3110:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13126":{"id":"2:13126","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:13127:973","2:13128:2431","2:13129:34675","2:13130:34676","2:13132:34677","2:13135:27436","2:13136:34678","2:13137:334","2:13138:2843","2:13139:27509","2:13141:2690","2:13143:27510","2:13145:2853","2:13147:34679","2:13148:34680","2:13149:27533","2:13150:27534","2:13151:27537","2:13152:27538","2:13154:6394","2:13155:6566","2:13156:2035","2:13157:33140","2:13158:33142","2:13159:30069","2:13160:34681","2:13161:33143","2:13162:27551","2:13165:27552","2:13168:27553","2:13171:2800","2:13175:3606","2:13179:27539","2:13182:27541","2:13185:27543","2:13188:34682","2:13191:34683","2:13194:27545","2:13197:27547","2:13200:27549","2:13203:27550","2:13206:2530","2:13209:34684","2:13212:34685","2:13215:34686","2:13218:34687","2:13220:34688","2:13222:34689","2:13224:34690","2:13225:34691","2:13226:34692","2:13229:34693","2:13232:27218","2:13235:27554","2:13238:34694","2:13241:34695","2:13244:34696","2:13247:34697","2:13249:27440","2:13250:27441","2:13251:27443","2:13252:27444","2:13253:27445","2:13254:27447","2:13255:27448","2:13256:27449","2:13257:34698","2:13259:9165","2:13260:34699"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2902-0:498:3030":{"id":"b:2:2902-0:498:3030","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2861:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2871:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:498:3030","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2905:136","2:2906:1754"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3145:3330-0:494:3026":{"id":"a:2:3145:3330-0:494:3026","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3145:3330","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:41602:3551-0:50:2188":{"id":"a:2:41602:3551-0:50:2188","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41602:3551","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2615-0:494:3026":{"id":"b:2:2615-0:494:3026","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31988:2847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2609:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2617:27061"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:126:2535":{"id":"0:126:2535","crate_id":0,"name":"is_parse_status","span":{"filename":"src/error.rs","begin":[187,4],"end":[189,5]},"visibility":"public","docs":"Returns true if this was an HTTP parse error caused by an invalid response status code or\nreason phrase.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:261:2745":{"id":"0:261:2745","crate_id":0,"name":"execute","span":{"filename":"src/rt/mod.rs","begin":[41,4],"end":[41,32]},"visibility":"default","docs":"Place the future into the executor to be run.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fut",{"generic":"Fut"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:365":{"id":"0:365","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[133,0],"end":[164,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Upgraded","id":"0:361:3023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:366:3053"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:128:2539":{"id":"0:128:2539","crate_id":0,"name":"is_canceled","span":{"filename":"src/error.rs","begin":[197,4],"end":[199,5]},"visibility":"public","docs":"Returns true if this was about a `Request` that was canceled.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3720-0:361:3023":{"id":"b:2:3720-0:361:3023","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31988:2847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3718:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:3023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3722:1769"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13151:27537":{"id":"2:13151:27537","crate_id":2,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\n#![feature(split_at_checked)]\n\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"2:13152:27538"},"attrs":["#[must_use]","#[unstable(feature = \"split_at_checked\", reason = \"new API\", issue =\n\"119128\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41508:193","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:50:2188":{"id":"0:50:2188","crate_id":0,"name":"Incoming","span":{"filename":"src/body/incoming.rs","begin":[52,0],"end":[54,1]},"visibility":"public","docs":"A stream of `Bytes`, used when receiving bodies from the network.\n\nNote that Users should not instantiate this struct directly. When working with the hyper client,\n`Incoming` is returned to you in responses. Similarly, when operating with the hyper server,\nit is provided within requests.\n\n# Examples\n\n```rust,ignore\nasync fn echo(\n   req: Request<hyper::body::Incoming>,\n) -> Result<Response<BoxBody<Bytes, hyper::Error>>, hyper::Error> {\n   //Here, you can process `Incoming`\n}\n```","links":{},"attrs":["#[must_use = \"streams do nothing unless polled\"]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:41603:3550-0:50:2188","a:2:3110:246-0:50:2188","a:2:32044:2428-0:50:2188","a:2:31987:236-0:50:2188","a:2:41602:3551-0:50:2188","a:2:3145:3330-0:50:2188","b:2:2891-0:50:2188","b:2:2612-0:50:2188","b:2:2887-0:50:2188","b:2:2902-0:50:2188","b:2:2897-0:50:2188","b:2:3720-0:50:2188","b:2:2615-0:50:2188","0:64","0:58"]}}},"0:372:2438":{"id":"0:372:2438","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/upgrade.rs","begin":[185,4],"end":[191,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41613:2195","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13631:115","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"io::IoSlice","id":"1:8450:2440","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44306:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:3020:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:310:2930":{"id":"0:310:2930","crate_id":0,"name":"service_fn","span":{"filename":"src/service/util.rs","begin":[30,0],"end":[39,1]},"visibility":"public","docs":"Create a `Service` from a function.\n\n# Example\n\n```\nuse bytes::Bytes;\nuse hyper::{body, Request, Response, Version};\nuse http_body_util::Full;\nuse hyper::service::service_fn;\n\nlet service = service_fn(|req: Request<body::Incoming>| async move {\n    if req.version() == Version::HTTP_11 {\n        Ok(Response::new(Full::<Bytes>::from(\"Hello World\")))\n    } else {\n        // Note: it's usually better to return a Response\n        // with an appropriate StatusCode instead of an Err.\n        Err(\"not HTTP/1.1, abort connection\")\n    }\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"ServiceFn","id":"0:314:2984","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3346:139","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"crate::Request","id":"20:2525:2014","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}}],"output":{"generic":"S"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:44281:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:213":{"id":"0:213","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[298,0],"end":[310,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"DerefMut","id":"2:3331:2771","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"","id":"2:3318:124","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"0:175:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:175:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"std::pin::Pin","id":"2:41613:2195","args":{"angle_bracketed":{"args":[{"type":{"generic":"P"}}],"bindings":[]}}}},"items":["0:215:2429"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:257-0:242:2725":{"id":"0:257-0:242:2725","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[15,22],"end":[15,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::timer::Sleep","name":"Sleep","id":"0:242:2725","glob":false}}},"2:13160:34681":{"id":"2:13160:34681","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:43634:6555","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:371:2437":{"id":"0:371:2437","crate_id":0,"name":"poll_write","span":{"filename":"src/upgrade.rs","begin":[177,4],"end":[183,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41613:2195","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13631:115","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44306:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:3020:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13185:27543":{"id":"2:13185:27543","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12817:3512","`DoubleEndedIterator`":"2:8204:129","prim@char":"1:12295:458","str::split":"2:13179:27539"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43388:6376","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12838:14547","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:38-0:50:2188":{"id":"0:38-0:50:2188","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[27,0],"end":[27,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::incoming::Incoming","name":"Incoming","id":"0:50:2188","glob":false}}},"0:177:2421":{"id":"0:177:2421","crate_id":0,"name":"Write","span":{"filename":"src/rt/io.rs","begin":[48,0],"end":[100,1]},"visibility":"public","docs":"Write bytes asynchronously.\n\nThis trait is similar to `std::io::Write`, but for asynchronous writes.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:178:2437","0:179:2441","0:180:2442","0:181:2443","0:182:2438"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:219","0:221","0:370","0:217"]}}},"2:13145:2853":{"id":"2:13145:2853","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10908:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10908:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:385:779":{"id":"0:385:779","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[245,4],"end":[247,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10226:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10207:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5847-0:119:136":{"id":"b:5:5847-0:119:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10257:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:31988:2847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5845:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5849:1729"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13226:34692":{"id":"2:13226:34692","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12295:458","self::pattern":"2:12817:3512"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12843:14546","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13238:34694":{"id":"2:13238:34694","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12295:458","self::pattern":"2:12817:3512"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12838:14547","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2897-0:361:3023":{"id":"b:2:2897-0:361:3023","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2871:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2867:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:3023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2900:136","2:2901:1756"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13132:34677":{"id":"2:13132:34677","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:13130:34676"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13156:2035":{"id":"2:13156:2035","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43356:2183","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13179:27539":{"id":"2:13179:27539","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12817:3512","`DoubleEndedIterator`":"2:8204:129","prim@char":"1:12295:458","str::split_whitespace":"2:13157:33140","str::rsplit":"2:13185:27543"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43370:3762","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:215:2429":{"id":"0:215:2429","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[303,4],"end":[309,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41613:2195","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13631:115","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2420","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44306:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3020:225","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:0:2034":{"id":"0:0:2034","crate_id":0,"name":"hyper","span":{"filename":"src/lib.rs","begin":[1,0],"end":[138,1]},"visibility":"public","docs":" # hyper\n\n hyper is a **fast** and **correct** HTTP implementation written in and for Rust.\n\n ## Features\n\n - HTTP/1 and HTTP/2\n - Asynchronous design\n - Leading in performance\n - Tested and **correct**\n - Extensive production use\n - [Client](client/index.html) and [Server](server/index.html) APIs\n\n If just starting out, **check out the [Guides](https://hyper.rs/guides/1/)\n first.**\n\n ## \"Low-level\"\n\n hyper is a lower-level HTTP library, meant to be a building block\n for libraries and applications.\n\n If looking for just a convenient HTTP client, consider the\n [reqwest](https://crates.io/crates/reqwest) crate.\n\n # Optional Features\n\n hyper uses a set of [feature flags] to reduce the amount of compiled code.\n It is possible to just enable certain features over others. By default,\n hyper does not enable any features but allows one to enable a subset for\n their use case. Below is a list of the available feature flags. You may\n also notice above each function, struct and trait there is listed one or\n more feature flags that are required for that item to be used.\n\n If you are new to hyper it is possible to enable the `full` feature flag\n which will enable all public APIs. Beware though that this will pull in\n many extra dependencies that you may not need.\n\n The following optional features are available:\n\n - `http1`: Enables HTTP/1 support.\n - `http2`: Enables HTTP/2 support.\n - `client`: Enables the HTTP `client`.\n - `server`: Enables the HTTP `server`.\n\n [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section\n\n # Unstable Features\n\n hyper includes a set of unstable optional features that can be enabled through the use of a\n feature flag and a [configuration flag].\n\n The following is a list of feature flags and their corresponding `RUSTFLAG`:\n - `ffi`: Enables C API for hyper `hyper_unstable_ffi`.\n - `tracing`: Enables debug logging with `hyper_unstable_tracing`.\n\n Enabling an unstable feature is possible with the following `cargo` command, as of version `1.64.0`:\n ```notrust\n RUSTFLAGS=\"--cfg hyper_unstable_tracing\" cargo rustc --features client,http1,http2,tracing --crate-type cdylib\n```\n [configuration flag]: https://doc.rust-lang.org/reference/conditional-compilation.html\n\n # Stability\n\n It's worth talking a bit about the stability of hyper. hyper's API follows\n [SemVer](https://semver.org). Breaking changes will only be introduced in\n major versions, if ever. New additions to the API, such as new types,\n methods, or traits will only be added in minor versions.\n\n Some parts of hyper are documented as NOT being part of the stable API. The\n following is a brief list, you can read more about each one in the relevant\n part of the documentation.\n\n - Downcasting error types from `Error::source()` is not considered stable.\n - Private dependencies use of global variables is not considered stable.\n   So, if a dependency uses `log` or `tracing`, hyper doesn't promise it\n   will continue to do so.\n - Behavior from default options is not stable. hyper reserves the right to\n   add new options that are enabled by default which might alter the\n   behavior, for the purposes of protection. It is also possible to _change_\n   what the default options are set to, also in efforts to protect the\n   most people possible.","links":{},"attrs":["#![deny(missing_docs)]","#![deny(missing_debug_implementations)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:31:2022","0:162:2024","0:165:1424","0:262:2026","0:341:2027","0:5-20:5:2012","0:6-20:2448:2013","0:7-20:2525:2014","0:8-20:2545:2015","0:9-20:2564:2016","0:10-20:2687:2017","0:11-20:2742:2018","0:12-20:1837:2019","0:14-0:119:136","0:15-0:116:225"],"is_stripped":false}}},"2:13149:27533":{"id":"2:13149:27533","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_checked":"2:13151:27537","str::split_at_mut":"2:13150:27534"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:262:2026":{"id":"0:262:2026","crate_id":0,"name":"service","span":{"filename":"src/service/mod.rs","begin":[1,0],"end":[36,31]},"visibility":"public","docs":"Asynchronous Services\n\nA [`Service`] is a trait representing an asynchronous\nfunction of a request to a response. It's similar to\n`async fn(Request) -> Result<Response, Error>`.\n\nThe argument and return value isn't strictly required to be for HTTP.\nTherefore, hyper uses several \"trait aliases\" to reduce clutter around\nbounds. These are:\n\n- `HttpService`: This is blanketly implemented for all types that\n  implement `Service<http::Request<B1>, Response = http::Response<B2>>`.\n\n# HttpService\n\nIn hyper, especially in the server setting, a `Service` is usually bound\nto a single connection. It defines how to respond to **all** requests that\nconnection will receive.\n\nThe helper [`service_fn`] should be sufficient for most cases, but\nif you need to implement `Service` for a type manually, you can follow the example\nin `service_struct_impl.rs`.","links":{"`service_fn`":"0:310:2930"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:340-0:310:2930"],"is_stripped":false}}},"b:2:2887-0:50:2188":{"id":"b:2:2887-0:50:2188","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2864:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2861:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2890:2350"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2891-0:494:3026":{"id":"b:2:2891-0:494:3026","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2864:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2893:809"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13165:27552":{"id":"2:13165:27552","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, in which case this function will return true if\nthe `&str` is a prefix of this string slice.\n\nThe [pattern] can also be a [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\nThese will only be checked against the first character of this string slice.\nLook at the second example below regarding behavior for slices of [`char`]s.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```\n\n```\nlet bananas = \"bananas\";\n\n// Note that both of these assert successfully.\nassert!(bananas.starts_with(&['b', 'a', 'n', 'a']));\nassert!(bananas.starts_with(&['a', 'b', 'c', 'd']));\n```","links":{"prim@char":"1:12295:458","self::pattern":"2:12817:3512"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13194:27545":{"id":"2:13194:27545","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12295:458","self::pattern":"2:12817:3512","str::rsplitn":"2:13197:27547"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43474:6378","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13175:3606":{"id":"2:13175:3606","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41510:190","prim@char":"1:12295:458","self::pattern":"2:12817:3512"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41508:193","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12838:14547","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:31987:236-0:494:3026":{"id":"a:2:31987:236-0:494:3026","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31987:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13256:27449":{"id":"2:13256:27449","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:980:40528"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:131:2346":{"id":"0:131:2346","crate_id":0,"name":"is_body_write_aborted","span":{"filename":"src/error.rs","begin":[226,4],"end":[238,5]},"visibility":"public","docs":"Returns true if the body write was aborted.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:132:2545":{"id":"0:132:2545","crate_id":0,"name":"is_timeout","span":{"filename":"src/error.rs","begin":[241,4],"end":[243,5]},"visibility":"public","docs":"Returns true if the error was caused by a timeout.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:124":{"id":"0:124","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[170,0],"end":[512,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Error","id":"0:119:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:125:2529","0:126:2535","0:127:2537","0:128:2539","0:129:2379","0:130:2542","0:131:2346","0:132:2545"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2902-0:476:2420":{"id":"b:2:2902-0:476:2420","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2861:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2871:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2420","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2905:136","2:2906:1754"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:253-0:185:2724":{"id":"0:253-0:185:2724","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,25],"end":[14,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::ReadBuf","name":"ReadBuf","id":"0:185:2724","glob":false}}},"2:13229:34693":{"id":"2:13229:34693","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12295:458","self::pattern":"2:12817:3512"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2891-0:50:2188":{"id":"b:2:2891-0:50:2188","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2864:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2893:809"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2897-0:119:136":{"id":"b:2:2897-0:119:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2871:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2867:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2900:136","2:2901:1756"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:34-22:395:2183":{"id":"0:34-22:395:2183","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[22,21],"end":[22,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"bytes::Bytes","name":"Bytes","id":"22:395:2183","glob":false}}},"2:13220:34688":{"id":"2:13220:34688","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2612-0:476:2420":{"id":"b:2:2612-0:476:2420","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31988:2847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2606:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2420","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2614:3181"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:59:2265":{"id":"0:59:2265","crate_id":0,"name":"Data","span":{"filename":"src/body/incoming.rs","begin":[189,4],"end":[189,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Bytes","id":"22:395:2183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:32044:2428-0:119:136":{"id":"a:2:32044:2428-0:119:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32044:2428","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:166:2722":{"id":"0:166:2722","crate_id":0,"name":"bounds","span":{"filename":"src/rt/bounds.rs","begin":[1,0],"end":[109,1]},"visibility":"public","docs":"Trait aliases\n\nTraits in this module ease setting bounds and usually automatically\nimplemented by implementing another trait.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[],"is_stripped":false}}},"0:479":{"id":"0:479","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[130,9],"end":[130,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10252:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2420","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:481:779"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:165:1424":{"id":"0:165:1424","crate_id":0,"name":"rt","span":{"filename":"src/rt/mod.rs","begin":[1,0],"end":[42,1]},"visibility":"public","docs":"Runtime components\n\nThe traits and types within this module are used to allow plugging in\nruntime types. These include:\n\n- Executors\n- Timers\n- IO transports","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:166:2722","0:252-0:175:2419","0:253-0:185:2724","0:254-0:476:2420","0:255-0:177:2421","0:257-0:242:2725","0:258-0:238:2726","0:259:2742"],"is_stripped":false}}},"0:204:2837":{"id":"0:204:2837","crate_id":0,"name":"as_mut","span":{"filename":"src/rt/io.rs","begin":[232,4],"end":[234,5]},"visibility":"public","docs":"Access the unfilled part of the buffer.\n\n# Safety\n\nThe caller must not uninitialize any bytes that may have been\ninitialized before.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"2:30452:2769","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"5:729:3666":{"id":"5:729:3666","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:497:462":{"id":"0:497:462","crate_id":0,"name":"clone","span":{"filename":"src/upgrade.rs","begin":[72,9],"end":[72,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2887-0:498:3030":{"id":"b:2:2887-0:498:3030","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2864:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2861:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:498:3030","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2890:2350"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:143:779":{"id":"0:143:779","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[515,4],"end":[522,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10226:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10207:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13203:27550":{"id":"2:13203:27550","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41508:193","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12838:14547","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13247:34697":{"id":"2:13247:34697","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12778:135","`FromStr`":"2:12777:3808"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41621:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12777:3808","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12777:3808","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:492:2441":{"id":"0:492:2441","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41613:2195","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13631:115","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44306:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3020:225","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13224:34690":{"id":"2:13224:34690","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:341:2027":{"id":"0:341:2027","crate_id":0,"name":"upgrade","span":{"filename":"src/upgrade.rs","begin":[1,0],"end":[408,1]},"visibility":"public","docs":"HTTP Upgrades\n\nThis module deals with managing [HTTP Upgrades][mdn] in hyper. Since\nseveral concepts in HTTP allow for first talking HTTP, and then converting\nto a different protocol, this module conflates them into a single API.\nThose include:\n\n- HTTP/1.1 Upgrades\n- HTTP `CONNECT`\n\nYou are responsible for any other pre-requisites to establish an upgrade,\nsuch as sending the appropriate headers, methods, and status codes. You can\nthen use [`on`][] to grab a `Future` which will resolve to the upgraded\nconnection object, or an error if the upgrade fails.\n\n[mdn]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism\n\n# Client\n\nSending an HTTP upgrade from the [`client`](super::client) involves setting\neither the appropriate method, if wanting to `CONNECT`, or headers such as\n`Upgrade` and `Connection`, on the `http::Request`. Once receiving the\n`http::Response` back, you must check for the specific information that the\nupgrade is agreed upon by the server (such as a `101` status code), and then\nget the `Future` from the `Response`.\n\n# Server\n\nReceiving upgrade requests in a server requires you to check the relevant\nheaders in a `Request`, and if an upgrade should be done, you then send the\ncorresponding headers in a response. To then wait for hyper to finish the\nupgrade, you call `on()` with the `Request`, and then can spawn a task\nawaiting it.\n\n# Example\n\nSee [this example][example] showing how upgrades work with both\nClients and Servers.\n\n[example]: https://github.com/hyperium/hyper/blob/master/examples/upgrades.rs","links":{"`on`":"0:363:1210"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:361:3023","0:494:3026","0:498:3030","0:363:1210"],"is_stripped":false}}},"0:63:2287":{"id":"0:63:2287","crate_id":0,"name":"size_hint","span":{"filename":"src/body/incoming.rs","begin":[293,4],"end":[315,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SizeHint","id":"24:106:2186","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:489:2437":{"id":"0:489:2437","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41613:2195","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13631:115","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44306:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3020:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13137:334":{"id":"2:13137:334","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:13138:2843","`u8`":"1:12312:1799"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13158:33142":{"id":"2:13158:33142","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:13157:33140"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:43653:6557","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:259:2742":{"id":"0:259:2742","crate_id":0,"name":"Executor","span":{"filename":"src/rt/mod.rs","begin":[39,0],"end":[42,1]},"visibility":"public","docs":"An executor of futures.\n\nThis trait allows Hyper to abstract over async runtimes. Implement this trait for your own type.\n\n# Example\n\n```\n# use hyper::rt::Executor;\n# use std::future::Future;\n#[derive(Clone)]\nstruct TokioExecutor;\n\nimpl<F> Executor<F> for TokioExecutor\nwhere\n    F: Future + Send + 'static,\n    F::Output: Send + 'static,\n{\n    fn execute(&self, future: F) {\n        tokio::spawn(future);\n    }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:261:2745"],"generics":{"params":[{"name":"Fut","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}}},"b:2:2887-0:476:2420":{"id":"b:2:2887-0:476:2420","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2864:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2861:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2420","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2890:2350"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:209":{"id":"0:209","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[290,0],"end":[292,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31988:2847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Read","id":"0:175:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:32044:2428","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:175:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Box","id":"5:296:2462","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:482:2429"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13441:931":{"id":"2:13441:931","crate_id":2,"name":"into_future","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoFuture","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"IntoFuture","id":"2:44284:163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2902-0:50:2188":{"id":"b:2:2902-0:50:2188","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2861:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2871:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2905:136","2:2906:1754"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13254:27447":{"id":"2:13254:27447","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:980:40528"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:31987:236-0:50:2188":{"id":"a:2:31987:236-0:50:2188","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31987:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3720-0:476:2420":{"id":"b:2:3720-0:476:2420","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31988:2847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3718:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2420","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3722:1769"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13260:34699":{"id":"2:13260:34699","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4901:34699"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:43687:6458","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:377:779":{"id":"0:377:779","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[207,4],"end":[209,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10226:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10207:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13168:27553":{"id":"2:13168:27553","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12295:458","self::pattern":"2:12817:3512"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12838:14547","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:31987:236-0:185:2724":{"id":"a:2:31987:236-0:185:2724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31987:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:185:2724","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:41603:3550-0:361:3023":{"id":"a:2:41603:3550-0:361:3023","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41603:3550","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:3023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:33-22:22:2182":{"id":"0:33-22:22:2182","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[22,16],"end":[22,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"bytes::Buf","name":"Buf","id":"22:22:2182","glob":false}}},"0:370":{"id":"0:370","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[176,0],"end":[204,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["poll_write_vectored","is_write_vectored"],"trait":{"name":"Write","id":"0:177:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:3023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:371:2437","0:372:2438","0:373:2441","0:374:2442","0:375:2443"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2901:1756":{"id":"2:2901:1756","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41621:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2871:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41602:3551-0:185:2724":{"id":"a:2:41602:3551-0:185:2724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41602:3551","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:185:2724","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:13437-0:494:3026":{"id":"b:2:13437-0:494:3026","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:44281:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoFuture","id":"2:44284:163","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:13439:198","2:13440:163","2:13441:931"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"F"}}}},"b:2:2891-0:498:3030":{"id":"b:2:2891-0:498:3030","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2864:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:498:3030","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2893:809"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2893:809":{"id":"2:2893:809","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41603:3550-0:119:136":{"id":"a:2:41603:3550-0:119:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41603:3550","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:15-0:116:225":{"id":"0:15-0:116:225","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[101,30],"end":[101,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::error::Result","name":"Result","id":"0:116:225","glob":false}}},"2:13209:34684":{"id":"2:13209:34684","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12817:3512","`DoubleEndedIterator`":"2:8204:129","prim@char":"1:12295:458","str::matches":"2:13206:2530"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43592:6554","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12838:14547","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13241:34695":{"id":"2:13241:34695","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12295:458","self::pattern":"2:12817:3512"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13136:34678":{"id":"2:13136:34678","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13222:34689":{"id":"2:13222:34689","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5616:28704":{"id":"5:5616:28704","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:13252:27444"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7616:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:182:2438":{"id":"0:182:2438","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[89,4],"end":[99,5]},"visibility":"default","docs":"Like `poll_write`, except that it writes from a slice of buffers.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41613:2195","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13631:115","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8450:2440","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44306:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:41621:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:3022:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3145:3330-0:185:2724":{"id":"a:2:3145:3330-0:185:2724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3145:3330","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:185:2724","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2614:3181":{"id":"2:2614:3181","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5598:35393":{"id":"5:5598:35393","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:296:2462","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:296:2462","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2612-0:494:3026":{"id":"b:2:2612-0:494:3026","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31988:2847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2606:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2614:3181"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13249:27440":{"id":"2:13249:27440","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:255-0:177:2421":{"id":"0:255-0:177:2421","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,49],"end":[14,54]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::Write","name":"Write","id":"0:177:2421","glob":false}}},"b:2:3720-0:494:3026":{"id":"b:2:3720-0:494:3026","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31988:2847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3718:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3722:1769"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3720-0:498:3030":{"id":"b:2:3720-0:498:3030","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31988:2847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3718:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:498:3030","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3722:1769"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:498:3030":{"id":"0:498:3030","crate_id":0,"name":"Parts","span":{"filename":"src/upgrade.rs","begin":[82,0],"end":[95,1]},"visibility":"public","docs":"The deconstructed parts of an [`Upgraded`] type.\n\nIncludes the original IO type, and a read buffer of bytes that the\nHTTP state machine may have already read before completing an upgrade.","links":{"`Upgraded`":"0:361:3023"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:500:2413","0:501:3038"],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:41603:3550-0:498:3030","a:2:3110:246-0:498:3030","a:2:32044:2428-0:498:3030","a:2:31987:236-0:498:3030","a:2:41602:3551-0:498:3030","a:2:3145:3330-0:498:3030","b:2:2891-0:498:3030","b:2:2612-0:498:3030","b:2:2887-0:498:3030","b:2:2902-0:498:3030","b:2:2897-0:498:3030","b:2:3720-0:498:3030","b:2:2615-0:498:3030","0:503"]}}},"0:12-20:1837:2019":{"id":"0:12-20:1837:2019","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[99,0],"end":[99,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"crate::http::HeaderMap","name":"HeaderMap","id":"20:1837:2019","glob":false}}},"a:2:3145:3330-0:361:3023":{"id":"a:2:3145:3330-0:361:3023","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3145:3330","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:3023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:2:41603:3550-0:498:3030":{"id":"a:2:41603:3550-0:498:3030","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:41603:3550","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41603:3550","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:498:3030","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3110:246-0:476:2420":{"id":"a:2:3110:246-0:476:2420","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3110:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2420","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13148:34680":{"id":"2:13148:34680","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12301:1671","crate::ops::IndexMut":"2:3381:3305","str::slice_unchecked":"2:13147:34679"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13253:27445":{"id":"2:13253:27445","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:375:2443":{"id":"0:375:2443","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/upgrade.rs","begin":[201,4],"end":[203,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:175:2419":{"id":"0:175:2419","crate_id":0,"name":"Read","span":{"filename":"src/rt/io.rs","begin":[28,0],"end":[43,1]},"visibility":"public","docs":"Reads bytes from a source.\n\nThis trait is similar to `std::io::Read`, but supports asynchronous reads.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:176:2429"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:209","0:211","0:213","0:368"]}}},"0:145:779":{"id":"0:145:779","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[526,4],"end":[528,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10226:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10207:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:491:2443":{"id":"0:491:2443","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:241:2900":{"id":"0:241:2900","crate_id":0,"name":"reset","span":{"filename":"src/rt/timer.rs","begin":[78,4],"end":[80,5]},"visibility":"default","docs":"Reset a future to resolve at `new_deadline` instead.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["sleep",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Pin","id":"2:41613:2195","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:296:2462","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Sleep","id":"0:242:2725","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}}}}],["new_deadline",{"resolved_path":{"name":"Instant","id":"1:9399:161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2612-0:185:2724":{"id":"b:2:2612-0:185:2724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31988:2847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2606:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:185:2724","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2614:3181"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:41603:3550-0:494:3026":{"id":"a:2:41603:3550-0:494:3026","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41603:3550","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2900:136":{"id":"2:2900:136","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2871:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:65:779":{"id":"0:65:779","crate_id":0,"name":"fmt","span":{"filename":"src/body/incoming.rs","begin":[319,4],"end":[339,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10226:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10207:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:258-0:238:2726":{"id":"0:258-0:238:2726","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[15,29],"end":[15,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::timer::Timer","name":"Timer","id":"0:238:2726","glob":false}}},"2:13440:163":{"id":"2:13440:163","crate_id":2,"name":"IntoFuture","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"F"}}}},"0:476:2420":{"id":"0:476:2420","crate_id":0,"name":"ReadBufCursor","span":{"filename":"src/rt/io.rs","begin":[131,0],"end":[133,1]},"visibility":"public","docs":"The cursor part of a [`ReadBuf`].\n\nThis is created by calling `ReadBuf::unfilled()`.","links":{"`ReadBuf`":"0:185:2724"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:202","a:2:41603:3550-0:476:2420","a:2:3110:246-0:476:2420","a:2:32044:2428-0:476:2420","a:2:31987:236-0:476:2420","a:2:41602:3551-0:476:2420","a:2:3145:3330-0:476:2420","b:2:2891-0:476:2420","b:2:2612-0:476:2420","b:2:2887-0:476:2420","b:2:2902-0:476:2420","b:2:2897-0:476:2420","b:2:3720-0:476:2420","b:2:2615-0:476:2420","0:479"]}}},"a:2:41603:3550-0:185:2724":{"id":"a:2:41603:3550-0:185:2724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41603:3550","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:185:2724","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13152:27538":{"id":"2:13152:27538","crate_id":2,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\n#![feature(split_at_checked)]\n\nlet mut s = \"Per Martin-Löf\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"2:13151:27537"},"attrs":["#[must_use]","#[unstable(feature = \"split_at_checked\", reason = \"new API\", issue =\n\"119128\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41508:193","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5615:3784":{"id":"5:5615:3784","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7616:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7616:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:401:3048":{"id":"0:401:3048","crate_id":0,"name":"on_upgrade","span":{"filename":"src/upgrade.rs","begin":[322,8],"end":[322,41]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:225:2443":{"id":"0:225:2443","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[376,4],"end":[378,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:381:198":{"id":"0:381:198","crate_id":0,"name":"Output","span":{"filename":"src/upgrade.rs","begin":[226,4],"end":[226,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Result","id":"2:41621:225","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Upgraded","id":"0:361:3023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Error","id":"0:119:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"0:252-0:175:2419":{"id":"0:252-0:175:2419","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,19],"end":[14,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::Read","name":"Read","id":"0:175:2419","glob":false}}},"0:130:2542":{"id":"0:130:2542","crate_id":0,"name":"is_incomplete_message","span":{"filename":"src/error.rs","begin":[217,4],"end":[223,5]},"visibility":"public","docs":"Returns true if the connection closed before a message could complete.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:142":{"id":"0:142","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[514,0],"end":[523,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10252:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:143:779"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:226:2441":{"id":"0:226:2441","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[380,4],"end":[382,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41613:2195","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13631:115","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44306:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3020:225","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:194:2816":{"id":"0:194:2816","crate_id":0,"name":"filled","span":{"filename":"src/rt/io.rs","begin":[160,4],"end":[163,5]},"visibility":"public","docs":"Get a slice of the buffer that has been filled in with bytes.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:728:3665":{"id":"5:728:3665","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13235:27554":{"id":"2:13235:27554","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12295:458","self::pattern":"2:12817:3512"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41508:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12838:14547","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2891-0:476:2420":{"id":"b:2:2891-0:476:2420","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2864:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2420","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2893:809"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:340-0:310:2930":{"id":"0:340-0:310:2930","crate_id":0,"name":null,"span":{"filename":"src/service/mod.rs","begin":[36,0],"end":[36,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::util::service_fn","name":"service_fn","id":"0:310:2930","glob":false}}},"a:2:32044:2428-0:361:3023":{"id":"a:2:32044:2428-0:361:3023","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32044:2428","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:3023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13215:34686":{"id":"2:13215:34686","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12817:3512","`DoubleEndedIterator`":"2:8204:129","prim@char":"1:12295:458","str::match_indices":"2:13212:34685"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43538:6552","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12838:14547","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2615-0:50:2188":{"id":"b:2:2615-0:50:2188","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31988:2847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2609:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2617:27061"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2897-0:185:2724":{"id":"b:2:2897-0:185:2724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2871:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2867:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:185:2724","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2900:136","2:2901:1756"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:219":{"id":"0:219","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[351,0],"end":[353,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31988:2847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Write","id":"0:177:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:32044:2428","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["poll_write_vectored","is_write_vectored"],"trait":{"name":"Write","id":"0:177:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"items":["0:489:2437","0:490:2438","0:491:2443","0:492:2441","0:493:2442"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2615-0:476:2420":{"id":"b:2:2615-0:476:2420","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31988:2847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2609:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2420","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2617:27061"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13252:27444":{"id":"2:13252:27444","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5617:28705":{"id":"5:5617:28705","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:13253:27445"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7616:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5599:3263":{"id":"5:5599:3263","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7616:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7616:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2887-0:185:2724":{"id":"b:2:2887-0:185:2724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2864:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2861:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:185:2724","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2890:2350"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:36-24:89:2185":{"id":"0:36-24:89:2185","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[24,0],"end":[24,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"http_body::Frame","name":"Frame","id":"24:89:2185","glob":false}}},"0:373:2441":{"id":"0:373:2441","crate_id":0,"name":"poll_flush","span":{"filename":"src/upgrade.rs","begin":[193,4],"end":[195,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41613:2195","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13631:115","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44306:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:3020:225","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32044:2428-0:498:3030":{"id":"a:2:32044:2428-0:498:3030","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32044:2428","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32044:2428","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:498:3030","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:41602:3551-0:498:3030":{"id":"a:2:41602:3551-0:498:3030","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:41602:3551","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41602:3551","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:498:3030","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:363:1210":{"id":"0:363:1210","crate_id":0,"name":"on","span":{"filename":"src/upgrade.rs","begin":[105,0],"end":[107,1]},"visibility":"public","docs":"Gets a pending HTTP upgrade from this message.\n\nThis can be called on the following types:\n\n- `http::Request<B>`\n- `http::Response<B>`\n- `&mut http::Request<B>`\n- `&mut http::Response<B>`","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["msg",{"generic":"T"}]],"output":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"sealed::CanUpgrade","id":"0:400:3046","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:125:2529":{"id":"0:125:2529","crate_id":0,"name":"is_parse","span":{"filename":"src/error.rs","begin":[172,4],"end":[174,5]},"visibility":"public","docs":"Returns true if this was an HTTP parse error.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:239:2894":{"id":"0:239:2894","crate_id":0,"name":"sleep","span":{"filename":"src/rt/timer.rs","begin":[72,4],"end":[72,63]},"visibility":"default","docs":"Return a future that resolves in `duration` time.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["duration",{"resolved_path":{"name":"Duration","id":"2:44138:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Pin","id":"2:41613:2195","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:296:2462","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Sleep","id":"0:242:2725","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:3720-0:50:2188":{"id":"b:2:3720-0:50:2188","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31988:2847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3718:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3722:1769"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2891-0:185:2724":{"id":"b:2:2891-0:185:2724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2864:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:185:2724","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2893:809"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13129:34675":{"id":"2:13129:34675","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:368":{"id":"0:368","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[166,0],"end":[174,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:175:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:3023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:369:2429"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2887-0:494:3026":{"id":"b:2:2887-0:494:3026","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2864:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2861:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2890:2350"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13206:2530":{"id":"2:13206:2530","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12817:3512","`DoubleEndedIterator`":"2:8204:129","prim@char":"1:12295:458","str::rmatches":"2:13209:34684"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43574:6553","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:146":{"id":"0:146","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[531,0],"end":[538,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["provide","description","type_id","source","cause"],"trait":{"name":"Error","id":"2:2950:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:147:2550"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:147:2550":{"id":"0:147:2550","crate_id":0,"name":"source","span":{"filename":"src/error.rs","begin":[532,4],"end":[537,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41508:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"dyn_trait":{"traits":[{"trait":{"name":"StdError","id":"2:2950:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13251:27443":{"id":"2:13251:27443","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3110:246-0:185:2724":{"id":"a:2:3110:246-0:185:2724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3110:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:185:2724","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:41602:3551-0:361:3023":{"id":"a:2:41602:3551-0:361:3023","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41602:3551","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:3023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:13225:34691":{"id":"2:13225:34691","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:35-24:42:2184":{"id":"0:35-24:42:2184","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[23,0],"end":[23,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"http_body::Body","name":"Body","id":"24:42:2184","glob":false}}},"0:254-0:476:2420":{"id":"0:254-0:476:2420","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,34],"end":[14,47]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::ReadBufCursor","name":"ReadBufCursor","id":"0:476:2420","glob":false}}},"b:2:3720-0:119:136":{"id":"b:2:3720-0:119:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31988:2847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3718:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3722:1769"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:37-24:106:2186":{"id":"0:37-24:106:2186","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[25,0],"end":[25,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"http_body::SizeHint","name":"SizeHint","id":"24:106:2186","glob":false}}},"a:2:31987:236-0:476:2420":{"id":"a:2:31987:236-0:476:2420","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31987:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2420","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:64":{"id":"0:64","crate_id":0,"name":null,"span":{"filename":"src/body/incoming.rs","begin":[318,0],"end":[340,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10252:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:65:779"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13143:27510":{"id":"2:13143:27510","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10908:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10908:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:238:2726":{"id":"0:238:2726","crate_id":0,"name":"Timer","span":{"filename":"src/rt/timer.rs","begin":[70,0],"end":[81,1]},"visibility":"public","docs":"A timer which provides timer-like functions.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:239:2894","0:240:2897","0:241:2900"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"a:2:3145:3330-0:498:3030":{"id":"a:2:3145:3330-0:498:3030","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3145:3330","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:498:3030","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2612-0:50:2188":{"id":"b:2:2612-0:50:2188","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31988:2847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2606:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2614:3181"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:481:779":{"id":"0:481:779","crate_id":0,"name":"fmt","span":{"filename":"src/rt/io.rs","begin":[130,9],"end":[130,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10226:142","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10207:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41602:3551-0:494:3026":{"id":"a:2:41602:3551-0:494:3026","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41602:3551","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13244:34696":{"id":"2:13244:34696","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12295:458","self::pattern":"2:12817:3512"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12838:14547","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:61:2266":{"id":"0:61:2266","crate_id":0,"name":"poll_frame","span":{"filename":"src/body/incoming.rs","begin":[192,4],"end":[279,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41613:2195","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13631:115","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44306:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Option","id":"2:41508:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:41621:225","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Frame","id":"24:89:2185","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Data","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"24:42:2184","args":null}}}}],"bindings":[]}}}}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"24:42:2184","args":null}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2615-0:185:2724":{"id":"b:2:2615-0:185:2724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31988:2847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2609:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:185:2724","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2617:27061"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2902-0:119:136":{"id":"b:2:2902-0:119:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2861:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2871:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2905:136","2:2906:1754"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:205:2436":{"id":"0:205:2436","crate_id":0,"name":"advance","span":{"filename":"src/rt/io.rs","begin":[242,4],"end":[245,5]},"visibility":"public","docs":"Advance the `filled` cursor by `n` bytes.\n\n# Safety\n\nThe caller must take care that `n` more bytes have been initialized.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3110:246-0:361:3023":{"id":"a:2:3110:246-0:361:3023","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3110:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:3023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:2:31987:236-0:498:3030":{"id":"a:2:31987:236-0:498:3030","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:31987:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31987:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:498:3030","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2612-0:498:3030":{"id":"b:2:2612-0:498:3030","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31988:2847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2606:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:498:3030","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2614:3181"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:41602:3551-0:476:2420":{"id":"a:2:41602:3551-0:476:2420","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41602:3551","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2420","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:2:32044:2428-0:50:2188":{"id":"a:2:32044:2428-0:50:2188","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32044:2428","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3110:246-0:119:136":{"id":"a:2:3110:246-0:119:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3110:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13191:34683":{"id":"2:13191:34683","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12817:3512","str::split":"2:13179:27539","prim@char":"1:12295:458","str::split_terminator":"2:13188:34682"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43438:6550","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12838:14547","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:179:2441":{"id":"0:179:2441","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[72,4],"end":[72,98]},"visibility":"default","docs":"Attempts to flush the object.\n\nOn success, returns `Poll::Ready(Ok(()))`.\n\nIf flushing cannot immediately complete, this method returns\n`Poll::Pending` and arranges for the current task (via `cx.waker()`) to\nreceive a notification when the object can make progress.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41613:2195","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13631:115","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44306:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:41621:225","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:3022:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"5:727:3664":{"id":"5:727:3664","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:224:2438":{"id":"0:224:2438","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[368,4],"end":[374,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41613:2195","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13631:115","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8450:2440","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44306:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3020:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2906:1754":{"id":"2:2906:1754","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:41621:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2871:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:116:225":{"id":"0:116:225","crate_id":0,"name":"Result","span":{"filename":"src/error.rs","begin":[6,0],"end":[6,51]},"visibility":"public","docs":"Result type often returned from methods that can have hyper `Error`s.","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"std::result::Result","id":"2:41621:225","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"resolved_path":{"name":"Error","id":"0:119:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}}},"0:185:2724":{"id":"0:185:2724","crate_id":0,"name":"ReadBuf","span":{"filename":"src/rt/io.rs","begin":[121,0],"end":[125,1]},"visibility":"public","docs":"A wrapper around a byte buffer that is incrementally filled and initialized.\n\nThis type is a sort of \"double cursor\". It tracks three regions in the\nbuffer: a region at the beginning of the buffer that has been logically\nfilled with data, a region that has been initialized at some point but not\nyet logically filled, and a region at the end that may be uninitialized.\nThe filled region is guaranteed to be a subset of the initialized region.\n\nIn summary, the contents of the buffer can be visualized as:\n\n```not_rust\n[             capacity              ]\n[ filled |         unfilled         ]\n[    initialized    | uninitialized ]\n```\n\nIt is undefined behavior to de-initialize any bytes from the uninitialized\nregion, since it is merely unknown whether this region is uninitialized or\nnot, and if part of it turns out to be initialized, it must stay initialized.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:190","a:2:41603:3550-0:185:2724","a:2:3110:246-0:185:2724","a:2:32044:2428-0:185:2724","a:2:31987:236-0:185:2724","a:2:41602:3551-0:185:2724","a:2:3145:3330-0:185:2724","b:2:2891-0:185:2724","b:2:2612-0:185:2724","b:2:2887-0:185:2724","b:2:2902-0:185:2724","b:2:2897-0:185:2724","b:2:3720-0:185:2724","b:2:2615-0:185:2724","0:199"]}}},"b:2:2897-0:494:3026":{"id":"b:2:2897-0:494:3026","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2871:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2867:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2900:136","2:2901:1756"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:10-20:2687:2017":{"id":"0:10-20:2687:2017","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,69],"end":[96,72]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Uri","name":"Uri","id":"20:2687:2017","glob":false}}},"0:127:2537":{"id":"0:127:2537","crate_id":0,"name":"is_user","span":{"filename":"src/error.rs","begin":[192,4],"end":[194,5]},"visibility":"public","docs":"Returns true if this error was caused by user code.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5605:35395":{"id":"5:5605:35395","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7616:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7616:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:178:2437":{"id":"0:178:2437","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[59,4],"end":[63,45]},"visibility":"default","docs":"Attempt to write bytes from `buf` into the destination.\n\nOn success, returns `Poll::Ready(Ok(num_bytes_written)))`. If\nsuccessful, it must be guaranteed that `n <= buf.len()`. A return value\nof `0` means that the underlying object is no longer able to accept\nbytes, or that the provided buffer is empty.\n\nIf the object is not ready for writing, the method returns\n`Poll::Pending` and arranges for the current task (via `cx.waker()`) to\nreceive a notification when the object becomes writable or is closed.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41613:2195","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13631:115","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44306:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:41621:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:3022:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:2612-0:119:136":{"id":"b:2:2612-0:119:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31988:2847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2606:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2614:3181"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:496":{"id":"0:496","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[72,9],"end":[72,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2628:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:497:462"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2887-0:119:136":{"id":"b:2:2887-0:119:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2864:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2861:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2890:2350"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2617:27061":{"id":"2:2617:27061","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13135:27436":{"id":"2:13135:27436","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12365:14549"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32044:2428-0:476:2420":{"id":"a:2:32044:2428-0:476:2420","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32044:2428","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2420","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2891-0:361:3023":{"id":"b:2:2891-0:361:3023","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2864:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:3023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2893:809"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13155:6566":{"id":"2:13155:6566","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12295:458"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43346:6547","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3145:3330-0:50:2188":{"id":"a:2:3145:3330-0:50:2188","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3145:3330","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:192:1152":{"id":"0:192:1152","crate_id":0,"name":"new","span":{"filename":"src/rt/io.rs","begin":[138,4],"end":[146,5]},"visibility":"public","docs":"Create a new `ReadBuf` with a slice of initialized bytes.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["raw",{"borrowed_ref":{"lifetime":"'data","mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:58":{"id":"0:58","crate_id":0,"name":null,"span":{"filename":"src/body/incoming.rs","begin":[188,0],"end":[316,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["is_end_stream","size_hint"],"trait":{"name":"Body","id":"24:42:2184","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:59:2265","0:60:136","0:61:2266","0:62:2262","0:63:2287"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5613:35396":{"id":"5:5613:35396","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7616:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7616:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13218:34687":{"id":"2:13218:34687","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:180:2442":{"id":"0:180:2442","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[75,4],"end":[78,42]},"visibility":"default","docs":"Attempts to shut down this writer.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41613:2195","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13631:115","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44306:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:41621:225","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:3022:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:2615-0:119:136":{"id":"b:2:2615-0:119:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31988:2847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2609:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2617:27061"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13128:2431":{"id":"2:13128:2431","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:485:2438":{"id":"0:485:2438","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41613:2195","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13631:115","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8450:2440","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44306:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3020:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5614:35397":{"id":"5:5614:35397","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:296:2462","`String`":"5:7616:242"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:296:2462","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7616:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:500:2413":{"id":"0:500:2413","crate_id":0,"name":"io","span":{"filename":"src/upgrade.rs","begin":[84,4],"end":[84,13]},"visibility":"public","docs":"The original IO object used before the upgrade.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"T"}}},"0:484:2437":{"id":"0:484:2437","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41613:2195","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13631:115","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44306:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3020:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2615-0:361:3023":{"id":"b:2:2615-0:361:3023","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31988:2847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2609:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:3023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2617:27061"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13197:27547":{"id":"2:13197:27547","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12295:458","str::splitn":"2:13194:27545","self::pattern":"2:12817:3512"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43492:6379","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12838:14547","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13147:34679":{"id":"2:13147:34679","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12301:1671","str::slice_mut_unchecked":"2:13148:34680","crate::ops::Index":"2:39117:3304"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13161:33143":{"id":"2:13161:33143","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:43662:6393","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:227:2442":{"id":"0:227:2442","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[384,4],"end":[386,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41613:2195","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13631:115","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44306:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3020:225","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:376":{"id":"0:376","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[206,0],"end":[210,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10252:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:3023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:377:779"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:483:2429":{"id":"0:483:2429","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[295,4],"end":[295,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41613:2195","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13631:115","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2420","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44306:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3020:225","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5602:35394":{"id":"5:5602:35394","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7616:242"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7616:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:119:136":{"id":"0:119:136","crate_id":0,"name":"Error","span":{"filename":"src/error.rs","begin":[31,0],"end":[33,1]},"visibility":"public","docs":"Represents errors that can occur handling HTTP streams.\n\n# Formatting\n\nThe `Display` implementation of this type will only print the details of\nthis level of error, even though it may have been caused by another error\nand contain that error in its source. To print all the relevant\ninformation, including the source chain, using something like\n`std::error::Report`, or equivalent 3rd party types.\n\nThe contents of the formatted error message of this specific `Error` type\nis unspecified. **You must not depend on it.** The wording and details may\nchange in any version, with the goal of improving error messages.\n\n# Source\n\nA `hyper::Error` may be caused by another error. To aid in debugging,\nthose are exposed in `Error::source()` as erased types. While it is\npossible to check the exact type of the sources, they **can not be depended\non**. They may come from private internal dependencies, and are subject to\nchange at any moment.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:124","a:2:41603:3550-0:119:136","a:2:3110:246-0:119:136","a:2:32044:2428-0:119:136","a:2:31987:236-0:119:136","a:2:41602:3551-0:119:136","a:2:3145:3330-0:119:136","b:2:2891-0:119:136","b:2:2612-0:119:136","b:2:2887-0:119:136","b:2:2902-0:119:136","b:2:2897-0:119:136","b:2:3720-0:119:136","b:2:2615-0:119:136","b:5:5847-0:119:136","0:144","0:146","0:142"]}}},"2:13255:27448":{"id":"2:13255:27448","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:980:40528"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:384":{"id":"0:384","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[244,0],"end":[248,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10252:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:385:779"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13200:27549":{"id":"2:13200:27549","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41508:193","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:482:2429":{"id":"0:482:2429","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[291,4],"end":[291,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41613:2195","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13631:115","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2420","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44306:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3020:225","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13157:33140":{"id":"2:13157:33140","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:13158:33142"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:43644:6556","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:223:2437":{"id":"0:223:2437","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[360,4],"end":[366,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41613:2195","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13631:115","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44306:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3020:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:366:3053":{"id":"0:366:3053","crate_id":0,"name":"downcast","span":{"filename":"src/upgrade.rs","begin":[151,4],"end":[163,5]},"visibility":"public","docs":"Tries to downcast the internal trait object to the type passed.\n\nOn success, returns the downcasted parts. On error, returns the\n`Upgraded` back.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41621:225","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Parts","id":"0:498:3030","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}},{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"0:175:2419","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Write","id":"0:177:2421","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:32044:2428","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:181:2443":{"id":"0:181:2443","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[84,4],"end":[86,5]},"visibility":"default","docs":"Returns whether this writer has an efficient `poll_write_vectored`\nimplementation.\n\nThe default implementation returns `false`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:199":{"id":"0:199","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[214,0],"end":[222,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10252:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:185:2724","args":{"angle_bracketed":{"args":[{"lifetime":"'data"}],"bindings":[]}}}},"items":["0:201:779"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13188:34682":{"id":"2:13188:34682","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12817:3512","str::split":"2:13179:27539","prim@char":"1:12295:458","`DoubleEndedIterator`":"2:8204:129","str::rsplit_terminator":"2:13191:34683"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43420:6549","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2902-0:185:2724":{"id":"b:2:2902-0:185:2724","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2861:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2871:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:185:2724","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2905:136","2:2906:1754"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:193:2823":{"id":"0:193:2823","crate_id":0,"name":"uninit","span":{"filename":"src/rt/io.rs","begin":[150,4],"end":[156,5]},"visibility":"public","docs":"Create a new `ReadBuf` with a slice of uninitialized bytes.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["raw",{"borrowed_ref":{"lifetime":"'data","mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"2:30452:2769","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:369:2429":{"id":"0:369:2429","crate_id":0,"name":"poll_read","span":{"filename":"src/upgrade.rs","begin":[167,4],"end":[173,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41613:2195","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13631:115","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2420","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44306:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:3020:225","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:490:2438":{"id":"0:490:2438","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41613:2195","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13631:115","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8450:2440","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44306:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3020:225","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41602:3551-0:119:136":{"id":"a:2:41602:3551-0:119:136","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41602:3551","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:501:3038":{"id":"0:501:3038","crate_id":0,"name":"read_buf","span":{"filename":"src/upgrade.rs","begin":[93,4],"end":[93,23]},"visibility":"public","docs":"A buffer of bytes that have been read but not processed as HTTP.\n\nFor instance, if the `Connection` is used for an HTTP upgrade request,\nit is possible the server sent back the first bytes of the new protocol\nalong with the response upgrade.\n\nYou will want to check for any existing bytes if you plan to continue\ncommunicating on the IO object.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"bytes::Bytes","id":"22:395:2183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:2902-0:361:3023":{"id":"b:2:2902-0:361:3023","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2861:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2871:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:3023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2905:136","2:2906:1754"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:190":{"id":"0:190","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[135,0],"end":[212,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReadBuf","id":"0:185:2724","args":{"angle_bracketed":{"args":[{"lifetime":"'data"}],"bindings":[]}}}},"items":["0:192:1152","0:193:2823","0:194:2816","0:195:2826"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3110:246-0:498:3030":{"id":"a:2:3110:246-0:498:3030","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3110:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3110:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:498:3030","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13162:27551":{"id":"2:13162:27551","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12295:458","self::pattern":"2:12817:3512"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:242:2725":{"id":"0:242:2725","crate_id":0,"name":"Sleep","span":{"filename":"src/rt/timer.rs","begin":[84,0],"end":[93,1]},"visibility":"public","docs":"A future returned by a `Timer`.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:31987:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3110:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Future","id":"2:44281:149","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"tuple":[]}}}}]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"2:13212:34685":{"id":"2:13212:34685","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12817:3512","`DoubleEndedIterator`":"2:8204:129","prim@char":"1:12295:458","str::rmatch_indices":"2:13215:34686"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43520:6551","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:129:2379":{"id":"0:129:2379","crate_id":0,"name":"is_closed","span":{"filename":"src/error.rs","begin":[202,4],"end":[214,5]},"visibility":"public","docs":"Returns true if a sender's channel is closed.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:488:2442":{"id":"0:488:2442","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41613:2195","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13631:115","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44306:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3020:225","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2897-0:50:2188":{"id":"b:2:2897-0:50:2188","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2871:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2867:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2188","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2900:136","2:2901:1756"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:202":{"id":"0:202","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[224,0],"end":[276,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2420","args":{"angle_bracketed":{"args":[{"lifetime":"'data"}],"bindings":[]}}}},"items":["0:204:2837","0:205:2436"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3110:246-0:494:3026":{"id":"a:2:3110:246-0:494:3026","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3110:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3026","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2615-0:498:3030":{"id":"b:2:2615-0:498:3030","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31988:2847","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2609:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:498:3030","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2617:27061"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13141:2690":{"id":"2:13141:2690","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41510:190"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41508:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10908:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10908:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13150:27534":{"id":"2:13150:27534","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:13149:27533","str::split_at_mut_checked":"2:13152:27538"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2887-0:361:3023":{"id":"b:2:2887-0:361:3023","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2864:143","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2861:162","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:3023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2890:2350"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13171:2800":{"id":"2:13171:2800","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41510:190","prim@char":"1:12295:458","self::pattern":"2:12817:3512"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41508:193","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12823:6364","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2897-0:498:3030":{"id":"b:2:2897-0:498:3030","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2871:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2867:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:498:3030","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2900:136","2:2901:1756"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:8-20:2545:2015":{"id":"0:8-20:2545:2015","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,47],"end":[96,55]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Response","name":"Response","id":"20:2545:2015","glob":false}}},"a:2:31987:236-0:361:3023":{"id":"a:2:31987:236-0:361:3023","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31987:236","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:3023","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}}},"paths":{"2:40521:6345":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2:45981:6656":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"17:13399:4713":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"5:281:36033":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"6:5546:7766":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"17:513:4276":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"2:45515:6611":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"2:22737:6413":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"25:3055:3856":{"crate_id":25,"path":["tokio","sync","oneshot","State"],"kind":"struct"},"17:14933:5102":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"17:16249:5439":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"16:872:4271":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"2:4332:6319":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"17:12949:4293":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"2:2861:162":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"25:3200:2018":{"crate_id":25,"path":["tokio","sync","watch","state","Version"],"kind":"struct"},"17:4986:4300":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"6:1580:7349":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"17:13211:4679":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"5:2087:3079":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"16:7397:36150":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"25:2883:4034":{"crate_id":25,"path":["tokio","sync","mpsc","error","SendError"],"kind":"struct"},"6:5020:7573":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:43773:6559":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"11:875:6051":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"17:13089:2502":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"20:2648:2451":{"crate_id":20,"path":["http","uri","builder","Builder"],"kind":"struct"},"17:15760:5321":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:39249:3307":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"25:349:93":{"crate_id":25,"path":["tokio","loom","std","atomic_u16","AtomicU16"],"kind":"struct"},"16:7306:36152":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"6:8306:8245":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"5:1309:4114":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2:3565:3312":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"6:7602:8213":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"17:2234:4288":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"2:21564:2761":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"11:1066:21112":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"16:5385:4402":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:11863:6382":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"2:10511:9256":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:41749:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"20:2448:2013":{"crate_id":20,"path":["http","method","Method"],"kind":"struct"},"2:2698:194":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"6:1526:7312":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"17:11702:4499":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"1:10636:3780":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"25:1336:4020":{"crate_id":25,"path":["tokio","sync","mpsc","chan","Rx"],"kind":"struct"},"2:44298:226":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"17:13877:4821":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"20:2045:4111":{"crate_id":20,"path":["http","header","map","RawLinks"],"kind":"struct"},"2:44284:163":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"25:561:4164":{"crate_id":25,"path":["tokio","util","linked_list","Link"],"kind":"trait"},"2:4970:14609":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"2:22835:6426":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"16:860:5459":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"1:3335:3782":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:39976:6459":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"6:4876:7502":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"1:4917:6772":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"1:9336:7141":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"6:4811:7456":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"5:721:249":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:13669:3243":{"crate_id":2,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"2:12838:14547":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"17:12454:4599":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"6:491:7233":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"13:0:3085":{"crate_id":13,"path":["std_detect"],"kind":"module"},"6:6738:8005":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"25:409:3347":{"crate_id":25,"path":["tokio","loom","std","barrier","Barrier"],"kind":"struct"},"2:45454:6607":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:8583:6863":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"17:11189:4444":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"6:6629:7968":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"16:6342:36153":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"6:5039:7584":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:22115:9388":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"17:12318:4293":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"20:2006:7143":{"crate_id":20,"path":["http","header","map","Pos"],"kind":"struct"},"2:43255:6538":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"17:15324:5185":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:2678:32620":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"17:16259:4710":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"2:22244:9473":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"6:497:7236":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"17:13437:4717":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"17:16050:4693":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"6:5306:7664":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"17:14599:4952":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"1:12318:1860":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"2:37824:3298":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"6:1671:7411":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:4737:14599":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:6611:3352":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"18:613:36168":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:1970:1311":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"2:41669:3800":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"6:5423:7710":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"16:6962:5508":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:31988:2847":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"17:15039:5118":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"17:12485:22242":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"16:5107:5553":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"17:13292:4694":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"17:12508:4606":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"17:14111:4852":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"1:8429:2224":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"6:473:7225":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:9406:6364":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"20:5:2012":{"crate_id":20,"path":["http","header"],"kind":"module"},"2:8625:3801":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"2:43116:6529":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"6:6460:7874":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:8140:6808":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:43420:6549":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"6:5002:7564":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"17:10185:4264":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"1:8591:2188":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"6:553:7273":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"1:11652:8376":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:952:6052":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"1:1888:6753":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"20:2052:4112":{"crate_id":20,"path":["http","header","map","ExtraValue"],"kind":"struct"},"20:1868:3610":{"crate_id":20,"path":["http","header","map","IntoIter"],"kind":"struct"},"25:3108:3384":{"crate_id":25,"path":["tokio","sync","rwlock","owned_write_guard_mapped","OwnedRwLockMappedWriteGuard"],"kind":"struct"},"20:2496:3806":{"crate_id":20,"path":["http","method","extension","InlineExtension"],"kind":"struct"},"16:2748:5490":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"16:2355:5467":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"6:5314:7668":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"25:3029:3857":{"crate_id":25,"path":["tokio","sync","oneshot","error","RecvError"],"kind":"struct"},"17:14545:4938":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"1:4608:9308":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"1:12319:1370":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"2:4465:6321":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"17:15655:5291":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"6:1503:7302":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"16:5415:5556":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"2:43653:6557":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"25:664:185":{"crate_id":25,"path":["tokio","loom","std","mutex","Mutex"],"kind":"struct"},"1:9129:3799":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"16:5722:5503":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"16:5686:5498":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:10263:3679":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"17:15822:5334":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"2:12333:14832":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"17:13774:4802":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"1:3588:2421":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"1:1969:3250":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"6:5260:7642":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"3:234:225":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"6:6435:7869":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"1:11740:6762":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"25:804:4003":{"crate_id":25,"path":["tokio","runtime","coop","Budget"],"kind":"struct"},"11:396:36116":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"2:7657:33316":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"2:46488:6705":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"20:2742:2018":{"crate_id":20,"path":["http","version","Version"],"kind":"struct"},"1:8518:2188":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"6:7516:2564":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"16:3614:5524":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"1:8818:6773":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"1:10911:138":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"18:718:4255":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"6:4992:7557":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"6:6706:7999":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"17:15624:5283":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"2:3331:2771":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"17:11915:22216":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"1:12309:874":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"17:13753:4798":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"2:30484:33083":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"1:5223:6775":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:22773:33087":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"17:12328:4580":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"6:8294:8243":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:42702:6516":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:1597:6060":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"20:2760:4200":{"crate_id":20,"path":["http","version","Http"],"kind":"enum"},"2:22465:9467":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"17:14212:4888":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"9:53:21049":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"1:10642:3778":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"17:13899:4822":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"17:13187:4665":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"17:12851:4629":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:9915:33501":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"25:2820:3348":{"crate_id":25,"path":["tokio","sync","barrier","BarrierWaitResult"],"kind":"struct"},"1:868:4091":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"1:5192:6775":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:40279:6486":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"6:4942:7535":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"1:1064:4098":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"16:8202:5518":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"5:219:6131":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"25:3041:3858":{"crate_id":25,"path":["tokio","sync","oneshot","error","TryRecvError"],"kind":"enum"},"17:11877:4522":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"17:10137:22093":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"5:4147:3800":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"20:1922:4114":{"crate_id":20,"path":["http","header","map","Entry"],"kind":"enum"},"17:15273:5172":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"5:2234:8258":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"17:13375:4709":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"6:5112:7600":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"16:8188:5949":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:13844:4813":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"17:10671:36159":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"2:21991:6401":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:40745:6493":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"2:10267:205":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"17:12543:4611":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"25:834:4005":{"crate_id":25,"path":["tokio","runtime","park","UnparkThread"],"kind":"struct"},"11:0:3090":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"6:5643:7812":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"16:8259:5842":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"1:11056:32619":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"6:5191:7613":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"17:14587:4945":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:46578:6716":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:8524:6859":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"17:12808:4627":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:41592:3548":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"2:8622:148":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:3630:3239":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:6615:3353":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"5:3243:6060":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"1:9180:3858":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"16:7132:5792":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"11:673:3799":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"1:5712:9356":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"9:424:21033":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"6:1485:7294":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"25:840:3805":{"crate_id":25,"path":["tokio","runtime","park","Inner"],"kind":"struct"},"17:15836:5337":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"2:39279:3309":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"17:14311:4898":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"5:40:9197":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"2:3186:3302":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"14:0:3092":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"6:5415:7705":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"1:6291:3246":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"20:1847:3799":{"crate_id":20,"path":["http","header","map","Iter"],"kind":"struct"},"2:44120:8361":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"11:2548:7204":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"23:0:3215":{"crate_id":23,"path":["itoa"],"kind":"module"},"2:45693:6628":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"6:5630:7806":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"1:1586:6140":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"18:670:4245":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:10848:6912":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"5:7037:263":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"16:2548:5481":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"6:532:7262":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"1:1976:762":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"2:12823:6364":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"5:824:101":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"17:13972:4530":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"2:41603:3550":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"5:1525:4092":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:40721:3352":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"17:14284:4896":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"2:22418:2761":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"2:45678:6627":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"2:44162:3324":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"6:545:7268":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"6:6562:7934":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"2:4344:6320":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"6:6478:7884":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:8499:2183":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"17:10769:36164":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"5:6052:15075":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"17:13674:4764":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"2:41686:195":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"16:7559:5876":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"2:40507:6344":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:33188:3287":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:12313:1781":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"2:44116:8360":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"20:2788:3829":{"crate_id":20,"path":["http","byte_str","ByteStr"],"kind":"struct"},"5:3395:6140":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"17:11392:4465":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"25:365:94":{"crate_id":25,"path":["tokio","loom","std","atomic_u32","AtomicU32"],"kind":"struct"},"2:43492:6379":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"1:4271:9304":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"17:12353:4589":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"2:40736:3786":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:12314:1787":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"5:3277:6059":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"16:2303:21158":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"5:6031:3345":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"16:2572:5482":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"25:2947:3374":{"crate_id":25,"path":["tokio","sync","mutex","OwnedMutexGuard"],"kind":"struct"},"17:15010:5110":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"17:11153:4419":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"6:6714:8001":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"6:5557:7772":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"6:7575:8207":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"25:855:4008":{"crate_id":25,"path":["tokio","runtime","driver","Driver"],"kind":"struct"},"17:1098:4278":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"5:3207:100":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"2:45351:6597":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2:43644:6556":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:31987:236":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"2:43894:6396":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"6:8288:8242":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"16:2768:5491":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"17:12683:4617":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"2:44369:179":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"5:7108:36041":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"1:4154:9286":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"17:12213:4573":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"6:7452:8136":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:2446:9244":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"20:1876:4091":{"crate_id":20,"path":["http","header","map","Keys"],"kind":"struct"},"2:22650:6405":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"17:10818:4419":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:43346:6547":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"5:6156:3741":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"17:11595:4490":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"6:8006:8220":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:43242:6475":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"25:2966:3376":{"crate_id":25,"path":["tokio","sync","notify","Notify"],"kind":"struct"},"2:46655:6732":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"17:9858:22111":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"2:8257:3217":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:7709:14762":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"1:11062:32608":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"20:2138:4118":{"crate_id":20,"path":["http","header","name","Custom"],"kind":"struct"},"16:2612:5484":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"1:2432:9240":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"1:6780:3363":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLock"],"kind":"struct"},"25:2950:3351":{"crate_id":25,"path":["tokio","sync","mutex","MappedMutexGuard"],"kind":"struct"},"2:38458:3300":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:12305:716":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"16:2902:21184":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"1:946:6051":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"6:1565:7337":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:4861:9296":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"1:4263:9303":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:5859:3741":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"16:5817:5569":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"5:7605:6178":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"17:15176:5149":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"1:11222:8367":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"1:11780:6763":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"2:43520:6551":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:1940:3249":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"14:165:21119":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"1:3248:32444":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"25:816:36790":{"crate_id":25,"path":["tokio","runtime","coop","RestoreOnPending"],"kind":"struct"},"0:0:2034":{"crate_id":0,"path":["hyper"],"kind":"module"},"2:22320:9477":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"16:7888:5899":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"1:10890:6917":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"11:2569:6171":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"17:11405:4466":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"6:5200:7618":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"1:9316:27242":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"2:46371:6698":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:22460:9469":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"5:7581:6175":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"2:41621:225":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"5:7396:6169":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"2:7941:3340":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"16:7648:5881":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"25:416:3348":{"crate_id":25,"path":["tokio","loom","std","barrier","BarrierWaitResult"],"kind":"struct"},"11:800:4094":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"1:3947:6764":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"2:45919:6654":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:41302:9262":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"2:46540:6709":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"16:7570:5512":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"17:10044:22116":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"2:43752:14560":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"17:13252:4683":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:6307:32609":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"2:43678:6318":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:10261:3671":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"2:40046:6466":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"17:10710:4417":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"20:482:26312":{"crate_id":20,"path":["http","header","map","as_header_name","AsHeaderName"],"kind":"trait"},"0:259:2742":{"crate_id":0,"path":["hyper","rt","Executor"],"kind":"trait"},"24:106:2186":{"crate_id":24,"path":["http_body","size_hint","SizeHint"],"kind":"struct"},"25:2459:232":{"crate_id":25,"path":["tokio","sync","rwlock","RwLock"],"kind":"struct"},"2:45725:6630":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:11896:6383":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"1:10959:6807":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"17:12238:4575":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"16:2374:5473":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"17:12494:4603":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"1:837:3799":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"17:11853:4520":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"6:7446:8134":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"16:6849:5756":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"5:3633:181":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"1:12312:1799":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:22306:2761":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"5:7376:4094":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"20:2702:2624":{"crate_id":20,"path":["http","uri","InvalidUri"],"kind":"struct"},"2:40112:6468":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"5:1478:3800":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"1:4859:9294":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"2:41248:169":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"6:5250:7636":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"11:2562:7206":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"2:42450:3668":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"1:3616:3754":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"17:14529:4936":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"17:11773:4507":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"2:40084:2183":{"crate_id":2,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"16:7580:5877":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"17:4821:4298":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"17:16079:5400":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"17:9781:22110":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"17:3597:4292":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"2:31957:5842":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"17:12264:4577":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"1:9364:3351":{"crate_id":1,"path":["std","sync","mutex","MappedMutexGuard"],"kind":"struct"},"17:10534:36158":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"6:5665:7820":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"17:12388:4591":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"2:7881:2224":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:7077:9384":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"16:2728:5489":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"16:7497:5862":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"20:2677:2648":{"crate_id":20,"path":["http","uri","scheme","Protocol"],"kind":"enum"},"17:15102:5131":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:46593:6717":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"16:7014:22052":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"6:5376:7686":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"25:884:4009":{"crate_id":25,"path":["tokio","runtime","scheduler","Handle"],"kind":"enum"},"2:3553:145":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:8145:6809":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"1:1579:3610":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"2:40229:6326":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:22753:33099":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"5:6936:14579":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"17:13581:4758":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"17:12464:22241":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"17:15116:5132":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:44396:6067":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:41613:2195":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"2:44088:8353":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"17:15368:5199":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"2:3145:3330":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"2:39884:6318":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:10901:6810":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"2:43538:6552":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:3538:3308":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"17:12030:4557":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"16:5863:22045":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:3549:3750":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"6:8247:8233":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:8226:3079":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:42102:3346":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:22544:6403":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:4757:8124":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"2:11053:3799":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"2:22815:8276":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"2:46342:6697":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:6855:7142":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"2:2050:8268":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"17:12433:4596":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"6:1585:7351":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:9137:6889":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"6:4800:7448":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:40332:6340":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:10967:6780":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"1:4819:9330":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"25:2834:3857":{"crate_id":25,"path":["tokio","sync","broadcast","error","RecvError"],"kind":"enum"},"5:2755:4009":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"6:5382:7689":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"16:5075:5552":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"1:5536:6777":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"1:9670:30821":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"2:2950:136":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:41286:6358":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"2:31989:243":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"2:43966:6576":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"17:14449:4928":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"22:547:4045":{"crate_id":22,"path":["bytes","bytes","Shared"],"kind":"struct"},"1:1886:6752":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"1:7945:6741":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"6:5064:7597":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"17:14189:4879":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"2:2125:188":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"5:5447:14533":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:45579:6622":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"5:7436:6170":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"2:39209:213":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:8162:6811":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"16:2838:5494":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"2:41270:6356":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"1:1827:6750":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"1:10867:8364":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"1:9145:3610":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"6:4787:7439":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:9728:91":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"17:14436:4927":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"11:1923:6062":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"6:4837:7476":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:41866:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:22926:6432":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"6:485:7231":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"6:5581:7779":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"2:31971:3687":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"11:2231:4483":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"16:6231:5637":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"2:33129:3289":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:910:4093":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:21493:32845":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"17:12300:22240":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"6:8351:8256":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"22:400:3935":{"crate_id":22,"path":["bytes","bytes","Vtable"],"kind":"struct"},"25:2814:4050":{"crate_id":25,"path":["tokio","sync","barrier","BarrierState"],"kind":"struct"},"2:46442:6701":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"16:6079:5452":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"5:3739:36033":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:4379:14517":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:43388:6376":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"1:8299:4118":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"5:7420:3610":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"17:15473:5226":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"11:328:7200":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"16:150:5444":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"1:4162:9288":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"5:1555:6047":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:8675:9338":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"25:1945:3805":{"crate_id":25,"path":["tokio","sync","oneshot","Inner"],"kind":"struct"},"11:2352:4098":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"16:6574:5517":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"25:1195:2189":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","Sender"],"kind":"struct"},"2:43669:6459":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:45287:6591":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"25:1530:4032":{"crate_id":25,"path":["tokio","sync","mpsc","unbounded","UnboundedReceiver"],"kind":"struct"},"17:15301:5180":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"14:160:6035":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:8125:14768":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:43474:6378":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"2:30854:3577":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"25:2558:3386":{"crate_id":25,"path":["tokio","sync","task","atomic_waker","AtomicWaker"],"kind":"struct"},"5:7464:3610":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"2:39472:14621":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"24:0:2036":{"crate_id":24,"path":["http_body"],"kind":"module"},"2:45404:6604":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"25:671:3240":{"crate_id":25,"path":["tokio","loom","std","unsafe_cell","UnsafeCell"],"kind":"struct"},"2:5955:3741":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"17:11026:22129":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"17:15206:5155":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"2:44288:218":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"2:11295:6377":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:12349:6384":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"1:8152:6810":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"5:2195:9150":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"25:3176:4034":{"crate_id":25,"path":["tokio","sync","watch","error","SendError"],"kind":"struct"},"1:923:6048":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"4:0:3086":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"1:881:4092":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"25:873:4012":{"crate_id":25,"path":["tokio","runtime","driver","IoStack"],"kind":"struct"},"1:9303:6899":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"2:39117:3304":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:43687:6458":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:45387:6603":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:5777:2189":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"14:187:21126":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:39890:6451":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"9:330:7209":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"17:11166:4443":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"16:5037:5551":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:32650:3280":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"2:46069:6660":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"2:32045:3241":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:589:9164":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:43662:6393":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"5:1724:36033":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"2:2246:6188":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"2:12832:4251":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:1447:155":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"16:8093:5937":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"16:6588:5694":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"17:11242:4449":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"11:856:6049":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"11:2542:7203":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"5:7566:14821":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:3780:9263":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"17:12557:4436":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"2:4766:3240":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"5:7347:3862":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"2:10271:3678":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"25:3135:3388":{"crate_id":25,"path":["tokio","sync","once_cell","SetError"],"kind":"enum"},"1:8565:6765":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:1575:3799":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"17:13959:4831":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"20:2552:3030":{"crate_id":20,"path":["http","response","Parts"],"kind":"struct"},"16:4743:5541":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"6:6621:7967":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:7487:3617":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"18:706:4251":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"6:5489:7749":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"2:6655:6332":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"11:774:4091":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"17:12695:4618":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"20:2652:3832":{"crate_id":20,"path":["http","uri","path","PathAndQuery"],"kind":"struct"},"6:8253:8234":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"24:89:2185":{"crate_id":24,"path":["http_body","frame","Frame"],"kind":"struct"},"17:10419:4272":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"25:3121:234":{"crate_id":25,"path":["tokio","sync","rwlock","write_guard","RwLockWriteGuard"],"kind":"struct"},"1:6116:2189":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"2:13507:3318":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:3241:3293":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"1:8174:138":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"16:7509:5863":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"1:2596:3770":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"16:7549:5875":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2:42467:33097":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"6:6788:8023":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"5:3303:6062":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"1:9255:3805":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"1:1591:6059":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"16:6385:5678":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"6:5536:7760":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"17:15635:5288":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"17:12707:4619":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"6:4965:7543":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"17:15678:5304":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"17:15701:5305":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"6:5046:7586":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"17:12516:4608":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"1:12302:1759":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"16:6782:22051":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:10872:8366":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"5:1189:35910":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"6:5502:7753":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"17:14012:4839":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"1:10264:6751":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"1:12294:1148":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"6:1707:7428":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"17:11605:2018":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"17:15168:5146":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"5:5211:3345":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"16:6749:5730":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"25:3061:3378":{"crate_id":25,"path":["tokio","sync","batch_semaphore","TryAcquireError"],"kind":"enum"},"17:15222:5159":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"1:4078:9280":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"6:5457:7735":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"16:6895:5758":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"16:2878:5496":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"5:3805:6143":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"25:567:4002":{"crate_id":25,"path":["tokio","util","linked_list","Pointers"],"kind":"struct"},"2:11184:6374":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"2:4:1230":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"20:1178:2622":{"crate_id":20,"path":["http","status","InvalidStatusCode"],"kind":"struct"},"25:2616:3387":{"crate_id":25,"path":["tokio","sync","once_cell","OnceCell"],"kind":"struct"},"17:15400:5207":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"2:22003:32838":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"17:13538:4742":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"17:12150:4565":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"1:2039:197":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"11:2304:4114":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"6:5122:7601":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"2:43997:6397":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"2:22715:33154":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:5104:9334":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"2:42504:3668":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"20:2712:3774":{"crate_id":20,"path":["http","uri","ErrorKind"],"kind":"enum"},"2:2871:256":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"17:15138:5136":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"11:2140:4101":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"1:3606:3751":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"17:12659:4615":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"2:22915:6431":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"6:6379:7829":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"17:14066:4847":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"1:504:9150":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"17:14868:5067":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"6:6505:7904":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"16:7098:5787":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:2704:201":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"5:7616:242":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"6:6447:7873":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:10720:33049":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"2:40057:14821":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"11:1087:36124":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"6:4985:7554":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"20:2525:2014":{"crate_id":20,"path":["http","request","Request"],"kind":"struct"},"6:6524:7906":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"11:787:4092":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"2:22992:6438":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"16:6098:22046":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"6:5160:7604":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"11:883:6052":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"1:9249:115":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"11:844:9182":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"17:16093:5404":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"17:11089:4437":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"6:5466:7741":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"17:14414:4916":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"25:2943:186":{"crate_id":25,"path":["tokio","sync","mutex","MutexGuard"],"kind":"struct"},"21:0:3214":{"crate_id":21,"path":["fnv"],"kind":"module"},"2:10207:225":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"2:11364:6380":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"20:919:2620":{"crate_id":20,"path":["http","method","InvalidMethod"],"kind":"struct"},"11:434:36126":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"1:4279:9305":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"20:2102:4116":{"crate_id":20,"path":["http","header","name","HdrName"],"kind":"struct"},"2:43931:6571":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:21513:9390":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"16:5914:5583":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"16:6494:5689":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"6:6542:7918":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"6:6729:8003":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"17:11293:22147":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"17:13015:4596":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"1:3500:3741":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"2:39900:6452":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"16:7428:22054":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"16:8226:22058":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:4398:14591":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"6:1639:7393":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:44360:3242":{"crate_id":2,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"2:3103:3329":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"17:15616:5282":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"16:6606:5702":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"2:8162:144":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:37714:3296":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"16:4352:5531":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"1:919:6047":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"11:1903:6059":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"6:5636:7809":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"6:1496:7299":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"25:3213:4074":{"crate_id":25,"path":["tokio","sync","watch","state","StateSnapshot"],"kind":"struct"},"2:2864:143":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:39073:3314":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"1:12267:9171":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"16:6335:5675":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"6:8341:8254":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:46563:6715":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"2:42718:6519":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"2:3593:3238":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"5:144:3182":{"crate_id":5,"path":["alloc","boxed"],"kind":"module"},"5:6946:14580":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"11:2554:36122":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"2:32044:2428":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"18:96:26292":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:4150:9285":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"16:6872:5757":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"6:6471:7882":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"1:5709:8030":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"6:7348:8100":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"17:14876:5068":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"2:41677:3610":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:10226:142":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"2:30827:195":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:40291:6337":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"2:31978:6444":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"6:6775:8016":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"6:5436:7720":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"6:5225:7629":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:8631:14766":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"2:737:189":{"crate_id":2,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"1:6339:6783":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"2:45471:6608":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:39171:211":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"11:710:6046":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:10622:14844":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"5:828:6134":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"16:6927:5762":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"25:2961:3357":{"crate_id":25,"path":["tokio","sync","mutex","TryLockError"],"kind":"struct"},"17:11063:4435":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"16:7111:5790":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"17:15456:5219":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"20:1803:36176":{"crate_id":20,"path":["http","extensions","AnyClone"],"kind":"trait"},"1:8834:6883":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"2:45869:6652":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"18:608:4232":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"5:1153:35912":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"6:6768:8015":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"2:42710:6518":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"2:22200:9472":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"17:13308:4698":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"16:7741:5516":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"1:7259:32615":{"crate_id":1,"path":["std","sys","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"5:5403:36033":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"16:4976:5549":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"25:2956:3375":{"crate_id":25,"path":["tokio","sync","mutex","OwnedMappedMutexGuard"],"kind":"struct"},"2:2858:76":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"6:5361:7679":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"6:6678:7987":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:12307:886":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"25:336:36875":{"crate_id":25,"path":["tokio","net","addr","sealed","ToSocketAddrsPriv"],"kind":"trait"},"6:7561:8198":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"17:13064:4647":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:41561:3547":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"1:558:6742":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"17:15342:5189":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:31915:3237":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"16:3925:5529":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:3346:139":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:22:794":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"17:13738:4793":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"25:82:3318":{"crate_id":25,"path":["tokio","future","poll_fn","PollFn"],"kind":"struct"},"2:41983:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:12633:6373":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:30420:3269":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2:10252:119":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:40238:6328":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"17:9938:22114":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"1:3842:6762":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"6:6698:7996":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"1:8135:4347":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"6:6636:7969":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"13:109:36131":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"2:44347:3245":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"11:1910:6060":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"25:3115:233":{"crate_id":25,"path":["tokio","sync","rwlock","read_guard","RwLockReadGuard"],"kind":"struct"},"25:704:36787":{"crate_id":25,"path":["tokio","runtime","coop","with_budget","ResetGuard"],"kind":"struct"},"18:515:4212":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"17:15944:4679":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"2:32464:3281":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"5:6589:36033":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"5:7593:6177":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:43634:6555":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:646:9166":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"5:4307:3799":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"1:10930:2440":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"5:1426:99":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"1:9417:3320":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"25:2873:3379":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","Semaphore"],"kind":"struct"},"15:288:21138":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"11:1917:6061":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"11:2124:4114":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"5:4833:779":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"18:735:26302":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"25:1350:2225":{"crate_id":25,"path":["tokio","sync","mpsc","chan","Chan"],"kind":"struct"},"1:8051:6807":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"17:16187:5428":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"16:7085:5784":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"2:44385:6586":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"2:3161:3284":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"6:1699:7424":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"17:597:4277":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"1:8492:3761":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"25:614:36784":{"crate_id":25,"path":["tokio","util","markers","SyncNotSend"],"kind":"struct"},"6:4864:7499":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"17:11825:4517":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"1:929:9182":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"2:40763:6352":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"17:13485:4729":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:39121:3306":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"5:1354:6056":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"17:12076:4561":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"11:299:7197":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"5:7698:6140":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"5:7537:6164":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"1:8845:6884":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"18:598:36167":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:46400:6699":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"17:10661:4416":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"22:613:3234":{"crate_id":22,"path":["bytes","bytes_mut","BytesMut"],"kind":"struct"},"2:3191:3303":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"1:12315:1793":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"6:4959:7541":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"1:11857:6929":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"1:2283:2452":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"1:915:6046":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"1:4344:6766":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"1:9658:137":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"20:1957:2641":{"crate_id":20,"path":["http","header","map","ValueIter"],"kind":"struct"},"6:7467:8140":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"1:2448:9245":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"10:36:7208":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"6:7359:8105":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"17:9737:22094":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"17:10915:36163":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"2:43277:6540":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"6:517:7253":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"6:1510:7304":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"17:12597:4612":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"2:40072:6467":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"11:742:6047":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"16:7857:5895":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"15:394:21149":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"1:5034:9328":{"crate_id":1,"path":["std","os","net","linux_ext","socket","UnixSocketExt"],"kind":"trait"},"1:10999:6888":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"6:8317:8249":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:10269:3677":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"17:15957:5355":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"1:7968:6801":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"25:830:4004":{"crate_id":25,"path":["tokio","runtime","park","ParkThread"],"kind":"struct"},"1:9168:3857":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"17:16269:4715":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"16:7355:5823":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"16:4062:5530":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"1:2700:3763":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"1:2664:3771":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"22:1104:4080":{"crate_id":22,"path":["bytes","buf","limit","Limit"],"kind":"struct"},"17:11755:4505":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"6:5290:7658":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"16:7604:5514":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"17:12408:4593":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"17:12056:4560":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"1:11621:6797":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"1:9665:6808":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"1:9372:3741":{"crate_id":1,"path":["std","sync","poison","Guard"],"kind":"struct"},"2:1857:3741":{"crate_id":2,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"16:5769:5568":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:23477:235":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"2:22332:33888":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"2:22665:8273":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"16:2592:5483":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"16:7379:36154":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"25:1020:26426":{"crate_id":25,"path":["tokio","sync","broadcast","WaitersList"],"kind":"struct"},"16:6991:36144":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"5:5845:250":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"1:7944:2761":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:3349:140":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"17:15023:5115":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"18:698:4249":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"9:502:6118":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"6:8271:8237":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:6844:6339":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"2:5143:423":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"25:239:2724":{"crate_id":25,"path":["tokio","io","read_buf","ReadBuf"],"kind":"struct"},"2:45742:6631":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"6:1663:7410":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:12246:6935":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"1:4940:9293":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"6:8029:8231":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"2:21479:32840":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"1:9084:198":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"1:8529:2497":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"17:12863:4630":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"17:10905:4421":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"2:40313:6487":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"20:2037:4110":{"crate_id":20,"path":["http","header","map","Links"],"kind":"struct"},"2:42542:3670":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"2:12817:3512":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"17:13797:4807":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"2:42479:5914":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"17:9671:22095":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"17:13387:4710":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"6:5236:7632":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"17:10982:22128":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"17:16235:5438":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"2:21511:2761":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"2:8204:129":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"5:3790:3079":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"2:10055:3669":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"25:2921:3858":{"crate_id":25,"path":["tokio","sync","mpsc","error","TryRecvError"],"kind":"enum"},"11:102:4108":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"1:9244:6890":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"17:12887:4631":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"2:2867:257":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"5:1494:3610":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"1:11315:6925":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"16:7727:5515":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"17:12824:22119":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"17:13922:4827":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"1:3337:3783":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"0:498:3030":{"crate_id":0,"path":["hyper","upgrade","Parts"],"kind":"struct"},"17:11493:4472":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:2739:3773":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"17:10457:137":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"2:3961:3610":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"5:1828:6140":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"16:5802:22044":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"16:3029:4303":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"25:3240:7141":{"crate_id":25,"path":["tokio","util","cacheline","CachePadded"],"kind":"struct"},"1:3378:3778":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"25:2936:3857":{"crate_id":25,"path":["tokio","sync","mpsc","error","RecvError"],"kind":"struct"},"2:39983:14615":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"5:3024:3664":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"2:21481:32847":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"17:14271:4894":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"5:3282:35477":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"16:6648:5706":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:10908:238":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"17:14298:4897":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"2:45710:6629":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"16:8301:5958":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"11:2443:4094":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"2:22846:9277":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"2:0:543":{"crate_id":2,"path":["core"],"kind":"module"},"2:39037:3315":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"20:2090:2615":{"crate_id":20,"path":["http","header","name","HeaderName"],"kind":"struct"},"17:15376:5202":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"25:2054:3379":{"crate_id":25,"path":["tokio","sync","batch_semaphore","Semaphore"],"kind":"struct"},"2:43592:6554":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:10639:3782":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"1:8036:9215":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"20:1837:2019":{"crate_id":20,"path":["http","header","map","HeaderMap"],"kind":"struct"},"6:6756:8013":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"17:11537:4476":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"20:2811:3230":{"crate_id":20,"path":["http","extensions","Extensions"],"kind":"struct"},"17:11102:4438":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"5:2307:8262":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"17:10218:4265":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"2:33962:3294":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2:4609:220":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"16:5006:5550":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"1:9290:6897":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"16:5400:4403":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:43176:6531":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"2:43802:6567":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:39995:6461":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"16:6317:5665":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"1:11717:30819":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"17:14994:5109":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:46616:6718":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"2:46468:6703":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"17:11051:4432":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"5:1169:35908":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"17:15748:5319":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"6:6915:8069":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"6:7461:8139":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"17:11524:4475":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"11:2423:3610":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"2:2834:14620":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"2:40200:6479":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:9231:3350":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"16:542:5450":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"2:45500:6610":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:21680:2761":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"17:13455:4725":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"11:1582:6057":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"5:3025:35906":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"1:12308:868":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"6:8197:8232":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"17:261:4271":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"20:438:2640":{"crate_id":20,"path":["http","header","map","into_header_name","IntoHeaderName"],"kind":"trait"},"25:1518:4031":{"crate_id":25,"path":["tokio","sync","mpsc","unbounded","UnboundedSender"],"kind":"struct"},"17:13553:4748":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"1:8572:8362":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"6:5174:7605":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"17:13526:4739":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"25:851:4006":{"crate_id":25,"path":["tokio","runtime","park","CachedParkThread"],"kind":"struct"},"17:12371:4634":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"16:6412:22048":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"20:2564:2016":{"crate_id":20,"path":["http","status","StatusCode"],"kind":"struct"},"5:3035:35905":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"6:1686:7420":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:14147:4858":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"20:2428:4197":{"crate_id":20,"path":["http","header","value","ToStrError"],"kind":"struct"},"5:4237:3741":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"1:11563:27237":{"crate_id":1,"path":["std","sys","thread_local","fast_local","DtorState"],"kind":"enum"},"17:14560:4942":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"1:8030:9170":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"22:106:3233":{"crate_id":22,"path":["bytes","buf","buf_mut","BufMut"],"kind":"trait"},"11:1676:36120":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"17:11674:4497":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"17:15426:5213":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"5:6410:3248":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"1:3470:3786":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"17:15778:5327":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"17:11865:4521":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"5:941:3799":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"1:9376:233":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"2:45661:6626":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"17:14177:4877":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"16:6560:5500":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"2:22597:6404":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"6:7485:8150":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:12891:14554":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"17:10887:36160":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"1:1041:4114":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:46031:6658":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"16:7590:5513":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"1:7988:4528":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:4496:3387":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"16:4718:5540":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"2:43195:6534":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:44173:14877":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"2:41488:6361":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"17:13116:4652":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"17:9755:22092":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"1:9108:6887":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"17:15289:5174":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"1:11045:32623":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"2:40002:6462":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"2:41944:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"16:2528:5480":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"16:6665:22050":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"16:6398:5497":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"13:226:7195":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:45640:6625":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"6:5102:7599":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:7682:30058":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"1:5381:202":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"20:1892:4093":{"crate_id":20,"path":["http","header","map","ValuesMut"],"kind":"struct"},"17:11788:4511":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"25:3154:219":{"crate_id":25,"path":["tokio","sync","watch","Receiver"],"kind":"struct"},"6:1628:7385":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:46010:6657":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"16:4502:5534":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"1:641:6744":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:2855:77":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"2:45898:6653":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"17:0:3095":{"crate_id":17,"path":["object"],"kind":"module"},"24:42:2184":{"crate_id":24,"path":["http_body","Body"],"kind":"trait"},"2:41448:6765":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"16:4940:5548":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"16:6300:5659":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"16:2338:5465":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"2:33789:3292":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"16:6802:5743":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"11:490:153":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"9:238:3856":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"11:364:36118":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"16:8216:5951":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"1:724:153":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:43438:6550":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"16:8175:5946":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"16:2708:5488":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"25:3023:219":{"crate_id":25,"path":["tokio","sync","oneshot","Receiver"],"kind":"struct"},"16:6634:5505":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"17:11467:4471":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:30452:2769":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"6:5671:7822":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"17:12724:22118":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"18:581:3577":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"6:4909:7521":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"17:11647:4495":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"20:2080:36175":{"crate_id":20,"path":["http","header","map","Danger"],"kind":"enum"},"11:430:36125":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:12311:861":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"14:214:6041":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"16:7686:5882":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"17:11688:4498":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"1:7881:32580":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"17:14575:4596":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"0:162:2024":{"crate_id":0,"path":["hyper","ext"],"kind":"module"},"17:10524:4414":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"17:11812:4515":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"17:15434:5214":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"16:5927:5584":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"6:5344:7674":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"6:1490:7296":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"25:3161:2189":{"crate_id":25,"path":["tokio","sync","watch","Sender"],"kind":"struct"},"5:7386:6168":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"11:1051:4098":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"5:4072:4094":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"17:10399:2183":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"2:44339:3244":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"2:10705:32620":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"25:1328:4019":{"crate_id":25,"path":["tokio","sync","mpsc","chan","Tx"],"kind":"struct"},"2:44408:6587":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"2:41508:193":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"6:5483:7747":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"20:2644:3831":{"crate_id":20,"path":["http","uri","authority","Authority"],"kind":"struct"},"1:5522:6776":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"2:3110:246":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"17:14503:4934":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"5:2112:6144":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"17:12175:4567":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"17:12107:4418":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"16:6278:5644":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"17:13235:4680":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"16:6976:5766":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"1:11869:29622":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"1:5048:9329":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"1:12301:1671":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"1:2458:9250":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:21462:32843":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"6:5329:7672":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"5:6752:36033":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"17:11443:4470":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"16:2808:5493":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"17:14855:5060":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:5202:3788":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"1:10577:32617":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"2:21572:9389":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:35838:3295":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"2:8669:33301":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:7593:14770":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:9435:3321":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"2:43819:6568":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:33443:3290":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"17:15266:5171":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"2:40707:6347":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"1:8210:6814":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:21691:6402":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"16:2438:5476":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"1:11155:6886":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"16:2660:5486":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"17:16176:5427":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"17:14516:4935":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"25:1208:219":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","Receiver"],"kind":"struct"},"17:13173:4664":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"2:3718:70":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"16:2684:5487":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"17:14260:4893":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"2:21566:9386":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"5:4922:216":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:12579:6391":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:11168:6887":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"17:14235:4889":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"0:165:1424":{"crate_id":0,"path":["hyper","rt"],"kind":"module"},"5:3031:35907":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:11336:6378":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"6:5320:7669":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:39189:214":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"16:5960:5591":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:41905:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"17:14051:4844":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"1:0:1663":{"crate_id":1,"path":["std"],"kind":"module"},"1:4106:9283":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"2:3352:141":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"6:6650:7980":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:13631:115":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"17:10284:4267":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:4100:9282":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"25:516:3815":{"crate_id":25,"path":["tokio","trace","async_trace_leaf","Trace"],"kind":"struct"},"1:12310:880":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"16:7528:5872":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"25:106:26417":{"crate_id":25,"path":["tokio","io","async_buf_read","AsyncBufRead"],"kind":"trait"},"6:5146:7603":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"17:13946:4828":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"16:6120:22047":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"1:4092:9281":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"5:3027:8259":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"20:2806:36204":{"crate_id":20,"path":["http","extensions","IdHasher"],"kind":"struct"},"5:2524:8263":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"2:22681:6406":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:45792:6633":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:2606:102":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:33306:3288":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:33070:3285":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:9210:9360":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"6:6874:8043":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:22867:2761":{"crate_id":2,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"6:7546:8191":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"16:5307:5554":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2:43185:6533":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"25:3084:3380":{"crate_id":25,"path":["tokio","sync","semaphore","SemaphorePermit"],"kind":"struct"},"17:15126:5133":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:12299:333":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:11937:14542":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"9:357:21046":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"20:1947:4101":{"crate_id":20,"path":["http","header","map","OccupiedEntry"],"kind":"struct"},"2:43316:6543":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:10257:128":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"6:5031:7579":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"17:15582:5270":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"6:6811:8029":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"1:8763:6878":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"18:689:4248":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:6146:6330":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"25:1917:2199":{"crate_id":25,"path":["tokio","sync","oneshot"],"kind":"module"},"2:40714:6348":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"16:2323:21183":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"17:12399:4592":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"11:2403:3800":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"2:3559:3310":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:42495:73":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"20:2112:6760":{"crate_id":20,"path":["http","header","name","Repr"],"kind":"enum"},"1:5770:219":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"5:2287:34443":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"1:4140:9284":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"1:11574:6792":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"1:2987:6760":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"1:2287:3749":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"16:5756:5563":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"6:5677:7825":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"16:3475:5523":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"17:10622:36157":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"1:2430:8270":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"18:589:4225":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"5:4436:36072":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:44084:8352":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"17:13568:4754":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"11:123:7196":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"2:21967:9392":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"17:16069:5399":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"2:43340:6386":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"1:4863:9297":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"17:14847:5057":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"6:6519:7905":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"1:10425:113":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"6:5370:7685":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"17:11142:4418":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"6:564:7278":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"1:5925:3349":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"6:1535:7318":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"25:2849:3858":{"crate_id":25,"path":["tokio","sync","broadcast","error","TryRecvError"],"kind":"enum"},"20:2063:4164":{"crate_id":20,"path":["http","header","map","Link"],"kind":"enum"},"2:43167:6530":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"17:14968:5103":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:11222:6375":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"6:6721:8002":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"20:2687:2017":{"crate_id":20,"path":["http","uri","Uri"],"kind":"struct"},"2:30201:9264":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"17:11841:4519":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"20:2512:3807":{"crate_id":20,"path":["http","method","extension","AllocatedExtension"],"kind":"struct"},"5:1516:4091":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"17:12478:4601":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"11:1007:4114":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"17:15418:5211":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"16:7539:5511":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:12556:6390":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"2:33616:3291":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"17:12043:4558":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"5:1534:4093":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"1:11801:6764":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:40362:6342":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"5:6543:4094":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"17:12621:4613":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"25:134:26418":{"crate_id":25,"path":["tokio","io","async_read","AsyncRead"],"kind":"trait"},"2:41661:3799":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"17:10954:22127":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"6:7306:8076":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"16:7813:5887":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:11378:6381":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"17:12584:4419":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"1:8616:6867":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"2:43356:2183":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"17:14723:4954":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"17:14752:4974":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"17:10251:4266":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"1:12306:732":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"16:2418:5475":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"6:6491:7893":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"16:0:3094":{"crate_id":16,"path":["gimli"],"kind":"module"},"18:765:26303":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"1:10939:30536":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"17:15596:5276":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"14:40:4680":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:42757:6527":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:43867:6570":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"6:5277:7653":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:2507:14781":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"6:5477:7746":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"17:403:4273":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"6:4932:7529":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"18:538:4222":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"6:8265:8236":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"1:6442:219":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"2:43216:6536":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:13649:3246":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"17:13424:4716":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"25:2985:36786":{"crate_id":25,"path":["tokio","sync","notify","Notification"],"kind":"enum"},"6:586:7290":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"17:11128:4393":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"9:447:21031":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"1:894:4094":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"25:2060:69":{"crate_id":25,"path":["tokio","sync","batch_semaphore","Acquire"],"kind":"struct"},"2:22959:6435":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"2:13706:151":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"20:1900:4094":{"crate_id":20,"path":["http","header","map","Drain"],"kind":"struct"},"6:6763:8014":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"1:10442:30822":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"1:8828:3799":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"17:12127:4564":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"1:2197:128":{"crate_id":1,"path":["std","ffi","os_str","Display"],"kind":"struct"},"2:3115:2968":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"2:39286:2891":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"6:8328:8250":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"1:3285:3780":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"17:13723:4789":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"6:7412:8128":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"11:1896:6140":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"11:1883:3799":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:46313:6696":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"17:14246:4891":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"2:37879:3299":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:40142:3789":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"17:15646:5289":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"17:14986:5108":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"16:6758:5731":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"20:1913:4095":{"crate_id":20,"path":["http","header","map","GetAll"],"kind":"struct"},"2:42749:6526":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"6:8259:8235":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"6:4952:7538":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"1:12320:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"16:7006:5769":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"1:4241:32120":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"1:2280:6757":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"11:1107:6054":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"17:11115:4440":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"6:8282:8241":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"6:5624:7803":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"16:6532:5692":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"2:4682:8271":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:21447:32833":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"1:8462:3758":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"1:4292:9306":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"2:43297:6542":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:11354:4463":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"16:2508:5479":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"1:12262:30056":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"23:30:2761":{"crate_id":23,"path":["itoa","private","Sealed"],"kind":"trait"},"17:12671:4616":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"1:3380:3779":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"2:45611:6624":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:3427:3767":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"17:11075:4436":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:3342:3216":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"25:159:26419":{"crate_id":25,"path":["tokio","io","async_seek","AsyncSeek"],"kind":"trait"},"6:4971:7546":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"17:13594:4759":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"2:32074:3333":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"2:8313:177":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:13482:204":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"11:1603:6058":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"17:11256:4451":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"2:22981:6437":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"2:45366:6598":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"25:1201:4017":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","Permit"],"kind":"struct"},"20:2420:2616":{"crate_id":20,"path":["http","header","value","HeaderValue"],"kind":"struct"},"16:2394:5474":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"1:8505:3762":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"17:12530:4610":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"17:16165:5422":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"6:5400:7700":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"22:22:2182":{"crate_id":22,"path":["bytes","buf","buf_impl","Buf"],"kind":"trait"},"6:7330:8093":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"1:10285:6902":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"1:8196:6758":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"0:31:2022":{"crate_id":0,"path":["hyper","body"],"kind":"module"},"1:3531:2419":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"1:8482:3760":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"17:3473:4291":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:39299:6450":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"17:11227:4447":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"16:4830:5544":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"25:2999:4062":{"crate_id":25,"path":["tokio","sync","notify","Notified"],"kind":"struct"},"1:7900:32610":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"2:31964:6443":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"1:9359:186":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"16:4913:5547":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"11:1887:3610":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"11:2498:21108":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"2:42024:90":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:45529:6612":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"5:1325:4098":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"6:7339:8099":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:415:184":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"6:5212:7625":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:10208:2421":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"2:32076:114":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"1:12316:1775":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"17:11214:4446":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"2:40323:6488":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"20:684:4087":{"crate_id":20,"path":["http","header","value","InvalidHeaderValue"],"kind":"struct"},"23:28:26401":{"crate_id":23,"path":["itoa","Integer"],"kind":"trait"},"2:39939:6456":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"1:5784:6781":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"17:15078:5127":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"21:10:26394":{"crate_id":21,"path":["fnv","FnvHasher"],"kind":"struct"},"16:7695:5883":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"2:11350:6379":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:4356:109":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"17:14977:5107":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"2:21435:32833":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"1:10948:30538":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"16:4614:5538":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"11:2469:6140":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"17:12768:22097":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"2:43574:6553":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"5:4267:3741":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"25:984:9106":{"crate_id":25,"path":["tokio","sync","broadcast","Recv"],"kind":"struct"},"17:15249:5163":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"15:0:3093":{"crate_id":15,"path":["addr2line"],"kind":"module"},"16:7473:5611":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"22:1154:4083":{"crate_id":22,"path":["bytes","buf","writer","Writer"],"kind":"struct"},"16:2936:21185":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"1:8438:3787":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"6:8300:8244":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"6:1692:7421":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"16:3669:4308":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"2:42727:156":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"17:15410:5210":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"2:46268:6695":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"6:5617:7800":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"17:16138:5413":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"1:12298:1268":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"1:3597:29368":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"2:46479:6704":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"17:11764:4506":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"18:80:26291":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"20:2657:3834":{"crate_id":20,"path":["http","uri","scheme","Scheme"],"kind":"struct"},"2:42957:8351":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"16:8313:136":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"11:2383:3799":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"16:6246:205":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:39926:6455":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"20:2541:2451":{"crate_id":20,"path":["http","request","Builder"],"kind":"struct"},"1:7831:4277":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"0:341:2027":{"crate_id":0,"path":["hyper","upgrade"],"kind":"module"},"2:10688:33042":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"16:3778:5525":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"2:46048:6659":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"2:22704:6411":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"2:43956:6572":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"6:6609:7960":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"16:4531:5535":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"20:1935:4098":{"crate_id":20,"path":["http","header","map","VacantEntry"],"kind":"struct"},"2:40169:6477":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"17:12225:4574":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:2662:200":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:9195:9359":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"1:5898:3348":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"17:15992:5385":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"2:10259:3672":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"9:178:21098":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"17:15092:5130":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"18:531:4219":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:41436:6506":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"16:7769:5885":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"16:6047:5600":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"17:11583:4486":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"5:1340:4101":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"5:7629:6179":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"5:3870:6140":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"20:1968:4104":{"crate_id":20,"path":["http","header","map","ValueIterMut"],"kind":"struct"},"16:4771:5542":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"2:22113:2761":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"25:3073:3377":{"crate_id":25,"path":["tokio","sync","batch_semaphore","AcquireError"],"kind":"struct"},"2:22970:6436":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"2:22788:33091":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"17:437:4275":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"1:8778:9351":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"2:43268:6539":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"17:15814:5331":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"17:14372:4908":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"11:2536:7202":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"6:6900:8058":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"5:296:2462":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"2:45319:6595":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:11205:3320":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"1:11179:30539":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"17:10759:4418":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:39960:6458":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"17:11042:4431":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"16:7799:5504":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"20:547:4084":{"crate_id":20,"path":["http","header","name","InvalidHeaderName"],"kind":"struct"},"1:5269:203":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"25:1468:4020":{"crate_id":25,"path":["tokio","sync","mpsc","list","Rx"],"kind":"struct"},"17:12443:4598":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"1:9386:3359":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"1:11607:6796":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"22:1089:3760":{"crate_id":22,"path":["bytes","buf","chain","Chain"],"kind":"struct"},"7:31:21018":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"6:5352:7675":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"2:40041:106":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"25:3096:3382":{"crate_id":25,"path":["tokio","sync","rwlock","owned_read_guard","OwnedRwLockReadGuard"],"kind":"struct"},"16:6353:5457":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"2:3548:253":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:4743:9283":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"1:10351:8801":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"2:5244:953":{"crate_id":2,"path":["core","iter"],"kind":"module"},"25:551:181":{"crate_id":25,"path":["tokio","util","linked_list","LinkedList"],"kind":"struct"},"6:1680:7417":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"1:622:3251":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"17:15197:5154":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"16:5367:22043":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"1:363:6739":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"2:7592:14769":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"6:5283:7656":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"2:40261:6485":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:12296:1821":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"17:12900:4633":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"16:6940:5764":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"17:11269:22146":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"17:11661:4496":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"17:15931:4665":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"17:14489:4931":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:9391:3360":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"5:7456:3610":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2:44281:149":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"1:4708:9326":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"2:42440:8343":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"2:4793:3689":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"16:4641:5539":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"17:13509:4731":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"17:11634:4494":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:2609:103":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"18:521:26304":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"6:7366:8109":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"5:1566:209":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"5:1544:6046":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:43788:6564":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2:10898:2761":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:11270:8368":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"2:3156:3279":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"18:548:152":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"5:5061:3741":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"6:6597:7955":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"1:6215:32625":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"1:9497:6752":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"2:22334:14781":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"function"},"2:43979:6580":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"16:2636:5485":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"1:3020:225":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"20:1990:3079":{"crate_id":20,"path":["http","header","map","Cursor"],"kind":"enum"},"16:867:4270":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"1:6723:3356":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"11:1566:21113":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"16:7711:209":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"1:12300:1637":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"17:12792:4367":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"25:859:4009":{"crate_id":25,"path":["tokio","runtime","driver","Handle"],"kind":"struct"},"6:8012:8222":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"18:659:4239":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"17:15463:5221":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"25:2980:4059":{"crate_id":25,"path":["tokio","sync","notify","AtomicNotification"],"kind":"struct"},"17:11547:4346":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"17:13146:4656":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"2:22387:14781":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"function"},"2:44306:206":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"5:5451:14534":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"16:2998:5519":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"6:559:7276":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"16:8155:5944":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"17:11621:4492":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"17:2037:4281":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"1:9381:234":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"6:7429:8129":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"17:12342:4585":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"1:904:6140":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"1:4042:9279":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"1:638:6743":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"17:11557:4478":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"17:16198:5429":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"2:734:9265":{"crate_id":2,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"2:10476:156":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"2:40149:6475":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"2:30458:3270":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"17:2175:22174":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"1:9095:6886":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"2:45936:6655":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:11876:2185":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"16:6620:5704":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"17:12969:4636":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"6:6821:8032":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"17:11898:4524":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"17:11497:4473":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"16:6504:5690":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:45272:6588":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"5:5915:4094":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"1:11541:6926":{"crate_id":1,"path":["std","sys","thread_local","fast_local","Key"],"kind":"struct"},"1:7841:6932":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"16:7656:22055":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"16:8118:5939":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"15:306:21139":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"17:15608:5279":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"22:1111:4082":{"crate_id":22,"path":["bytes","buf","reader","Reader"],"kind":"struct"},"17:15720:5310":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"6:1653:7404":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:44104:8357":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"2:22729:6412":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"17:10068:22099":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"17:11016:4430":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"17:16151:5419":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"2:11257:6376":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"20:2244:36178":{"crate_id":20,"path":["http","header","name","StandardHeader"],"kind":"enum"},"20:0:2011":{"crate_id":20,"path":["http"],"kind":"module"},"11:837:6048":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"20:2012:4107":{"crate_id":20,"path":["http","header","map","HashValue"],"kind":"struct"},"17:13024:22121":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"1:11187:8361":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"16:6433:5682":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"1:6726:3357":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"6:5565:7774":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"25:1137:4092":{"crate_id":25,"path":["tokio","sync","mpsc","block","Values"],"kind":"struct"},"1:5556:6778":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"1:7331:28791":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"5:2205:6145":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"17:15313:5181":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"17:10573:36162":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"6:6532:7911":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:12189:4571":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"18:726:4258":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"20:1884:4092":{"crate_id":20,"path":["http","header","map","Values"],"kind":"struct"},"1:8218:3772":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"17:15390:5204":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"16:4882:5546":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"17:13363:4706":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"18:0:3096":{"crate_id":18,"path":["memchr"],"kind":"module"},"5:3269:6061":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"10:44:6069":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"1:9295:2505":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"2:30473:3668":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2:40009:14616":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"25:2827:4034":{"crate_id":25,"path":["tokio","sync","broadcast","error","SendError"],"kind":"struct"},"1:5572:6779":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"0:494:3026":{"crate_id":0,"path":["hyper","upgrade","OnUpgrade"],"kind":"struct"},"0:361:3023":{"crate_id":0,"path":["hyper","upgrade","Upgraded"],"kind":"struct"},"17:15521:5263":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:2991:2014":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"6:4870:7500":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"6:5472:7744":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"6:1559:7335":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"20:2707:2625":{"crate_id":20,"path":["http","uri","InvalidUriParts"],"kind":"struct"},"25:0:2037":{"crate_id":25,"path":["tokio"],"kind":"module"},"5:2101:6143":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"2:41602:3551":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"17:10350:4269":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"17:15734:5312":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"1:9399:161":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"11:1728:155":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"1:8190:127":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"16:7144:22053":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"22:849:4078":{"crate_id":22,"path":["bytes","fmt","BytesRef"],"kind":"struct"},"2:3318:124":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:12317:942":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"16:3196:5464":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"2:23003:6439":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"1:8642:6769":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:43370:3762":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:37769:3297":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:43205:6535":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"17:11313:4457":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"17:15058:5119":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2:41604:3840":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"9:392:21032":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"18:635:4238":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"6:5598:7786":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:45486:6609":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"17:11567:4480":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"1:1825:6749":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"6:5219:7626":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"17:14325:4901":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"11:811:6140":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"18:563:4224":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"14:220:6042":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"17:16121:5411":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"18:481:4213":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"2:4255:3741":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"20:1857:3800":{"crate_id":20,"path":["http","header","map","IterMut"],"kind":"struct"},"2:6850:8272":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"2:40300:6338":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"6:5528:7755":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"5:7083:36058":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"17:14912:5097":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"1:6132:219":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"17:15799:5330":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"17:15151:5141":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"1:482:32627":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"5:7714:6182":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2:12365:14549":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"25:2971:4056":{"crate_id":25,"path":["tokio","sync","notify","Waiter"],"kind":"struct"},"6:5653:7813":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"6:570:7281":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"25:1198:4016":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","WeakSender"],"kind":"struct"},"2:42942:6528":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"2:41552:3610":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"22:0:2035":{"crate_id":22,"path":["bytes"],"kind":"module"},"2:11145:6373":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"2:4618:6323":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"0:262:2026":{"crate_id":0,"path":["hyper","service"],"kind":"module"},"9:0:3088":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"17:15333:5188":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"2:4613:6322":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"23:14:7142":{"crate_id":23,"path":["itoa","Buffer"],"kind":"struct"},"2:39968:6318":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"16:7052:5780":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"5:6670:3610":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"17:10828:36165":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"2:45771:6632":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:3171:3282":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:8577:9307":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"16:4560:5536":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:45433:6606":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:44092:8354":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"0:166:2722":{"crate_id":0,"path":["hyper","rt","bounds"],"kind":"module"},"5:6913:14578":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2:11077:3800":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"6:7984:8219":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"6:6880:8044":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:46514:6707":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:42739:3856":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"1:10920:127":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"11:2326:4101":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"16:6026:5446":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"17:16223:5435":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"17:10092:22117":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:12289:4579":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"16:7168:6899":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"6:538:7265":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"24:95:2223":{"crate_id":24,"path":["http_body","frame","Kind"],"kind":"enum"},"2:32836:3283":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:21962:2761":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"2:45334:6596":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"5:7639:6180":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"2:23014:6440":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"6:6664:7982":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"25:3017:2189":{"crate_id":25,"path":["tokio","sync","oneshot","Sender"],"kind":"struct"},"2:41536:3799":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"1:3242:30421":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"5:7428:209":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"25:1464:4019":{"crate_id":25,"path":["tokio","sync","mpsc","list","Tx"],"kind":"struct"},"2:2833:2761":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"25:2703:4045":{"crate_id":25,"path":["tokio","sync","watch","Shared"],"kind":"struct"},"1:5449:128":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"5:7522:9181":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"17:11743:4503":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"2:21689:9387":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"5:5711:14578":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"17:12278:4578":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"25:2878:3379":{"crate_id":25,"path":["tokio","sync","mpsc","unbounded","Semaphore"],"kind":"struct"},"20:2532:3030":{"crate_id":20,"path":["http","request","Parts"],"kind":"struct"},"17:3264:4289":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"17:11367:4436":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"16:3842:5527":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"16:6480:5499":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"2:4539:3686":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"1:11467:32612":{"crate_id":1,"path":["std","sys","sync","once","futex","CompletionGuard"],"kind":"struct"},"2:2667:133":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"6:4924:7527":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"16:7618:5878":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"6:7537:8188":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"5:0:307":{"crate_id":5,"path":["alloc"],"kind":"module"},"16:4856:5545":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"2:40094:9225":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"18:573:4215":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"1:11635:6799":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"2:40028:6465":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:6849:232":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"6:5083:7598":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"5:4500:36072":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:8597:6865":{"crate_id":1,"path":["std","os","unix","net","ucred","UCred"],"kind":"struct"},"1:4753:8120":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"11:1160:6056":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"25:3008:3856":{"crate_id":25,"path":["tokio","sync","notify","State"],"kind":"enum"},"1:6651:3362":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"2:12595:6392":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"5:1575:6139":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"17:15356:5196":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"14:202:14562":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"20:2693:3030":{"crate_id":20,"path":["http","uri","Parts"],"kind":"struct"},"2:42214:3679":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:9262:27216":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"17:10997:4428":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"1:3022:136":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"17:11715:4500":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"2:42961:6370":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:5641:6780":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"17:2203:4285":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:40122:6474":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"2:15:2404":{"crate_id":2,"path":["core","write"],"kind":"macro"},"2:40348:4236":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:6794:3364":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLockGuard"],"kind":"struct"},"1:6505:185":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"17:1207:4280":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:13761:9185":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"5:5999:71":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2:12843:14546":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:850:3800":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"17:13814:4810":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"18:680:4246":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"9:482:21030":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"2:4746:3688":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"5:3236:3799":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"1:4499:6768":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"1:5891:3347":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"17:13046:4644":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"0:363:1210":{"crate_id":0,"path":["hyper","upgrade","on"],"kind":"function"},"18:491:4214":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"2:8175:3218":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"2:45558:6621":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:12519:6387":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"17:9807:22100":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"1:11240:161":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"2:39911:33078":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"2:42200:3671":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:4425:6767":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"17:11419:4418":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"16:6466:5686":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"17:13999:4837":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"1:4630:9309":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"6:4891:7509":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:8620:8109":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"16:4587:5537":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"1:12295:458":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"5:3248:35478":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"1:534:9154":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"2:8129:14767":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:22822:6425":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"6:6417:7856":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"17:13344:4705":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"2:6032:6329":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"20:1713:136":{"crate_id":20,"path":["http","error","Error"],"kind":"struct"},"6:6657:7981":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"17:13497:4730":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"17:16032:4683":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"16:5897:5578":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"14:7:6035":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"17:13986:4836":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"1:7437:32121":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"2:40755:6350":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"16:6160:21157":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"2:43287:6541":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"25:385:97":{"crate_id":25,"path":["tokio","loom","std","atomic_usize","AtomicUsize"],"kind":"struct"},"17:14025:4840":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"6:4916:7525":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:9296:3549":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"16:6543:5693":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:25877:266":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"2:41827:93":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"16:7321:3547":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"17:16105:5406":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"16:5347:5555":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"16:7061:5783":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"5:7511:6171":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"1:11884:2185":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"1:5587:113":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:21584:6402":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"25:286:9263":{"crate_id":25,"path":["tokio","net","addr","ToSocketAddrs"],"kind":"trait"},"16:5781:5502":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"5:1062:36033":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"5:7356:3610":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"5:924:9184":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"1:12081:29312":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"14:31:6035":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"6:1723:7433":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:41414:33152":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"2:3381:3305":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"22:1117:3761":{"crate_id":22,"path":["bytes","buf","take","Take"],"kind":"struct"},"6:4885:7507":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"17:12572:4418":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"16:5846:5574":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"25:3221:4075":{"crate_id":25,"path":["tokio","sync","watch","state","AtomicState"],"kind":"struct"},"6:4897:7512":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"17:14402:4914":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"1:9283:6896":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"2:39134:212":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"2:41544:3800":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"16:7633:36146":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"2:3105:117":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"16:2458:5477":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"1:3245:32447":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"17:12089:4562":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"17:12711:136":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"17:12647:4614":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"6:4979:7551":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:23025:6441":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"2:46525:6708":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"20:439:2761":{"crate_id":20,"path":["http","header","map","into_header_name","Sealed"],"kind":"trait"},"25:3091:3381":{"crate_id":25,"path":["tokio","sync","semaphore","OwnedSemaphorePermit"],"kind":"struct"},"6:5266:7645":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:44138:130":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:1940:3265":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"17:9984:22115":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"1:8294:6816":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"2:2509:14782":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"2:42063:97":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:21425:3577":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:5970:3361":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"17:11324:4459":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"1:4822:9308":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"6:1593:7356":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:1933:650":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"2:40372:6489":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:40730:6349":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"25:2900:9360":{"crate_id":25,"path":["tokio","sync","mpsc","error","TrySendError"],"kind":"enum"},"5:3659:3800":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:46146:6693":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"6:6689:7990":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"2:44112:8359":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"18:651:4215":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"2:10265:3680":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"6:5014:7570":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:42207:3672":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"2:3183:3301":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"6:6441:7872":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"5:4466:3741":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"1:10877:6809":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"1:5025:9327":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"2:43624:3759":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:10516:6368":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"11:687:3800":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:2653:469":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"6:479:7228":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"18:507:4215":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:1582:4094":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:5164:33067":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"25:1205:4018":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","OwnedPermit"],"kind":"struct"},"6:5445:7726":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"16:4802:5543":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"2:22904:6430":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"25:185:26420":{"crate_id":25,"path":["tokio","io","async_write","AsyncWrite"],"kind":"trait"},"2:46499:6706":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"17:13766:4800":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"2:2493:651":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"17:12362:4590":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"1:8692:6876":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"2:9910:33302":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"17:11574:4483":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"11:1891:4094":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"1:860:3610":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:45596:6623":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:4048:9278":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"1:8512:3759":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"5:6391:3247":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"1:6394:2189":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"2:21464:32836":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"2:45809:6634":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2:40247:6482":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"2:45302:6592":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"25:936:219":{"crate_id":25,"path":["tokio","sync","broadcast","Receiver"],"kind":"struct"},"5:7364:6167":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"11:351:36113":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"6:578:7286":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"25:3167:3687":{"crate_id":25,"path":["tokio","sync","watch","Ref"],"kind":"struct"},"17:11799:4512":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"25:3102:3383":{"crate_id":25,"path":["tokio","sync","rwlock","owned_write_guard","OwnedRwLockWriteGuard"],"kind":"struct"},"1:8740:3856":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"16:6442:5683":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"1:9151:4034":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"17:256:4270":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"6:1517:7307":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"2:41527:172":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"6:7314:8081":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:39949:6457":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:940:6049":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"16:6813:5744":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"11:1142:6055":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"2:41470:6359":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"2:40178:3760":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"25:2808:3347":{"crate_id":25,"path":["tokio","sync","barrier","Barrier"],"kind":"struct"},"2:40497:3761":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:46459:6702":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"2:22432:9468":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"1:12278:27248":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"17:10612:4415":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"1:1810:674":{"crate_id":1,"path":["std","env"],"kind":"module"},"20:2661:3830":{"crate_id":20,"path":["http","uri","scheme","Scheme2"],"kind":"enum"},"1:2042:196":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"1:357:6737":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"16:7910:22057":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"6:4824:7466":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"1:1608:6062":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"17:14079:4848":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"16:3899:5528":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:44108:8358":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"6:0:978":{"crate_id":6,"path":["libc"],"kind":"module"},"17:15383:5203":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"11:2151:4098":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"2:13455:34092":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"17:14356:4907":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"5:669:6132":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"2:44096:8355":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"17:10720:36161":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:42221:3680":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"20:2545:2015":{"crate_id":20,"path":["http","response","Response"],"kind":"struct"},"17:10317:4268":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"20:2461:3805":{"crate_id":20,"path":["http","method","Inner"],"kind":"enum"},"17:12251:4576":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"2:40270:6331":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"2:22282:9474":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"6:5134:7602":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"1:10982:27250":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"16:6263:5642":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"6:5296:7661":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"1:8450:2440":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"17:15214:5157":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"2:3578:33330":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:1073:6056":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"25:3193:3857":{"crate_id":25,"path":["tokio","sync","watch","error","RecvError"],"kind":"struct"},"11:2369:6065":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"2:40219:6481":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:10283:6903":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"22:1098:3610":{"crate_id":22,"path":["bytes","buf","iter","IntoIter"],"kind":"struct"},"1:9121:6888":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"6:465:7220":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"16:7755:5506":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"16:2854:5495":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"16:6427:5681":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"25:3128:3385":{"crate_id":25,"path":["tokio","sync","rwlock","write_guard_mapped","RwLockMappedWriteGuard"],"kind":"struct"},"20:2560:2451":{"crate_id":20,"path":["http","response","Builder"],"kind":"struct"},"7:78:21025":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"6:6670:7985":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"1:3845:6763":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"2:31953:2504":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"1:8304:3774":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:3475:210":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"19:0:1247":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"17:14463:4929":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:40191:6478":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"20:1478:3833":{"crate_id":20,"path":["http","uri","port","Port"],"kind":"struct"},"6:5390:7694":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"7:0:1850":{"crate_id":7,"path":["unwind"],"kind":"module"},"16:8073:5936":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"1:10157:6503":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"2:39229:215":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"2:10468:152":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"5:7553:6172":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"6:5244:7635":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"16:5742:5558":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"17:13325:4700":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"17:13272:4693":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"16:6456:22049":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"22:306:4077":{"crate_id":22,"path":["bytes","buf","uninit_slice","UninitSlice"],"kind":"struct"},"16:6948:5507":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"16:8136:5941":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"16:2788:5492":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"16:4424:5532":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"6:7389:8127":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"5:4102:36033":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"1:11580:6928":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"6:5052:7588":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"11:832:4093":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"6:5515:7754":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"16:2478:5478":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"2:12777:3808":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"17:14386:4910":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"17:14475:4930":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"17:13855:4814":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"6:5407:1217":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"1:12293:405":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"17:16212:5433":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"1:3287:3781":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"6:5588:7781":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"5:4421:264":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"16:5831:5572":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"2:43329:6546":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"18:754:4263":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"17:14341:4903":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"6:523:7256":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"5:7406:34446":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"17:11510:4474":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"25:1521:4033":{"crate_id":25,"path":["tokio","sync","mpsc","unbounded","WeakUnboundedSender"],"kind":"struct"},"25:1855:36789":{"crate_id":25,"path":["tokio","sync","notify","NotifyWaitersList"],"kind":"struct"},"17:11730:4502":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"17:13785:4805":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2:45419:6605":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:9723:84":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"6:5181:7606":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"17:14091:4849":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"1:2278:137":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"1:10534:6885":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"2:22948:6434":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"17:13412:4715":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"16:4468:5533":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"2:2036:14791":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"17:10877:4420":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:9886:22112":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"17:10155:4402":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"18:623:36166":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"16:6066:5607":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"2:3152:3332":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"16:5995:5594":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"17:15769:5325":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"17:12929:4634":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"15:327:21143":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"3:0:485":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"17:14788:5005":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"2:41788:86":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"5:730:118":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"2:41330:8342":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"17:9916:22113":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"1:1863:6751":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:4692:3687":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"18:113:26293":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"25:3080:3379":{"crate_id":25,"path":["tokio","sync","semaphore","Semaphore"],"kind":"struct"},"11:1025:4101":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2:40209:6480":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"25:933:2189":{"crate_id":25,"path":["tokio","sync","broadcast","Sender"],"kind":"struct"},"2:43945:14561":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"17:12993:22120":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"25:980:26423":{"crate_id":25,"path":["tokio","sync","broadcast","RecvGuard"],"kind":"struct"},"17:14038:4842":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"1:8016:9169":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"22:395:2183":{"crate_id":22,"path":["bytes","bytes","Bytes"],"kind":"struct"},"5:3646:3799":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:22937:6433":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"17:12422:4594":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"20:1980:4105":{"crate_id":20,"path":["http","header","map","ValueDrain"],"kind":"struct"},"16:3014:21186":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"2:2939:123":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"1:11377:2182":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"25:1363:4025":{"crate_id":25,"path":["tokio","sync","mpsc","chan","RxFields"],"kind":"struct"},"16:3810:5526":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"6:1621:7381":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:11646:8375":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"16:5700:5501":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"1:8201:6813":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"2:22373:9478":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"17:15281:5173":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"6:6409:7854":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"6:7584:8210":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"20:2025:4108":{"crate_id":20,"path":["http","header","map","Bucket"],"kind":"struct"},"6:5336:7673":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"17:13832:4811":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"16:3329:5522":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"1:1603:6061":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"1:7963:2451":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"2:33247:3286":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"2:45824:6635":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"16:7823:22056":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"20:483:2761":{"crate_id":20,"path":["http","header","map","as_header_name","Sealed"],"kind":"trait"},"2:13051:119":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:7288:8659":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"2:44100:8356":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"17:13473:4726":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:46421:6700":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"6:1547:7327":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"25:527:26429":{"crate_id":25,"path":["tokio","util","wake_list","WakeList"],"kind":"struct"},"1:10684:4528":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"5:5:1876":{"crate_id":5,"path":["alloc","vec"],"kind":"macro"},"10:0:3089":{"crate_id":10,"path":["adler"],"kind":"module"},"17:15445:5218":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"17:10170:4403":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"17:15190:5152":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:10018:22096":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"1:9078:6885":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"2:3827:4094":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"8:0:3087":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"17:13606:4762":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"2:2059:6185":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"2:46223:6694":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"2:41710:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:2504:2413":{"crate_id":1,"path":["std","io"],"kind":"module"},"17:12201:4572":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"18:643:4215":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"6:6746:8006":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"5:1463:3799":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"17:15569:5264":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"25:1623:185":{"crate_id":25,"path":["tokio","sync","mutex","Mutex"],"kind":"struct"},"17:11341:4462":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:8166:164":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:4755:8122":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"11:700:3610":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:39149:209":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:2628:112":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:42521:136":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"17:10439:4404":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"1:1055:4101":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"17:14131:4853":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"12:0:3091":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"5:868:9183":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"2:3300:3313":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"2:11102:3762":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"20:2150:4119":{"crate_id":20,"path":["http","header","name","MaybeLower"],"kind":"struct"}},"external_crates":{"23":{"name":"itoa","html_root_url":"https://docs.rs/itoa/1.0.10/"},"20":{"name":"http","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"25":{"name":"tokio","html_root_url":null},"22":{"name":"bytes","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"24":{"name":"http_body","html_root_url":null},"21":{"name":"fnv","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":28}