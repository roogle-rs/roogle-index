{"root":"0:0:1643","crate_version":"0.14.20","includes_private":false,"index":{"2:3368:4878":{"id":"2:3368:4878","crate_id":2,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3370:1103"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13499:5042":{"id":"2:13499:5042","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12957:3930","`FromStr`":"2:12957:3930"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47567:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12957:3930","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12957:3930","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6821:4496":{"id":"1:6821:4496","crate_id":1,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6822:64254","1:6823:64255"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10593:2513","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3186-0:768:2619":{"id":"b:2:3186-0:768:2619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3159:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3188:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:625:2508":{"id":"0:625:2508","crate_id":0,"name":"make_service_fn","span":{"filename":"src/service/make.rs","begin":[138,0],"end":[144,1]},"visibility":"public","docs":"Create a `MakeService` from a function.\n\n# Example\n\n```\n# #[cfg(feature = \"runtime\")]\n# async fn run() {\nuse std::convert::Infallible;\nuse hyper::{Body, Request, Response, Server};\nuse hyper::server::conn::AddrStream;\nuse hyper::service::{make_service_fn, service_fn};\n\nlet addr = ([127, 0, 0, 1], 3000).into();\n\nlet make_svc = make_service_fn(|socket: &AddrStream| {\n    let remote_addr = socket.remote_addr();\n    async move {\n        Ok::<_, Infallible>(service_fn(move |_: Request<Body>| async move {\n            Ok::<_, Infallible>(\n                Response::new(Body::from(format!(\"Hello, {}!\", remote_addr)))\n            )\n        }))\n    }\n});\n\n// Then bind and serve...\nlet server = Server::bind(&addr)\n    .serve(make_svc);\n\n// Finally, spawn `server` onto an Executor...\nif let Err(e) = server.await {\n    eprintln!(\"server error: {}\", e);\n}\n# }\n# fn main() {}\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"MakeServiceFn","id":"0:931:2562","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Target","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Ret","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"2:3506:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Target"}}}],"output":{"kind":"generic","inner":"Ret"}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Ret"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13731:138","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"24:230:1814":{"id":"24:230:1814","crate_id":24,"name":"AsyncRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["24:231:1825"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:210":{"id":"0:210","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[19,0],"end":[19,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"http_body::Body","name":"HttpBody","id":"34:470:1614","glob":false}},"1:6824:4469":{"id":"1:6824:4469","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6825:8616"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10593:2513","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13507:4489":{"id":"2:13507:4489","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:15939:2707"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:49715:4490","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"31:110:3112":{"id":"31:110:3112","crate_id":31,"name":"FusedStream","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["31:111:6615"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Stream","id":"31:96:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:2905:183":{"id":"2:2905:183","crate_id":2,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2907:604","2:2908:907"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3258:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:5687:4479":{"id":"1:5687:4479","crate_id":1,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5688:6018","1:5689:2064"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10593:2513","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:13750-0:770:2622":{"id":"b:2:13750-0:770:2622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13731:138","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoFuture","id":"2:13746:150","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:13752:181","2:13753:150","2:13754:767"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"F"}}},"2:3231:115":{"id":"2:3231:115","crate_id":2,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3232:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9239:3227-0:768:2619":{"id":"a:2:9239:3227-0:768:2619","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9239:3227","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:223":{"id":"0:223","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[23,27],"end":[23,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::body::Sender","name":"Sender","id":"0:312:1869","glob":false}},"5:6106:64222":{"id":"5:6106:64222","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:15945:2712"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6897:4473":{"id":"1:6897:4473","crate_id":1,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6898:67946"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13753:150":{"id":"2:13753:150","crate_id":2,"name":"IntoFuture","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"F"}}},"2:3565:4767":{"id":"2:3565:4767","crate_id":2,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3567:754"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3258:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"2:3561:4529","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:5753:4447":{"id":"1:5753:4447","crate_id":1,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5754:68287","1:5755:68289","1:5756:68288","1:5757:68290"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:5833:5314":{"id":"5:5833:5314","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5835:181","5:5836:432"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3258:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:8453:2808":{"id":"2:8453:2808","crate_id":2,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8454:793","2:8455:1783"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8582:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:1079:4487":{"id":"1:1079:4487","crate_id":1,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:1080:2062","1:1081:5298","1:1082:64222","1:1083:64223","1:1084:6203","1:1085:64224","1:1086:64225"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13394:59970":{"id":"2:13394:59970","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:47440:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47440:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10914:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10914:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:24:2649-0:768:2619":{"id":"b:24:2649-0:768:2619","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_write_ext.rs","begin":[1293,0],"end":[1293,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncWrite","id":"24:309:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3258:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["write_buf","write","write_i128","write_i16","write_u128","write_u16","write_f64","write_u32_le","write_i64_le","write_f32_le","flush","write_all_buf","shutdown","write_i32","write_u128_le","write_u32","write_u16_le","write_i32_le","write_f64_le","write_all","write_i64","write_i8","write_u64","write_u8","write_f32","write_i16_le","write_vectored","write_u64_le","write_i128_le"],"trait":{"kind":"resolved_path","inner":{"name":"AsyncWriteExt","id":"24:4168:2952","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"W"}}},"2:13414:64610":{"id":"2:13414:64610","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:15939:2707","self::pattern":"2:13018:3404"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:38":{"id":"0:38","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,30],"end":[71,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::error::Result","name":"Result","id":"0:418:205","glob":false}},"30:506:3001":{"id":"30:506:3001","crate_id":30,"name":"TryFutureExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["30:507:2017","30:510:72448","30:514:2018","30:517:72449","30:519:72450","30:521:292","30:524:6580","30:527:72451","30:529:72452","30:531:6564","30:532:72453","30:533:1824","30:535:767","30:536:72454"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFuture","id":"31:44:3000","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3182-0:768:2619":{"id":"b:2:3182-0:768:2619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3159:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3156:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3185:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:482:1122":{"id":"0:482:1122","crate_id":0,"name":"rt","span":{"filename":"src/rt.rs","begin":[1,0],"end":[12,1]},"visibility":"public","docs":"Runtime components\n\nBy default, hyper includes the [tokio](https://tokio.rs) runtime.\n\nIf the `runtime` feature is disabled, the types in this module can be used\nto plug in other runtimes.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:483:2471"],"is_stripped":false}},"0:650:2503":{"id":"0:650:2503","crate_id":0,"name":"util","span":{"filename":"src/service/util.rs","begin":[1,0],"end":[84,52]},"visibility":{"restricted":{"parent":"0:486:1619","path":"::service"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:680:2509","0:684:2580"],"is_stripped":true}},"5:6411:223":{"id":"5:6411:223","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6412:1395"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"24:442:4428":{"id":"24:442:4428","crate_id":24,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ToSocketAddrsPriv","id":"24:498:71293","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:22839:4950":{"id":"2:22839:4950","crate_id":2,"name":"SimdPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22840:4949","2:22841:1245","2:22842:1270"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13504:64225":{"id":"2:13504:64225","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:44:1616":{"id":"0:44:1616","crate_id":0,"name":"common","span":{"filename":"src/common/mod.rs","begin":[1,0],"end":[39,47]},"visibility":"crate","docs":null,"links":{},"attrs":["#[macro_use]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":true}},"0:772:959":{"id":"0:772:959","crate_id":0,"name":"on","span":{"filename":"src/upgrade.rs","begin":[104,0],"end":[106,1]},"visibility":"public","docs":"Gets a pending HTTP upgrade from this message.\n\nThis can be called on the following types:\n\n- `http::Request<B>`\n- `http::Response<B>`\n- `&mut http::Request<B>`\n- `&mut http::Response<B>`","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["msg",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"sealed::CanUpgrade","id":"0:811:2642","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13417:64611":{"id":"2:13417:64611","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"self::pattern":"2:13018:3404","prim@char":"1:15939:2707"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:783:1835":{"id":"0:783:1835","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/upgrade.rs","begin":[182,4],"end":[184,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Pin","id":"2:47559:188","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}},"param_names":[]}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"task::Context","id":"2:14033:1827","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:50307:190","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4072:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13396:2041":{"id":"2:13396:2041","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:47440:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47440:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10914:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10914:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3153:74":{"id":"2:3153:74","crate_id":2,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3155:2025"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3258:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:781:1833":{"id":"0:781:1833","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/upgrade.rs","begin":[170,4],"end":[176,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Pin","id":"2:47559:188","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}},"param_names":[]}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"task::Context","id":"2:14033:1827","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["bufs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"io::IoSlice","id":"1:11096:1759","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:50307:190","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4072:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10272:109":{"id":"2:10272:109","crate_id":2,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10273:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:490:1604":{"id":"0:490:1604","crate_id":0,"name":"http","span":{"filename":"src/service/http.rs","begin":[1,0],"end":[58,1]},"visibility":{"restricted":{"parent":"0:486:1619","path":"::service"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":true}},"30:4786:1924":{"id":"30:4786:1924","crate_id":30,"name":"TryStreamExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["30:4787:72449","30:4789:2017","30:4792:2018","30:4795:292","30:4798:6580","30:4801:72451","30:4803:72452","30:4805:6579","30:4806:6581","30:4807:3517","30:4810:6587","30:4813:6588","30:4816:6591","30:4820:3511","30:4822:6585","30:4823:6582","30:4826:6583","30:4830:6564","30:4831:3516","30:4835:6584","30:4836:6589","30:4837:6590","30:4838:72568"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryStream","id":"31:127:3003","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3401:4792":{"id":"2:3401:4792","crate_id":2,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3403:181","2:3404:1234"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:16":{"id":"0:16","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[65,47],"end":[65,55]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::http::Response","name":"Response","id":"20:1494:1608","glob":false}},"2:8384:151":{"id":"2:8384:151","crate_id":2,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8385:1955","2:8386:3488","2:8387:768"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:421:127":{"id":"0:421:127","crate_id":0,"name":"Error","span":{"filename":"src/error.rs","begin":[11,0],"end":[13,1]},"visibility":"public","docs":"Represents errors that can occur handling HTTP streams.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"a:2:3294:1757-0:939:2626":{"id":"a:2:3294:1757-0:939:2626","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3294:1757","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3294:1757","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3201:1413":{"id":"2:3201:1413","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47567:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3166:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3503:130":{"id":"2:3503:130","crate_id":2,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3505:376"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"2:3506:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3385:4507":{"id":"2:3385:4507","crate_id":2,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3387:181","2:3388:353"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3159:135":{"id":"2:3159:135","crate_id":2,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3161:681"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:247:1613":{"id":"0:247:1613","crate_id":0,"name":"body","span":{"filename":"src/body/body.rs","begin":[1,0],"end":[785,1]},"visibility":{"restricted":{"parent":"0:202:1613","path":"::body"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:297:1614","0:312:1869"],"is_stripped":true}},"2:3360:4874":{"id":"2:3360:4874","crate_id":2,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3362:893"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13452:69981":{"id":"2:13452:69981","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47440:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"24:4094:2950":{"id":"24:4094:2950","crate_id":24,"name":"AsyncBufReadExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["24:4095:2867","24:4097:6286","24:4099:2941","24:4100:6284","24:4101:64056","24:4102:5646"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncBufRead","id":"24:188:2943","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13474:69988":{"id":"2:13474:69988","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3200:127":{"id":"2:3200:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:38753:2975","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"0:714":{"id":"0:714","crate_id":0,"name":null,"span":{"filename":"src/service/mod.rs","begin":[54,0],"end":[54,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::make::make_service_fn","name":"make_service_fn","id":"0:625:2508","glob":false}},"2:3407:4795":{"id":"2:3407:4795","crate_id":2,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3409:352"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13752:181":{"id":"2:13752:181","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13731:138","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}},"5:6085:2873":{"id":"5:6085:2873","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:24:2497-0:768:2619":{"id":"b:24:2497-0:768:2619","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","begin":[1294,0],"end":[1294,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncRead","id":"24:230:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3258:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["read_i8","take","chain","read_to_string","read_to_end","read_i128_le","read_u32_le","read_buf","read_u128","read_i32","read_u16","read_f64","read_u64_le","read_exact","read_u16_le","read_f32_le","read_i64_le","read_i16_le","read_i128","read_u64","read_i16","read_u8","read","read_f64_le","read_u128_le","read_i32_le","read_f32","read_i64","read_u32"],"trait":{"kind":"resolved_path","inner":{"name":"AsyncReadExt","id":"24:4104:1837","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"R"}}},"1:2576:127":{"id":"1:2576:127","crate_id":1,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2577:2290","1:2579:2693","1:2580:1854","1:2581:2201","1:2582:3728"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10272:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10279:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3195:127":{"id":"2:3195:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3166:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}}},"24:4104:1837":{"id":"24:4104:1837","crate_id":24,"name":"AsyncReadExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["24:4105:3444","24:4107:1846","24:4109:2634","24:4112:1848","24:4119:71359","24:4121:71360","24:4123:71361","24:4125:71362","24:4127:71363","24:4129:71364","24:4131:71365","24:4133:71366","24:4135:71367","24:4137:71368","24:4139:71369","24:4141:71370","24:4143:5481","24:4145:71371","24:4147:47181","24:4149:71372","24:4151:71373","24:4153:71374","24:4155:71375","24:4157:71376","24:4159:71377","24:4161:71378","24:4114:6315","24:4116:2862","24:4118:1792"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncRead","id":"24:230:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9239:3227-0:770:2622":{"id":"a:2:9239:3227-0:770:2622","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9239:3227","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:8582:157":{"id":"2:8582:157","crate_id":2,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8583:1955","2:8584:922","2:8585:3489","2:8588:2049","2:8589:495","2:8591:3490","2:8594:3491","2:8595:3492","2:8596:3493","2:8597:3444","2:8599:3494","2:8601:3495","2:8602:3496","2:8604:841","2:8607:3497","2:8614:3498","2:8616:3499","2:8619:3500","2:8620:3501","2:8621:3502","2:8623:3503","2:8625:3504","2:8628:1306","2:8629:1792","2:8630:3505","2:8634:3506","2:8637:3507","2:8638:3508","2:8639:3509","2:8641:3510","2:8642:2814","2:8644:3511","2:8647:3512","2:8649:3513","2:8659:3514","2:8674:3515","2:8676:3516","2:8680:3517","2:8689:3518","2:8692:3519","2:8694:3520","2:8697:276","2:8704:294","2:8711:3521","2:8718:3522","2:8727:3523","2:8737:1014","2:8744:3524","2:8751:3411","2:8752:1830","2:8753:3413","2:8765:3412","2:8772:3410","2:8784:3409","2:8791:3525","2:8792:3526","2:8797:3527","2:8800:3528","2:8803:3529","2:8804:1773","2:8806:3530","2:8808:415","2:8811:3531","2:8814:997","2:8817:3532","2:8820:604","2:8823:3533","2:8826:907","2:8828:826","2:8830:792","2:8832:713","2:8834:696","2:8836:3534","2:8837:3535","2:8845:3536"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3185:1798":{"id":"2:3185:1798","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3159:135"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13410:11179":{"id":"2:13410:11179","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"1:15945:2712"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:49690:5154","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3632:5206":{"id":"2:3632:5206","crate_id":2,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3634:69763","2:3635:69764","2:3636:64610"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3258:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:8860:3893":{"id":"2:8860:3893","crate_id":2,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8582:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6103:70621":{"id":"5:6103:70621","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3261:218":{"id":"2:3261:218","crate_id":2,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3984:68":{"id":"2:3984:68","crate_id":2,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3985:1426"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"2:13408:1630":{"id":"2:13408:1630","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:49393:1762","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3500:1877":{"id":"2:3500:1877","crate_id":2,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3501:578"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"34:470:1614":{"id":"34:470:1614","crate_id":34,"name":"Body","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["34:471:1902","34:472:127","34:473:2036","34:474:2044","34:475:2020","34:476:2049","34:477:1918","34:478:2077","34:479:3729","34:482:2018","34:485:2776","34:486:3730"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13476:69989":{"id":"2:13476:69989","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:28":{"id":"0:28","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[68,0],"end":[68,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::http::HeaderMap","name":"HeaderMap","id":"20:2392:1612","glob":false}},"1:6591:4491":{"id":"1:6591:4491","crate_id":1,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6592:67341","1:6593:67342"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:786:660":{"id":"0:786:660","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[192,4],"end":[194,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10232:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10221:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:782:1834":{"id":"0:782:1834","crate_id":0,"name":"poll_flush","span":{"filename":"src/upgrade.rs","begin":[178,4],"end":[180,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Pin","id":"2:47559:188","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}},"param_names":[]}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"task::Context","id":"2:14033:1827","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:50307:190","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4072:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5823:4452":{"id":"1:5823:4452","crate_id":1,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5824:67348"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10593:2513","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3724:4890":{"id":"2:3724:4890","crate_id":2,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3726:66562"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:939:2626":{"id":"0:939:2626","crate_id":0,"name":"Parts","span":{"filename":"src/upgrade.rs","begin":[81,0],"end":[94,1]},"visibility":"public","docs":"The deconstructed parts of an [`Upgraded`](Upgraded) type.\n\nIncludes the original IO type, and a read buffer of bytes that the\nHTTP state machine may have already read before completing an upgrade.","links":{"Upgraded":"0:768:2619"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":["0:941:1748","0:942:2634"],"impls":["a:2:9240:3226-0:939:2626","a:2:3294:1757-0:939:2626","a:2:9239:3227-0:939:2626","a:2:3265:220-0:939:2626","a:2:3253:211-0:939:2626","b:2:3186-0:939:2626","b:2:3986-0:939:2626","b:2:3197-0:939:2626","b:2:2853-0:939:2626","b:2:3192-0:939:2626","b:2:2856-0:939:2626","b:2:3182-0:939:2626","0:944"]}},"2:22766:5021":{"id":"2:22766:5021","crate_id":2,"name":"SimdInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22767:4949","2:22768:68986","2:22769:1225","2:22770:1226","2:22771:45237","2:22772:69023","2:22773:11138","2:22774:69024","2:22775:69025","2:22776:69026","2:22777:68987","2:22778:68988","2:22779:68989","2:22780:68990","2:22781:68991","2:22782:68992","2:22783:68993"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3263:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22815:2513","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:6493:4466":{"id":"1:6493:4466","crate_id":1,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6494:2668","1:6495:9700","1:6496:67208","1:6497:67209","1:6498:67210","1:6499:2667"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10593:2513","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3253:211-0:770:2622":{"id":"a:2:3253:211-0:770:2622","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3253:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:9240:3226":{"id":"2:9240:3226","crate_id":2,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13446:64606":{"id":"2:13446:64606","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"self::pattern":"2:13018:3404","prim@char":"1:15939:2707","str::rsplitn":"1:15945:2712"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:49511:5116","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"31:96:1923":{"id":"31:96:1923","crate_id":31,"name":"Stream","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["31:97:1955","31:98:2034","31:99:2049"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3986-0:939:2626":{"id":"b:2:3986-0:939:2626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3258:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3984:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:3988:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"24:4168:2952":{"id":"24:4168:2952","crate_id":24,"name":"AsyncWriteExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["24:4169:2161","24:4171:6351","24:4174:6327","24:4177:6325","24:4180:6323","24:4184:67096","24:4186:67102","24:4188:67097","24:4190:67103","24:4192:67098","24:4194:67104","24:4196:67099","24:4198:67105","24:4200:67100","24:4202:67106","24:4204:71701","24:4206:71702","24:4208:71703","24:4210:71704","24:4212:71705","24:4214:71706","24:4216:71707","24:4218:71708","24:4220:71709","24:4222:71710","24:4224:71711","24:4226:71712","24:4182:5569","24:4183:6322"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncWrite","id":"24:309:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13406:5174":{"id":"2:13406:5174","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:15939:2707"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49377:5138","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:944":{"id":"0:944","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[80,9],"end":[80,14]},"visibility":{"restricted":{"parent":"0:720:1620","path":"::upgrade"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Debug","id":"2:10272:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10272:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:946:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13412:69978":{"id":"2:13412:69978","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:49671:5152","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8863:3894":{"id":"2:8863:3894","crate_id":2,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8582:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3331:4862":{"id":"2:3331:4862","crate_id":2,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3333:181","2:3334:892"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3424:4803":{"id":"2:3424:4803","crate_id":2,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3426:1235"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13440:69979":{"id":"2:13440:69979","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"`DoubleEndedIterator`":"2:8428:120","str::rsplit_terminator":"1:15945:2712","self::pattern":"2:13018:3404","prim@char":"1:15939:2707","str::split":"1:15945:2712"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:49457:5143","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23736:4887":{"id":"2:23736:4887","crate_id":2,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:23737:4949"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:23732:2513","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3263:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13461:69983":{"id":"2:13461:69983","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"str::matches":"1:15945:2712","self::pattern":"2:13018:3404","prim@char":"1:15939:2707","`DoubleEndedIterator`":"2:8428:120"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:49629:5151","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13043:4824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:297:1614":{"id":"0:297:1614","crate_id":0,"name":"Body","span":{"filename":"src/body/body.rs","begin":[36,0],"end":[41,1]},"visibility":"public","docs":"A stream of `Bytes`, used when receiving bodies.\n\nA good default [`HttpBody`](crate::body::HttpBody) to use in many\napplications.\n\nNote: To read the full body, use [`body::to_bytes`](crate::body::to_bytes)\nor [`body::aggregate`](crate::body::aggregate).","links":{"crate::body::to_bytes":"0:402:1898","crate::body::aggregate":"0:242:1895","crate::body::HttpBody":"34:470:1614"},"attrs":["#[must_use = \"streams do nothing unless polled\"]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"2:13398:64573":{"id":"2:13398:64573","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10914:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10914:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"5:6105:2893":{"id":"5:6105:2893","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3326:4509":{"id":"2:3326:4509","crate_id":2,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3328:181","2:3329:1353"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:684:2580":{"id":"0:684:2580","crate_id":0,"name":"ServiceFn","span":{"filename":"src/service/util.rs","begin":[39,0],"end":[42,1]},"visibility":"public","docs":"Service returned by [`service_fn`]","links":{"`service_fn`":"0:680:2509"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"2:3415:4783":{"id":"2:3415:4783","crate_id":2,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3417:357"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8393:2809":{"id":"2:8393:2809","crate_id":2,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8395:3485","2:8397:3486","2:8398:3487"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3253:211":{"id":"2:3253:211","crate_id":2,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:13":{"id":"0:13","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[65,38],"end":[65,45]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::http::Request","name":"Request","id":"20:1361:1607","glob":false}},"2:10510:142":{"id":"2:10510:142","crate_id":2,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10511:715","2:10513:10950"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"24:188:2943":{"id":"24:188:2943","crate_id":24,"name":"AsyncBufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["24:189:71314","24:190:64056"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncRead","id":"24:230:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"31:52:175":{"id":"31:52:175","crate_id":31,"name":"Ok","span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.21/src/future.rs","begin":[77,4],"end":[77,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"0:941:1748":{"id":"0:941:1748","crate_id":0,"name":"io","span":{"filename":"src/upgrade.rs","begin":[83,4],"end":[83,13]},"visibility":"public","docs":"The original IO object used before the upgrade.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"1:6893:4462":{"id":"1:6893:4462","crate_id":1,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6894:68338"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"33:16:3009":{"id":"33:16:3009","crate_id":33,"name":"Spawn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["33:17:71909","33:18:2376"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3186-0:770:2622":{"id":"b:2:3186-0:770:2622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3159:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3188:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"31:53:127":{"id":"31:53:127","crate_id":31,"name":"Error","span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.21/src/future.rs","begin":[78,4],"end":[78,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"E"}}},"2:3380:4506":{"id":"2:3380:4506","crate_id":2,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3382:181","2:3383:351"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3182-0:770:2622":{"id":"b:2:3182-0:770:2622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3159:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3156:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3185:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:783:222":{"id":"5:783:222","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:784:2062","5:785:3538","5:786:3539"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13028:4821":{"id":"2:13028:4821","crate_id":2,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13030:4823","2:13031:69536","2:13032:69537","2:13033:69538","2:13034:69540","2:13035:69539","2:13036:69541"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:717":{"id":"0:717","crate_id":0,"name":null,"span":{"filename":"src/service/mod.rs","begin":[55,0],"end":[55,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::util::service_fn","name":"service_fn","id":"0:680:2509","glob":false}},"b:2:3197-0:768:2619":{"id":"b:2:3197-0:768:2619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3156:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3166:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3200:127","2:3201:1413"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:14204:4586":{"id":"2:14204:4586","crate_id":2,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14205:64269","2:14206:64270","2:14207:64271","2:14208:64272","2:14209:64273","2:14210:64274","2:14211:3510"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"31:127:3003":{"id":"31:127:3003","crate_id":31,"name":"TryStream","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["31:128:175","31:129:127","31:130:72803"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Stream","id":"31:96:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"31:122:2513","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3253:211-0:939:2626":{"id":"a:2:3253:211-0:939:2626","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3253:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3253:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3701:5207":{"id":"2:3701:5207","crate_id":2,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3258:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RangeBounds","id":"2:3632:5206","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:30:237-0:770:2622":{"id":"b:30:237-0:770:2622","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","begin":[119,0],"end":[119,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13731:138","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3258:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["now_or_never","fuse","right_future","then","unit_error","poll_unpin","flatten","left_future","boxed_local","into_stream","boxed","inspect","flatten_stream","map_into","never_error","map"],"trait":{"kind":"resolved_path","inner":{"name":"FutureExt","id":"30:239:2999","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13467:69985":{"id":"2:13467:69985","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:13018:3404","str::match_indices":"1:15945:2712","`DoubleEndedIterator`":"2:8428:120","prim@char":"1:15939:2707"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:49575:5148","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13043:4824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3294:1757":{"id":"2:3294:1757","crate_id":2,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13048:4825":{"id":"2:13048:4825","crate_id":2,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13043:4824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:4735:2865":{"id":"1:4735:2865","crate_id":1,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4736:2942","1:4737:1812","1:4738:68208","1:4739:68207"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3796:3097":{"id":"2:3796:3097","crate_id":2,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3713:224":{"id":"2:3713:224","crate_id":2,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3714:181","2:3715:4890","2:3716:686","2:3717:369"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromResidual","id":"2:3718:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"2:3713:224","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:6895:4472":{"id":"1:6895:4472","crate_id":1,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6896:67269"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"31:54:64055":{"id":"31:54:64055","crate_id":31,"name":"try_poll","span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.21/src/future.rs","begin":[81,4],"end":[81,81]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Pin","id":"2:47559:188","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"F"}}}}],"bindings":[]}},"param_names":[]}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Context","id":"2:14033:1827","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:50307:190","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13731:138","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:10":{"id":"0:10","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[65,30],"end":[65,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::http::Method","name":"Method","id":"20:3009:1606","glob":false}},"a:2:3294:1757-0:770:2622":{"id":"a:2:3294:1757-0:770:2622","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3294:1757","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:789":{"id":"0:789","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[210,0],"end":[223,1]},"visibility":{"restricted":{"parent":"0:720:1620","path":"::upgrade"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13731:138","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:790:181","0:791:1013"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13458:2267":{"id":"2:13458:2267","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"prim@char":"1:15939:2707","str::matches":"1:15945:2712","self::pattern":"2:13018:3404","`DoubleEndedIterator`":"2:8428:120"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:49611:5150","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:785":{"id":"0:785","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[191,0],"end":[195,1]},"visibility":{"restricted":{"parent":"0:720:1620","path":"::upgrade"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10272:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:786:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:22":{"id":"0:22","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[65,69],"end":[65,72]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::http::Uri","name":"Uri","id":"20:3227:1610","glob":false}},"b:2:3192-0:770:2622":{"id":"b:2:3192-0:770:2622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3166:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3162:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3195:127","2:3196:1414"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"33:19:3008":{"id":"33:19:3008","crate_id":33,"name":"LocalSpawn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["33:20:72800","33:21:72801"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:811:2642":{"id":"0:811:2642","crate_id":0,"name":"CanUpgrade","span":{"filename":"src/upgrade.rs","begin":[298,4],"end":[300,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:812:2644"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13381":{"id":"2:13381","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:12478:1338","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:13382:793","2:13383:1783","2:13384:10971","2:13385:69974","2:13387:69975","2:13390:2064","2:13391:69976","2:13392:304","2:13393:64575","2:13394:59970","2:13396:2041","2:13398:64573","2:13400:64574","2:13402:4603","2:13403:69977","2:13404:64594","2:13405:64595","2:13406:5174","2:13407:4850","2:13408:1630","2:13409:11181","2:13410:11179","2:13411:5646","2:13412:69978","2:13413:10921","2:13414:64610","2:13417:64611","2:13420:64612","2:13423:3521","2:13427:3484","2:13431:2941","2:13434:11180","2:13437:64604","2:13440:69979","2:13443:69980","2:13446:64606","2:13449:64608","2:13452:69981","2:13455:69982","2:13458:2267","2:13461:69983","2:13464:69984","2:13467:69985","2:13470:69986","2:13472:69987","2:13474:69988","2:13476:69989","2:13477:69990","2:13478:69991","2:13481:69992","2:13484:10573","2:13487:64613","2:13490:69993","2:13493:69994","2:13496:69995","2:13499:5042","2:13501:5298","2:13502:6203","2:13503:64224","2:13504:64225","2:13505:69996","2:13507:4489","2:13508:69997"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:207":{"id":"0:207","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[18,21],"end":[18,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"bytes::Bytes","name":"Bytes","id":"22:526:1762","glob":false}},"2:2910:124":{"id":"2:2910:124","crate_id":2,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2905:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3373:4784":{"id":"2:3373:4784","crate_id":2,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3374:181","2:3375:952"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10281:3563":{"id":"2:10281:3563","crate_id":2,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10282:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:23051:19004":{"id":"2:23051:19004","crate_id":2,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23052:9821","2:23053:68906","2:23054:68907"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:23044:2513","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9240:3226-0:768:2619":{"id":"a:2:9240:3226-0:768:2619","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9240:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:13449:64608":{"id":"2:13449:64608","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"self::pattern":"2:13018:3404","prim@char":"1:15939:2707","str::splitn":"1:15945:2712"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:49529:5117","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13043:4824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2951:184":{"id":"2:2951:184","crate_id":2,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2953:997","2:2954:826","2:2955:792","2:2956:713","2:2957:696"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3258:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2905:183","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13470:69986":{"id":"2:13470:69986","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:30:504-0:770:2622":{"id":"b:30:504-0:770:2622","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","begin":[134,0],"end":[134,50]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Fut","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Fut"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFuture","id":"31:44:3000","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3258:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["map_ok_or_else","unwrap_or_else","and_then","map_ok","err_into","or_else","inspect_err","try_flatten","map_err","ok_into","try_flatten_stream","into_future","try_poll_unpin","inspect_ok"],"trait":{"kind":"resolved_path","inner":{"name":"TryFutureExt","id":"30:506:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Fut"}}},"2:13472:69987":{"id":"2:13472:69987","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3188:681":{"id":"2:3188:681","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13393:64575":{"id":"2:13393:64575","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:15956:2721"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3088:4766":{"id":"2:3088:4766","crate_id":2,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:3087:2513","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13413:10921":{"id":"2:13413:10921","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:49699:5155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:777":{"id":"0:777","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[151,0],"end":[159,1]},"visibility":{"restricted":{"parent":"0:720:1620","path":"::upgrade"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"AsyncRead","id":"24:230:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:778:1825"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13490:69993":{"id":"2:13490:69993","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:13018:3404","prim@char":"1:15939:2707"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13043:4824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:780:1832":{"id":"0:780:1832","crate_id":0,"name":"poll_write","span":{"filename":"src/upgrade.rs","begin":[162,4],"end":[168,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Pin","id":"2:47559:188","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}},"param_names":[]}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"task::Context","id":"2:14033:1827","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:50307:190","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4072:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10285:3565":{"id":"2:10285:3565","crate_id":2,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10286:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6084:70618":{"id":"5:6084:70618","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:5318","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:5318","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3759:3096":{"id":"2:3759:3096","crate_id":2,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3258:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"20:543:4017":{"id":"20:543:4017","crate_id":20,"name":"AsHeaderName","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"20:544:2513","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:8343:4815":{"id":"2:8343:4815","crate_id":2,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8345:1773"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:791:1013":{"id":"0:791:1013","crate_id":0,"name":"poll","span":{"filename":"src/upgrade.rs","begin":[213,4],"end":[222,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Pin","id":"2:47559:188","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}},"param_names":[]}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"task::Context","id":"2:14033:1827","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:50307:190","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:13731:138","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23427:4951":{"id":"2:23427:4951","crate_id":2,"name":"SimdPartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23428:1268","2:23429:1267","2:23430:1265","2:23431:1264"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdPartialEq","id":"2:22839:4950","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:487":{"id":"0:487","crate_id":0,"name":null,"span":{"filename":"src/service/mod.rs","begin":[38,0],"end":[38,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"tower_service::Service","name":"Service","id":"36:13:2244","glob":false}},"b:2:3986-0:770:2622":{"id":"b:2:3986-0:770:2622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3258:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3984:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3988:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:768:2619":{"id":"0:768:2619","crate_id":0,"name":"Upgraded","span":{"filename":"src/upgrade.rs","begin":[65,0],"end":[67,1]},"visibility":"public","docs":"An upgraded HTTP connection.\n\nThis type holds a trait object internally of the original IO that\nwas used to speak HTTP before the upgrade. It can be used directly\nas a `Read` or `Write` for convenience.\n\nAlternatively, if the exact type is known, this can be deconstructed\ninto its parts.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:774","a:2:9240:3226-0:768:2619","a:2:3294:1757-0:768:2619","a:2:9239:3227-0:768:2619","a:2:3265:220-0:768:2619","a:2:3253:211-0:768:2619","b:2:3186-0:768:2619","b:2:3986-0:768:2619","b:2:3197-0:768:2619","b:2:2853-0:768:2619","b:2:3192-0:768:2619","b:2:2856-0:768:2619","b:2:3182-0:768:2619","b:24:2497-0:768:2619","b:24:2649-0:768:2619","0:777","0:779","0:785"]}},"33:258:3011":{"id":"33:258:3011","crate_id":33,"name":"UnsafeFutureObj","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["33:261:2667","33:262:578"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"outlives":"'a"}],"implementations":[]}},"0:220":{"id":"0:220","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[23,21],"end":[23,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::body::Body","name":"Body","id":"0:297:1614","glob":false}},"2:8867:4812":{"id":"2:8867:4812","crate_id":2,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Step","id":"2:7908:4814","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:22713:4948":{"id":"2:22713:4948","crate_id":2,"name":"SimdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22714:4949","2:22715:68986","2:22716:69402","2:22717:69403","2:22718:69404","2:22719:45237","2:22720:69405","2:22721:69406","2:22722:69407","2:22723:69408","2:22724:69409","2:22725:69410","2:22726:69411","2:22727:69412","2:22728:10973","2:22729:69413","2:22730:69026","2:22731:10311","2:22732:68739","2:22733:68738","2:22734:68740","2:22735:68987","2:22736:68988","2:22737:68989","2:22738:68990"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3263:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22815:2513","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6104:70622":{"id":"5:6104:70622","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`String`":"5:8368:216","`Box<str>`":"5:432:1940"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:1940","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8106:5318","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13477:69990":{"id":"2:13477:69990","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:388:1898":{"id":"0:388:1898","crate_id":0,"name":"to_bytes","span":{"filename":"src/body/to_bytes.rs","begin":[1,0],"end":[77,1]},"visibility":{"restricted":{"parent":"0:202:1613","path":"::body"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:402:1898"],"is_stripped":true}},"2:13391:69976":{"id":"2:13391:69976","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:13503:64224":{"id":"2:13503:64224","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:19":{"id":"0:19","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[65,57],"end":[65,67]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::http::StatusCode","name":"StatusCode","id":"20:3102:1609","glob":false}},"1:6719:4446":{"id":"1:6719:4446","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6720:67293","1:6721:9625","1:6722:9626","1:6723:9628","1:6724:9627","1:6725:9629","1:6726:9630","1:6727:9632","1:6728:7376","1:6729:9635","1:6730:9636","1:6731:9637","1:6732:9638","1:6733:9639","1:6734:9640","1:6735:9633","1:6736:9634"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2853-0:768:2619":{"id":"b:2:2853-0:768:2619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3258:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2855:1919"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:4742:2868":{"id":"1:4742:2868","crate_id":1,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4743:6284","1:4744:64056","1:4745:64057","1:4747:2867","1:4748:6286","1:4750:2941","1:4751:5646"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Read","id":"1:4660:2861","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3476:116":{"id":"2:3476:116","crate_id":2,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3477:221","2:3478:543"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3506:131":{"id":"2:3506:131","crate_id":2,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3508:377"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"2:3509:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:931:2562":{"id":"0:931:2562","crate_id":0,"name":"MakeServiceFn","span":{"filename":"src/service/make.rs","begin":[148,0],"end":[150,1]},"visibility":"public","docs":"`MakeService` returned from [`make_service_fn`]","links":{"`make_service_fn`":"0:625:2508"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"5:6091:70620":{"id":"5:6091:70620","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5809:4450":{"id":"1:5809:4450","crate_id":1,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5810:64198","1:5811:64199","1:5812:64200","1:5813:64201"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:31":{"id":"0:31","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[70,0],"end":[70,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::body::Body","name":"Body","id":"0:297:1614","glob":false}},"2:13390:2064":{"id":"2:13390:2064","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12489:5265"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3348:4870":{"id":"2:3348:4870","crate_id":2,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3349:181","2:3350:913"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3196:1414":{"id":"2:3196:1414","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47567:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3166:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:812:2644":{"id":"0:812:2644","crate_id":0,"name":"on_upgrade","span":{"filename":"src/upgrade.rs","begin":[299,8],"end":[299,41]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:3197-0:939:2626":{"id":"b:2:3197-0:939:2626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3156:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3166:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:3200:127","2:3201:1413"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2856-0:768:2619":{"id":"b:2:2856-0:768:2619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3258:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2850:3109","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2858:64043"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13493:69994":{"id":"2:13493:69994","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:15939:2707","self::pattern":"2:13018:3404"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3988:1426":{"id":"2:3988:1426","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:45976:1903","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13484:10573":{"id":"2:13484:10573","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:13018:3404","prim@char":"1:15939:2707"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47440:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23099:4961":{"id":"2:23099:4961","crate_id":2,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdElement","id":"2:23736:4887","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:23090:2513","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:5775:4446":{"id":"1:5775:4446","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5776:9284","1:5777:67423","1:5778:6376","1:5779:67424","1:5780:4713","1:5781:4714","1:5782:67425","1:5783:1302","1:5784:67426","1:5785:67427","1:5786:67428","1:5787:67429","1:5788:67430","1:5789:67431","1:5790:67432","1:5791:67433"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13431:2941":{"id":"2:13431:2941","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"`DoubleEndedIterator`":"2:8428:120","self::pattern":"2:13018:3404","str::split_whitespace":"1:15945:2712","str::rsplit":"1:15945:2712","prim@char":"1:15939:2707"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:49407:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2856-0:939:2626":{"id":"b:2:2856-0:939:2626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3258:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2850:3109","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:2858:64043"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:204":{"id":"0:204","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[18,16],"end":[18,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"bytes::Buf","name":"Buf","id":"22:42:1760","glob":false}},"1:5819:4451":{"id":"1:5819:4451","crate_id":1,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5820:67423"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:942:2634":{"id":"0:942:2634","crate_id":0,"name":"read_buf","span":{"filename":"src/upgrade.rs","begin":[92,4],"end":[92,23]},"visibility":"public","docs":"A buffer of bytes that have been read but not processed as HTTP.\n\nFor instance, if the `Connection` is used for an HTTP upgrade request,\nit is possible the server sent back the first bytes of the new protocol\nalong with the response upgrade.\n\nYou will want to check for any existing bytes if you plan to continue\ncommunicating on the IO object.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Bytes","id":"22:526:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},"0:779":{"id":"0:779","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[161,0],"end":[189,1]},"visibility":{"restricted":{"parent":"0:720:1620","path":"::upgrade"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["is_write_vectored","poll_write_vectored"],"trait":{"kind":"resolved_path","inner":{"name":"AsyncWrite","id":"24:309:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:780:1832","0:781:1833","0:782:1834","0:783:1835","0:784:1836"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:720:1620":{"id":"0:720:1620","crate_id":0,"name":"upgrade","span":{"filename":"src/upgrade.rs","begin":[1,0],"end":[382,1]},"visibility":"public","docs":"HTTP Upgrades\n\nThis module deals with managing [HTTP Upgrades][mdn] in hyper. Since\nseveral concepts in HTTP allow for first talking HTTP, and then converting\nto a different protocol, this module conflates them into a single API.\nThose include:\n\n- HTTP/1.1 Upgrades\n- HTTP `CONNECT`\n\nYou are responsible for any other pre-requisites to establish an upgrade,\nsuch as sending the appropriate headers, methods, and status codes. You can\nthen use [`on`][] to grab a `Future` which will resolve to the upgraded\nconnection object, or an error if the upgrade fails.\n\n[mdn]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism\n\n# Client\n\nSending an HTTP upgrade from the [`client`](super::client) involves setting\neither the appropriate method, if wanting to `CONNECT`, or headers such as\n`Upgrade` and `Connection`, on the `http::Request`. Once receiving the\n`http::Response` back, you must check for the specific information that the\nupgrade is agreed upon by the server (such as a `101` status code), and then\nget the `Future` from the `Response`.\n\n# Server\n\nReceiving upgrade requests in a server requires you to check the relevant\nheaders in a `Request`, and if an upgrade should be done, you then send the\ncorresponding headers in a response. To then wait for hyper to finish the\nupgrade, you call `on()` with the `Request`, and then can spawn a task\nawaiting it.\n\n# Example\n\nSee [this example][example] showing how upgrades work with both\nClients and Servers.\n\n[example]: https://github.com/hyperium/hyper/blob/master/examples/upgrades.rs","links":{"`on`":"0:772:959"},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:768:2619","0:770:2622","0:939:2626","0:772:959"],"is_stripped":false}},"1:6471:4469":{"id":"1:6471:4469","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6472:4713","1:6473:4714","1:6474:8615","1:6475:68001","1:6477:68004","1:6479:1747","1:6480:68002","1:6482:68003"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10593:2513","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:82:1748":{"id":"0:82:1748","crate_id":0,"name":"io","span":{"filename":"src/common/io/mod.rs","begin":[1,0],"end":[3,36]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":true}},"0:775:2649":{"id":"0:775:2649","crate_id":0,"name":"downcast","span":{"filename":"src/upgrade.rs","begin":[136,4],"end":[148,5]},"visibility":"public","docs":"Tries to downcast the internal trait object to the type passed.\n\nOn success, returns the downcasted parts. On error, returns the\n`Upgraded` back.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47567:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncRead","id":"24:230:1814","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncWrite","id":"24:309:1815","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3294:1757","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"30:3545:3002":{"id":"30:3545:3002","crate_id":30,"name":"StreamExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["30:3546:922","30:3547:767","30:3548:841","30:3551:3500","30:3552:3498","30:3555:3499","30:3559:6510","30:3562:2814","30:3564:3526","30:3569:432","30:3570:495","30:3571:3529","30:3572:3518","30:3576:294","30:3579:276","30:3582:3507","30:3583:6514","30:3585:3506","30:3588:72053","30:3592:3505","30:3597:3502","30:3600:3503","30:3603:6509","30:3605:3497","30:3608:6516","30:3612:1792","30:3613:1306","30:3614:3508","30:3615:3510","30:3616:2776","30:3618:71923","30:3620:2847","30:3621:6513","30:3622:3494","30:3624:3444","30:3626:3501","30:3627:6511","30:3628:6512","30:3629:3509","30:3631:72054","30:3633:72055","30:3635:72056","30:3636:6508"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Stream","id":"31:96:1923","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13387:69975":{"id":"2:13387:69975","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:15945:2712"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"30:6248:3018":{"id":"30:6248:3018","crate_id":30,"name":"SpawnExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["30:6249:2125"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Spawn","id":"33:16:3009","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13754:767":{"id":"2:13754:767","crate_id":2,"name":"into_future","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoFuture","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"kind":"resolved_path","inner":{"name":"IntoFuture","id":"2:13746:150","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10293:3568":{"id":"2:10293:3568","crate_id":2,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10294:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:402:1898":{"id":"0:402:1898","crate_id":0,"name":"to_bytes","span":{"filename":"src/body/to_bytes.rs","begin":[47,0],"end":[77,1]},"visibility":"public","docs":"Concatenate the buffers from a body into a single `Bytes` asynchronously.\n\nThis may require copying the data into a single buffer. If you don't need\na contiguous buffer, prefer the [`aggregate`](crate::body::aggregate())\nfunction.\n\n# Note\n\nCare needs to be taken if the remote is untrusted. The function doesn't implement any length\nchecks and an malicious peer might make it consume arbitrary amounts of memory. Checking the\n`Content-Length` is a possibility, but it is not strictly mandated to be present.\n\n# Example\n\n```\n# #[cfg(all(feature = \"client\", feature = \"tcp\", any(feature = \"http1\", feature = \"http2\")))]\n# async fn doc() -> hyper::Result<()> {\nuse hyper::{body::HttpBody};\n\n# let request = hyper::Request::builder()\n#        .method(hyper::Method::POST)\n#        .uri(\"http://httpbin.org/post\")\n#        .header(\"content-type\", \"application/json\")\n#        .body(hyper::Body::from(r#\"{\"library\":\"hyper\"}\"#)).unwrap();\n# let client = hyper::Client::new();\nlet response = client.request(request).await?;\n\nconst MAX_ALLOWED_RESPONSE_SIZE: u64 = 1024;\n\nlet response_content_length = match response.body().size_hint().upper() {\n    Some(v) => v,\n    None => MAX_ALLOWED_RESPONSE_SIZE + 1 // Just to protect ourselves from a malicious response\n};\n\nif response_content_length < MAX_ALLOWED_RESPONSE_SIZE {\n    let body_bytes = hyper::body::to_bytes(response.into_body()).await?;\n    println!(\"body: {:?}\", body_bytes);\n}\n\n# Ok(())\n# }\n```","links":{"crate::body::aggregate()":"0:242:1895"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["body",{"kind":"generic","inner":"T"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13731:138","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47567:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"22:526:1762","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"34:470:1614","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"HttpBody","id":"34:470:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":true,"abi":"Rust"}}},"2:13402:4603":{"id":"2:13402:4603","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:15945:2712","str::slice_mut_unchecked":"1:15945:2712","crate::ops::Index":"2:3561:4529"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:9239:3227":{"id":"2:9239:3227","crate_id":2,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3352:3108":{"id":"2:3352:3108","crate_id":2,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3354:266"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:35":{"id":"0:35","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,23],"end":[71,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::error::Error","name":"Error","id":"0:421:127","glob":false}},"2:12957:3930":{"id":"2:12957:3930","crate_id":2,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12958:126","2:12959:64183"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13411:5646":{"id":"2:13411:5646","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:49661:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:202:1613":{"id":"0:202:1613","crate_id":0,"name":"body","span":{"filename":"src/body/mod.rs","begin":[1,0],"end":[65,1]},"visibility":"public","docs":"Streaming bodies for Requests and Responses\n\nFor both [Clients](crate::client) and [Servers](crate::server), requests and\nresponses use streaming bodies, instead of complete buffering. This\nallows applications to not use memory they don't need, and allows exerting\nback-pressure on connections by only reading when asked.\n\nThere are two pieces to this in hyper:\n\n- **The [`HttpBody`](HttpBody) trait** describes all possible bodies.\n  hyper allows any body type that implements `HttpBody`, allowing\n  applications to have fine-grained control over their streaming.\n- **The [`Body`](Body) concrete type**, which is an implementation of\n  `HttpBody`, and returned by hyper as a \"receive stream\" (so, for server\n  requests and client responses). It is also a decent default implementation\n  if you don't have very custom needs of your send streams.","links":{"Body":"0:297:1614","HttpBody":"34:470:1614"},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:204","0:207","0:210","0:213","0:216","0:220","0:223","0:229"],"is_stripped":false}},"2:13496:69995":{"id":"2:13496:69995","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:13018:3404","prim@char":"1:15939:2707"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13043:4824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:418:205":{"id":"0:418:205","crate_id":0,"name":"Result","span":{"filename":"src/error.rs","begin":[6,0],"end":[6,51]},"visibility":"public","docs":"Result type often returned from methods that can have hyper `Error`s.","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"std::result::Result","id":"2:47567:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:421:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"24:309:1815":{"id":"24:309:1815","crate_id":24,"name":"AsyncWrite","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["24:310:1832","24:311:1834","24:312:1835","24:313:1833","24:316:1836"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"23:37:6263":{"id":"23:37:6263","crate_id":23,"name":"Integer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"23:39:2513","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13443:69980":{"id":"2:13443:69980","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"str::split_terminator":"1:15945:2712","self::pattern":"2:13018:3404","str::split":"1:15945:2712","prim@char":"1:15939:2707"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:49475:5144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13043:4824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:0:1643":{"id":"0:0:1643","crate_id":0,"name":"hyper","span":{"filename":"src/lib.rs","begin":[1,0],"end":[109,1]},"visibility":"public","docs":"# hyper\n\nhyper is a **fast** and **correct** HTTP implementation written in and for Rust.\n\n## Features\n\n- HTTP/1 and HTTP/2\n- Asynchronous design\n- Leading in performance\n- Tested and **correct**\n- Extensive production use\n- [Client](client/index.html) and [Server](server/index.html) APIs\n\nIf just starting out, **check out the [Guides](https://hyper.rs/guides)\nfirst.**\n\n## \"Low-level\"\n\nhyper is a lower-level HTTP library, meant to be a building block\nfor libraries and applications.\n\nIf looking for just a convenient HTTP client, consider the\n[reqwest](https://crates.io/crates/reqwest) crate.\n\n# Optional Features\n\nhyper uses a set of [feature flags] to reduce the amount of compiled code.\nIt is possible to just enable certain features over others. By default,\nhyper does not enable any features but allows one to enable a subset for\ntheir use case. Below is a list of the available feature flags. You may\nalso notice above each function, struct and trait there is listed one or\nmore feature flags that are required for that item to be used.\n\nIf you are new to hyper it is possible to enable the `full` feature flag\nwhich will enable all public APIs. Beware though that this will pull in\nmany extra dependencies that you may not need.\n\nThe following optional features are available:\n\n- `http1`: Enables HTTP/1 support.\n- `http2`: Enables HTTP/2 support.\n- `client`: Enables the HTTP `client`.\n- `server`: Enables the HTTP `server`.\n- `runtime`: Enables convenient integration with `tokio`, providing\n  connectors and acceptors for TCP, and a default executor.\n- `tcp`: Enables convenient implementations over TCP (using tokio).\n- `stream`: Provides `futures::Stream` capabilities.\n\n[feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","links":{},"attrs":["#![deny(missing_docs)]","#![deny(missing_debug_implementations)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:202:1613","0:475:1617","0:482:1122","0:486:1619","0:720:1620","0:7","0:10","0:13","0:16","0:19","0:22","0:25","0:28","0:31","0:35","0:38"],"is_stripped":false}},"a:2:9240:3226-0:939:2626":{"id":"a:2:9240:3226-0:939:2626","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9240:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9240:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:946:660":{"id":"0:946:660","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[80,9],"end":[80,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10232:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10221:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13464:69984":{"id":"2:13464:69984","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"prim@char":"1:15939:2707","str::rmatch_indices":"1:15945:2712","`DoubleEndedIterator`":"2:8428:120","self::pattern":"2:13018:3404"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:49557:5147","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3182-0:939:2626":{"id":"b:2:3182-0:939:2626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3159:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3156:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:3185:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2847:97":{"id":"2:2847:97","crate_id":2,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2849:1919"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3258:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:2872:104":{"id":"2:2872:104","crate_id":2,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2873:408","2:2874:410"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13409:11181":{"id":"2:13409:11181","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"1:15945:2712"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:49681:5153","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6107:64223":{"id":"5:6107:64223","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:15945:2712"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8380:136":{"id":"2:8380:136","crate_id":2,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8382:684"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13385:69974":{"id":"2:13385:69974","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:242:1895":{"id":"0:242:1895","crate_id":0,"name":"aggregate","span":{"filename":"src/body/aggregate.rs","begin":[16,0],"end":[31,1]},"visibility":"public","docs":"Aggregate the data buffers from a body asynchronously.\n\nThe returned `impl Buf` groups the `Buf`s from the `HttpBody` without\ncopying them. This is ideal if you don't require a contiguous buffer.\n\n# Note\n\nCare needs to be taken if the remote is untrusted. The function doesn't implement any length\nchecks and an malicious peer might make it consume arbitrary amounts of memory. Checking the\n`Content-Length` is a possibility, but it is not strictly mandated to be present.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["body",{"kind":"generic","inner":"T"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13731:138","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47567:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"22:42:1760","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"34:470:1614","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"HttpBody","id":"34:470:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":true,"abi":"Rust"}}},"2:8347:4817":{"id":"2:8347:4817","crate_id":2,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8349:3530"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:4035:2979":{"id":"2:4035:2979","crate_id":2,"name":"Provider","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4036:3728"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3186-0:939:2626":{"id":"b:2:3186-0:939:2626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3159:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:3188:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"36:13:2244":{"id":"36:13:2244","crate_id":36,"name":"Service","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["36:15:1608","36:16:127","36:17:138","36:18:2066","36:19:376"],"generics":{"params":[{"name":"Request","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:778:1825":{"id":"0:778:1825","crate_id":0,"name":"poll_read","span":{"filename":"src/upgrade.rs","begin":[152,4],"end":[158,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Pin","id":"2:47559:188","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}},"param_names":[]}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"task::Context","id":"2:14033:1827","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ReadBuf","id":"24:369:1816","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:50307:190","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4072:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:22902:4483":{"id":"2:22902:4483","crate_id":2,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22892:2513","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:7908:4814":{"id":"2:7908:4814","crate_id":2,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:7909:69472","2:7910:69473","2:7911:69470","2:7912:69468","2:7913:69474","2:7914:69471","2:7915:69469"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2951:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13383:1783":{"id":"2:13383:1783","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3166:227":{"id":"2:3166:227","crate_id":2,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3168:127","2:3169:1413"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13420:64612":{"id":"2:13420:64612","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"2:13018:3404","prim@char":"1:15939:2707"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13043:4824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3197-0:770:2622":{"id":"b:2:3197-0:770:2622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3156:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3166:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3200:127","2:3201:1413"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2850:3109":{"id":"2:2850:3109","crate_id":2,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2852:64043"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3258:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:680:2509":{"id":"0:680:2509","crate_id":0,"name":"service_fn","span":{"filename":"src/service/util.rs","begin":[27,0],"end":[36,1]},"visibility":"public","docs":"Create a `Service` from a function.\n\n# Example\n\n```\nuse hyper::{Body, Request, Response, Version};\nuse hyper::service::service_fn;\n\nlet service = service_fn(|req: Request<Body>| async move {\n    if req.version() == Version::HTTP_11 {\n        Ok(Response::new(Body::from(\"Hello World\")))\n    } else {\n        // Note: it's usually better to return a Response\n        // with an appropriate StatusCode instead of an Err.\n        Err(\"not HTTP/1.1, abort connection\")\n    }\n});\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"ServiceFn","id":"0:684:2580","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"2:3506:131","args":{"parenthesized":{"inputs":[{"kind":"resolved_path","inner":{"name":"Request","id":"20:1361:1607","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}}],"output":{"kind":"generic","inner":"S"}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13731:138","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"1:4660:2861":{"id":"1:4660:2861","crate_id":1,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4661:1846","1:4662:67799","1:4664:67800","1:4665:6315","1:4666:2862","1:4667:1848","1:4668:2634","1:4670:67801","1:4671:3510","1:4672:1630","1:4673:3444","1:4675:1792"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9240:3226-0:770:2622":{"id":"a:2:9240:3226-0:770:2622","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9240:3226","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"24:269:2944":{"id":"24:269:2944","crate_id":24,"name":"AsyncSeek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["24:270:71336","24:271:71337"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13478:69991":{"id":"2:13478:69991","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:15939:2707","self::pattern":"2:13018:3404"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedSearcher","id":"2:13048:4825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10291:3567":{"id":"2:10291:3567","crate_id":2,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10292:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3543:3091":{"id":"2:3543:3091","crate_id":2,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3545:237","2:3546:206","2:3547:59224"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3263:106":{"id":"2:3263:106","crate_id":2,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2872:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13427:3484":{"id":"2:13427:3484","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:47440:176","self::pattern":"2:13018:3404","prim@char":"1:15939:2707"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47440:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13043:4824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10283:3564":{"id":"2:10283:3564","crate_id":2,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10284:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13437:64604":{"id":"2:13437:64604","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:13018:3404","`DoubleEndedIterator`":"2:8428:120","str::split":"1:15945:2712","prim@char":"1:15939:2707"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:49425:5113","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13043:4824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3419:4800":{"id":"2:3419:4800","crate_id":2,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3421:1232"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13404:64594":{"id":"2:13404:64594","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"1:15945:2712"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13508:69997":{"id":"2:13508:69997","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:15939:2707"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:49724:5157","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:7":{"id":"0:7","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[65,22],"end":[65,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::http::header","name":"header","id":"20:5:1605","glob":false}},"0:25":{"id":"0:25","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[65,74],"end":[65,81]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::http::Version","name":"Version","id":"20:3283:1611","glob":false}},"0:485:2474":{"id":"0:485:2474","crate_id":0,"name":"execute","span":{"filename":"src/rt.rs","begin":[11,4],"end":[11,32]},"visibility":"default","docs":"Place the future into the executor to be run.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fut",{"kind":"generic","inner":"Fut"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:3390:4508":{"id":"2:3390:4508","crate_id":2,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3392:181","2:3393:356"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3265:220":{"id":"2:3265:220","crate_id":2,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3156:149":{"id":"2:3156:149","crate_id":2,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3158:1798"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3321:3107":{"id":"2:3321:3107","crate_id":2,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3323:181","2:3324:265"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:4717:2864":{"id":"1:4717:2864","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4718:2161","1:4719:6351","1:4721:1836","1:4722:5569","1:4723:6323","1:4724:10617","1:4725:3361","1:4734:3510"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13392:304":{"id":"2:13392:304","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"1:15945:2712","`u8`":"1:15956:2721"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5831:4454":{"id":"1:5831:4454","crate_id":1,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5832:6376"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13037:4823":{"id":"2:13037:4823","crate_id":2,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13039:4843","2:13040:922","2:13041:69780","2:13042:69781"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:31:48-0:770:2622":{"id":"b:31:48-0:770:2622","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.21/src/future.rs","begin":[73,0],"end":[73,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13731:138","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47567:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}},"param_names":[]}}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3258:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFuture","id":"31:44:3000","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["31:52:175","31:53:127","31:54:64055"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"F"}}},"2:2941:177":{"id":"2:2941:177","crate_id":2,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2942:415","2:2943:3411","2:2944:1830","2:2945:3478"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2910:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2951:184","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10279:119":{"id":"2:10279:119","crate_id":2,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10280:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:483:2471":{"id":"0:483:2471","crate_id":0,"name":"Executor","span":{"filename":"src/rt.rs","begin":[9,0],"end":[12,1]},"visibility":"public","docs":"An executor of futures.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:485:2474"],"generics":{"params":[{"name":"Fut","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3162:228":{"id":"2:3162:228","crate_id":2,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3164:127","2:3165:1414"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:807:2512":{"id":"0:807:2512","crate_id":0,"name":"sealed","span":{"filename":"src/upgrade.rs","begin":[295,0],"end":[295,10]},"visibility":{"restricted":{"parent":"0:720:1620","path":"::upgrade"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:811:2642"],"is_stripped":true}},"2:8428:120":{"id":"2:8428:120","crate_id":2,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8429:3479","2:8430:3480","2:8431:3481","2:8432:3482","2:8436:3483","2:8439:3484"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8582:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"30:6251:3017":{"id":"30:6251:3017","crate_id":30,"name":"LocalSpawnExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["30:6252:6490"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"LocalSpawn","id":"33:19:3008","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3356:4591":{"id":"2:3356:4591","crate_id":2,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3358:1354"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2856-0:770:2622":{"id":"b:2:2856-0:770:2622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3258:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2850:3109","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2858:64043"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3561:4529":{"id":"2:3561:4529","crate_id":2,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3563:181","2:3564:753"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3258:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"a:2:3265:220-0:939:2626":{"id":"a:2:3265:220-0:939:2626","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3265:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3265:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:10289:189":{"id":"2:10289:189","crate_id":2,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10290:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:22802:4806":{"id":"2:22802:4806","crate_id":2,"name":"SimdUint","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:22803:68986","2:22804:1225","2:22805:1226","2:22806:68987","2:22807:68988","2:22808:68989","2:22809:68990","2:22810:68991","2:22811:68992","2:22812:68993"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3263:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22815:2513","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13384:10971":{"id":"2:13384:10971","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3192-0:939:2626":{"id":"b:2:3192-0:939:2626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3166:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3162:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:3195:127","2:3196:1414"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2853-0:770:2622":{"id":"b:2:2853-0:770:2622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3258:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2855:1919"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3364:4876":{"id":"2:3364:4876","crate_id":2,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3366:559"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"31:27:3111":{"id":"31:27:3111","crate_id":31,"name":"FusedFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["31:28:6615"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13731:138","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13423:3521":{"id":"2:13423:3521","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"self::pattern":"2:13018:3404","prim@char":"1:15939:2707","`None`":"2:47440:176"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47440:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:770:2622":{"id":"0:770:2622","crate_id":0,"name":"OnUpgrade","span":{"filename":"src/upgrade.rs","begin":[72,0],"end":[74,1]},"visibility":"public","docs":"A future for a possible HTTP upgrade.\n\nIf no upgrade was available, or it doesn't succeed, yields an `Error`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:9240:3226-0:770:2622","a:2:3294:1757-0:770:2622","a:2:9239:3227-0:770:2622","a:2:3265:220-0:770:2622","a:2:3253:211-0:770:2622","b:2:3186-0:770:2622","b:2:3986-0:770:2622","b:2:3197-0:770:2622","b:2:2853-0:770:2622","b:2:13750-0:770:2622","b:2:3192-0:770:2622","b:2:2856-0:770:2622","b:2:3182-0:770:2622","b:30:237-0:770:2622","b:30:504-0:770:2622","b:31:48-0:770:2622","0:789","0:793"]}},"1:5761:4448":{"id":"1:5761:4448","crate_id":1,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5762:6376","1:5763:64388","1:5764:64389"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"22:140:1761":{"id":"22:140:1761","crate_id":22,"name":"BufMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["22:141:3445","22:142:3446","22:143:3447","22:144:3448","22:145:1791","22:147:1831","22:148:3449","22:149:3450","22:150:3451","22:151:3452","22:152:3453","22:153:3454","22:154:3455","22:155:3456","22:156:3457","22:157:3458","22:158:3459","22:159:3460","22:160:3461","22:161:3462","22:162:3463","22:163:3464","22:164:3465","22:165:3466","22:166:3467","22:167:3468","22:168:3469","22:169:3470","22:170:3471","22:171:3472","22:172:3473","22:173:3474","22:174:3475","22:175:2900","22:176:3476","22:177:3477"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3986-0:768:2619":{"id":"b:2:3986-0:768:2619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3258:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3984:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3988:1426"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6088:70619":{"id":"5:6088:70619","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8368:216"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8368:216","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3489:2874":{"id":"2:3489:2874","crate_id":2,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3490:545"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Deref","id":"2:3476:116","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3150:75":{"id":"2:3150:75","crate_id":2,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3152:305"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3258:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:5769:4449":{"id":"1:5769:4449","crate_id":1,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5770:6376","1:5771:8621"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6993:4461":{"id":"1:6993:4461","crate_id":1,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6994:67253"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13502:6203":{"id":"2:13502:6203","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3262:217":{"id":"2:3262:217","crate_id":2,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9239:3227-0:939:2626":{"id":"a:2:9239:3227-0:939:2626","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9239:3227","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9239:3227","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13382:793":{"id":"2:13382:793","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:15939:2707"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:793":{"id":"0:793","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[225,0],"end":[229,1]},"visibility":{"restricted":{"parent":"0:720:1620","path":"::upgrade"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10272:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:794:660"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13405:64595":{"id":"2:13405:64595","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:15945:2712"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23432:19023":{"id":"2:23432:19023","crate_id":2,"name":"SimdOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23433:68738","2:23434:68739","2:23435:68740"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdPartialOrd","id":"2:23427:4951","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10222:2864":{"id":"2:10222:2864","crate_id":2,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10223:1530","2:10224:64362","2:10226:3361"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:14130:141":{"id":"2:14130:141","crate_id":2,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14131:277","2:14132:518","2:14133:280","2:14134:1079"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3258:2807":{"id":"2:3258:2807","crate_id":2,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:475:1617":{"id":"0:475:1617","crate_id":0,"name":"ext","span":{"filename":"src/ext.rs","begin":[1,0],"end":[227,1]},"visibility":"public","docs":"HTTP extensions.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":false}},"0:790:181":{"id":"0:790:181","crate_id":0,"name":"Output","span":{"filename":"src/upgrade.rs","begin":[211,4],"end":[211,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47567:205","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:421:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}},"2:13403:69977":{"id":"2:13403:69977","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"str::slice_unchecked":"1:15945:2712","crate::ops::IndexMut":"2:3565:4767","`str`":"1:15945:2712"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"2:13746:150":{"id":"2:13746:150","crate_id":2,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13747:181","2:13748:150","2:13749:767"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:774":{"id":"0:774","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[121,0],"end":[149,1]},"visibility":{"restricted":{"parent":"0:720:1620","path":"::upgrade"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:775:2649"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13505:69996":{"id":"2:13505:69996","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:15939:2707"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:49706:5156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:537:2502":{"id":"0:537:2502","crate_id":0,"name":"make","span":{"filename":"src/service/make.rs","begin":[1,0],"end":[187,1]},"visibility":{"restricted":{"parent":"0:486:1619","path":"::service"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:625:2508","0:931:2562"],"is_stripped":true}},"2:13434:11180":{"id":"2:13434:11180","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"self::pattern":"2:13018:3404","prim@char":"1:15939:2707"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:12810:5110","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3253:211-0:768:2619":{"id":"a:2:3253:211-0:768:2619","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3253:211","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"24:4163:2951":{"id":"24:4163:2951","crate_id":24,"name":"AsyncSeekExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["24:4164:2942","24:4165:1812","24:4166:68207"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncSeek","id":"24:269:2944","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:486:1619":{"id":"0:486:1619","crate_id":0,"name":"service","span":{"filename":"src/service/mod.rs","begin":[1,0],"end":[55,31]},"visibility":"public","docs":"Asynchronous Services\n\nA [`Service`](Service) is a trait representing an asynchronous\nfunction of a request to a response. It's similar to\n`async fn(Request) -> Result<Response, Error>`.\n\nThe argument and return value isn't strictly required to be for HTTP.\nTherefore, hyper uses several \"trait aliases\" to reduce clutter around\nbounds. These are:\n\n- `HttpService`: This is blanketly implemented for all types that\n  implement `Service<http::Request<B1>, Response = http::Response<B2>>`.\n- `MakeService`: When a `Service` returns a new `Service` as its \"response\",\n  we consider it a `MakeService`. Again, blanketly implemented in those cases.\n- `MakeConnection`: A `Service` that returns a \"connection\", a type that\n  implements `AsyncRead` and `AsyncWrite`.\n\n# HttpService\n\nIn hyper, especially in the server setting, a `Service` is usually bound\nto a single connection. It defines how to respond to **all** requests that\nconnection will receive.\n\nThe helper [`service_fn`](service_fn) should be sufficient for most cases, but\nif you need to implement `Service` for a type manually, you can follow the example\nin `service_struct_impl.rs`.\n\n# MakeService\n\nSince a `Service` is bound to a single connection, a [`Server`](crate::Server)\nneeds a way to make them as it accepts connections. This is what a\n`MakeService` does.\n\nResources that need to be shared by all `Service`s can be put into a\n`MakeService`, and then passed to individual `Service`s when `call`\nis called.","links":{"Service":"36:13:2244","service_fn":"0:680:2509"},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:487","0:714","0:717"],"is_stripped":false}},"2:13731:138":{"id":"2:13731:138","crate_id":2,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13732:181","2:13733:1013"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13487:64613":{"id":"2:13487:64613","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:15939:2707","self::pattern":"2:13018:3404"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47440:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13043:4824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:411:1615":{"id":"0:411:1615","crate_id":0,"name":"error","span":{"filename":"src/error.rs","begin":[1,0],"end":[630,1]},"visibility":"crate","docs":"Error and Result module.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:418:205","0:421:127"],"is_stripped":true}},"2:2858:64043":{"id":"2:2858:64043","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3265:220-0:768:2619":{"id":"a:2:3265:220-0:768:2619","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3265:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:13043:4824":{"id":"2:13043:4824","crate_id":2,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13045:3479","2:13046:68964","2:13047:68965"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Searcher","id":"2:13037:4823","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2853-0:939:2626":{"id":"b:2:2853-0:939:2626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3258:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2847:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2626","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:2855:1919"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:7829:4569":{"id":"1:7829:4569","crate_id":1,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7830:67471"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13407:4850":{"id":"2:13407:4850","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:15939:2707"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49383:5139","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:232:1895":{"id":"0:232:1895","crate_id":0,"name":"aggregate","span":{"filename":"src/body/aggregate.rs","begin":[1,0],"end":[31,1]},"visibility":{"restricted":{"parent":"0:202:1613","path":"::body"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:242:1895"],"is_stripped":true}},"0:229":{"id":"0:229","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[25,0],"end":[25,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::to_bytes::to_bytes","name":"to_bytes","id":"0:402:1898","glob":false}},"2:13455:69982":{"id":"2:13455:69982","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47440:176","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13043:4824","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:794:660":{"id":"0:794:660","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[226,4],"end":[228,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10232:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10221:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5837:3847":{"id":"5:5837:3847","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5839:181","5:5840:2926"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5681:4477":{"id":"1:5681:4477","crate_id":1,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5682:64216","1:5683:5380"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10593:2513","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3718:137":{"id":"2:3718:137","crate_id":2,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3720:687"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"2:3713:224","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:213":{"id":"0:213","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[20,0],"end":[20,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"http_body::SizeHint","name":"SizeHint","id":"34:642:1894","glob":false}},"30:239:2999":{"id":"30:239:2999","crate_id":30,"name":"FutureExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["30:240:841","30:243:71919","30:245:6510","30:248:71920","30:250:71921","30:252:6579","30:253:3507","30:254:71922","30:255:3508","30:256:3509","30:258:2776","30:260:71923","30:262:71924","30:263:71925","30:264:71926","30:265:71927"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13731:138","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:2855:1919":{"id":"2:2855:1919","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10287:3566":{"id":"2:10287:3566","crate_id":2,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10288:660"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"31:44:3000":{"id":"31:44:3000","crate_id":31,"name":"TryFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["31:45:175","31:46:127","31:47:64055"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13731:138","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"31:39:2513","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6083":{"id":"5:6083","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5903:1338","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:6084:70618","5:6085:2873","5:6088:70619","5:6091:70620","5:6103:70621","5:6104:70622","5:6105:2893","5:6106:64222","5:6107:64223"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:9371:4480":{"id":"1:9371:4480","crate_id":1,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9372:67401","1:9373:67402","1:9374:67403","1:9375:67404","1:9376:67405","1:9377:41875","1:9378:67400"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10593:2513","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13400:64574":{"id":"2:13400:64574","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10914:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10914:214","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:5020:4428":{"id":"1:5020:4428","crate_id":1,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5021:3891","1:5022:67968"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10555:4505":{"id":"2:10555:4505","crate_id":2,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10556:146","2:10557:10669","2:10558:68176"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13501:5298":{"id":"2:13501:5298","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3342:4867":{"id":"2:3342:4867","crate_id":2,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3344:181","2:3345:1102"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"22:42:1760":{"id":"22:42:1760","crate_id":22,"name":"Buf","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["22:43:1772","22:44:1774","22:45:1780","22:47:1777","22:48:1769","22:49:3417","22:50:3418","22:51:3419","22:52:3420","22:53:3421","22:54:3422","22:55:3423","22:56:3424","22:57:3425","22:58:3426","22:59:3427","22:60:3428","22:61:3429","22:62:3430","22:63:3431","22:64:3432","22:65:3433","22:66:3434","22:67:3435","22:68:3436","22:69:3437","22:70:3438","22:71:3439","22:72:3440","22:73:3441","22:74:3442","22:75:3443","22:76:1785","22:80:1792","22:81:3444","22:83:2970"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10520:146":{"id":"2:10520:146","crate_id":2,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10521:652","2:10522:2161","2:10523:67096","2:10524:67097","2:10525:67098","2:10526:67099","2:10527:67100","2:10528:67101","2:10529:67102","2:10530:67103","2:10531:67104","2:10532:67105","2:10533:67106","2:10534:67107","2:10535:67108","2:10536:1530"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:312:1869":{"id":"0:312:1869","crate_id":0,"name":"Sender","span":{"filename":"src/body/body.rs","begin":[109,0],"end":[113,1]},"visibility":"public","docs":"A sender half created through [`Body::channel()`].\n\nUseful when wanting to stream chunks from another thread.\n\n## Body Closing\n\nNote that the request body will always be closed normally when the sender is dropped (meaning\nthat the empty terminating chunk will be sent to the remote). If you desire to close the\nconnection with an incomplete response (e.g. in the case of an error during asynchronous\nprocessing), call the [`Sender::abort()`] method to abort the body in an abnormal fashion.\n\n[`Body::channel()`]: struct.Body.html#method.channel\n[`Sender::abort()`]: struct.Sender.html#method.abort","links":{},"attrs":["#[must_use = \"Sender does nothing unless sent on\"]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"2:10914:214":{"id":"2:10914:214","crate_id":2,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:10916:181","2:10917:59970","2:10918:2041","2:10919:64573","2:10920:64574","2:10921:753","2:10922:754"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3258:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:10905:2513","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3336:4864":{"id":"2:3336:4864","crate_id":2,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3338:181","2:3339:558"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3411:4797":{"id":"2:3411:4797","crate_id":2,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3413:354"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:4767:4933":{"id":"2:4767:4933","crate_id":2,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4768:1955","2:4769:2034","2:4770:2049"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:216":{"id":"0:216","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[22,0],"end":[22,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::aggregate::aggregate","name":"aggregate","id":"0:242:1895","glob":false}},"2:3395:4789":{"id":"2:3395:4789","crate_id":2,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3397:181","2:3398:1231"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13481:69992":{"id":"2:13481:69992","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:13018:3404","prim@char":"1:15939:2707"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13028:4821","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"20:489:2394":{"id":"20:489:2394","crate_id":20,"name":"IntoHeaderName","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"20:490:2513","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3294:1757-0:768:2619":{"id":"a:2:3294:1757-0:768:2619","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3294:1757","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3265:220-0:770:2622":{"id":"a:2:3265:220-0:770:2622","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3265:220","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2622","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:12465:5305":{"id":"2:12465:5305","crate_id":2,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12466:1955","2:12467:68611"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3509:132":{"id":"2:3509:132","crate_id":2,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3511:181","2:3512:378"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:784:1836":{"id":"0:784:1836","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/upgrade.rs","begin":[186,4],"end":[188,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3192-0:768:2619":{"id":"b:2:3192-0:768:2619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3166:227","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3162:228","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2619","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3195:127","2:3196:1414"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}}},"paths":{"20:1498:2626":{"crate_id":20,"path":["http","response","Parts"],"kind":"struct"},"16:5522:5685":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:15296:4692":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:49629:5151":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:4717:2864":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"16:7738:5859":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"1:5405:4692":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"7:85:47064":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"7:38:47057":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"24:4760:3766":{"crate_id":24,"path":["tokio","park","thread","Inner"],"kind":"struct"},"24:80:6727":{"crate_id":24,"path":["tokio","macros","scoped_tls","set","Reset"],"kind":"struct"},"17:4157:6046":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"18:821:6144":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"11:0:2684":{"crate_id":11,"path":["adler"],"kind":"module"},"12:466:71166":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"29:4411:9334":{"crate_id":29,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"17:10887:7304":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"24:6877:9760":{"crate_id":24,"path":["tokio","runtime","thread_pool","queue","Steal"],"kind":"struct"},"29:3949:9160":{"crate_id":29,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"29:609:8939":{"crate_id":29,"path":["libc","unix","tms"],"kind":"struct"},"24:8616:3131":{"crate_id":24,"path":["tokio","sync","batch_semaphore","Semaphore"],"kind":"struct"},"29:5378:9518":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"30:8136:1754":{"crate_id":30,"path":["futures_util","future","lazy","Lazy"],"kind":"struct"},"17:13386:7817":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"24:13176:6287":{"crate_id":24,"path":["tokio","io","util","read_line","ReadLine"],"kind":"struct"},"24:498:71293":{"crate_id":24,"path":["tokio","net","addr","sealed","ToSocketAddrsPriv"],"kind":"trait"},"1:14892:6800":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"29:4219:9258":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"30:8382:71296":{"crate_id":30,"path":["futures_util","future","join","_","__Origin"],"kind":"struct"},"5:1674:4518":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"36:13:2244":{"crate_id":36,"path":["tower_service","Service"],"kind":"trait"},"2:10555:4505":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:8160:3027":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"1:12220:4587":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"6:4470:9356":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"6:3966:9165":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"17:13532:7858":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"2:48787:8439":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"6:1700:9068":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:6471:4469":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"1:5408:4693":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"9:234:5490":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"2:51261:4973":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"20:2602:6174":{"crate_id":20,"path":["http","header","map","RawLinks"],"kind":"struct"},"24:442:4428":{"crate_id":24,"path":["tokio","net","addr","ToSocketAddrs"],"kind":"trait"},"2:10289:189":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:10285:3565":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:2170:4499":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"22:374:6216":{"crate_id":22,"path":["bytes","buf","uninit_slice","UninitSlice"],"kind":"struct"},"1:11108:2866":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"30:10027:6528":{"crate_id":30,"path":["futures_util","stream","stream","next","Next"],"kind":"struct"},"6:5522:9558":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:6233:4709":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"1:4394:4680":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"30:9071:6523":{"crate_id":30,"path":["futures_util","stream","stream","unzip","Unzip"],"kind":"struct"},"16:7971:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"30:9236:71296":{"crate_id":30,"path":["futures_util","stream","stream","cycle","_","__Origin"],"kind":"struct"},"1:11482:4532":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"1:1522:4521":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"29:6636:9739":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"2:10287:3566":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:1655:4524":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"17:11970:7455":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"1:1194:13796":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"29:6873:9748":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"16:7843:5861":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"29:4309:9288":{"crate_id":29,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"16:3241:5960":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"30:12788:6952":{"crate_id":30,"path":["futures_util","stream","futures_ordered","OrderWrapper"],"kind":"struct"},"20:2609:6175":{"crate_id":20,"path":["http","header","map","ExtraValue"],"kind":"struct"},"5:4306:3892":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"1:12145:4616":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"6:3881:9106":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"27:826:6151":{"crate_id":27,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"35:43:1921":{"crate_id":35,"path":["futures_channel","mpsc"],"kind":"module"},"2:53286:5003":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"30:8614:3853":{"crate_id":30,"path":["futures_util","future","select_all","SelectAll"],"kind":"struct"},"12:2412:9823":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"24:568:89":{"crate_id":24,"path":["tokio","loom","std","atomic_u32","AtomicU32"],"kind":"struct"},"17:13733:7923":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"1:15141:4598":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"33:258:3011":{"crate_id":33,"path":["futures_task","future_obj","UnsafeFutureObj"],"kind":"trait"},"30:8142:187":{"crate_id":30,"path":["futures_util","future","pending","Pending"],"kind":"struct"},"2:49856:4833":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"6:5371:9516":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:8144:69829":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"2:52741:5008":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:45846:195":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"16:5505:5684":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"20:2475:4019":{"crate_id":20,"path":["http","header","map","Entry"],"kind":"enum"},"24:8966:3045":{"crate_id":24,"path":["tokio","sync","rwlock","read_guard","RwLockReadGuard"],"kind":"struct"},"5:4443:3891":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"16:4734:8033":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"17:1311:6130":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:3373:4784":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"1:14972:4565":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"16:6219:5831":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"1:1442:3488":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"29:81:42164":{"crate_id":29,"path":["libc","unix","DIR"],"kind":"enum"},"2:49661:2872":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"27:1025:6146":{"crate_id":27,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"2:3380:4506":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"17:10061:7242":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"1:14498:4497":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"29:4025:9197":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"6:543:8894":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"2:3261:218":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"16:7342:5816":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"1:5831:4454":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"5:8176:5312":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"24:6659:6403":{"crate_id":24,"path":["tokio","runtime","handle","HandleInner"],"kind":"struct"},"1:12090:3488":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"30:12602:3852":{"crate_id":30,"path":["futures_util","stream","select","Select"],"kind":"struct"},"2:49457:5143":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"16:6110:5821":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"6:4281:9272":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"12:1666:5609":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"30:12304:71296":{"crate_id":30,"path":["futures_util","stream","try_stream","try_take_while","_","__Origin"],"kind":"struct"},"2:46273:5073":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"30:13042:6954":{"crate_id":30,"path":["futures_util","fns","MergeResultFn"],"kind":"struct"},"2:50127:5166":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"24:8166:162":{"crate_id":24,"path":["tokio","sync","mutex","Mutex"],"kind":"struct"},"6:4133:9243":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:10836:4460":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"1:8772:3047":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"16:7761:5860":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"24:13286:6294":{"crate_id":24,"path":["tokio","io","util","read_int","ReadF32Le"],"kind":"struct"},"12:2398:9821":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"24:4104:1837":{"crate_id":24,"path":["tokio","io","util","async_read_ext","AsyncReadExt"],"kind":"trait"},"30:10035:6529":{"crate_id":30,"path":["futures_util","stream","stream","select_next_some","SelectNextSome"],"kind":"struct"},"30:10649:71296":{"crate_id":30,"path":["futures_util","stream","stream","zip","_","__Origin"],"kind":"struct"},"2:53353:8505":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"2:3701:5207":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"2:6614:69087":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"5:3044:69856":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"30:10199:71296":{"crate_id":30,"path":["futures_util","stream","stream","peek","_","__Origin"],"kind":"struct"},"1:11140:2870":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"30:9776:3820":{"crate_id":30,"path":["futures_util","stream","stream","fuse","Fuse"],"kind":"struct"},"16:3064:6013":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:49904:4834":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:24529:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"16:7884:5791":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"1:12116:3961":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"5:7780:234":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"17:12028:7464":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"24:11173:3016":{"crate_id":24,"path":["tokio","util","wake","WakerRef"],"kind":"struct"},"17:12582:7570":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"29:4104:9234":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"20:2533:4024":{"crate_id":20,"path":["http","header","map","ValueDrain"],"kind":"struct"},"2:49393:1762":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"16:7378:5788":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"5:0:277":{"crate_id":5,"path":["alloc"],"kind":"module"},"1:8323:4640":{"crate_id":1,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"12:777:3488":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:32310:68748":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"30:12515:2056":{"crate_id":30,"path":["futures_util","stream","empty","Empty"],"kind":"struct"},"1:14959:4564":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"29:1721:4705":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"29:625:8949":{"crate_id":29,"path":["libc","unix","protoent"],"kind":"struct"},"29:4323:9292":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"16:4823:8036":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"17:13477:7840":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"29:4137:9252":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"5:7257:6751":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"17:11604:7379":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"24:8857:3135":{"crate_id":24,"path":["tokio","sync","rwlock","owned_write_guard","OwnedRwLockWriteGuard"],"kind":"struct"},"1:7961:3766":{"crate_id":1,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"20:2392:1612":{"crate_id":20,"path":["http","header","map","HeaderMap"],"kind":"struct"},"20:2702:4583":{"crate_id":20,"path":["http","header","name","Custom"],"kind":"struct"},"6:6155:2308":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:24767:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"30:8035:71296":{"crate_id":30,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"0:483:2471":{"crate_id":0,"path":["hyper","rt","Executor"],"kind":"trait"},"12:940:4520":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"6:4449:9349":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"29:4363:9314":{"crate_id":29,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"16:7073:5847":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"16:5595:5689":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"17:10052:7241":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"6:4325:9291":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"20:3197:3953":{"crate_id":20,"path":["http","uri","scheme","Scheme"],"kind":"struct"},"16:7174:5850":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"1:9622:6790":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"23:37:6263":{"crate_id":23,"path":["itoa","Integer"],"kind":"trait"},"5:1441:4019":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"13:0:2679":{"crate_id":13,"path":["std_detect"],"kind":"module"},"18:152:55677":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"17:9528:1762":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"1:3730:2882":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"2:51069:4984":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"13:120:47703":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"12:183:5604":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"2:11419:5119":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"29:5177:9419":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:45867:198":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"30:10697:71296":{"crate_id":30,"path":["futures_util","stream","stream","chunks","_","__Origin"],"kind":"struct"},"24:6684:6386":{"crate_id":24,"path":["tokio","runtime","spawner","Spawner"],"kind":"enum"},"0:202:1613":{"crate_id":0,"path":["hyper","body"],"kind":"module"},"30:5673:6723":{"crate_id":30,"path":["futures_util","stream","futures_unordered","abort","abort","DoublePanic"],"kind":"struct"},"17:10149:7232":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:3364:4876":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"2:24597:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"2:3500:1877":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:11160:2872":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"30:10466:71296":{"crate_id":30,"path":["futures_util","stream","stream","take_while","_","__Origin"],"kind":"struct"},"17:12917:7614":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"2:46706:4912":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"6:4439:9343":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:3401:4792":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"17:9280:7221":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"18:767:6966":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"17:11082:6042":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"1:1486:4499":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"1:9889:6794":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"6:6812:9740":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"1:9094:3041":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"24:9740:3743":{"crate_id":24,"path":["tokio","sync","oneshot","error","TryRecvError"],"kind":"enum"},"27:958:6955":{"crate_id":27,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"27:1072:6150":{"crate_id":27,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"30:12710:71296":{"crate_id":30,"path":["futures_util","stream","select_with_strategy","_","__Origin"],"kind":"struct"},"16:5273:5715":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:11143:2871":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:5564:13798":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"24:11322:10239":{"crate_id":24,"path":["tokio","task","unconstrained","Unconstrained"],"kind":"struct"},"24:14021:6306":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU128"],"kind":"struct"},"17:12645:7588":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"1:11632:4546":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"12:162:5600":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"6:4494:9363":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"2:9748:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:50016:8442":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunk"],"kind":"struct"},"1:1156:8525":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"9:1020:5532":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"30:9333:71296":{"crate_id":30,"path":["futures_util","stream","stream","filter","_","__Origin"],"kind":"struct"},"2:10275:109":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"12:843:4021":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"24:1764:5845":{"crate_id":24,"path":["tokio","fs","file","Operation"],"kind":"enum"},"18:705:6955":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"29:562:8914":{"crate_id":29,"path":["libc","unix","hostent"],"kind":"struct"},"1:2192:4503":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"2:45913:199":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:8444:5394":{"crate_id":1,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"1:10615:1845":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"2:28016:4820":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:13882:64268":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"17:10140:6074":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"29:5220:9434":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"29:4462:9356":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:53137:5000":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:12082:4614":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"6:6935:9758":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"24:9674:3128":{"crate_id":24,"path":["tokio","sync","notify","Notify"],"kind":"struct"},"1:1419:3891":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"2:24733:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"30:11840:71296":{"crate_id":30,"path":["futures_util","stream","try_stream","try_filter_map","_","__Origin"],"kind":"struct"},"2:11298:5113":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"37:324:1608":{"crate_id":37,"path":["httparse","Response"],"kind":"struct"},"17:1236:7143":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:13048:4825":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"20:2989:4030":{"crate_id":20,"path":["http","header","value","ToStrError"],"kind":"struct"},"17:9034:49385":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"2:48795:8440":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"16:5815:5701":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:45890:197":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"30:10248:71296":{"crate_id":30,"path":["futures_util","stream","stream","peek","_","__Origin"],"kind":"struct"},"1:11190:4431":{"crate_id":1,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"6:5998:9620":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:51618:4978":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:11318:4695":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"3:300:205":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"24:10909:6503":{"crate_id":24,"path":["tokio","time","driver","entry","TimerEntry"],"kind":"struct"},"30:7760:3832":{"crate_id":30,"path":["futures_util","future","try_future","InspectOk"],"kind":"struct"},"6:5436:9539":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"17:8954:6043":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"18:886:6149":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"16:3429:5713":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"17:10814:6033":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"2:3156:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"24:7248:7001":{"crate_id":24,"path":["tokio","coop","Budget"],"kind":"struct"},"5:7379:3488":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"5:8379:5320":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"24:10903:3766":{"crate_id":24,"path":["tokio","time","clock","Inner"],"kind":"struct"},"24:11277:71296":{"crate_id":24,"path":["tokio","time","timeout","_","__Origin"],"kind":"struct"},"17:10117:6125":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"2:2850:3109":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"18:136:55676":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:11323:2226":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"27:915:6962":{"crate_id":27,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"24:8177:3127":{"crate_id":24,"path":["tokio","sync","mutex","MappedMutexGuard"],"kind":"struct"},"1:4026:4585":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"2:50147:5164":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"17:13590:7872":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"24:4497:6987":{"crate_id":24,"path":["tokio","io","util","vec_with_initialized","VecWithInitialized"],"kind":"struct"},"30:6959:3826":{"crate_id":30,"path":["futures_util","future","future","Then"],"kind":"struct"},"6:1717:9075":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"5:1472:4022":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"5:4643:6755":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:8860:3893":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"12:2419:2840":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"17:13627:7880":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"30:9829:3821":{"crate_id":30,"path":["futures_util","stream","stream","Inspect"],"kind":"struct"},"2:47619:3892":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"30:7663:71296":{"crate_id":30,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"1:14761:4566":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"1:2175:4500":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"6:4410:9328":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:11372:4746":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"12:2280:4023":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"17:12343:7517":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"1:10593:2513":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:12759:5146":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"6:6051:9643":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:45821:194":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"1:7697:4560":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"20:1361:1607":{"crate_id":20,"path":["http","request","Request"],"kind":"struct"},"24:12948:6288":{"crate_id":24,"path":["tokio","io","util","read_until","ReadUntil"],"kind":"struct"},"16:0:2688":{"crate_id":16,"path":["gimli"],"kind":"module"},"29:1700:9069":{"crate_id":29,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"35:433:3735":{"crate_id":35,"path":["futures_channel","mpsc","UnboundedSenderInner"],"kind":"struct"},"24:9726:3961":{"crate_id":24,"path":["tokio","sync","oneshot","error","RecvError"],"kind":"struct"},"1:10704:14781":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"6:4101:9229":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"6:563:8911":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"6:5400:9529":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"30:12408:71296":{"crate_id":30,"path":["futures_util","stream","try_stream","try_buffered","_","__Origin"],"kind":"struct"},"1:10967:4583":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"12:928:4027":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"6:4005:9185":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"16:3939:8019":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"2:49326:5131":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"24:8622:65":{"crate_id":24,"path":["tokio","sync","batch_semaphore","Acquire"],"kind":"struct"},"30:12874:3853":{"crate_id":30,"path":["futures_util","stream","select_all","SelectAll"],"kind":"struct"},"24:10978:127":{"crate_id":24,"path":["tokio","time","error","Error"],"kind":"struct"},"6:6864:9743":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"2:48765:146":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"30:8500:71296":{"crate_id":30,"path":["futures_util","future","join","_","__Origin"],"kind":"struct"},"2:46595:4906":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"16:7420:5804":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"17:13924:7979":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"1:0:1329":{"crate_id":1,"path":["std"],"kind":"module"},"6:1760:9090":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"1:5823:4452":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"29:4119:9241":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"1:903:4625":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"37:0:1635":{"crate_id":37,"path":["httparse"],"kind":"module"},"16:3392:5968":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"24:6049:6734":{"crate_id":24,"path":["tokio","runtime","basic_scheduler","CoreGuard"],"kind":"struct"},"17:13098:7755":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"1:9173:3044":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"20:2673:4585":{"crate_id":20,"path":["http","header","name","Repr"],"kind":"enum"},"2:50307:190":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"2:50115:5162":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"2:55912:4883":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"29:1564:8977":{"crate_id":29,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:8453:2808":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"6:6923:9756":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:15156:4599":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"27:1033:6147":{"crate_id":27,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"17:12507:7558":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"29:3873:9106":{"crate_id":29,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"14:0:2686":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"6:4241:9259":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"6:4073:9213":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"18:713:3408":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"1:4465:2891":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"17:8902:49382":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"30:11503:71296":{"crate_id":30,"path":["futures_util","stream","try_stream","_","__Origin"],"kind":"struct"},"2:3166:227":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"6:670:42556":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"1:11130:2869":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"5:5315:200":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"12:2253:4019":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:50173:4592":{"crate_id":2,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"5:2262:5423":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"1:8227:3755":{"crate_id":1,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"18:897:6150":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"29:4423:9338":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"30:8354:3847":{"crate_id":30,"path":["futures_util","future","join","Join"],"kind":"struct"},"1:15012:8841":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"24:1776:4459":{"crate_id":24,"path":["tokio","fs","open_options","OpenOptions"],"kind":"struct"},"30:7112:71296":{"crate_id":30,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"12:869:4018":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"30:9276:71296":{"crate_id":30,"path":["futures_util","stream","stream","enumerate","_","__Origin"],"kind":"struct"},"16:5295:47807":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"17:13306:7796":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"22:1261:2870":{"crate_id":22,"path":["bytes","buf","take","Take"],"kind":"struct"},"5:7849:6768":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"24:5568:6464":{"crate_id":24,"path":["tokio","runtime","task","Notified"],"kind":"struct"},"27:836:6155":{"crate_id":27,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:46004:5017":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"16:7303:5858":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"24:9848:3740":{"crate_id":24,"path":["tokio","sync","watch","error","SendError"],"kind":"struct"},"24:12192:6335":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI16"],"kind":"struct"},"20:2567:6172":{"crate_id":20,"path":["http","header","map","HashValue"],"kind":"struct"},"30:10904:71296":{"crate_id":30,"path":["futures_util","stream","stream","buffered","_","__Origin"],"kind":"struct"},"2:3503:130":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"6:1522:8953":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"29:5937:9591":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"24:4102:5646":{"crate_id":24,"path":["tokio","io","util","async_buf_read_ext","AsyncBufReadExt","lines"],"kind":"foreign_type"},"2:3258:2807":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"17:12275:7504":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"20:3009:1606":{"crate_id":20,"path":["http","method","Method"],"kind":"struct"},"2:50299:3090":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"17:13547:7862":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:51021:5004":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"17:13842:7962":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"2:3419:4800":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"30:12631:71296":{"crate_id":30,"path":["futures_util","stream","select","_","__Origin"],"kind":"struct"},"30:6922:71296":{"crate_id":30,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"30:12563:3843":{"crate_id":30,"path":["futures_util","stream","poll_immediate","PollImmediate"],"kind":"struct"},"6:6636:9737":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"25:0:1638":{"crate_id":25,"path":["pin_project_lite"],"kind":"module"},"20:2808:6199":{"crate_id":20,"path":["http","header","name","StandardHeader"],"kind":"enum"},"17:11030:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"17:9065:49386":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"29:3897:9124":{"crate_id":29,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"17:11519:7366":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:46413:100":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"2:24091:8395":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:48740:4528":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:15355:4699":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"1:9655:67958":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"2:47440:176":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"30:10311:4912":{"crate_id":30,"path":["futures_util","stream","stream","skip_while","SkipWhile"],"kind":"struct"},"30:7724:71296":{"crate_id":30,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"5:8168:194":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"16:6357:5834":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"35:412:3768":{"crate_id":35,"path":["futures_channel","lock","Lock"],"kind":"struct"},"16:3264:5961":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"6:6893:9750":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"24:2320:2945":{"crate_id":24,"path":["tokio","io","split","ReadHalf"],"kind":"struct"},"30:11865:3837":{"crate_id":30,"path":["futures_util","stream","try_stream","try_flatten","TryFlatten"],"kind":"struct"},"30:8213:3843":{"crate_id":30,"path":["futures_util","future","poll_immediate","PollImmediate"],"kind":"struct"},"6:4371:9314":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"24:1028:160":{"crate_id":24,"path":["tokio","util","linked_list","LinkedList"],"kind":"struct"},"5:8368:216":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:3360:4874":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"2:56309:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:13609:7877":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"17:9296:7131":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:46576:4904":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"29:150:42230":{"crate_id":29,"path":["libc","unix","FILE"],"kind":"enum"},"29:6891:9751":{"crate_id":29,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"1:11556:4542":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:8347:4817":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"29:1650:9039":{"crate_id":29,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"30:13058:6521":{"crate_id":30,"path":["futures_util","fns","InspectFn"],"kind":"struct"},"2:24055:5044":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"31:110:3112":{"crate_id":31,"path":["futures_core","stream","FusedStream"],"kind":"trait"},"18:830:6145":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"2:47490:3892":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"17:9600:71174":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"17:12247:7500":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"5:8106:5318":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"24:12290:6348":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU64"],"kind":"struct"},"6:4272:9267":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"30:7699:3835":{"crate_id":30,"path":["futures_util","future","try_future","OkInto"],"kind":"struct"},"6:5428:9537":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"16:3195:5958":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"2:9239:3227":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"18:661:6155":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:24801:164":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"1:6116:4701":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"2:53344:8504":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:11996:4565":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"2:22802:4806":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"1:14513:9913":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"6:1690:9062":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"20:3217:2401":{"crate_id":20,"path":["http","uri","scheme","Protocol"],"kind":"enum"},"5:1235:5421":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"35:467:3739":{"crate_id":35,"path":["futures_channel","mpsc","UnboundedReceiver"],"kind":"struct"},"24:6566:6386":{"crate_id":24,"path":["tokio","runtime","blocking","pool","Spawner"],"kind":"struct"},"24:5363:3746":{"crate_id":24,"path":["tokio","runtime","task","state","State"],"kind":"struct"},"2:46506:8426":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"6:3945:9157":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"29:4233:9259":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"12:432:5601":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"17:13054:7724":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"1:13365:4706":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"6:4083:9220":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"1:4426:2889":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"30:825:3094":{"crate_id":30,"path":["futures_util","future","poll_fn","PollFn"],"kind":"struct"},"29:4285:9279":{"crate_id":29,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"12:2032:3891":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"30:6757:71296":{"crate_id":30,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"17:510:7139":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"5:2310:5444":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"17:13564:7866":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"29:4038:9201":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"30:239:2999":{"crate_id":30,"path":["futures_util","future","future","FutureExt"],"kind":"trait"},"27:0:2690":{"crate_id":27,"path":["memchr"],"kind":"module"},"2:49297:5128":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"27:987:6143":{"crate_id":27,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:15951:2716":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"17:12480:7555":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"17:11186:7325":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"5:1597:3891":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"16:7786:5794":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"24:9787:3133":{"crate_id":24,"path":["tokio","sync","semaphore","OwnedSemaphorePermit"],"kind":"struct"},"1:3642:2880":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"30:12979:3865":{"crate_id":30,"path":["futures_util","abortable","AbortHandle"],"kind":"struct"},"6:1736:9081":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"30:9948:4907":{"crate_id":30,"path":["futures_util","stream","stream","FlatMap"],"kind":"struct"},"30:9820:6527":{"crate_id":30,"path":["futures_util","stream","stream","into_future","StreamFuture"],"kind":"struct"},"16:7406:5787":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"1:8959:4725":{"crate_id":1,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"30:6867:71296":{"crate_id":30,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"17:10200:7247":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"16:5717:5694":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"24:1280:128":{"crate_id":24,"path":["tokio","fs","file","File"],"kind":"struct"},"5:4215:4018":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"17:9368:7132":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"9:776:5512":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"24:611:92":{"crate_id":24,"path":["tokio","loom","std","atomic_usize","AtomicUsize"],"kind":"struct"},"17:12467:7553":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:46618:3820":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"6:4193:9255":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:51092:4972":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"17:11159:7324":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"2:22564:69739":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"17:8929:49383":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"12:2392:9820":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"1:8837:162":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"2:46535:2869":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"2:13018:3404":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"9:27:5514":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"29:5202:9424":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"27:812:6955":{"crate_id":27,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"16:3287:5962":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"9:0:2682":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:3317:4654":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"16:4704:8032":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"24:9771:3129":{"crate_id":24,"path":["tokio","sync","batch_semaphore","AcquireError"],"kind":"struct"},"29:1519:8955":{"crate_id":29,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"24:9073:3137":{"crate_id":24,"path":["tokio","sync","rwlock","write_guard_mapped","RwLockMappedWriteGuard"],"kind":"struct"},"24:14556:2869":{"crate_id":24,"path":["tokio","io","util","chain","Chain"],"kind":"struct"},"24:11040:6357":{"crate_id":24,"path":["tokio","time","interval","MissedTickBehavior"],"kind":"enum"},"2:47661:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"30:11674:6592":{"crate_id":30,"path":["futures_util","stream","try_stream","try_next","TryNext"],"kind":"struct"},"6:4478:9358":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"1:14549:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"24:9776:3131":{"crate_id":24,"path":["tokio","sync","semaphore","Semaphore"],"kind":"struct"},"5:8344:5379":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"24:1755:3746":{"crate_id":24,"path":["tokio","fs","file","State"],"kind":"enum"},"1:11968:181":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"2:23432:19023":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"6:5312:9484":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"29:5284:9468":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"29:5514:9558":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:45805:196":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"2:4362:3488":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"29:0:798":{"crate_id":29,"path":["libc"],"kind":"module"},"2:14:2161":{"crate_id":2,"path":["core","write"],"kind":"macro"},"29:5520:9559":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"30:7092:3825":{"crate_id":30,"path":["futures_util","future","future","NeverError"],"kind":"struct"},"2:10914:214":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"30:13127:6578":{"crate_id":30,"path":["futures_util","fns","UnwrapOrElseFn"],"kind":"struct"},"24:11291:6360":{"crate_id":24,"path":["tokio","time","driver","sleep","Sleep"],"kind":"struct"},"2:2847:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"16:6464:5796":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"6:157:42230":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"5:8362:9834":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"30:11649:71296":{"crate_id":30,"path":["futures_util","stream","try_stream","or_else","_","__Origin"],"kind":"struct"},"2:46056:5027":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"17:12456:7552":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"20:543:4017":{"crate_id":20,"path":["http","header","map","as_header_name","AsHeaderName"],"kind":"trait"},"27:870:6157":{"crate_id":27,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"30:6737:3828":{"crate_id":30,"path":["futures_util","future","future","FlattenStream"],"kind":"struct"},"5:1843:6751":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"2:46342:5286":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"6:4060:9208":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"12:2269:4022":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:3509:132":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:5018:5087":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"5:923:5370":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:50123:5167":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"12:1103:4019":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:1432:3892":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"29:1900:43527":{"crate_id":29,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"20:2582:5600":{"crate_id":20,"path":["http","header","map","Bucket"],"kind":"struct"},"1:15953:2718":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"1:1450:4021":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"1:15949:2714":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"30:8735:3858":{"crate_id":30,"path":["futures_util","future","try_join","TryJoin3"],"kind":"struct"},"1:15938:2706":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"5:3336:4501":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"24:6593:202":{"crate_id":24,"path":["tokio","runtime","blocking","shutdown","Receiver"],"kind":"struct"},"2:53247:4983":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:4050:2978":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"30:7186:150":{"crate_id":30,"path":["futures_util","future","try_future","into_future","IntoFuture"],"kind":"struct"},"1:12185:3036":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:10222:2864":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"1:7320:8538":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"16:6238:5786":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"29:3943:9158":{"crate_id":29,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"5:8250:2840":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"1:6893:4462":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"1:7683:4559":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"17:13598:7873":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"17:10160:7245":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:22955:4949":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"17:11628:7383":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"24:9800:3139":{"crate_id":24,"path":["tokio","sync","once_cell","SetError"],"kind":"enum"},"30:11958:6597":{"crate_id":30,"path":["futures_util","stream","try_stream","try_concat","TryConcat"],"kind":"struct"},"2:48467:133":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"19:117:9769":{"crate_id":19,"path":["panic_unwind","dwarf","eh","EHContext"],"kind":"struct"},"6:511:8881":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"24:309:1815":{"crate_id":24,"path":["tokio","io","async_write","AsyncWrite"],"kind":"trait"},"1:4074:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"6:6176:9705":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"5:3039:69854":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"2:3489:2874":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:4:979":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"16:7549:5792":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"6:3957:9160":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"30:9112:71296":{"crate_id":30,"path":["futures_util","stream","stream","unzip","_","__Origin"],"kind":"struct"},"5:2777:5425":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"24:12045:6333":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI128"],"kind":"struct"},"6:4164:9253":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"30:8161:3841":{"crate_id":30,"path":["futures_util","future","try_maybe_done","TryMaybeDone"],"kind":"enum"},"1:4633:2853":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"1:14566:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"1:13511:8532":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"24:12388:6344":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU16"],"kind":"struct"},"6:5347:9504":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"6:578:8920":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"29:1546:8966":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"30:8836:71296":{"crate_id":30,"path":["futures_util","future","try_join","_","__Origin"],"kind":"struct"},"16:6605:5798":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"35:140:3743":{"crate_id":35,"path":["futures_channel","mpsc","TryRecvError"],"kind":"struct"},"24:5733:6733":{"crate_id":24,"path":["tokio","runtime","task","inject","Inject"],"kind":"struct"},"5:1635:4021":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"6:6221:9727":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:3294:1757":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"17:9088:49387":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"33:407:3016":{"crate_id":33,"path":["futures_task","waker_ref","WakerRef"],"kind":"struct"},"34:642:1894":{"crate_id":34,"path":["http_body","size_hint","SizeHint"],"kind":"struct"},"2:50143:5163":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"16:6413:5615":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"16:2816:5970":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"29:6043:9643":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:52108:5002":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"30:9923:71296":{"crate_id":30,"path":["futures_util","stream","stream","map","_","__Origin"],"kind":"struct"},"2:49611:5150":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"6:1729:4705":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"1:5809:4450":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"29:5451:9545":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"24:14634:71296":{"crate_id":24,"path":["tokio","io","util","buf_writer","_","__Origin"],"kind":"struct"},"6:6239:9730":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"16:5456:5679":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:51437:4994":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"20:2620:6176":{"crate_id":20,"path":["http","header","map","Link"],"kind":"enum"},"2:51714:4967":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:10405:8628":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"6:5414:9532":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:52383:4964":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"17:9839:6074":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"30:7846:71296":{"crate_id":30,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"2:3632:5206":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"17:10128:6126":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:22498:3408":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"17:11199:7327":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"2:3087:2513":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"30:8718:71296":{"crate_id":30,"path":["futures_util","future","try_join","_","__Origin"],"kind":"struct"},"17:13810:7947":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"2:22766:5021":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"17:9933:7233":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"1:4735:2865":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"1:4388:4678":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:37572:178":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"5:8330:5378":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"17:13348:7809":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"24:7849:7002":{"crate_id":24,"path":["tokio","sync","mpsc","chan","RxFields"],"kind":"struct"},"30:11027:6515":{"crate_id":30,"path":["futures_util","stream","stream","FlatMapUnordered"],"kind":"struct"},"16:3218:5959":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"24:9755:3746":{"crate_id":24,"path":["tokio","sync","oneshot","State"],"kind":"struct"},"30:9572:71296":{"crate_id":30,"path":["futures_util","stream","stream","fold","_","__Origin"],"kind":"struct"},"1:10892:2674":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"24:4867:2231":{"crate_id":24,"path":["tokio","runtime","task","core","Header"],"kind":"struct"},"2:11391:5117":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:15910:13797":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"29:5159:9406":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"6:4511:9371":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"12:353:9817":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"17:13041:7717":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"30:12985:6626":{"crate_id":30,"path":["futures_util","abortable","AbortInner"],"kind":"struct"},"20:2649:2370":{"crate_id":20,"path":["http","header","name","HeaderName"],"kind":"struct"},"5:4515:5407":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"17:11750:7405":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"29:617:8944":{"crate_id":29,"path":["libc","unix","servent"],"kind":"struct"},"24:6128:6428":{"crate_id":24,"path":["tokio","runtime","blocking","pool","BlockingPool"],"kind":"struct"},"2:5085:5093":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"16:2991:5965":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"1:7475:185":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"29:662:42556":{"crate_id":29,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"9:1056:5525":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"24:369:1816":{"crate_id":24,"path":["tokio","io","read_buf","ReadBuf"],"kind":"struct"},"2:8428:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"17:10623:7265":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"16:6577:5840":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"6:4300:9280":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"24:4724:3864":{"crate_id":24,"path":["tokio","park","either","Either"],"kind":"enum"},"1:12215:3046":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"24:9824:1869":{"crate_id":24,"path":["tokio","sync","watch","Sender"],"kind":"struct"},"2:21:672":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"16:5927:5705":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"24:12519:6326":{"crate_id":24,"path":["tokio","io","util","write_all_buf","WriteAllBuf"],"kind":"struct"},"1:10876:4672":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"24:5782:6993":{"crate_id":24,"path":["tokio","runtime","task","state","Snapshot"],"kind":"struct"},"5:1939:4499":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"17:3743:6030":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"24:520:86":{"crate_id":24,"path":["tokio","loom","std","atomic_ptr","AtomicPtr"],"kind":"struct"},"16:3549:8015":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"24:1789:4650":{"crate_id":24,"path":["tokio","fs","read_dir","ReadDir"],"kind":"struct"},"16:3365:5710":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"17:11337:6064":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"2:38816:2915":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"30:7491:3829":{"crate_id":30,"path":["futures_util","future","try_future","AndThen"],"kind":"struct"},"1:4660:2861":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"2:24495:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"29:4112:9239":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:48987:5295":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"5:3396:4503":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:46336:4490":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"30:9528:6524":{"crate_id":30,"path":["futures_util","stream","stream","fold","Fold"],"kind":"struct"},"5:5788:6751":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"30:7222:3837":{"crate_id":30,"path":["futures_util","future","try_future","try_flatten","TryFlatten"],"kind":"enum"},"2:9743:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"20:1580:2377":{"crate_id":20,"path":["http","status","InvalidStatusCode"],"kind":"struct"},"17:10529:7254":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"20:490:2513":{"crate_id":20,"path":["http","header","map","into_header_name","Sealed"],"kind":"trait"},"20:2594:6173":{"crate_id":20,"path":["http","header","map","Links"],"kind":"struct"},"30:9294:4905":{"crate_id":30,"path":["futures_util","stream","stream","filter","Filter"],"kind":"struct"},"29:6077:9650":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"17:13799:7946":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"2:49224:5123":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:6418:4907":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"16:4955:8040":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"30:11231:3830":{"crate_id":30,"path":["futures_util","stream","try_stream","ErrInto"],"kind":"struct"},"30:12172:71296":{"crate_id":30,"path":["futures_util","stream","try_stream","try_unfold","_","__Origin"],"kind":"struct"},"17:11328:7331":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"30:12379:6605":{"crate_id":30,"path":["futures_util","stream","try_stream","try_buffered","TryBuffered"],"kind":"struct"},"9:41:5515":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"2:13927:10241":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"16:2794:5712":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"24:9696:6464":{"crate_id":24,"path":["tokio","sync","notify","Notified"],"kind":"struct"},"2:24068:5045":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"20:3242:2379":{"crate_id":20,"path":["http","uri","InvalidUri"],"kind":"struct"},"2:3326:4509":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"30:11435:3822":{"crate_id":30,"path":["futures_util","stream","try_stream","into_stream","IntoStream"],"kind":"struct"},"17:9961:7234":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"24:6906:71291":{"crate_id":24,"path":["tokio","runtime","thread_pool","queue","push_overflow","BatchTaskIter"],"kind":"struct"},"30:12894:71296":{"crate_id":30,"path":["futures_util","stream","select_all","_","__Origin"],"kind":"struct"},"2:51766:8457":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"17:11696:7399":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"16:5753:5698":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"16:3041:5956":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"30:10716:6534":{"crate_id":30,"path":["futures_util","stream","stream","ready_chunks","ReadyChunks"],"kind":"struct"},"29:6879:9749":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:51870:8460":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:11616:4544":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"16:7158:5849":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"27:920:71184":{"crate_id":27,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"43:0:2681":{"crate_id":43,"path":["cfg_if"],"kind":"module"},"5:7453:6751":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"24:1928:1760":{"crate_id":24,"path":["tokio","io","blocking","Buf"],"kind":"struct"},"1:8515:1869":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"17:13221:7780":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"2:51666:4963":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"24:11996:6329":{"crate_id":24,"path":["tokio","io","util","write_int","WriteF32"],"kind":"struct"},"2:5095:3578":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"2:51230:4985":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:49205:5121":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"16:5766:5699":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"2:13822:187":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"17:299:7138":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:50151:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:10283:3564":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"24:2323:2946":{"crate_id":24,"path":["tokio","io","split","WriteHalf"],"kind":"struct"},"34:250:3106":{"crate_id":34,"path":["http_body","combinators","box_body","UnsyncBoxBody"],"kind":"struct"},"29:4339:9301":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"24:14718:71296":{"crate_id":24,"path":["tokio","io","util","buf_reader","_","__Origin"],"kind":"struct"},"30:10764:4910":{"crate_id":30,"path":["futures_util","stream","stream","scan","Scan"],"kind":"struct"},"2:48443:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"30:8606:3852":{"crate_id":30,"path":["futures_util","future","select","Select"],"kind":"struct"},"5:7212:4018":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"2:23427:4951":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"20:2445:4027":{"crate_id":20,"path":["http","header","map","ValuesMut"],"kind":"struct"},"2:56283:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"16:6744:5990":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"24:12696:6352":{"crate_id":24,"path":["tokio","io","util","write_vectored","WriteVectored"],"kind":"struct"},"1:2181:4501":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"30:5199:3094":{"crate_id":30,"path":["futures_util","stream","poll_fn","PollFn"],"kind":"struct"},"1:6993:4461":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"18:169:55678":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:5014:3579":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:24147:41609":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"24:8170:3037":{"crate_id":24,"path":["tokio","sync","mutex","MutexGuard"],"kind":"struct"},"0:486:1619":{"crate_id":0,"path":["hyper","service"],"kind":"module"},"17:11499:7356":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:12260:4589":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"2:13781:3840":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"6:624:8944":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"6:6858:9742":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"24:9669:3042":{"crate_id":24,"path":["tokio","sync","mutex","TryLockError"],"kind":"struct"},"12:750:3891":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"1:3194:4651":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"12:815:4518":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"30:10112:71296":{"crate_id":30,"path":["futures_util","stream","stream","peek","_","__Origin"],"kind":"struct"},"17:13446:7832":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"1:4294:1816":{"crate_id":1,"path":["std","io","readbuf","ReadBuf"],"kind":"struct"},"24:6239:6408":{"crate_id":24,"path":["tokio","runtime","blocking","task","BlockingTask"],"kind":"struct"},"5:8313:5213":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:8863:3894":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"24:14605:2880":{"crate_id":24,"path":["tokio","io","util","buf_writer","BufWriter"],"kind":"struct"},"29:5412:9535":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"17:11993:7460":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"2:22566:69737":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:8942:1942":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"6:3918:9134":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:13574:7869":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"12:1147:4023":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"13:232:8742":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"1:14876:6727":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"2:46696:4911":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"30:6812:71296":{"crate_id":30,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"17:10253:6104":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"1:15939:2707":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"16:3488:5964":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"29:6083:9652":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:46431:5213":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"24:11408:6487":{"crate_id":24,"path":["tokio","task","local","RunUntil"],"kind":"struct"},"2:46925:1942":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"30:12360:71296":{"crate_id":30,"path":["futures_util","stream","try_stream","try_buffer_unordered","_","__Origin"],"kind":"struct"},"27:996:6144":{"crate_id":27,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:51390:5006":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"9:900:9826":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"2:47913:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"24:1933:3746":{"crate_id":24,"path":["tokio","io","blocking","State"],"kind":"enum"},"1:11415:9624":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"20:630:4028":{"crate_id":20,"path":["http","header","name","InvalidHeaderName"],"kind":"struct"},"20:489:2394":{"crate_id":20,"path":["http","header","map","into_header_name","IntoHeaderName"],"kind":"trait"},"30:10218:6531":{"crate_id":30,"path":["futures_util","stream","stream","peek","NextIfEq"],"kind":"struct"},"2:49706:5156":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"18:611:6152":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"30:11369:3831":{"crate_id":30,"path":["futures_util","stream","try_stream","InspectErr"],"kind":"struct"},"29:5461:9547":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"30:8174:3842":{"crate_id":30,"path":["futures_util","future","option","OptionFuture"],"kind":"struct"},"16:4641:8030":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"30:3424:6722":{"crate_id":30,"path":["futures_util","stream","stream","flatten_unordered","PollStateBomb"],"kind":"struct"},"16:3506:5963":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"20:2429:4021":{"crate_id":20,"path":["http","header","map","Keys"],"kind":"struct"},"18:721:6957":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"2:46298:5291":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"17:13453:7833":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"12:1183:5597":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"5:1215:5420":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"24:5789:6380":{"crate_id":24,"path":["tokio","runtime","task","Id"],"kind":"struct"},"17:13942:7985":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"1:13602:4577":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"16:5314:7220":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"1:15952:2717":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"2:49931:4835":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"30:12847:6611":{"crate_id":30,"path":["futures_util","stream","futures_unordered","iter","IterPinRef"],"kind":"struct"},"30:12828:6610":{"crate_id":30,"path":["futures_util","stream","futures_unordered","iter","IterPinMut"],"kind":"struct"},"29:577:8923":{"crate_id":29,"path":["libc","unix","pollfd"],"kind":"struct"},"2:47627:3488":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"24:6649:6429":{"crate_id":24,"path":["tokio","runtime","driver","Driver"],"kind":"struct"},"24:12339:6346":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU32"],"kind":"struct"},"20:2410:3892":{"crate_id":20,"path":["http","header","map","IterMut"],"kind":"struct"},"24:2167:2853":{"crate_id":24,"path":["tokio","io","split","Guard"],"kind":"struct"},"2:32121:5238":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"17:13465:7839":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"24:2106:2887":{"crate_id":24,"path":["tokio","io","stderr","Stderr"],"kind":"struct"},"29:3997:9185":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"30:10805:71296":{"crate_id":30,"path":["futures_util","stream","stream","scan","_","__Origin"],"kind":"struct"},"20:0:1604":{"crate_id":20,"path":["http"],"kind":"module"},"24:13629:6311":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU32Le"],"kind":"struct"},"2:4712:4953":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"22:531:6220":{"crate_id":22,"path":["bytes","bytes","Vtable"],"kind":"struct"},"16:6949:5996":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"27:977:6142":{"crate_id":27,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"27:137:55676":{"crate_id":27,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"18:678:142":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"1:12011:4566":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"16:5941:189":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"6:1540:8961":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:51179:4997":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"0:720:1620":{"crate_id":0,"path":["hyper","upgrade"],"kind":"module"},"2:3150:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"33:380:72840":{"crate_id":33,"path":["futures_task","noop_waker","noop_waker_ref","SyncRawWaker"],"kind":"struct"},"27:853:142":{"crate_id":27,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"17:13377:7816":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"24:10337:7017":{"crate_id":24,"path":["tokio","time","driver","entry","TimerSharedPadded"],"kind":"struct"},"16:7236:5856":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"29:5961:9608":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"1:11312:4694":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"29:1594:8996":{"crate_id":29,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"17:12118:7483":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"6:5469:9547":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"24:10221:4621":{"crate_id":24,"path":["tokio","task","task_local","AccessError"],"kind":"struct"},"2:22713:4948":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"18:695:6157":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"27:698:6152":{"crate_id":27,"path":["memchr","cow","CowBytes"],"kind":"struct"},"16:2866:5952":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"17:12262:7503":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"33:16:3009":{"crate_id":33,"path":["futures_task","spawn","Spawn"],"kind":"trait"},"2:25205:5077":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"2:47541:3224":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"16:4852:8037":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"2:2062:2853":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"2:24177:9836":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"30:10962:6537":{"crate_id":30,"path":["futures_util","stream","stream","flatten_unordered","FlattenUnordered"],"kind":"struct"},"29:6168:9705":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"5:3759:3891":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"17:13540:7861":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"6:6614:9736":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"30:11718:71296":{"crate_id":30,"path":["futures_util","stream","try_stream","try_for_each","_","__Origin"],"kind":"struct"},"24:6653:5425":{"crate_id":24,"path":["tokio","runtime","handle","Handle"],"kind":"struct"},"5:2553:5426":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"2:14204:4586":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"24:12883:71296":{"crate_id":24,"path":["tokio","io","util","split","_","__Origin"],"kind":"struct"},"16:5632:5690":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"1:9662:6791":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"6:5255:9454":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"18:775:6955":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"29:4093:9229":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:10232:134":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"6:5241:9443":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"30:12497:2895":{"crate_id":30,"path":["futures_util","stream","repeat","Repeat"],"kind":"struct"},"6:6910:9755":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"24:11389:71296":{"crate_id":24,"path":["tokio","task","task_local","_","__Origin"],"kind":"struct"},"30:7140:3827":{"crate_id":30,"path":["futures_util","future","future","UnitError"],"kind":"struct"},"37:225:127":{"crate_id":37,"path":["httparse","Error"],"kind":"enum"},"24:9862:1611":{"crate_id":24,"path":["tokio","sync","watch","state","Version"],"kind":"struct"},"2:13094:4828":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"37:287:3905":{"crate_id":37,"path":["httparse","ParserConfig"],"kind":"struct"},"1:2187:4502":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"29:3854:9096":{"crate_id":29,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:23904:5182":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:11166:4430":{"crate_id":1,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"17:13240:7781":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"1:3319:4655":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"5:1560:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"5:3038:2062":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"2:11377:5116":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:23044:2513":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"30:7882:3833":{"crate_id":30,"path":["futures_util","future","try_future","MapOk"],"kind":"struct"},"16:6569:5985":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"6:6124:9666":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"17:11100:6096":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"18:802:6142":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"24:7367:1869":{"crate_id":24,"path":["tokio","sync","broadcast","Sender"],"kind":"struct"},"1:1492:4027":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:9954:5096":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:8087:2056":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"24:9340:3138":{"crate_id":24,"path":["tokio","sync","once_cell","OnceCell"],"kind":"struct"},"31:96:1923":{"crate_id":31,"path":["futures_core","stream","Stream"],"kind":"trait"},"30:8103:71296":{"crate_id":30,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"2:53410:8510":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"2:48506:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"6:4033:9197":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"6:5210:9424":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"38:0:1636":{"crate_id":38,"path":["httpdate"],"kind":"module"},"24:5514:3016":{"crate_id":24,"path":["tokio","runtime","task","waker","WakerRef"],"kind":"struct"},"5:3951:4499":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"2:49196:5120":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:50343:2985":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"39:0:1641":{"crate_id":39,"path":["tracing"],"kind":"module"},"1:10638:3553":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"1:15943:2710":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:4905:3138":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"2:57623:8521":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"5:3362:4502":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2:48039:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"12:399:5602":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"33:22:3010":{"crate_id":33,"path":["futures_task","spawn","SpawnError"],"kind":"struct"},"22:1233:2869":{"crate_id":22,"path":["bytes","buf","chain","Chain"],"kind":"struct"},"1:14536:8622":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"29:6902:9755":{"crate_id":29,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"17:10304:6059":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"17:12385:7538":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"24:5976:6427":{"crate_id":24,"path":["tokio","runtime","basic_scheduler","BasicScheduler"],"kind":"struct"},"24:12143:6337":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI32"],"kind":"struct"},"2:46288:5290":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"5:8115:3488":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:3331:4862":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"18:812:6143":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"30:9054:71296":{"crate_id":30,"path":["futures_util","stream","stream","collect","_","__Origin"],"kind":"struct"},"24:9526:3033":{"crate_id":24,"path":["tokio","sync","barrier","Barrier"],"kind":"struct"},"24:5087:2853":{"crate_id":24,"path":["tokio","runtime","task","harness","poll_future","Guard"],"kind":"struct"},"29:512:8886":{"crate_id":29,"path":["libc","unix","utimbuf"],"kind":"struct"},"1:13866:4561":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"24:4509:2896":{"crate_id":24,"path":["tokio","io","util","sink","Sink"],"kind":"struct"},"29:6213:9727":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:607:7141":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"2:46358:5156":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"6:4183:9254":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"12:2045:4499":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"5:5536:3031":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"17:11726:7403":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"6:5379:9517":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"30:11394:71296":{"crate_id":30,"path":["futures_util","stream","try_stream","_","__Origin"],"kind":"struct"},"1:14744:8547":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"16:7195:5852":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"6:5359:9509":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:8508:202":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"30:8148:3840":{"crate_id":30,"path":["futures_util","future","maybe_done","MaybeDone"],"kind":"enum"},"17:10236:6067":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"9:749:5467":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"16:7392:5789":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"16:4671:8031":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"9:809:3746":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"20:3102:1609":{"crate_id":20,"path":["http","status","StatusCode"],"kind":"struct"},"2:53074:4980":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"24:4228:6365":{"crate_id":24,"path":["tokio","io","util","buf_reader","SeekState"],"kind":"enum"},"6:6881:9748":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"6:616:8939":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"17:9759:7230":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"30:5875:6613":{"crate_id":30,"path":["futures_util","stream","futures_unordered","ready_to_run_queue","ReadyToRunQueue"],"kind":"struct"},"30:9420:3819":{"crate_id":30,"path":["futures_util","stream","stream","flatten","Flatten"],"kind":"struct"},"17:12307:7511":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"1:2163:3488":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"29:1588:8994":{"crate_id":29,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"30:12838:3892":{"crate_id":30,"path":["futures_util","stream","futures_unordered","iter","IterMut"],"kind":"struct"},"16:4386:8023":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"1:5994:4745":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"30:13073:6576":{"crate_id":30,"path":["futures_util","fns","MapOkFn"],"kind":"struct"},"12:2036:3488":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"24:990:6476":{"crate_id":24,"path":["tokio","util","wake_list","WakeList"],"kind":"struct"},"29:3937:9157":{"crate_id":29,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"29:4292:9280":{"crate_id":29,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"5:3048:69853":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"6:591:8926":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"30:13103:6574":{"crate_id":30,"path":["futures_util","fns","InspectOkFn"],"kind":"struct"},"2:3342:4867":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"30:12046:6599":{"crate_id":30,"path":["futures_util","stream","try_stream","try_chunks","TryChunksError"],"kind":"struct"},"17:11406:2231":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"24:6556:6386":{"crate_id":24,"path":["tokio","runtime","basic_scheduler","Spawner"],"kind":"struct"},"24:11207:6746":{"crate_id":24,"path":["tokio","util","try_lock","LockGuard"],"kind":"struct"},"2:47482:3891":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"24:546:88":{"crate_id":24,"path":["tokio","loom","std","atomic_u16","AtomicU16"],"kind":"struct"},"1:13904:4563":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"2:49715:4490":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"6:4501:9366":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"24:7815:6737":{"crate_id":24,"path":["tokio","sync","mpsc","chan","Tx"],"kind":"struct"},"5:5093:660":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"17:10448:6072":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"24:7267:6736":{"crate_id":24,"path":["tokio","coop","RestoreOnPending"],"kind":"struct"},"24:9714:1869":{"crate_id":24,"path":["tokio","sync","oneshot","Sender"],"kind":"struct"},"6:1676:9051":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"29:4185:9255":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"5:6475:4018":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"1:9097:3042":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"16:3604:7152":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"6:1547:8963":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"16:6807:5845":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"1:14050:6799":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"17:11847:7436":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"18:0:2690":{"crate_id":18,"path":["memchr"],"kind":"module"},"30:10424:4913":{"crate_id":30,"path":["futures_util","stream","stream","take_while","TakeWhile"],"kind":"struct"},"6:519:8886":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:45976:1903":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:49425:5113":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"16:7894:5819":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"6:6870:9744":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"24:9619:3743":{"crate_id":24,"path":["tokio","sync","mpsc","error","TryRecvError"],"kind":"enum"},"5:3839:6751":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"24:5663:6727":{"crate_id":24,"path":["tokio","runtime","enter","exit","Reset"],"kind":"struct"},"24:6587:1869":{"crate_id":24,"path":["tokio","runtime","blocking","shutdown","Sender"],"kind":"struct"},"1:15963:2728":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"12:1784:6749":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"9:686:5463":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"24:7187:3746":{"crate_id":24,"path":["tokio","runtime","thread_pool","idle","State"],"kind":"struct"},"0:768:2619":{"crate_id":0,"path":["hyper","upgrade","Upgraded"],"kind":"struct"},"20:2510:2395":{"crate_id":20,"path":["http","header","map","ValueIter"],"kind":"struct"},"24:4311:6983":{"crate_id":24,"path":["tokio","io","util","mem","Pipe"],"kind":"struct"},"6:1708:9069":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:7650:3494":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"24:14459:2872":{"crate_id":24,"path":["tokio","io","util","lines","Lines"],"kind":"struct"},"1:6353:4710":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"16:6269:5833":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"1:6591:4491":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"1:13530:64262":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"1:823:6794":{"crate_id":1,"path":["std","thread","local","os","Key"],"kind":"struct"},"17:10458:7182":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"35:349:1869":{"crate_id":35,"path":["futures_channel","oneshot","Sender"],"kind":"struct"},"2:53384:8508":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"12:114:71165":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"24:9689:4724":{"crate_id":24,"path":["tokio","sync","notify","Waiter"],"kind":"struct"},"5:2200:6753":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"1:5681:4477":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"17:9659:71171":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"16:6554:5839":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"6:4203:9256":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"2:24631:4643":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"2:46311:5157":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"2:10281:3563":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"14:216:47736":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"16:2945:5976":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"1:15905:8771":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"2:53478:8514":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"17:13865:7963":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"29:3910:9134":{"crate_id":29,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"24:12437:6341":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI8"],"kind":"struct"},"1:12205:3038":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"2:46526:4915":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"17:12051:7467":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"16:6691:5843":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"20:3332:3948":{"crate_id":20,"path":["http","byte_str","ByteStr"],"kind":"struct"},"16:6176:5829":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:2178:4422":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"24:2111:2889":{"crate_id":24,"path":["tokio","io","stdin","Stdin"],"kind":"struct"},"2:24030:8389":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"16:5330:7221":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"17:11738:7404":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"6:5191:9422":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"5:6688:5384":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"24:11800:6349":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU64Le"],"kind":"struct"},"2:46379:5289":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"30:7521:71296":{"crate_id":30,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"33:203:3007":{"crate_id":33,"path":["futures_task","future_obj","LocalFutureObj"],"kind":"struct"},"6:5386:9518":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"24:2116:2891":{"crate_id":24,"path":["tokio","io","stdout","Stdout"],"kind":"struct"},"17:9404:7133":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"29:4317:9291":{"crate_id":29,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"22:42:1760":{"crate_id":22,"path":["bytes","buf","buf_impl","Buf"],"kind":"trait"},"1:8414:4640":{"crate_id":1,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"1:15959:2724":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"18:791:6141":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"16:6780:5844":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"30:11778:71296":{"crate_id":30,"path":["futures_util","stream","try_stream","try_filter","_","__Origin"],"kind":"struct"},"1:15956:2721":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"29:598:8934":{"crate_id":29,"path":["libc","unix","sigval"],"kind":"struct"},"2:3259:2912":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"30:12907:3891":{"crate_id":30,"path":["futures_util","stream","select_all","Iter"],"kind":"struct"},"5:1644:4026":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"34:562:71296":{"crate_id":34,"path":["http_body","full","_","__Origin"],"kind":"struct"},"30:9755:71296":{"crate_id":30,"path":["futures_util","stream","stream","for_each","_","__Origin"],"kind":"struct"},"17:11434:7336":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"12:971:4522":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"15:248:5619":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"2:49993:4838":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"0:939:2626":{"crate_id":0,"path":["hyper","upgrade","Parts"],"kind":"struct"},"5:69:5329":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"17:13978:7989":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"24:5768:4494":{"crate_id":24,"path":["tokio","runtime","task","join","JoinHandle"],"kind":"struct"},"17:10599:7263":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"30:9395:71296":{"crate_id":30,"path":["futures_util","stream","stream","filter_map","_","__Origin"],"kind":"struct"},"2:11225:5111":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"27:930:71183":{"crate_id":27,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"1:1045:4494":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"16:7514:5803":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"29:3970:9170":{"crate_id":29,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:8384:151":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"29:5189:9423":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:46418:5212":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"16:7928:1865":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"16:3145:5966":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"30:8435:71296":{"crate_id":30,"path":["futures_util","future","join","_","__Origin"],"kind":"struct"},"2:52534:4988":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"27:1005:6145":{"crate_id":27,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"24:4257:6980":{"crate_id":24,"path":["tokio","io","util","copy","CopyBuffer"],"kind":"struct"},"30:12262:6603":{"crate_id":30,"path":["futures_util","stream","try_stream","try_take_while","TryTakeWhile"],"kind":"struct"},"30:7968:71296":{"crate_id":30,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"2:3321:3107":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"2:46586:4905":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"17:11015:7317":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"1:11643:4547":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"6:5274:9456":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:46656:4921":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"31:0:1632":{"crate_id":31,"path":["futures_core"],"kind":"module"},"6:5185:9419":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"5:8138:5373":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"24:230:1814":{"crate_id":24,"path":["tokio","io","async_read","AsyncRead"],"kind":"trait"},"16:7804:5793":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"17:13488:7844":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:11080:2056":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"1:3200:2862":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"30:9210:4903":{"crate_id":30,"path":["futures_util","stream","stream","cycle","Cycle"],"kind":"struct"},"6:5528:9559":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"16:7146:5848":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"6:1723:9078":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"1:7829:4569":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"16:7205:5853":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"20:3247:2380":{"crate_id":20,"path":["http","uri","InvalidUriParts"],"kind":"struct"},"17:13318:7799":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2:5585:5018":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"6:5221:9432":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"29:5979:9615":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"31:27:3111":{"crate_id":31,"path":["futures_core","future","FusedFuture"],"kind":"trait"},"24:8056:3739":{"crate_id":24,"path":["tokio","sync","mpsc","unbounded","UnboundedReceiver"],"kind":"struct"},"1:15962:2727":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"30:5897:6609":{"crate_id":30,"path":["futures_util","stream","futures_unordered","FuturesUnordered"],"kind":"struct"},"2:11094:3891":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:6719:4446":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"24:4801:6730":{"crate_id":24,"path":["tokio","runtime","enter","Enter"],"kind":"struct"},"1:1637:4022":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"2:8393:2809":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"22:1255:5666":{"crate_id":22,"path":["bytes","buf","reader","Reader"],"kind":"struct"},"30:9250:4904":{"crate_id":30,"path":["futures_util","stream","stream","enumerate","Enumerate"],"kind":"struct"},"2:10510:142":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"9:157:5482":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"24:10986:1936":{"crate_id":24,"path":["tokio","time","error","Kind"],"kind":"enum"},"30:7032:3821":{"crate_id":30,"path":["futures_util","future","future","Inspect"],"kind":"struct"},"24:11355:10238":{"crate_id":24,"path":["tokio","task","task_local","TaskLocalFuture"],"kind":"struct"},"17:10912:7306":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"30:12916:3892":{"crate_id":30,"path":["futures_util","stream","select_all","IterMut"],"kind":"struct"},"24:14119:6310":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU32"],"kind":"struct"},"16:5672:5691":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"31:39:2513":{"crate_id":31,"path":["futures_core","future","private_try_future","Sealed"],"kind":"trait"},"2:3088:4766":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"16:4535:8028":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:52884:4976":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"6:5130:9380":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"0:770:2622":{"crate_id":0,"path":["hyper","upgrade","OnUpgrade"],"kind":"struct"},"17:542:5718":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"12:933:4519":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"16:6424:5836":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"24:13776:6293":{"crate_id":24,"path":["tokio","io","util","read_int","ReadF32"],"kind":"struct"},"20:3233:2626":{"crate_id":20,"path":["http","uri","Parts"],"kind":"struct"},"14:189:8291":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:2941:177":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"2:13243:8385":{"crate_id":2,"path":["core","str","lossy","Utf8Lossy"],"kind":"struct"},"20:3061:3928":{"crate_id":20,"path":["http","method","extension","InlineExtension"],"kind":"struct"},"29:4387:9324":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"17:13963:7988":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"24:7652:202":{"crate_id":24,"path":["tokio","sync","mpsc","bounded","Receiver"],"kind":"struct"},"5:8263:2841":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"24:9885:6482":{"crate_id":24,"path":["tokio","sync","watch","state","AtomicState"],"kind":"struct"},"2:48461:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"2:3424:4803":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"17:10071:6129":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"22:1242:3488":{"crate_id":22,"path":["bytes","buf","iter","IntoIter"],"kind":"struct"},"29:1692:9068":{"crate_id":29,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"29:524:8838":{"crate_id":29,"path":["libc","unix","timespec"],"kind":"struct"},"5:3970:6751":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:47567:205":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"24:4290:6982":{"crate_id":24,"path":["tokio","io","util","copy_buf","CopyBuf"],"kind":"struct"},"24:9545:3740":{"crate_id":24,"path":["tokio","sync","broadcast","error","SendError"],"kind":"struct"},"17:13637:7885":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"16:5384:5675":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"5:6764:2853":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"2:3352:3108":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"2:49316:5130":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"24:1576:2862":{"crate_id":24,"path":["tokio","fs","read_to_string","read_to_string"],"kind":"function"},"24:7370:202":{"crate_id":24,"path":["tokio","sync","broadcast","Receiver"],"kind":"struct"},"6:3990:9179":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:6821:4496":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"29:4254:9260":{"crate_id":29,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"12:559:143":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"24:5672:6732":{"crate_id":24,"path":["tokio","runtime","enter","DisallowBlockingGuard"],"kind":"struct"},"6:4262:9260":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"30:10550:3826":{"crate_id":30,"path":["futures_util","stream","stream","then","Then"],"kind":"struct"},"16:5561:5687":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:56322:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"30:11300:3832":{"crate_id":30,"path":["futures_util","stream","try_stream","InspectOk"],"kind":"struct"},"30:12521:1942":{"crate_id":30,"path":["futures_util","stream","once","Once"],"kind":"struct"},"35:504:3742":{"crate_id":35,"path":["futures_channel","mpsc","SendErrorKind"],"kind":"enum"},"6:4364:9312":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"2:11186:5110":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"22:140:1761":{"crate_id":22,"path":["bytes","buf","buf_mut","BufMut"],"kind":"trait"},"2:3159:135":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"6:537:8891":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"30:5539:6937":{"crate_id":30,"path":["futures_util","stream","futures_ordered","FuturesOrdered"],"kind":"struct"},"17:10095:6123":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"1:15175:4606":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"24:6502:6407":{"crate_id":24,"path":["tokio","runtime","handle","TryCurrentErrorKind"],"kind":"enum"},"12:2059:4501":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"2:56270:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:4023:9194":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"17:11588:7378":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"29:1715:9078":{"crate_id":29,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"30:6336:6624":{"crate_id":30,"path":["futures_util","fns","FnOnce1"],"kind":"trait"},"29:6206:9724":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"29:4369:9317":{"crate_id":29,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"6:4425:9335":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:49724:5157":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"24:1794:3746":{"crate_id":24,"path":["tokio","fs","read_dir","State"],"kind":"enum"},"6:1602:8996":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:7966:64267":{"crate_id":1,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"27:905:71181":{"crate_id":27,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"6:1572:8977":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:15954:2719":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"6:5978:9614":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"37:251:3904":{"crate_id":37,"path":["httparse","InvalidChunkSize"],"kind":"struct"},"1:10594:4621":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"20:2437:4026":{"crate_id":20,"path":["http","header","map","Values"],"kind":"struct"},"24:14217:6305":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI8"],"kind":"struct"},"5:5889:6760":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"30:11739:6594":{"crate_id":30,"path":["futures_util","stream","try_stream","try_filter","TryFilter"],"kind":"struct"},"30:11325:71296":{"crate_id":30,"path":["futures_util","stream","try_stream","_","__Origin"],"kind":"struct"},"27:153:55677":{"crate_id":27,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"12:2040:4018":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"24:7228:6385":{"crate_id":24,"path":["tokio","runtime","Runtime"],"kind":"struct"},"17:12659:7589":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"1:12074:3891":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"35:447:1869":{"crate_id":35,"path":["futures_channel","mpsc","Sender"],"kind":"struct"},"36:0:1640":{"crate_id":36,"path":["tower_service"],"kind":"module"},"17:10266:6103":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"30:12193:6602":{"crate_id":30,"path":["futures_util","stream","try_stream","try_skip_while","TrySkipWhile"],"kind":"struct"},"2:50396:2976":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"30:10859:71296":{"crate_id":30,"path":["futures_util","stream","stream","buffer_unordered","_","__Origin"],"kind":"struct"},"17:11981:7458":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"24:10206:6486":{"crate_id":24,"path":["tokio","task","local","LocalSet"],"kind":"struct"},"16:4614:8029":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"29:4486:9363":{"crate_id":29,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"1:11255:6713":{"crate_id":1,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"29:518:8889":{"crate_id":29,"path":["libc","unix","timeval"],"kind":"struct"},"16:6032:5716":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"1:13729:4571":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"35:473:3740":{"crate_id":35,"path":["futures_channel","mpsc","SendError"],"kind":"struct"},"30:10527:71296":{"crate_id":30,"path":["futures_util","stream","stream","take_until","_","__Origin"],"kind":"struct"},"37:298:1607":{"crate_id":37,"path":["httparse","Request"],"kind":"struct"},"16:2773:5977":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"16:6964:3223":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"20:2248:127":{"crate_id":20,"path":["http","error","Error"],"kind":"struct"},"17:13819:7949":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"17:10844:6074":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"24:7565:4026":{"crate_id":24,"path":["tokio","sync","mpsc","block","Values"],"kind":"struct"},"1:12019:9912":{"crate_id":1,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"24:9935:10236":{"crate_id":24,"path":["tokio","task","yield_now","yield_now","YieldNow"],"kind":"struct"},"30:11804:6595":{"crate_id":30,"path":["futures_util","stream","try_stream","try_filter_map","TryFilterMap"],"kind":"struct"},"2:48217:3565":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"16:7823:5795":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"34:470:1614":{"crate_id":34,"path":["http_body","Body"],"kind":"trait"},"30:11167:3829":{"crate_id":30,"path":["futures_util","stream","try_stream","and_then","AndThen"],"kind":"struct"},"2:48081:3032":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"24:14650:2953":{"crate_id":24,"path":["tokio","io","util","buf_stream","BufStream"],"kind":"struct"},"34:738:71296":{"crate_id":34,"path":["http_body","combinators","map_err","_","__Origin"],"kind":"struct"},"2:22902:4483":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:4467:2892":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"17:10317:6062":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"2:12489:5265":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"5:3300:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"29:6098:9656":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"5:6411:223":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"17:10788:7300":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"6:1554:8966":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"30:10087:6532":{"crate_id":30,"path":["futures_util","stream","stream","peek","Peek"],"kind":"struct"},"30:9895:3823":{"crate_id":30,"path":["futures_util","stream","stream","map","Map"],"kind":"struct"},"27:708:7130":{"crate_id":27,"path":["memchr","cow","Imp"],"kind":"enum"},"17:0:2689":{"crate_id":17,"path":["object"],"kind":"module"},"1:5687:4479":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"2:46675:4909":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:24563:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"2:46011:3578":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"24:1920:6974":{"crate_id":24,"path":["tokio","io","blocking","Blocking"],"kind":"struct"},"6:6185:9708":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:3407:4795":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"2:46934:8430":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"24:14673:71296":{"crate_id":24,"path":["tokio","io","util","buf_stream","_","__Origin"],"kind":"struct"},"30:9022:6522":{"crate_id":30,"path":["futures_util","stream","stream","collect","Collect"],"kind":"struct"},"2:48748:8434":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"5:8280:101":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"18:867:6148":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"1:8673:3033":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"24:13335:6298":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI128Le"],"kind":"struct"},"27:896:6957":{"crate_id":27,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"29:4273:9272":{"crate_id":29,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:2276:4940":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"24:6874:6735":{"crate_id":24,"path":["tokio","runtime","thread_pool","queue","Local"],"kind":"struct"},"16:3714:8016":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"5:6652:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"6:5420:9535":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"16:4790:8035":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"2:10427:8383":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"24:188:2943":{"crate_id":24,"path":["tokio","io","async_buf_read","AsyncBufRead"],"kind":"trait"},"1:10605:67421":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"17:12373:7536":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"6:4347:9301":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"1:15409:8627":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"15:269:5623":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"2:53501:8515":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"30:13160:72447":{"crate_id":30,"path":["futures_util","unfold_state","UnfoldState"],"kind":"enum"},"20:2521:4025":{"crate_id":20,"path":["http","header","map","ValueIterMut"],"kind":"struct"},"24:11947:6331":{"crate_id":24,"path":["tokio","io","util","write_int","WriteF64"],"kind":"struct"},"35:310:1922":{"crate_id":35,"path":["futures_channel","oneshot"],"kind":"module"},"17:12195:7493":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"1:8009:3755":{"crate_id":1,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"17:9943:71179":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"1:10824:4650":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:49982:4837":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:3984:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"1:15940:2708":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"1:8724:3035":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"2:47507:3223":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:46319:5285":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"2:32362:68750":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"24:6677:6406":{"crate_id":24,"path":["tokio","runtime","handle","TryCurrentError"],"kind":"struct"},"5:8463:5349":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"35:21:6720":{"crate_id":35,"path":["futures_channel","lock","TryLock"],"kind":"struct"},"12:856:4026":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"6:4419:9334":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"30:12466:71296":{"crate_id":30,"path":["futures_util","stream","try_stream","try_for_each_concurrent","_","__Origin"],"kind":"struct"},"16:547:5696":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"2:37596:3408":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"5:1653:4027":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"12:895:5588":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"1:14183:2889":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"29:1532:8961":{"crate_id":29,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"6:4395:9324":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"17:10988:7315":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"24:10949:7030":{"crate_id":24,"path":["tokio","time","driver","wheel","Wheel"],"kind":"struct"},"2:49245:5125":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"6:5548:9573":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"6:3997:9183":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"14:56:7351":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"30:7160:71296":{"crate_id":30,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"2:23101:4949":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:2399:8530":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"30:7319:3837":{"crate_id":30,"path":["futures_util","future","try_future","TryFlatten"],"kind":"struct"},"2:49407:2871":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"17:9689:71173":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"16:6136:5822":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"17:10028:7239":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"6:4227:9258":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"30:10611:4914":{"crate_id":30,"path":["futures_util","stream","stream","zip","Zip"],"kind":"struct"},"2:5023:5088":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:51641:4981":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"2:3271:2568":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"20:2639:6177":{"crate_id":20,"path":["http","header","map","Danger"],"kind":"enum"},"1:2751:2973":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"35:419:5394":{"crate_id":35,"path":["futures_channel","mpsc","queue","Node"],"kind":"struct"},"9:1075:5533":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:2253:4935":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"30:10380:2870":{"crate_id":30,"path":["futures_util","stream","stream","take","Take"],"kind":"struct"},"29:4207:9257":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"17:11714:7400":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"1:10394:7142":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"2:23732:2513":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"24:7645:6449":{"crate_id":24,"path":["tokio","sync","mpsc","bounded","Permit"],"kind":"struct"},"24:13237:6296":{"crate_id":24,"path":["tokio","io","util","read_int","ReadF64Le"],"kind":"struct"},"24:4306:2954":{"crate_id":24,"path":["tokio","io","util","mem","DuplexStream"],"kind":"struct"},"1:10620:4639":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"9:963:5530":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"30:3545:3002":{"crate_id":30,"path":["futures_util","stream","stream","StreamExt"],"kind":"trait"},"17:8849:6090":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"1:14264:3553":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"24:14168:6308":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU16"],"kind":"struct"},"1:15062:8623":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"2:49214:5122":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"5:920:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"24:11506:6330":{"crate_id":24,"path":["tokio","io","util","write_int","WriteF32Le"],"kind":"struct"},"16:7226:5855":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"16:6101:5779":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"30:10169:6530":{"crate_id":30,"path":["futures_util","stream","stream","peek","NextIf"],"kind":"struct"},"1:5020:4428":{"crate_id":1,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"16:5346:5782":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:4869:5086":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"24:12581:6328":{"crate_id":24,"path":["tokio","io","util","write_buf","WriteBuf"],"kind":"struct"},"6:4215:9257":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"16:6718:5988":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"30:8950:3863":{"crate_id":30,"path":["futures_util","future","select_ok","SelectOk"],"kind":"struct"},"5:5415:2853":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"5:4242:6751":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"1:6731:9637":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"35:519:3744":{"crate_id":35,"path":["futures_channel","mpsc","UnboundedInner"],"kind":"struct"},"2:11263:5112":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"30:11891:71296":{"crate_id":30,"path":["futures_util","stream","try_stream","try_flatten","_","__Origin"],"kind":"struct"},"16:7042:6000":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"16:5488:5683":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"24:11016:59227":{"crate_id":24,"path":["tokio","time","error","InsertError"],"kind":"enum"},"23:39:2513":{"crate_id":23,"path":["itoa","private","Sealed"],"kind":"trait"},"1:8680:3034":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"1:5753:4447":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"1:8422:3746":{"crate_id":1,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"29:5351:9509":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"29:6192:9715":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:47955:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"30:1343:3861":{"crate_id":30,"path":["futures_util","future","try_join_all","TryJoinAll"],"kind":"struct"},"29:6606:9736":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"1:15964:2729":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:4724:4954":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:3197:1846":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"17:10635:7266":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"17:11779:7416":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"29:6862:9744":{"crate_id":29,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:24665:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:5761:4448":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"5:7642:5354":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"24:9780:3132":{"crate_id":24,"path":["tokio","sync","semaphore","SemaphorePermit"],"kind":"struct"},"2:23975:8387":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"16:3338:5709":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"24:4750:6989":{"crate_id":24,"path":["tokio","park","thread","ParkThread"],"kind":"struct"},"6:605:8934":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"24:11311:71296":{"crate_id":24,"path":["tokio","time","driver","sleep","_","__Origin"],"kind":"struct"},"29:4431:9343":{"crate_id":29,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"16:7279:6001":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"1:10725:2233":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"17:9210:49389":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"5:1457:4023":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:6733:9639":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"1:2437:8532":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"6:1908:43527":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"6:599:8931":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"6:5159:9404":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"16:2912:5953":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"17:12040:7466":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"24:11007:7037":{"crate_id":24,"path":["tokio","time","error","Elapsed"],"kind":"struct"},"2:0:488":{"crate_id":2,"path":["core"],"kind":"module"},"17:10543:7255":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"9:469:8743":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"1:12702:6798":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"28:0:2920":{"crate_id":28,"path":["num_cpus"],"kind":"module"},"30:8239:71296":{"crate_id":30,"path":["futures_util","future","poll_immediate","_","__Origin"],"kind":"struct"},"1:9799:6793":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"6:4331:9292":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"29:6147:2308":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"24:10916:7025":{"crate_id":24,"path":["tokio","time","driver","entry","TimerHandle"],"kind":"struct"},"20:2402:3891":{"crate_id":20,"path":["http","header","map","Iter"],"kind":"struct"},"34:703:3105":{"crate_id":34,"path":["http_body","combinators","map_err","MapErr"],"kind":"struct"},"1:15921:64195":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"30:8861:3860":{"crate_id":30,"path":["futures_util","future","try_join","TryJoin5"],"kind":"struct"},"30:9475:3819":{"crate_id":30,"path":["futures_util","stream","stream","Flatten"],"kind":"struct"},"2:46918:8380":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:10730:2869":{"crate_id":1,"path":["std","error","Chain"],"kind":"struct"},"17:10611:7264":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"27:880:6955":{"crate_id":27,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"6:4431:9338":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:6873:4920":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:51587:4974":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:14523:4459":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"30:10923:6949":{"crate_id":30,"path":["futures_util","stream","stream","flatten_unordered","SharedPollState"],"kind":"struct"},"24:0:1639":{"crate_id":24,"path":["tokio"],"kind":"module"},"1:10480:6724":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"30:13021:6953":{"crate_id":30,"path":["futures_util","fns","ChainFn"],"kind":"struct"},"35:461:202":{"crate_id":35,"path":["futures_channel","mpsc","Receiver"],"kind":"struct"},"17:13331:7804":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"30:11572:71296":{"crate_id":30,"path":["futures_util","stream","try_stream","_","__Origin"],"kind":"struct"},"24:10960:6429":{"crate_id":24,"path":["tokio","time","driver","Driver"],"kind":"struct"},"2:51284:4977":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"16:7119:5717":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"2:45729:3895":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"17:9133:49388":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"17:11767:7413":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"6:1744:9085":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"1:3333:4659":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"30:11256:71296":{"crate_id":30,"path":["futures_util","stream","try_stream","_","__Origin"],"kind":"struct"},"2:3385:4507":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"17:10502:7253":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"17:13746:7929":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"17:11378:6036":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:24699:165":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:2381:3093":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:15169:4605":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"24:7166:6430":{"crate_id":24,"path":["tokio","runtime","thread_pool","ThreadPool"],"kind":"struct"},"18:755:71183":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:22543:69736":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"24:1108:2924":{"crate_id":24,"path":["tokio","select"],"kind":"macro"},"17:10106:6124":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"6:3972:9167":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"22:1040:7044":{"crate_id":22,"path":["bytes","fmt","BytesRef"],"kind":"struct"},"29:1539:8963":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:4601:2895":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"17:13912:7977":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"29:6116:9666":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:48580:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"1:6729:9635":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"16:7360:194":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"16:7856:5862":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:9440:7134":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:48756:4959":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"17:11277:7328":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"30:6634:3823":{"crate_id":30,"path":["futures_util","future","future","map","Map"],"kind":"enum"},"1:3335:4660":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"17:2512:6102":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:46229:4490":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:6971:4474":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"2:46952:6950":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"17:11915:7438":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"17:12756:7602":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"6:4401:9325":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"18:858:6147":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"24:5580:6731":{"crate_id":24,"path":["tokio","runtime","task","UnownedTask"],"kind":"struct"},"2:47559:188":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"1:3192:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"2:51342:8451":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"2:56335:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:6085:9650":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"30:7785:71296":{"crate_id":30,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"30:8956:3864":{"crate_id":30,"path":["futures_util","future","either","Either"],"kind":"enum"},"20:2981:2371":{"crate_id":20,"path":["http","header","value","HeaderValue"],"kind":"struct"},"1:5986:4744":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:50135:5168":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"12:1203:5598":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"1:15944:2711":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"5:8197:3488":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"29:4350:9309":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:53399:8509":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"12:787:4517":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:12810:5110":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:3153:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:46372:5288":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"17:13884:7968":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"2:48203:3564":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:47703:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"6:3868:9097":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"33:19:3008":{"crate_id":33,"path":["futures_task","spawn","LocalSpawn"],"kind":"trait"},"30:1080:3851":{"crate_id":30,"path":["futures_util","future","join_all","JoinAll"],"kind":"struct"},"5:1486:4524":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"1:12129:3743":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"17:11458:7350":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"6:1527:8955":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"4:0:2680":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"17:10353:6107":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"30:12427:6606":{"crate_id":30,"path":["futures_util","stream","try_stream","try_for_each_concurrent","TryForEachConcurrent"],"kind":"struct"},"24:11555:6334":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI128Le"],"kind":"struct"},"29:6804:9740":{"crate_id":29,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"16:4448:8025":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:51689:4966":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:5140:5094":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"24:10097:4620":{"crate_id":24,"path":["tokio","task","task_local","LocalKey"],"kind":"struct"},"30:11203:71296":{"crate_id":30,"path":["futures_util","stream","try_stream","and_then","_","__Origin"],"kind":"struct"},"5:8391:5321":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:7289:8538":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"29:603:8936":{"crate_id":29,"path":["libc","unix","itimerval"],"kind":"struct"},"17:10211:7248":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"5:1618:3488":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"17:9729:71172":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"22:786:1763":{"crate_id":22,"path":["bytes","bytes_mut","BytesMut"],"kind":"struct"},"24:4266:106":{"crate_id":24,"path":["tokio","io","util","copy","Copy"],"kind":"struct"},"1:5775:4446":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"1:11087:2896":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"2:49306:5129":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"2:50186:5226":{"crate_id":2,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"1:7826:4567":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"17:12327:7512":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"29:5540:9573":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"20:3303:4164":{"crate_id":20,"path":["http","version","Http"],"kind":"enum"},"1:15945:2712":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"20:3352:8741":{"crate_id":20,"path":["http","extensions","IdHasher"],"kind":"struct"},"2:32302:4425":{"crate_id":2,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"20:2561:6171":{"crate_id":20,"path":["http","header","map","Pos"],"kind":"struct"},"24:10594:3766":{"crate_id":24,"path":["tokio","time","driver","Inner"],"kind":"struct"},"33:0:2990":{"crate_id":33,"path":["futures_task"],"kind":"module"},"1:11096:1759":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"16:4762:8034":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"5:6257:5353":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"6:6100:9655":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"16:6072:5667":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"1:7151:3215":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"29:6915:9756":{"crate_id":29,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"29:154:42231":{"crate_id":29,"path":["libc","unix","fpos_t"],"kind":"enum"},"16:5433:5678":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"24:12094:6339":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI64"],"kind":"struct"},"24:10897:7022":{"crate_id":24,"path":["tokio","time","clock","Clock"],"kind":"struct"},"2:49511:5116":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:15937:2705":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"20:5:1605":{"crate_id":20,"path":["http","header"],"kind":"module"},"29:1555:8971":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:23997:5049":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"20:793:4029":{"crate_id":20,"path":["http","header","value","InvalidHeaderValue"],"kind":"struct"},"30:10293:71296":{"crate_id":30,"path":["futures_util","stream","stream","skip","_","__Origin"],"kind":"struct"},"6:6106:9656":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"1:12161:3741":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"6:5282:9461":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:10081:6056":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"24:7416:6438":{"crate_id":24,"path":["tokio","sync","broadcast","Recv"],"kind":"struct"},"24:11058:6358":{"crate_id":24,"path":["tokio","time","interval","Interval"],"kind":"struct"},"12:1703:5611":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"20:1365:2626":{"crate_id":20,"path":["http","request","Parts"],"kind":"struct"},"17:13554:7863":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"18:783:6955":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"16:5707:5692":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"30:506:3001":{"crate_id":30,"path":["futures_util","future","try_future","TryFutureExt"],"kind":"trait"},"21:0:2806":{"crate_id":21,"path":["fnv"],"kind":"module"},"17:10489:6075":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"16:4995:8041":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"2:14043:2987":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"16:6999:5846":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:24212:5198":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"24:4696:162":{"crate_id":24,"path":["tokio","loom","std","mutex","Mutex"],"kind":"struct"},"29:5990:9620":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"24:13009:6317":{"crate_id":24,"path":["tokio","io","util","read_to_string","ReadToString"],"kind":"struct"},"14:231:5323":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"1:1161:13795":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"16:6021:5950":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:2203:1050":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"1:11226:4515":{"crate_id":1,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"20:1494:1608":{"crate_id":20,"path":["http","response","Response"],"kind":"struct"},"6:88:42164":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"1:1306:143":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"34:534:2057":{"crate_id":34,"path":["http_body","full","Full"],"kind":"struct"},"1:12200:3037":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"17:11555:7371":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"30:9658:6525":{"crate_id":30,"path":["futures_util","stream","stream","all","All"],"kind":"struct"},"29:556:8911":{"crate_id":29,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"6:5197:9423":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"12:0:2685":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"6:1665:9043":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"24:3039:10233":{"crate_id":24,"path":["tokio","io","util","copy_bidirectional","CopyBidirectional"],"kind":"struct"},"5:3488:4499":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"29:4175:9254":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"30:7057:71296":{"crate_id":30,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"16:6166:5828":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:24835:5185":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:15444:5627":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"24:12851:2871":{"crate_id":24,"path":["tokio","io","util","split","Split"],"kind":"struct"},"20:3079:3929":{"crate_id":20,"path":["http","method","extension","AllocatedExtension"],"kind":"struct"},"5:8146:71042":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"2:49575:5148":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"30:10586:71296":{"crate_id":30,"path":["futures_util","stream","stream","then","_","__Origin"],"kind":"struct"},"17:12725:7596":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"2:47745:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"34:620:3100":{"crate_id":34,"path":["http_body","limited","LengthLimitError"],"kind":"struct"},"29:5970:9614":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"24:11251:7008":{"crate_id":24,"path":["tokio","time","timeout","Timeout"],"kind":"struct"},"20:2716:6197":{"crate_id":20,"path":["http","header","name","MaybeLower"],"kind":"struct"},"17:12982:7665":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"17:12494:7557":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"24:11604:6340":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI64Le"],"kind":"struct"},"16:6591:5841":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:3263:106":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"6:4306:9283":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"17:12568:7568":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"17:9592:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"2:4949:3577":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"1:15955:2720":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"29:1668:9051":{"crate_id":29,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:4736:102":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"24:8047:3737":{"crate_id":24,"path":["tokio","sync","mpsc","unbounded","UnboundedSender"],"kind":"struct"},"2:10520:146":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"17:11231:6094":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"17:13402:7821":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:3506:131":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"2:23099:4961":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"5:5837:3847":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:12957:3930":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"29:5213:9432":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"6:1630:9015":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"17:12795:7612":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"17:10926:7310":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"1:15125:4597":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"1:10829:4459":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"30:10267:4911":{"crate_id":30,"path":["futures_util","stream","stream","skip","Skip"],"kind":"struct"},"24:7836:1943":{"crate_id":24,"path":["tokio","sync","mpsc","chan","Chan"],"kind":"struct"},"30:12990:3868":{"crate_id":30,"path":["futures_util","abortable","Aborted"],"kind":"struct"},"12:2072:4503":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"17:13506:7848":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"1:12210:3045":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"24:13482:6300":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI16Le"],"kind":"struct"},"29:5122:9380":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:53200:4965":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"30:12544:71296":{"crate_id":30,"path":["futures_util","stream","once","_","__Origin"],"kind":"struct"},"29:4417:9335":{"crate_id":29,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"5:3341:5365":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"24:9855:3961":{"crate_id":24,"path":["tokio","sync","watch","error","RecvError"],"kind":"struct"},"16:4922:8039":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"1:14518:9915":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"6:1596:8994":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:2910:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"29:4052:9208":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"1:1501:4518":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"1:9208:6869":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"1:9371:4480":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"1:12240:4588":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"24:11457:6332":{"crate_id":24,"path":["tokio","io","util","write_int","WriteF64Le"],"kind":"struct"},"30:12735:6936":{"crate_id":30,"path":["futures_util","stream","unfold","Unfold"],"kind":"struct"},"2:48476:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"1:14748:1760":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"29:6060:9645":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"25:49:59941":{"crate_id":25,"path":["pin_project_lite","__private","AlwaysUnpin"],"kind":"struct"},"2:57644:8522":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"30:7440:3838":{"crate_id":30,"path":["futures_util","future","try_future","TryFlattenStream"],"kind":"struct"},"1:3345:4665":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"5:3375:5366":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"17:10179:7246":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:46747:4914":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"30:12331:6604":{"crate_id":30,"path":["futures_util","stream","try_stream","try_buffer_unordered","TryBufferUnordered"],"kind":"struct"},"9:996:5531":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:2951:184":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"2:51468:4998":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"30:6598:3820":{"crate_id":30,"path":["futures_util","future","future","fuse","Fuse"],"kind":"struct"},"2:5192:3581":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"29:3982:9179":{"crate_id":29,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:3561:4529":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"20:3252:2883":{"crate_id":20,"path":["http","uri","ErrorKind"],"kind":"enum"},"17:12771:7331":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"24:14291:6292":{"crate_id":24,"path":["tokio","io","util","read_exact","ReadExact"],"kind":"struct"},"2:51846:8459":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:49383:5139":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"2:52995:4996":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"6:531:8838":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"1:7766:4563":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"30:6527:6562":{"crate_id":30,"path":["futures_util","fns","IntoFn"],"kind":"struct"},"35:486:3741":{"crate_id":35,"path":["futures_channel","mpsc","TrySendError"],"kind":"struct"},"17:11572:7373":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"30:6787:3823":{"crate_id":30,"path":["futures_util","future","future","Map"],"kind":"struct"},"5:1663:4517":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"29:4264:9267":{"crate_id":29,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"6:4387:9320":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"1:11981:4564":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"1:2401:8531":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"16:5360:5674":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"1:12041:8770":{"crate_id":1,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"16:5407:5676":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"27:843:6156":{"crate_id":27,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"1:5964:4742":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"16:3522:7148":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"17:9809:71177":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"17:11482:7351":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"30:12858:3891":{"crate_id":30,"path":["futures_util","stream","futures_unordered","iter","Iter"],"kind":"struct"},"12:952:4521":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"5:8446:4499":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"1:11223:4438":{"crate_id":1,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"2:9959:5097":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"2:13037:4823":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"6:569:8914":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"6:5563:9584":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"40:0:6631":{"crate_id":40,"path":["tracing_core"],"kind":"module"},"2:47473:1955":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:10291:3567":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"29:4379:9320":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"29:4125:9243":{"crate_id":29,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"16:7571:5780":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"29:536:8894":{"crate_id":29,"path":["libc","unix","rusage"],"kind":"struct"},"24:937:6728":{"crate_id":24,"path":["tokio","coop","with_budget","ResetGuard"],"kind":"struct"},"17:11001:7316":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:10221:205":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"6:3892:9114":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:47997:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"30:12768:71296":{"crate_id":30,"path":["futures_util","stream","unfold","_","__Origin"],"kind":"struct"},"2:8380:136":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"29:6927:9758":{"crate_id":29,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"5:3882:2674":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"2:46627:3821":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"37:28:1762":{"crate_id":37,"path":["httparse","iter","Bytes"],"kind":"struct"},"16:4304:8021":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"30:10128:5370":{"crate_id":30,"path":["futures_util","stream","stream","peek","PeekMut"],"kind":"struct"},"17:10435:7251":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"1:11153:2871":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"19:0:994":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"2:3713:224":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"17:10827:6034":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"30:9359:4906":{"crate_id":30,"path":["futures_util","stream","stream","filter_map","FilterMap"],"kind":"struct"},"2:22896:4481":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"2:45997:1865":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"2:3411:4797":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"6:5292:9468":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"24:7234:1936":{"crate_id":24,"path":["tokio","runtime","Kind"],"kind":"enum"},"1:4428:2890":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"1:11196:4436":{"crate_id":1,"path":["std","net","ip","IpAddr"],"kind":"enum"},"2:13028:4821":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"17:10420:6100":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"24:13127:6285":{"crate_id":24,"path":["tokio","io","util","fill_buf","FillBuf"],"kind":"struct"},"29:1682:9062":{"crate_id":29,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"5:8160:3488":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"24:9019:3046":{"crate_id":24,"path":["tokio","sync","rwlock","write_guard","RwLockWriteGuard"],"kind":"struct"},"16:6620:5983":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"24:6570:10014":{"crate_id":24,"path":["tokio","runtime","blocking","pool","Mandatory"],"kind":"enum"},"2:13043:4824":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"17:10516:6076":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"24:9720:202":{"crate_id":24,"path":["tokio","sync","oneshot","Receiver"],"kind":"struct"},"1:4678:2863":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"1:1079:4487":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"1:3360:1748":{"crate_id":1,"path":["std","io"],"kind":"module"},"30:11145:71296":{"crate_id":30,"path":["futures_util","stream","stream","for_each_concurrent","_","__Origin"],"kind":"struct"},"20:2500:4022":{"crate_id":20,"path":["http","header","map","OccupiedEntry"],"kind":"struct"},"2:49968:4836":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:48777:3746":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"12:1682:5610":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"30:8005:3834":{"crate_id":30,"path":["futures_util","future","try_future","MapOkOrElse"],"kind":"struct"},"31:194:1864":{"crate_id":31,"path":["futures_core","task","__internal","atomic_waker","AtomicWaker"],"kind":"struct"},"2:49529:5117":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"29:4156:9253":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"1:15950:2715":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"16:6491:5837":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"17:13119:7760":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"24:9597:3741":{"crate_id":24,"path":["tokio","sync","mpsc","error","TrySendError"],"kind":"enum"},"16:7453:5784":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"30:9978:71296":{"crate_id":30,"path":["futures_util","stream","stream","_","__Origin"],"kind":"struct"},"16:6768:5992":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"30:6621:71296":{"crate_id":30,"path":["futures_util","future","future","fuse","_","__Origin"],"kind":"struct"},"31:122:2513":{"crate_id":31,"path":["futures_core","stream","private_try_stream","Sealed"],"kind":"trait"},"17:13282:7794":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"17:12168:7273":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"2:22511:69712":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"1:2462:8534":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"9:927:47161":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"29:4075:9220":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"30:12975:3866":{"crate_id":30,"path":["futures_util","abortable","AbortRegistration"],"kind":"struct"},"34:37:2056":{"crate_id":34,"path":["http_body","empty","Empty"],"kind":"struct"},"29:3964:9167":{"crate_id":29,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"16:6152:5783":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"1:9394:1376":{"crate_id":1,"path":["std","task"],"kind":"module"},"24:14491:71296":{"crate_id":24,"path":["tokio","io","util","lines","_","__Origin"],"kind":"struct"},"2:46963:8381":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"7:0:1478":{"crate_id":7,"path":["unwind"],"kind":"module"},"24:10956:3766":{"crate_id":24,"path":["tokio","time","driver","sleep","Inner"],"kind":"struct"},"2:24014:8766":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"17:13394:7819":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"24:14507:6321":{"crate_id":24,"path":["tokio","io","util","flush","Flush"],"kind":"struct"},"20:3227:1610":{"crate_id":20,"path":["http","uri","Uri"],"kind":"struct"},"1:15334:4693":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"5:1011:3891":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"17:12537:7563":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"17:11932:7444":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"2:49145:5115":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"24:11203:6720":{"crate_id":24,"path":["tokio","util","try_lock","TryLock"],"kind":"struct"},"2:7908:4814":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"5:4599:6754":{"crate_id":5,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"30:8690:3857":{"crate_id":30,"path":["futures_util","future","try_join","TryJoin"],"kind":"struct"},"12:2052:4500":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"17:10001:49436":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"29:4515:9376":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:11392:4712":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"30:7565:3836":{"crate_id":30,"path":["futures_util","future","try_future","OrElse"],"kind":"struct"},"6:1563:8971":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"16:3091:6014":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"24:9254:1864":{"crate_id":24,"path":["tokio","sync","task","atomic_waker","AtomicWaker"],"kind":"struct"},"20:2466:4020":{"crate_id":20,"path":["http","header","map","GetAll"],"kind":"struct"},"35:528:3745":{"crate_id":35,"path":["futures_channel","mpsc","BoundedInner"],"kind":"struct"},"34:575:3101":{"crate_id":34,"path":["http_body","limited","Limited"],"kind":"struct"},"2:47787:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"5:7824:6762":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"17:11147:7323":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:24199:5199":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"6:4377:9317":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"18:838:4823":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"1:11386:4694":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:3262:217":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"12:1162:5596":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"17:9719:7229":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"6:3951:9158":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"16:6366:5616":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:49475:5144":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"2:23736:4887":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"5:3772:3892":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"18:621:7130":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"2:3390:4508":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"17:12685:7591":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"30:11984:71296":{"crate_id":30,"path":["futures_util","stream","try_stream","try_concat","_","__Origin"],"kind":"struct"},"5:374:5330":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"1:12034:67995":{"crate_id":1,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"17:13356:7812":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"24:13433:6302":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI32Le"],"kind":"struct"},"16:2843:5951":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"24:11342:71296":{"crate_id":24,"path":["tokio","task","unconstrained","_","__Origin"],"kind":"struct"},"2:52348:4982":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:1136:2980":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"9:603:8758":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"6:6214:9724":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"1:5892:4739":{"crate_id":1,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"35:346:202":{"crate_id":35,"path":["futures_channel","oneshot","Receiver"],"kind":"struct"},"8:0:2681":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"24:4244:6365":{"crate_id":24,"path":["tokio","io","util","buf_writer","SeekState"],"kind":"enum"},"20:544:2513":{"crate_id":20,"path":["http","header","map","as_header_name","Sealed"],"kind":"trait"},"16:3018:5955":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"6:4052:9203":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"5:1091:6751":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2:22839:4950":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"12:2404:71164":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"1:14985:68160":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"17:12142:7485":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"29:6092:9655":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"17:10801:7302":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"6:3905:9124":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"29:530:8891":{"crate_id":29,"path":["libc","unix","rlimit"],"kind":"struct"},"30:10153:71296":{"crate_id":30,"path":["futures_util","stream","stream","peek","_","__Origin"],"kind":"struct"},"2:7838:4901":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:9794:6792":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"16:3172:5957":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:22526:69712":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"16:5421:5677":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"17:13760:7935":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"1:10884:2881":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"6:5969:9608":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"24:4094:2950":{"crate_id":24,"path":["tokio","io","util","async_buf_read_ext","AsyncBufReadExt"],"kind":"trait"},"2:46943:2895":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"24:1808:4651":{"crate_id":24,"path":["tokio","fs","read_dir","DirEntry"],"kind":"struct"},"16:6208:5830":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"1:11573:4543":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"17:12442:7550":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"1:11378:4704":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"24:959:6729":{"crate_id":24,"path":["tokio","util","atomic_cell","AtomicCell"],"kind":"struct"},"29:4451:9350":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"24:269:2944":{"crate_id":24,"path":["tokio","io","async_seek","AsyncSeek"],"kind":"trait"},"24:10926:7028":{"crate_id":24,"path":["tokio","time","driver","entry","CachePadded"],"kind":"struct"},"29:1609:9008":{"crate_id":29,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"17:13272:7793":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"6:4341:9298":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"5:3329:3891":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"2:2753:579":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:14583:68162":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"1:7663:4558":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"24:6667:6405":{"crate_id":24,"path":["tokio","runtime","handle","EnterGuard"],"kind":"struct"},"1:12096:3740":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"41:0:3125":{"crate_id":41,"path":["once_cell"],"kind":"module"},"24:8174:3126":{"crate_id":24,"path":["tokio","sync","mutex","OwnedMutexGuard"],"kind":"struct"},"5:8203:3488":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"16:7024:5999":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"1:6824:4469":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"37:261:2232":{"crate_id":37,"path":["httparse","Status"],"kind":"enum"},"6:4523:9376":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:10721:8547":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"0:772:959":{"crate_id":0,"path":["hyper","upgrade","on"],"kind":"function"},"1:7366:186":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"24:9566:3743":{"crate_id":24,"path":["tokio","sync","broadcast","error","TryRecvError"],"kind":"enum"},"30:8792:3859":{"crate_id":30,"path":["futures_util","future","try_join","TryJoin4"],"kind":"struct"},"16:5029:8042":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"16:5790:5700":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"17:10558:7258":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"24:12811:2870":{"crate_id":24,"path":["tokio","io","util","take","Take"],"kind":"struct"},"2:3231:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"1:6002:4747":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"24:2099:6976":{"crate_id":24,"path":["tokio","io","stdio_common","SplitByUtf8BoundaryIfWindows"],"kind":"struct"},"1:3652:6778":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"24:9552:3961":{"crate_id":24,"path":["tokio","sync","broadcast","error","RecvError"],"kind":"enum"},"20:1973:3952":{"crate_id":20,"path":["http","uri","port","Port"],"kind":"struct"},"2:53364:8506":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"22:1248:6215":{"crate_id":22,"path":["bytes","buf","limit","Limit"],"kind":"struct"},"29:5420:9537":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:3555:2879":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"6:161:42231":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:53425:8511":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"30:7943:3105":{"crate_id":30,"path":["futures_util","future","try_future","MapErr"],"kind":"struct"},"1:11147:1762":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"24:13727:6295":{"crate_id":24,"path":["tokio","io","util","read_int","ReadF64"],"kind":"struct"},"1:8166:4640":{"crate_id":1,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"18:850:6146":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"29:4356:9312":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"1:12363:8533":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"24:11653:6338":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI32Le"],"kind":"struct"},"3:0:430":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"1:15433:5627":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"29:1752:9090":{"crate_id":29,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"20:2421:3488":{"crate_id":20,"path":["http","header","map","IntoIter"],"kind":"struct"},"30:9133:5314":{"crate_id":30,"path":["futures_util","stream","stream","concat","Concat"],"kind":"struct"},"6:1658:9039":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"29:3884:9114":{"crate_id":29,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"20:3024:3766":{"crate_id":20,"path":["http","method","Inner"],"kind":"enum"},"1:10681:13794":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"17:9476:7135":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"17:11653:7388":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"1:6015:4748":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"1:14189:2887":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"2:50384:2977":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"17:13172:7766":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"2:12465:5305":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"17:12741:7598":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"16:5960:5707":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"2:12699:5142":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"17:13685:7922":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"30:12932:3867":{"crate_id":30,"path":["futures_util","abortable","Abortable"],"kind":"struct"},"2:12775:5149":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"2:46727:2870":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:2934:180":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"30:6689:3819":{"crate_id":30,"path":["futures_util","future","future","Flatten"],"kind":"struct"},"30:0:1633":{"crate_id":30,"path":["futures_util"],"kind":"module"},"5:3040:9832":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"24:13874:6303":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI64"],"kind":"struct"},"17:12610:7576":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"30:8973:2869":{"crate_id":30,"path":["futures_util","stream","stream","chain","Chain"],"kind":"struct"},"29:571:8920":{"crate_id":29,"path":["libc","unix","iovec"],"kind":"struct"},"2:6491:3819":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"30:9597:68":{"crate_id":30,"path":["futures_util","stream","stream","any","Any"],"kind":"struct"},"2:45757:3092":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"1:2159:3891":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"30:8200:71296":{"crate_id":30,"path":["futures_util","future","option","_","__Origin"],"kind":"struct"},"24:12478:6350":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU8"],"kind":"struct"},"29:5371:9517":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"15:0:2687":{"crate_id":15,"path":["addr2line"],"kind":"module"},"6:4095:9226":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"24:11128:1925":{"crate_id":24,"path":["tokio","util","sync_wrapper","SyncWrapper"],"kind":"struct"},"2:2267:4939":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"20:3283:1611":{"crate_id":20,"path":["http","version","Version"],"kind":"struct"},"2:49234:5124":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"17:10279:6056":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:50996:8448":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"29:5266:9456":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"16:4417:8024":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:24131:41600":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"1:7541:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"30:9159:71296":{"crate_id":30,"path":["futures_util","stream","stream","concat","_","__Origin"],"kind":"struct"},"6:5167:9406":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:49681:5153":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"24:9532:4716":{"crate_id":24,"path":["tokio","sync","barrier","BarrierState"],"kind":"struct"},"17:9264:7220":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"24:148:3094":{"crate_id":24,"path":["tokio","future","poll_fn","PollFn"],"kind":"struct"},"16:4230:8020":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"29:4015:9194":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"30:8525:3850":{"crate_id":30,"path":["futures_util","future","join","Join5"],"kind":"struct"},"17:13370:7814":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"6:4145:9252":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:45936:2834":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"17:13520:7855":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"30:8771:71296":{"crate_id":30,"path":["futures_util","future","try_join","_","__Origin"],"kind":"struct"},"17:11358:6037":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"24:13531:6307":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU128Le"],"kind":"struct"},"27:942:6966":{"crate_id":27,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"16:6126:5827":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"1:699:4620":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"26:0:2919":{"crate_id":26,"path":["tokio_macros"],"kind":"module"},"2:53463:8513":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"29:584:8926":{"crate_id":29,"path":["libc","unix","winsize"],"kind":"struct"},"30:6346:72567":{"crate_id":30,"path":["futures_util","fns","FnMut1"],"kind":"trait"},"30:4786:1924":{"crate_id":30,"path":["futures_util","stream","try_stream","TryStreamExt"],"kind":"trait"},"24:13678:6309":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU16Le"],"kind":"struct"},"17:11947:7448":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"20:3192:3951":{"crate_id":20,"path":["http","uri","path","PathAndQuery"],"kind":"struct"},"35:539:3746":{"crate_id":35,"path":["futures_channel","mpsc","State"],"kind":"struct"},"16:6014:5826":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:23833:5181":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"18:637:6955":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"17:12946:7634":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:46244:5070":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"24:4754:6990":{"crate_id":24,"path":["tokio","park","thread","UnparkThread"],"kind":"struct"},"29:4393:9325":{"crate_id":29,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"1:10819:4486":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:50131:5170":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:15961:2726":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"2:46737:4913":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"29:4470:9358":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"34:606:71296":{"crate_id":34,"path":["http_body","limited","_","__Origin"],"kind":"struct"},"17:10864:7303":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"17:9551:6091":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:48494:107":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"1:4504:2887":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"16:6391:5835":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"5:783:222":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"29:4058:9210":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"24:4168:2952":{"crate_id":24,"path":["tokio","io","util","async_write_ext","AsyncWriteExt"],"kind":"trait"},"1:15274:4439":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"24:8469:3766":{"crate_id":24,"path":["tokio","sync","oneshot","Inner"],"kind":"struct"},"6:6899:9751":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"17:10950:7312":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"24:10303:7016":{"crate_id":24,"path":["tokio","time","driver","entry","StateCell"],"kind":"struct"},"30:8252:201":{"crate_id":30,"path":["futures_util","future","ready","Ready"],"kind":"struct"},"24:9877:7015":{"crate_id":24,"path":["tokio","sync","watch","state","StateSnapshot"],"kind":"struct"},"24:9761:3130":{"crate_id":24,"path":["tokio","sync","batch_semaphore","TryAcquireError"],"kind":"enum"},"9:722:5466":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"2:5611:779":{"crate_id":2,"path":["core","iter"],"kind":"module"},"17:13898:7970":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"11:54:5586":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"6:5945:9591":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"6:610:8936":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"1:1534:4523":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"20:3188:1845":{"crate_id":20,"path":["http","uri","builder","Builder"],"kind":"struct"},"30:6363:6563":{"crate_id":30,"path":["futures_util","fns","OkFn"],"kind":"struct"},"35:439:3736":{"crate_id":35,"path":["futures_channel","mpsc","BoundedSenderInner"],"kind":"struct"},"2:46566:4903":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"29:1657:9043":{"crate_id":29,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"37:350:2231":{"crate_id":37,"path":["httparse","Header"],"kind":"struct"},"16:4477:8026":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"30:11909:6596":{"crate_id":30,"path":["futures_util","stream","try_stream","try_collect","TryCollect"],"kind":"struct"},"30:6989:71296":{"crate_id":30,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"17:12598:7574":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:51323:4962":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"17:13986:7992":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"1:897:4624":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"2:49284:5127":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"30:9173:107":{"crate_id":30,"path":["futures_util","stream","stream","count","Count"],"kind":"struct"},"2:8582:157":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"6:3978:9170":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"5:8121:5372":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"1:11411:4495":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"6:4459:9350":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"24:7199:6386":{"crate_id":24,"path":["tokio","runtime","thread_pool","Spawner"],"kind":"struct"},"1:4072:205":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"1:9667:67960":{"crate_id":1,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"12:379:5603":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"17:13780:7941":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"17:13062:7726":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"2:3253:211":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"2:49825:4829":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"6:6852:9741":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"15:230:5618":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"5:5833:5314":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:3730:4892":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2:9241:3225":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:2576:127":{"crate_id":1,"path":["std","error","Error"],"kind":"trait"},"6:632:8949":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"2:49810:4826":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"30:12235:71296":{"crate_id":30,"path":["futures_util","stream","try_stream","try_skip_while","_","__Origin"],"kind":"struct"},"25:55:6725":{"crate_id":25,"path":["pin_project_lite","__private","UnsafeDropInPlaceGuard"],"kind":"struct"},"2:50119:5165":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:4726:64361":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"17:12221:7496":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"1:15958:2723":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"24:12643:6324":{"crate_id":24,"path":["tokio","io","util","write_all","WriteAll"],"kind":"struct"},"6:4293:9279":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"1:2793:2974":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"24:13580:6313":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU64Le"],"kind":"struct"},"17:13620:7878":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"16:7185:5851":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"29:6628:9737":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:46636:4919":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"5:8130:4018":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"1:14186:2891":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"17:10403:6073":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:13977:4562":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"30:9802:71296":{"crate_id":30,"path":["futures_util","stream","stream","fuse","_","__Origin"],"kind":"struct"},"2:46557:4918":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"30:10929:10232":{"crate_id":30,"path":["futures_util","stream","stream","flatten_unordered","PollStreamFut"],"kind":"struct"},"2:2905:183":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:48528:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"30:10878:6536":{"crate_id":30,"path":["futures_util","stream","stream","buffered","Buffered"],"kind":"struct"},"17:9849:71180":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"29:5183:9422":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"24:5636:71334":{"crate_id":24,"path":["tokio","runtime","enter","EnterContext"],"kind":"enum"},"1:5819:4451":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"1:10666:13793":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"23:24:4610":{"crate_id":23,"path":["itoa","Buffer"],"kind":"struct"},"24:14735:2865":{"crate_id":24,"path":["tokio","io","seek","Seek"],"kind":"struct"},"18:645:6154":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"2:47829:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:15032:4587":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"17:13582:7870":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"29:5247:9454":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:50975:8447":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"17:9005:49384":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"20:2488:4023":{"crate_id":20,"path":["http","header","map","VacantEntry"],"kind":"struct"},"12:1238:5599":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"20:3201:3949":{"crate_id":20,"path":["http","uri","scheme","Scheme2"],"kind":"enum"},"33:237:3006":{"crate_id":33,"path":["futures_task","future_obj","FutureObj"],"kind":"struct"},"2:2872:104":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"29:4503:9371":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"5:1195:70697":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"17:11835:7433":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"2:46684:4910":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"16:6731:5989":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"17:10938:7311":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"1:11275:64194":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"2:4767:4933":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:13248:41840":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunksIter"],"kind":"struct"},"30:13115:6573":{"crate_id":30,"path":["futures_util","fns","InspectErrFn"],"kind":"struct"},"27:950:6955":{"crate_id":27,"path":["memchr","memmem","x86","avx","std","Forward"],"kind":"struct"},"2:51491:5001":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"30:6847:3822":{"crate_id":30,"path":["futures_util","future","future","IntoStream"],"kind":"struct"},"30:9854:71296":{"crate_id":30,"path":["futures_util","stream","stream","_","__Origin"],"kind":"struct"},"16:6087:5781":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"5:6672:3031":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"1:10962:4582":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"29:3958:9165":{"crate_id":29,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"17:10477:6070":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"1:10868:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"17:10407:6101":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"31:127:3003":{"crate_id":31,"path":["futures_core","stream","TryStream"],"kind":"trait"},"24:69:71590":{"crate_id":24,"path":["tokio","macros","scoped_tls","ScopedKey"],"kind":"struct"},"17:13163:7765":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"1:11360:4430":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"24:4163:2951":{"crate_id":24,"path":["tokio","io","util","async_seek_ext","AsyncSeekExt"],"kind":"trait"},"1:8522:4615":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"1:5769:4449":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"35:552:3767":{"crate_id":35,"path":["futures_channel","oneshot","Cancellation"],"kind":"struct"},"16:7333:5802":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:3395:4789":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"30:9005:71296":{"crate_id":30,"path":["futures_util","stream","stream","chain","_","__Origin"],"kind":"struct"},"17:9245:6035":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"37:202:6716":{"crate_id":37,"path":["httparse","parse_headers_iter_uninit","ShrinkOnDrop"],"kind":"struct"},"2:56348:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:9886:7232":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"1:15957:2722":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"6:584:8923":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"2:51303:8450":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"17:11254:6092":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"16:2754:5711":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"29:5428:9539":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"6:5459:9545":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"16:5580:5688":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"24:4505:2895":{"crate_id":24,"path":["tokio","io","util","repeat","Repeat"],"kind":"struct"},"30:6551:3819":{"crate_id":30,"path":["futures_util","future","future","flatten","Flatten"],"kind":"enum"},"29:5274:9461":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"30:12488:3891":{"crate_id":30,"path":["futures_util","stream","iter","Iter"],"kind":"struct"},"17:9971:71175":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"2:14033:1827":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"30:10043:4908":{"crate_id":30,"path":["futures_util","stream","stream","peek","Peekable"],"kind":"struct"},"34:624:1902":{"crate_id":34,"path":["http_body","next","Data"],"kind":"struct"},"2:46365:5287":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"1:9746:4687":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"1:11193:4432":{"crate_id":1,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"24:11849:6347":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU32Le"],"kind":"struct"},"6:4517:9373":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:49690:5154":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"24:11021:4587":{"crate_id":24,"path":["tokio","time","instant","Instant"],"kind":"struct"},"2:5392:5282":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"1:10455:6795":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"2:2492:4934":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"29:1728:9081":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"16:4350:8022":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"30:12647:60307":{"crate_id":30,"path":["futures_util","stream","select_with_strategy","PollNext"],"kind":"enum"},"34:651:3104":{"crate_id":34,"path":["http_body","combinators","map_data","MapData"],"kind":"struct"},"17:13180:7767":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"17:9649:7228":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"24:5707:6379":{"crate_id":24,"path":["tokio","runtime","task","error","JoinError"],"kind":"struct"},"17:4008:7146":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"17:11045:49390":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"17:10962:7313":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"29:5392:9529":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"30:6709:71296":{"crate_id":30,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"30:7380:6566":{"crate_id":30,"path":["futures_util","future","try_future","TryFlattenErr"],"kind":"struct"},"1:2937:179":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"1:3676:2875":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"30:10745:71296":{"crate_id":30,"path":["futures_util","stream","stream","ready_chunks","_","__Origin"],"kind":"struct"},"1:7711:4561":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"16:4890:8038":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"17:13429:7825":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"16:6644:5842":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"24:7067:6727":{"crate_id":24,"path":["tokio","runtime","thread_pool","worker","block_in_place","Reset"],"kind":"struct"},"29:1525:8958":{"crate_id":29,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:11405:5118":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:11437:4471":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:11888:5132":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"17:10673:49574":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"5:3894:5395":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:47498:3488":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"16:7870:5790":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:3759:3096":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"17:13497:7847":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"24:10969:7033":{"crate_id":24,"path":["tokio","time","driver","ClockTime"],"kind":"struct"},"14:194:47731":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"6:6028:9642":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"17:12521:7561":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"17:12699:7594":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"17:9186:6041":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"2:46496:6770":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"30:9495:71296":{"crate_id":30,"path":["futures_util","stream","stream","_","__Origin"],"kind":"struct"},"12:764:3892":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:51156:4993":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"24:4703:2918":{"crate_id":24,"path":["tokio","loom","std","unsafe_cell","UnsafeCell"],"kind":"struct"},"27:820:6154":{"crate_id":27,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"2:49350:5217":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"24:14254:6314":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU8"],"kind":"struct"},"16:3118:5967":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"30:8078:3839":{"crate_id":30,"path":["futures_util","future","try_future","UnwrapOrElse"],"kind":"struct"},"14:47:8291":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"24:10920:7026":{"crate_id":24,"path":["tokio","time","driver","entry","TimerShared"],"kind":"struct"},"24:6881:3766":{"crate_id":24,"path":["tokio","runtime","thread_pool","queue","Inner"],"kind":"struct"},"1:5532:4699":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"24:9679:6463":{"crate_id":24,"path":["tokio","sync","notify","NotificationType"],"kind":"enum"},"16:3772:8017":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"6:4066:9210":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"5:3748:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"30:8399:3848":{"crate_id":30,"path":["futures_util","future","join","Join3"],"kind":"struct"},"2:22815:2513":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"17:2314:6106":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"24:13923:6301":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI32"],"kind":"struct"},"24:11702:6336":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI16Le"],"kind":"struct"},"30:10406:71296":{"crate_id":30,"path":["futures_util","stream","stream","take","_","__Origin"],"kind":"struct"},"29:4044:9203":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:8343:4815":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"30:6251:3017":{"crate_id":30,"path":["futures_util","task","spawn","LocalSpawnExt"],"kind":"trait"},"17:12783:7605":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:51951:5007":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"17:10975:7314":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"1:2366:600":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:32296:3920":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"2:2171:578":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"17:10041:7240":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"10:0:2683":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"2:7736:4923":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"12:1121:4022":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"24:12241:6342":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU128"],"kind":"struct"},"2:50003:4839":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"30:6897:3824":{"crate_id":30,"path":["futures_util","future","future","MapInto"],"kind":"struct"},"29:3860:9097":{"crate_id":29,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:9332:6063":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"2:3718:137":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"18:740:6962":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"22:1298:6217":{"crate_id":22,"path":["bytes","buf","writer","Writer"],"kind":"struct"},"6:1617:9008":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"24:13384:6304":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI64Le"],"kind":"struct"},"24:1453:1846":{"crate_id":24,"path":["tokio","fs","read","read"],"kind":"function"},"6:5953:9596":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:46235:8415":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"17:13933:7983":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"16:4506:8027":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"17:12671:7590":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"16:2889:5971":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"30:11478:3833":{"crate_id":30,"path":["futures_util","stream","try_stream","MapOk"],"kind":"struct"},"16:2733:5669":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"29:4509:9373":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"24:13825:6297":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI128"],"kind":"struct"},"6:4255:4711":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"24:5560:3956":{"crate_id":24,"path":["tokio","runtime","task","Task"],"kind":"struct"},"17:11678:7390":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"5:1694:5418":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"24:9704:3746":{"crate_id":24,"path":["tokio","sync","notify","State"],"kind":"enum"},"16:3320:6015":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"29:4493:9366":{"crate_id":29,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:38753:2975":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"24:7981:6737":{"crate_id":24,"path":["tokio","sync","mpsc","list","Tx"],"kind":"struct"},"5:7620:5353":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"17:12010:7463":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"30:10493:6533":{"crate_id":30,"path":["futures_util","stream","stream","take_until","TakeUntil"],"kind":"struct"},"1:10850:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"2:48210:3563":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"2:14094:201":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"30:10668:5121":{"crate_id":30,"path":["futures_util","stream","stream","chunks","Chunks"],"kind":"struct"},"2:3415:4783":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"16:6682:5797":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"29:3989:9183":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"18:745:71184":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"17:9769:71178":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"22:0:1630":{"crate_id":22,"path":["bytes"],"kind":"module"},"1:12023:64193":{"crate_id":1,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"17:13154:7761":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"30:12067:6600":{"crate_id":30,"path":["futures_util","stream","try_stream","try_fold","TryFold"],"kind":"struct"},"30:11458:71296":{"crate_id":30,"path":["futures_util","stream","try_stream","into_stream","_","__Origin"],"kind":"struct"},"6:4317:9288":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"12:979:4523":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"29:4333:9298":{"crate_id":29,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:50366:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"2:53325:4968":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"17:2543:6068":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"29:6850:9742":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"24:7823:6738":{"crate_id":24,"path":["tokio","sync","mpsc","chan","Rx"],"kind":"struct"},"2:52317:4979":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"30:8942:3862":{"crate_id":30,"path":["futures_util","future","try_select","TrySelect"],"kind":"struct"},"1:1511:4520":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"18:651:6151":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"2:45969:4894":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"42:0:6632":{"crate_id":42,"path":["log"],"kind":"module"},"30:7595:71296":{"crate_id":30,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"24:14070:6312":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU64"],"kind":"struct"},"20:2663:6194":{"crate_id":20,"path":["http","header","name","HdrName"],"kind":"struct"},"1:15942:2709":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"24:7412:6437":{"crate_id":24,"path":["tokio","sync","broadcast","RecvGuard"],"kind":"struct"},"30:12589:71296":{"crate_id":30,"path":["futures_util","stream","poll_immediate","_","__Origin"],"kind":"struct"},"17:12155:7488":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"24:9647:6452":{"crate_id":24,"path":["tokio","sync","mpsc","error","SendTimeoutError"],"kind":"enum"},"20:2453:4018":{"crate_id":20,"path":["http","header","map","Drain"],"kind":"struct"},"30:7907:71296":{"crate_id":30,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"30:11547:3105":{"crate_id":30,"path":["futures_util","stream","try_stream","MapErr"],"kind":"struct"},"2:3336:4864":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"30:11613:3836":{"crate_id":30,"path":["futures_util","stream","try_stream","or_else","OrElse"],"kind":"struct"},"2:49699:5155":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"2:23626:4482":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"17:9896:71176":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"17:13258:7789":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"2:46257:5071":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"29:5406:9532":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"6:4127:9241":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"34:633:3102":{"crate_id":34,"path":["http_body","next","Trailers"],"kind":"struct"},"30:11682:6593":{"crate_id":30,"path":["futures_util","stream","try_stream","try_for_each","TryForEach"],"kind":"struct"},"2:5169:2918":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"2:50139:5169":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"2:13857:3094":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:46448:5214":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"24:14344:1816":{"crate_id":24,"path":["tokio","io","util","read_buf","ReadBuf"],"kind":"struct"},"24:9830:3578":{"crate_id":24,"path":["tokio","sync","watch","Ref"],"kind":"struct"},"1:1623:4019":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:46665:4908":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"6:525:8889":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"29:6231:9730":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"24:10943:7029":{"crate_id":24,"path":["tokio","time","driver","wheel","level","Expiration"],"kind":"struct"},"6:6005:9624":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"35:454:3737":{"crate_id":35,"path":["futures_channel","mpsc","UnboundedSender"],"kind":"struct"},"30:5804:3956":{"crate_id":30,"path":["futures_util","stream","futures_unordered","task","Task"],"kind":"struct"},"2:46398:5075":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"29:4441:9349":{"crate_id":29,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"29:6020:9642":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"17:11809:7428":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"30:9719:6526":{"crate_id":30,"path":["futures_util","stream","stream","for_each","ForEach"],"kind":"struct"},"2:49839:4832":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"17:13772:7938":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"16:5736:5695":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"24:9817:202":{"crate_id":24,"path":["tokio","sync","watch","Receiver"],"kind":"struct"},"6:6644:9739":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"1:4506:2888":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"12:472:71167":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"1:8873:6869":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"2:49365:4811":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"29:1736:9085":{"crate_id":29,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"24:7642:1869":{"crate_id":24,"path":["tokio","sync","mpsc","bounded","Sender"],"kind":"struct"},"1:1505:4519":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"2:4654:2853":{"crate_id":2,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"1:1476:4018":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:53373:8507":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:51044:4992":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"17:12073:7476":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"16:7250:5857":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"24:13972:6299":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI16"],"kind":"struct"},"31:44:3000":{"crate_id":31,"path":["futures_core","future","TryFuture"],"kind":"trait"},"2:3348:4870":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"24:1832:3840":{"crate_id":24,"path":["tokio","future","maybe_done","MaybeDone"],"kind":"enum"},"2:13746:150":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"2:3796:3097":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:52191:4987":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"16:7477:5805":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"12:2066:4502":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"2:50352:2986":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"16:5472:5682":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"1:1497:4517":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"6:4112:9234":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:32261:4424":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"27:1061:6149":{"crate_id":27,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"24:4771:6991":{"crate_id":24,"path":["tokio","park","thread","CachedParkThread"],"kind":"struct"},"6:6091:9652":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"17:10331:6074":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:9361:4821":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"2:52030:4995":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"30:11106:6538":{"crate_id":30,"path":["futures_util","stream","stream","for_each_concurrent","ForEachConcurrent"],"kind":"struct"},"16:5975:5824":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"17:2484:49474":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"1:15960:2725":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"29:4065:9213":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"17:11026:7318":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"2:24083:8394":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"30:8913:71296":{"crate_id":30,"path":["futures_util","future","try_join","_","__Origin"],"kind":"struct"},"24:11751:6343":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU128Le"],"kind":"struct"},"16:6636:5800":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"1:6895:4472":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:11336:5114":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:15689:6802":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"17:12552:7567":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"30:5934:6724":{"crate_id":30,"path":["futures_util","stream","futures_unordered","poll_next","Bomb"],"kind":"struct"},"24:1746:118":{"crate_id":24,"path":["tokio","fs","dir_builder","DirBuilder"],"kind":"struct"},"2:47871:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"24:6632:6405":{"crate_id":24,"path":["tokio","runtime","context","EnterGuard"],"kind":"struct"},"30:7638:3830":{"crate_id":30,"path":["futures_util","future","try_future","ErrInto"],"kind":"struct"},"24:8913:3136":{"crate_id":24,"path":["tokio","sync","rwlock","owned_write_guard_mapped","OwnedRwLockMappedWriteGuard"],"kind":"struct"},"6:1533:8958":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"27:1042:6148":{"crate_id":27,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"29:5151:9404":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"17:9574:6065":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"16:5996:5825":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"6:4013:9188":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:13788:7942":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"2:12021:6776":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"30:12557:187":{"crate_id":30,"path":["futures_util","stream","pending","Pending"],"kind":"struct"},"29:5555:9584":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"30:12867:3488":{"crate_id":30,"path":["futures_util","stream","futures_unordered","iter","IntoIter"],"kind":"struct"},"6:4040:9200":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"30:12961:71296":{"crate_id":30,"path":["futures_util","abortable","_","__Origin"],"kind":"struct"},"30:10069:71296":{"crate_id":30,"path":["futures_util","stream","stream","peek","_","__Origin"],"kind":"struct"},"1:11626:3891":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"30:12506:6950":{"crate_id":30,"path":["futures_util","stream","repeat_with","RepeatWith"],"kind":"struct"},"45:0:6633":{"crate_id":45,"path":["try_lock"],"kind":"module"},"2:48991:5296":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"2:10272:109":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"1:786:6794":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"2:47611:3891":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"30:7344:71296":{"crate_id":30,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"2:49377:5138":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"17:12208:7495":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"1:2031:145":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"29:5233:9443":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"30:12136:6601":{"crate_id":30,"path":["futures_util","stream","try_stream","try_unfold","TryUnfold"],"kind":"struct"},"17:13296:7795":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"35:426:3755":{"crate_id":35,"path":["futures_channel","mpsc","queue","Queue"],"kind":"struct"},"2:12736:5145":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"20:3094:1845":{"crate_id":20,"path":["http","request","Builder"],"kind":"struct"},"2:22545:69734":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"2:4035:2979":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"1:9495:8704":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"35:560:2208":{"crate_id":35,"path":["futures_channel","oneshot","Canceled"],"kind":"struct"},"2:10905:2513":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"24:8409:1922":{"crate_id":24,"path":["tokio","sync","oneshot"],"kind":"module"},"24:7649:6450":{"crate_id":24,"path":["tokio","sync","mpsc","bounded","OwnedPermit"],"kind":"struct"},"2:10560:4958":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"14:244:8295":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"24:590:91":{"crate_id":24,"path":["tokio","loom","std","atomic_u8","AtomicU8"],"kind":"struct"},"5:2218:5368":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"1:1528:4522":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"24:13070:6316":{"crate_id":24,"path":["tokio","io","util","read_to_end","ReadToEnd"],"kind":"struct"},"1:9761:4688":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"17:11304:49392":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"27:888:3408":{"crate_id":27,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"5:7111:6762":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"2:10279:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"30:11941:71296":{"crate_id":30,"path":["futures_util","stream","try_stream","try_collect","_","__Origin"],"kind":"struct"},"17:10571:7261":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"1:6897:4473":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"17:13192:7772":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"2:32462:68749":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"16:6252:5832":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"1:12700:4650":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"17:10377:6105":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"24:6297:1845":{"crate_id":24,"path":["tokio","runtime","builder","Builder"],"kind":"struct"},"30:11998:6598":{"crate_id":30,"path":["futures_util","stream","try_stream","try_chunks","TryChunks"],"kind":"struct"},"2:14130:141":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"1:15946:2713":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"16:3800:8018":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"1:4742:2868":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"25:65:6726":{"crate_id":25,"path":["pin_project_lite","__private","UnsafeOverwriteGuard"],"kind":"struct"},"29:4087:9226":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"6:5407:9531":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:8061:4640":{"crate_id":1,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"30:12666:6931":{"crate_id":30,"path":["futures_util","stream","select_with_strategy","SelectWithStrategy"],"kind":"struct"},"30:13088:6575":{"crate_id":30,"path":["futures_util","fns","MapErrFn"],"kind":"struct"},"1:11367:4743":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"35:547:3751":{"crate_id":35,"path":["futures_channel","mpsc","SenderTask"],"kind":"struct"},"20:3098:1845":{"crate_id":20,"path":["http","response","Builder"],"kind":"struct"},"2:47550:3540":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"34:686:71296":{"crate_id":34,"path":["http_body","combinators","map_data","_","__Origin"],"kind":"struct"},"17:13205:7777":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"2:3368:4878":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"30:7821:3831":{"crate_id":30,"path":["futures_util","future","try_future","InspectErr"],"kind":"struct"},"5:994:5371":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"17:12234:7498":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"24:14686:2879":{"crate_id":24,"path":["tokio","io","util","buf_reader","BufReader"],"kind":"struct"},"16:5231:8043":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"12:880:4499":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"5:4628:235":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"29:6844:9741":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:2166:4018":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"24:9538:3034":{"crate_id":24,"path":["tokio","sync","barrier","BarrierWaitResult"],"kind":"struct"},"17:681:7142":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"9:692:5465":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"2:51814:8458":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:23638:69716":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"18:730:71181":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:49557:5147":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"2:48564:3562":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"1:7649:4557":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"1:11298:8596":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"12:1881:145":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:51198:8449":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"17:12712:7595":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"29:4298:9283":{"crate_id":29,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"17:12287:7505":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"29:6856:9743":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"0:0:1643":{"crate_id":0,"path":["hyper"],"kind":"module"},"24:11064:7040":{"crate_id":24,"path":["tokio","util","rand","FastRand"],"kind":"struct"},"29:1614:9010":{"crate_id":29,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"5:1607:3892":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"1:12693:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"17:11640:7386":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"30:12027:71296":{"crate_id":30,"path":["futures_util","stream","try_stream","try_chunks","_","__Origin"],"kind":"struct"},"34:246:3103":{"crate_id":34,"path":["http_body","combinators","box_body","BoxBody"],"kind":"struct"},"1:14573:1759":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"17:11539:7367":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"5:1685:194":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:50289:201":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"2:10293:3568":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"27:170:55678":{"crate_id":27,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"11:46:9825":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"24:1044:6973":{"crate_id":24,"path":["tokio","util","linked_list","Pointers"],"kind":"struct"},"2:24109:41608":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"16:7295:5801":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"6:5228:9434":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"30:6248:3018":{"crate_id":30,"path":["futures_util","task","spawn","SpawnExt"],"kind":"trait"},"17:12095:7477":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"6:5269:9455":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"1:10697:4525":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"1:6493:4466":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"20:1244:2375":{"crate_id":20,"path":["http","method","InvalidMethod"],"kind":"struct"},"27:1013:4823":{"crate_id":27,"path":["memchr","memmem","Searcher"],"kind":"struct"},"30:8456:3849":{"crate_id":30,"path":["futures_util","future","join","Join4"],"kind":"struct"},"2:46716:4917":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:53540:8516":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"5:432:1940":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"1:1463:4026":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"24:1038:6176":{"crate_id":24,"path":["tokio","util","linked_list","Link"],"kind":"trait"},"24:14406:2861":{"crate_id":24,"path":["tokio","io","util","read","Read"],"kind":"struct"},"24:9590:3740":{"crate_id":24,"path":["tokio","sync","mpsc","error","SendError"],"kind":"struct"},"29:504:8881":{"crate_id":29,"path":["libc","unix","group"],"kind":"struct"},"2:5149:3580":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"1:1021:4640":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"17:9162:6093":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"24:9838:1872":{"crate_id":24,"path":["tokio","sync","watch","Shared"],"kind":"struct"},"2:3265:220":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:47636:178":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"16:7467:5785":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"30:8577:71296":{"crate_id":30,"path":["futures_util","future","join","_","__Origin"],"kind":"struct"},"17:10656:7268":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"5:4699:6755":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"24:10936:5425":{"crate_id":24,"path":["tokio","time","driver","handle","Handle"],"kind":"struct"},"2:3281:2914":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"17:12408:7547":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"17:11118:49391":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"6:4120:9239":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"17:10584:6045":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"17:12182:7492":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:22892:2513":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:14898:6801":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"2:11921:5133":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"1:11533:3746":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"20:3184:3950":{"crate_id":20,"path":["http","uri","authority","Authority"],"kind":"struct"},"24:11898:6345":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU16Le"],"kind":"struct"},"24:5283:6381":{"crate_id":24,"path":["tokio","runtime","task","raw","RawTask"],"kind":"struct"},"2:49671:5152":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:2598:8535":{"crate_id":1,"path":["std","error","from","StringError"],"kind":"struct"},"1:11464:3216":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"16:5855:5702":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"2:11118:3892":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"2:51540:4986":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"2:23051:19004":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"17:12632:7587":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"29:5339:9504":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:52077:4999":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"17:12431:7548":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"17:14000:7995":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"29:6885:9750":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"6:1584:8986":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"24:4302:2056":{"crate_id":24,"path":["tokio","io","util","empty","Empty"],"kind":"struct"},"1:1646:4023":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"1:11220:4437":{"crate_id":1,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"29:5399:9531":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"17:9799:7231":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"29:5945:9596":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"6:6887:9749":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"30:12111:71296":{"crate_id":30,"path":["futures_util","stream","try_stream","try_fold","_","__Origin"],"kind":"struct"},"30:7209:71296":{"crate_id":30,"path":["futures_util","future","try_future","into_future","_","__Origin"],"kind":"struct"},"5:5875:6758":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"29:5304:9484":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"35:0:1631":{"crate_id":35,"path":["futures_channel"],"kind":"module"},"29:6177:9708":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"1:1153:8523":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"2:3356:4591":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"17:11962:7453":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"17:11665:7389":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"17:10224:7249":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"2:46604:8427":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"24:12899:2226":{"crate_id":24,"path":["tokio","io","util","shutdown","Shutdown"],"kind":"struct"},"2:23090:2513":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:15070:4573":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"0:475:1617":{"crate_id":0,"path":["hyper","ext"],"kind":"module"},"5:6954:2988":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"30:3439:71906":{"crate_id":30,"path":["futures_util","stream","stream","flatten_unordered","InnerWaker"],"kind":"struct"},"1:15418:67420":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"0:482:1122":{"crate_id":0,"path":["hyper","rt"],"kind":"module"},"2:51125:5005":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:24461:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"2:53448:8512":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"6:6200:9715":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"23:0:1637":{"crate_id":23,"path":["itoa"],"kind":"module"},"29:5261:9455":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"5:2330:5422":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2:56296:236":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:9007:3048":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"29:1576:8986":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"16:7264:5799":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"30:7460:71296":{"crate_id":30,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"29:1709:9075":{"crate_id":29,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"21:20:8740":{"crate_id":21,"path":["fnv","FnvHasher"],"kind":"struct"},"24:10128:2853":{"crate_id":24,"path":["tokio","task","task_local","with_task","Guard"],"kind":"struct"},"24:12837:71296":{"crate_id":24,"path":["tokio","io","util","take","_","__Origin"],"kind":"struct"},"6:5987:9615":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"6:4046:9201":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"29:4402:9328":{"crate_id":29,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:46548:4916":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"29:4032:9200":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"24:9792:3044":{"crate_id":24,"path":["tokio","sync","rwlock","RwLock"],"kind":"struct"},"30:10833:6535":{"crate_id":30,"path":["futures_util","stream","stream","buffer_unordered","BufferUnordered"],"kind":"struct"},"2:24184:5243":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"6:1622:9010":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"18:668:6156":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"6:0:798":{"crate_id":6,"path":["libc"],"kind":"module"},"5:8298:5377":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"1:14993:4588":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"29:1514:8953":{"crate_id":29,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"1:10687:4511":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"14:250:8296":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"2:9240:3226":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"2:8867:4812":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:10972:2883":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"24:8796:3134":{"crate_id":24,"path":["tokio","sync","rwlock","owned_read_guard","OwnedRwLockReadGuard"],"kind":"struct"},"12:1256:4524":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"2:3162:228":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"2:49271:5126":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"5:792:108":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"27:966:6141":{"crate_id":27,"path":["memchr","memmem","FindIter"],"kind":"struct"},"44:0:1642":{"crate_id":44,"path":["want"],"kind":"module"},"2:3476:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"24:7985:6738":{"crate_id":24,"path":["tokio","sync","mpsc","list","Rx"],"kind":"struct"},"24:6786:4645":{"crate_id":24,"path":["tokio","runtime","thread_pool","park","Parker"],"kind":"struct"},"2:3724:4890":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:3543:3091":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"29:4247:4711":{"crate_id":29,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"2:49787:4822":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"29:5363:9516":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"5:3370:4500":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"16:6518:5838":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"17:10468:6071":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"32:0:2989":{"crate_id":32,"path":["pin_utils"],"kind":"module"},"16:2968:5954":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"1:2460:8533":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:2900:415":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"29:4005:9188":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"6:3862:9096":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"1:4391:4679":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"1:11962:4562":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"29:592:8931":{"crate_id":29,"path":["libc","unix","linger"],"kind":"struct"},"2:3565:4767":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"20:3357:2821":{"crate_id":20,"path":["http","extensions","Extensions"],"kind":"struct"},"2:46647:3823":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"6:4358:9309":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"17:11794:7422":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"17:294:7137":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"29:4195:9256":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"30:12925:3488":{"crate_id":30,"path":["futures_util","stream","select_all","IntoIter"],"kind":"struct"},"29:1622:9015":{"crate_id":29,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"24:10431:6905":{"crate_id":24,"path":["tokio","time","driver","wheel","level","Level"],"kind":"struct"},"20:2543:2674":{"crate_id":20,"path":["http","header","map","Cursor"],"kind":"enum"},"24:12758:2864":{"crate_id":24,"path":["tokio","io","util","write","Write"],"kind":"struct"},"30:7269:6566":{"crate_id":30,"path":["futures_util","future","try_future","try_flatten_err","TryFlattenErr"],"kind":"enum"},"30:10353:71296":{"crate_id":30,"path":["futures_util","stream","stream","skip_while","_","__Origin"],"kind":"struct"},"2:13731:138":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"29:5997:9624":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"24:9635:3961":{"crate_id":24,"path":["tokio","sync","mpsc","error","RecvError"],"kind":"struct"},"17:11616:7382":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"24:11152:6495":{"crate_id":24,"path":["tokio","util","vec_deque_cell","VecDequeCell"],"kind":"struct"},"6:6068:9645":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:52270:4975":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"14:11:8291":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"2:48224:3566":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"17:11822:7432":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:3742:4893":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"16:7216:5854":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"22:526:1762":{"crate_id":22,"path":["bytes","bytes","Bytes"],"kind":"struct"},"34:0:1634":{"crate_id":34,"path":["http_body"],"kind":"module"}},"external_crates":{"38":{"name":"httpdate","html_root_url":null},"32":{"name":"pin_utils","html_root_url":"https://docs.rs/pin-utils/0.1.0/"},"28":{"name":"num_cpus","html_root_url":null},"24":{"name":"tokio","html_root_url":null},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"37":{"name":"httparse","html_root_url":null},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"33":{"name":"futures_task","html_root_url":null},"29":{"name":"libc","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"41":{"name":"once_cell","html_root_url":null},"42":{"name":"log","html_root_url":"https://docs.rs/log/0.4.17/"},"20":{"name":"http","html_root_url":"https://docs.rs/http/0.2.8/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"45":{"name":"try_lock","html_root_url":"https://docs.rs/try-lock/0.2.3/"},"31":{"name":"futures_core","html_root_url":null},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"36":{"name":"tower_service","html_root_url":null},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"40":{"name":"tracing_core","html_root_url":"https://docs.rs/tracing-core/0.1.22/"},"44":{"name":"want","html_root_url":"https://docs.rs/want/0.3.0/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"43":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"26":{"name":"tokio_macros","html_root_url":null},"27":{"name":"memchr","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"fnv","html_root_url":null},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"39":{"name":"tracing","html_root_url":"https://docs.rs/tracing/0.1.35/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"35":{"name":"futures_channel","html_root_url":null},"25":{"name":"pin_project_lite","html_root_url":null},"23":{"name":"itoa","html_root_url":"https://docs.rs/itoa/1.0.2/"},"34":{"name":"http_body","html_root_url":"https://docs.rs/http-body/0.4.5/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"30":{"name":"futures_util","html_root_url":null},"22":{"name":"bytes","html_root_url":null},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":16}