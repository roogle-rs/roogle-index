{"root":"0:0:1872","crate_version":"1.1.0","includes_private":false,"index":{"0:120:138":{"id":"0:120:138","crate_id":0,"name":"Error","span":{"filename":"src/error.rs","begin":[31,0],"end":[33,1]},"visibility":"public","docs":"Represents errors that can occur handling HTTP streams.\n\n# Formatting\n\nThe `Display` implementation of this type will only print the details of\nthis level of error, even though it may have been caused by another error\nand contain that error in its source. To print all the relevant\ninformation, including the source chain, using something like\n`std::error::Report`, or equivalent 3rd party types.\n\nThe contents of the formatted error message of this specific `Error` type\nis unspecified. **You must not depend on it.** The wording and details may\nchange in any version, with the goal of improving error messages.\n\n# Source\n\nA `hyper::Error` may be caused by another error. To aid in debugging,\nthose are exposed in `Error::source()` as erased types. While it is\npossible to check the exact type of the sources, they **can not be depended\non**. They may come from private internal dependencies, and are subject to\nchange at any moment.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:125","a:2:32731:237-0:120:138","a:2:42366:3400-0:120:138","a:2:2978:246-0:120:138","a:2:32788:2015-0:120:138","a:2:42367:3399-0:120:138","b:2:2456-0:120:138","b:2:2760-0:120:138","b:2:2453-0:120:138","b:2:3591-0:120:138","b:2:2766-0:120:138","b:2:2756-0:120:138","b:2:2771-0:120:138","b:5:5858-0:120:138","0:147","0:145","0:143"]}}},"2:13023:28115":{"id":"2:13023:28115","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13004:27616":{"id":"2:13004:27616","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12072:453","self::pattern":"2:12592:3351"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42242:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:185:2042":{"id":"0:185:2042","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[89,4],"end":[99,5]},"visibility":"default","docs":"Like `poll_write`, except that it writes from a slice of buffers.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42377:2016","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13397:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8236:2044","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45055:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:42385:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:3017:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:380":{"id":"0:380","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[207,0],"end":[211,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10026:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2859","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:381:722"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:14-0:120:138":{"id":"0:14-0:120:138","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[101,23],"end":[101,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::error::Error","name":"Error","id":"0:120:138","glob":false}}},"b:2:2760-0:120:138":{"id":"b:2:2760-0:120:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2733:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:749"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2453-0:120:138":{"id":"b:2:2453-0:120:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32732:2683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2447:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2455:3017"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42367:3399-0:502:2866":{"id":"a:2:42367:3399-0:502:2866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42367:3399","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42367:3399","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:502:2866","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:212":{"id":"0:212","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[290,0],"end":[292,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32732:2683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Read","id":"0:178:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:32788:2015","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:178:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Box","id":"5:286:2299","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:486:2031"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3591-0:498:2862":{"id":"b:2:3591-0:498:2862","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32732:2683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3589:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2862","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3593:1640"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12909:333":{"id":"2:12909:333","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12910:2679","`u8`":"1:12089:1649"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:126:2366":{"id":"0:126:2366","crate_id":0,"name":"is_parse","span":{"filename":"src/error.rs","begin":[172,4],"end":[174,5]},"visibility":"public","docs":"Returns true if this was an HTTP parse error.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:146:722":{"id":"0:146:722","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[526,4],"end":[528,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10001:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9982:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42366:3400-0:498:2862":{"id":"a:2:42366:3400-0:498:2862","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42366:3400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2862","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2456-0:188:2560":{"id":"b:2:2456-0:188:2560","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32732:2683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2450:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2560","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2458:27548"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12904:35054":{"id":"2:12904:35054","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12902:35053"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12937:27763":{"id":"2:12937:27763","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, in which case this function will return true if\nthe `&str` is a prefix of this string slice.\n\nThe [pattern] can also be a [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\nThese will only be checked against the first character of this string slice.\nLook at the second example below regarding behavior for slices of [`char`]s.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```\n\n```\nlet bananas = \"bananas\";\n\n// Note that both of these assert successfully.\nassert!(bananas.starts_with(&['b', 'a', 'n', 'a']));\nassert!(bananas.starts_with(&['a', 'b', 'c', 'd']));\n```","links":{"prim@char":"1:12072:453","self::pattern":"2:12592:3351"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:68-24:42:2080":{"id":"0:68-24:42:2080","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[23,0],"end":[23,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"http_body::Body","name":"Body","id":"24:42:2080","glob":false}}},"a:2:2978:246-0:498:2862":{"id":"a:2:2978:246-0:498:2862","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2978:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2862","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:117:226":{"id":"0:117:226","crate_id":0,"name":"Result","span":{"filename":"src/error.rs","begin":[6,0],"end":[6,51]},"visibility":"public","docs":"Result type often returned from methods that can have hyper `Error`s.","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"std::result::Result","id":"2:42385:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}}},"2:12927:7823":{"id":"2:12927:7823","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12072:453"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:44101:7804","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13013:35072":{"id":"2:13013:35072","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12072:453","self::pattern":"2:12592:3351"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42367:3399-0:120:138":{"id":"a:2:42367:3399-0:120:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42367:3399","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:505:2874":{"id":"0:505:2874","crate_id":0,"name":"read_buf","span":{"filename":"src/upgrade.rs","begin":[94,4],"end":[94,23]},"visibility":"public","docs":"A buffer of bytes that have been read but not processed as HTTP.\n\nFor instance, if the `Connection` is used for an HTTP upgrade request,\nit is possible the server sent back the first bytes of the new protocol\nalong with the response upgrade.\n\nYou will want to check for any existing bytes if you plan to continue\ncommunicating on the IO object.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"bytes::Bytes","id":"22:395:2018","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:13027:29502":{"id":"2:13027:29502","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:918:39692"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5589:35770":{"id":"5:5589:35770","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7622:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7622:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32788:2015-0:120:138":{"id":"a:2:32788:2015-0:120:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32788:2015","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2978:246-0:502:2866":{"id":"a:2:2978:246-0:502:2866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2978:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2978:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:502:2866","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5602:3618":{"id":"5:5602:3618","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7622:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7622:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:5-20:5:1850":{"id":"0:5-20:5:1850","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,22],"end":[96,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::header","name":"header","id":"20:5:1850","glob":false}}},"b:5:5858-0:120:138":{"id":"b:5:5858-0:120:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10031:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32732:2683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5856:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5860:1602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:181:2041":{"id":"0:181:2041","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[59,4],"end":[63,45]},"visibility":"default","docs":"Attempt to write bytes from `buf` into the destination.\n\nOn success, returns `Poll::Ready(Ok(num_bytes_written)))`. If\nsuccessful, it must be guaranteed that `n <= buf.len()`. A return value\nof `0` means that the underlying object is no longer able to accept\nbytes, or that the provided buffer is empty.\n\nIf the object is not ready for writing, the method returns\n`Poll::Pending` and arranges for the current task (via `cx.waker()`) to\nreceive a notification when the object becomes writable or is closed.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42377:2016","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13397:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45055:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:42385:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:3017:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:12913:2526":{"id":"2:12913:2526","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:42244:191"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42242:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10682:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10682:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2771-0:498:2862":{"id":"b:2:2771-0:498:2862","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2730:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2740:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2862","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2774:138","2:2775:1625"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:196:2659":{"id":"0:196:2659","crate_id":0,"name":"uninit","span":{"filename":"src/rt/io.rs","begin":[150,4],"end":[156,5]},"visibility":"public","docs":"Create a new `ReadBuf` with a slice of uninitialized bytes.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["raw",{"borrowed_ref":{"lifetime":"'data","mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"2:30937:2605","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:262:2578":{"id":"0:262:2578","crate_id":0,"name":"Executor","span":{"filename":"src/rt/mod.rs","begin":[39,0],"end":[42,1]},"visibility":"public","docs":"An executor of futures.\n\nThis trait allows Hyper to abstract over async runtimes. Implement this trait for your own type.\n\n# Example\n\n```\n# use hyper::rt::Executor;\n# use std::future::Future;\n#[derive(Clone)]\nstruct TokioExecutor;\n\nimpl<F> Executor<F> for TokioExecutor\nwhere\n    F: Future + Send + 'static,\n    F::Output: Send + 'static,\n{\n    fn execute(&self, future: F) {\n        tokio::spawn(future);\n    }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:264:2581"],"generics":{"params":[{"name":"Fut","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}}},"0:480:2020":{"id":"0:480:2020","crate_id":0,"name":"ReadBufCursor","span":{"filename":"src/rt/io.rs","begin":[131,0],"end":[133,1]},"visibility":"public","docs":"The cursor part of a [`ReadBuf`].\n\nThis is created by calling `ReadBuf::unfilled()`.","links":{"`ReadBuf`":"0:188:2560"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:205","a:2:32731:237-0:480:2020","a:2:42366:3400-0:480:2020","a:2:2978:246-0:480:2020","a:2:32788:2015-0:480:2020","a:2:42367:3399-0:480:2020","b:2:2456-0:480:2020","b:2:2760-0:480:2020","b:2:2453-0:480:2020","b:2:3591-0:480:2020","b:2:2766-0:480:2020","b:2:2756-0:480:2020","b:2:2771-0:480:2020","0:483"]}}},"0:0:1872":{"id":"0:0:1872","crate_id":0,"name":"hyper","span":{"filename":"src/lib.rs","begin":[1,0],"end":[139,1]},"visibility":"public","docs":" # hyper\n\n hyper is a **fast** and **correct** HTTP implementation written in and for Rust.\n\n ## Features\n\n - HTTP/1 and HTTP/2\n - Asynchronous design\n - Leading in performance\n - Tested and **correct**\n - Extensive production use\n - [Client](client/index.html) and [Server](server/index.html) APIs\n\n If just starting out, **check out the [Guides](https://hyper.rs/guides/1/)\n first.**\n\n ## \"Low-level\"\n\n hyper is a lower-level HTTP library, meant to be a building block\n for libraries and applications.\n\n If looking for just a convenient HTTP client, consider the\n [reqwest](https://crates.io/crates/reqwest) crate.\n\n # Optional Features\n\n hyper uses a set of [feature flags] to reduce the amount of compiled code.\n It is possible to just enable certain features over others. By default,\n hyper does not enable any features but allows one to enable a subset for\n their use case. Below is a list of the available feature flags. You may\n also notice above each function, struct and trait there is listed one or\n more feature flags that are required for that item to be used.\n\n If you are new to hyper it is possible to enable the `full` feature flag\n which will enable all public APIs. Beware though that this will pull in\n many extra dependencies that you may not need.\n\n The following optional features are available:\n\n - `http1`: Enables HTTP/1 support.\n - `http2`: Enables HTTP/2 support.\n - `client`: Enables the HTTP `client`.\n - `server`: Enables the HTTP `server`.\n\n [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section\n\n # Unstable Features\n\n hyper includes a set of unstable optional features that can be enabled through the use of a\n feature flag and a [configuration flag].\n\n The following is a list of feature flags and their corresponding `RUSTFLAG`:\n - `ffi`: Enables C API for hyper `hyper_unstable_ffi`.\n - `tracing`: Enables debug logging with `hyper_unstable_tracing`.\n\n Enabling an unstable feature is possible with the following `cargo` command, as of version `1.64.0`:\n ```notrust\n RUSTFLAGS=\"--cfg hyper_unstable_tracing\" cargo rustc --features client,http1,http2,tracing --crate-type cdylib\n```\n [configuration flag]: https://doc.rust-lang.org/reference/conditional-compilation.html\n\n # Stability\n\n It's worth talking a bit about the stability of hyper. hyper's API follows\n [SemVer](https://semver.org). Breaking changes will only be introduced in\n major versions, if ever. New additions to the API, such as new types,\n methods, or traits will only be added in minor versions.\n\n Some parts of hyper are documented as NOT being part of the stable API. The\n following is a brief list, you can read more about each one in the relevant\n part of the documentation.\n\n - Downcasting error types from `Error::source()` is not considered stable.\n - Private dependencies use of global variables is not considered stable.\n   So, if a dependency uses `log` or `tracing`, hyper doesn't promise it\n   will continue to do so.\n - Behavior from default options is not stable. hyper reserves the right to\n   add new options that are enabled by default which might alter the\n   behavior, for the purposes of protection. It is also possible to _change_\n   what the default options are set to, also in efforts to protect the\n   most people possible.","links":{},"attrs":["#![deny(missing_docs)]","#![deny(missing_debug_implementations)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:64:1861","0:165:1862","0:168:1303","0:265:1864","0:344:1865","0:5-20:5:1850","0:6-20:2448:1851","0:7-20:2525:1852","0:8-20:2545:1853","0:9-20:2564:1854","0:10-20:2687:1855","0:11-20:2742:1856","0:12-20:1837:1857","0:14-0:120:138","0:15-0:117:226"],"is_stripped":false}}},"5:5592:35771":{"id":"5:5592:35771","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7622:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7622:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2756-0:120:138":{"id":"b:2:2756-0:120:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2733:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2730:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2759:2237"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:125":{"id":"0:125","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[170,0],"end":[512,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:126:2366","0:127:2372","0:128:2374","0:129:2376","0:130:2264","0:131:2379","0:132:2233","0:133:2382"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:228:2047":{"id":"0:228:2047","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[376,4],"end":[378,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:9-20:2564:1854":{"id":"0:9-20:2564:1854","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,57],"end":[96,67]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::StatusCode","name":"StatusCode","id":"20:2564:1854","glob":false}}},"a:2:2978:246-0:480:2020":{"id":"a:2:2978:246-0:480:2020","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2978:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2020","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:717-0:498:2862":{"id":"b:5:717-0:498:2862","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2469:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:713:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2862","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:719:3568","5:720:3569","5:721:3570"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13207:843":{"id":"2:13207:843","crate_id":2,"name":"into_future","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoFuture","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"IntoFuture","id":"2:13199:165","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:720:3569":{"id":"5:720:3569","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2456-0:498:2862":{"id":"b:2:2456-0:498:2862","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32732:2683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2450:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2862","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2458:27548"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12900:2035":{"id":"2:12900:2035","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:260-0:245:2561":{"id":"0:260-0:245:2561","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[15,22],"end":[15,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::timer::Sleep","name":"Sleep","id":"0:245:2561","glob":false}}},"0:183:2046":{"id":"0:183:2046","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[75,4],"end":[78,42]},"visibility":"default","docs":"Attempts to shut down this writer.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42377:2016","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13397:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45055:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:42385:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:3017:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:6-20:2448:1851":{"id":"0:6-20:2448:1851","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,30],"end":[96,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Method","name":"Method","id":"20:2448:1851","glob":false}}},"b:2:2771-0:83:2084":{"id":"b:2:2771-0:83:2084","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2730:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2740:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2084","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2774:138","2:2775:1625"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2760-0:188:2560":{"id":"b:2:2760-0:188:2560","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2733:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2560","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2762:749"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32731:237-0:480:2020":{"id":"a:2:32731:237-0:480:2020","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32731:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2020","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:369":{"id":"0:369","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[134,0],"end":[165,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2859","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:370:2889"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2760-0:365:2859":{"id":"b:2:2760-0:365:2859","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2733:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2859","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:749"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:180:2021":{"id":"0:180:2021","crate_id":0,"name":"Write","span":{"filename":"src/rt/io.rs","begin":[48,0],"end":[100,1]},"visibility":"public","docs":"Write bytes asynchronously.\n\nThis trait is similar to `std::io::Write`, but for asynchronous writes.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:181:2041","0:182:2045","0:183:2046","0:184:2047","0:185:2042"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:374","0:224","0:222","0:220"]}}},"b:2:2756-0:188:2560":{"id":"b:2:2756-0:188:2560","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2733:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2730:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2560","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2759:2237"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12929:33026":{"id":"2:12929:33026","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12930:33036"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:44399:7813","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:147":{"id":"0:147","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[531,0],"end":[538,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["type_id","cause","description","provide","source"],"trait":{"name":"Error","id":"2:2818:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:148:2387"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2771-0:365:2859":{"id":"b:2:2771-0:365:2859","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2730:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2740:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2859","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2774:138","2:2775:1625"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:367:1102":{"id":"0:367:1102","crate_id":0,"name":"on","span":{"filename":"src/upgrade.rs","begin":[106,0],"end":[108,1]},"visibility":"public","docs":"Gets a pending HTTP upgrade from this message.\n\nThis can be called on the following types:\n\n- `http::Request<B>`\n- `http::Response<B>`\n- `&mut http::Request<B>`\n- `&mut http::Response<B>`","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["msg",{"generic":"T"}]],"output":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2862","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"sealed::CanUpgrade","id":"0:404:2882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:93:138":{"id":"0:93:138","crate_id":0,"name":"Error","span":{"filename":"src/body/incoming.rs","begin":[185,4],"end":[185,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:32731:237-0:83:2084":{"id":"a:2:32731:237-0:83:2084","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32731:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2084","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:719:3568":{"id":"5:719:3568","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"b:2:3591-0:502:2866":{"id":"b:2:3591-0:502:2866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32732:2683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3589:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:502:2866","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3593:1640"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2453-0:480:2020":{"id":"b:2:2453-0:480:2020","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32732:2683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2447:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2020","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2455:3017"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:386:1161":{"id":"0:386:1161","crate_id":0,"name":"poll","span":{"filename":"src/upgrade.rs","begin":[229,4],"end":[242,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42377:2016","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13397:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45055:207","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:45034:150","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:377:2045":{"id":"0:377:2045","crate_id":0,"name":"poll_flush","span":{"filename":"src/upgrade.rs","begin":[194,4],"end":[196,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42377:2016","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13397:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45055:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:3015:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:208:2040":{"id":"0:208:2040","crate_id":0,"name":"advance","span":{"filename":"src/rt/io.rs","begin":[242,4],"end":[245,5]},"visibility":"public","docs":"Advance the `filled` cursor by `n` bytes.\n\n# Safety\n\nThe caller must take care that `n` more bytes have been initialized.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2453-0:83:2084":{"id":"b:2:2453-0:83:2084","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32732:2683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2447:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2084","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2455:3017"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:11-20:2742:1856":{"id":"0:11-20:2742:1856","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,74],"end":[96,81]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Version","name":"Version","id":"20:2742:1856","glob":false}}},"b:2:3591-0:83:2084":{"id":"b:2:3591-0:83:2084","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32732:2683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3589:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2084","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3593:1640"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:97":{"id":"0:97","crate_id":0,"name":null,"span":{"filename":"src/body/incoming.rs","begin":[313,0],"end":[335,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10026:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2084","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:98:722"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12981:35061":{"id":"2:12981:35061","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12592:3351","`DoubleEndedIterator`":"2:7973:131","prim@char":"1:12072:453","str::matches":"2:12978:2367"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:44347:7811","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12612:14973","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32731:237-0:188:2560":{"id":"a:2:32731:237-0:188:2560","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32731:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2560","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:381:722":{"id":"0:381:722","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[208,4],"end":[210,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10001:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9982:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13021:28114":{"id":"2:13021:28114","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12987:35063":{"id":"2:12987:35063","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12592:3351","`DoubleEndedIterator`":"2:7973:131","prim@char":"1:12072:453","str::match_indices":"2:12984:35062"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:44293:7809","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12612:14973","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2769:138":{"id":"2:2769:138","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2740:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"b:2:2771-0:188:2560":{"id":"b:2:2771-0:188:2560","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2730:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2740:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2560","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2774:138","2:2775:1625"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:7-20:2525:1852":{"id":"0:7-20:2525:1852","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,38],"end":[96,45]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Request","name":"Request","id":"20:2525:1852","glob":false}}},"2:12931:32335":{"id":"2:12931:32335","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:44379:3593","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:145":{"id":"0:145","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[525,0],"end":[529,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10031:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:146:722"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2766-0:480:2020":{"id":"b:2:2766-0:480:2020","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2740:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2736:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2020","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2769:138","2:2770:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2453-0:365:2859":{"id":"b:2:2453-0:365:2859","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32732:2683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2447:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2859","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2455:3017"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:344:1865":{"id":"0:344:1865","crate_id":0,"name":"upgrade","span":{"filename":"src/upgrade.rs","begin":[1,0],"end":[409,1]},"visibility":"public","docs":"HTTP Upgrades\n\nThis module deals with managing [HTTP Upgrades][mdn] in hyper. Since\nseveral concepts in HTTP allow for first talking HTTP, and then converting\nto a different protocol, this module conflates them into a single API.\nThose include:\n\n- HTTP/1.1 Upgrades\n- HTTP `CONNECT`\n\nYou are responsible for any other pre-requisites to establish an upgrade,\nsuch as sending the appropriate headers, methods, and status codes. You can\nthen use [`on`][] to grab a `Future` which will resolve to the upgraded\nconnection object, or an error if the upgrade fails.\n\n[mdn]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism\n\n# Client\n\nSending an HTTP upgrade from the [`client`](super::client) involves setting\neither the appropriate method, if wanting to `CONNECT`, or headers such as\n`Upgrade` and `Connection`, on the `http::Request`. Once receiving the\n`http::Response` back, you must check for the specific information that the\nupgrade is agreed upon by the server (such as a `101` status code), and then\nget the `Future` from the `Response`.\n\n# Server\n\nReceiving upgrade requests in a server requires you to check the relevant\nheaders in a `Request`, and if an upgrade should be done, you then send the\ncorresponding headers in a response. To then wait for hyper to finish the\nupgrade, you call `on()` with the `Request`, and then can spawn a task\nawaiting it.\n\n# Example\n\nSee [this example][example] showing how upgrades work with both\nClients and Servers.\n\n[example]: https://github.com/hyperium/hyper/blob/master/examples/upgrades.rs","links":{"`on`":"0:367:1102"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:365:2859","0:498:2862","0:502:2866","0:367:1102"],"is_stripped":false}}},"a:2:32788:2015-0:365:2859":{"id":"a:2:32788:2015-0:365:2859","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32788:2015","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2859","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12899:879":{"id":"2:12899:879","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12072:453"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12992:35065":{"id":"2:12992:35065","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3591-0:365:2859":{"id":"b:2:3591-0:365:2859","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32732:2683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3589:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2859","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3593:1640"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:226:2041":{"id":"0:226:2041","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[360,4],"end":[366,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42377:2016","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13397:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45055:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3015:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2766-0:502:2866":{"id":"b:2:2766-0:502:2866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2740:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2736:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:502:2866","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2769:138","2:2770:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:497:2046":{"id":"0:497:2046","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42377:2016","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13397:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45055:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3015:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:488:2041":{"id":"0:488:2041","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42377:2016","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13397:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45055:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3015:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12911:26928":{"id":"2:12911:26928","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:42244:191"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42242:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10682:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10682:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3593:1640":{"id":"2:3593:1640","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:40029:2727","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:721:3570":{"id":"5:721:3570","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12908:35055":{"id":"2:12908:35055","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12902:35053":{"id":"2:12902:35053","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:343-0:313:2766":{"id":"0:343-0:313:2766","crate_id":0,"name":null,"span":{"filename":"src/service/mod.rs","begin":[36,0],"end":[36,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::util::service_fn","name":"service_fn","id":"0:313:2766","glob":false}}},"0:227:2042":{"id":"0:227:2042","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[368,4],"end":[374,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42377:2016","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13397:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8236:2044","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45055:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3015:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13025:28110":{"id":"2:13025:28110","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:372":{"id":"0:372","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[167,0],"end":[175,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:178:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2859","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:373:2031"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:498:2862":{"id":"0:498:2862","crate_id":0,"name":"OnUpgrade","span":{"filename":"src/upgrade.rs","begin":[74,0],"end":[76,1]},"visibility":"public","docs":"A future for a possible HTTP upgrade.\n\nIf no upgrade was available, or it doesn't succeed, yields an `Error`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:32731:237-0:498:2862","a:2:42366:3400-0:498:2862","a:2:2978:246-0:498:2862","a:2:32788:2015-0:498:2862","a:2:42367:3399-0:498:2862","b:2:2456-0:498:2862","b:2:13203-0:498:2862","b:2:2760-0:498:2862","b:2:2453-0:498:2862","b:2:3591-0:498:2862","b:2:2766-0:498:2862","b:2:2756-0:498:2862","b:2:2771-0:498:2862","b:5:717-0:498:2862","0:388","0:500","0:384"]}}},"2:2455:3017":{"id":"2:2455:3017","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12924:28305":{"id":"2:12924:28305","crate_id":2,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\n#![feature(split_at_checked)]\n\nlet mut s = \"Per Martin-Löf\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"2:12923:28304"},"attrs":["#[must_use]","#[unstable(feature = \"split_at_checked\", reason = \"new API\", issue =\n\"119128\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42242:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:495:2047":{"id":"0:495:2047","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:66-22:22:2017":{"id":"0:66-22:22:2017","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[22,16],"end":[22,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"bytes::Buf","name":"Buf","id":"22:22:2017","glob":false}}},"0:70-24:106:2082":{"id":"0:70-24:106:2082","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[25,0],"end":[25,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"http_body::SizeHint","name":"SizeHint","id":"24:106:2082","glob":false}}},"0:184:2047":{"id":"0:184:2047","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[84,4],"end":[86,5]},"visibility":"default","docs":"Returns whether this writer has an efficient `poll_write_vectored`\nimplementation.\n\nThe default implementation returns `false`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:205":{"id":"0:205","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[224,0],"end":[276,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2020","args":{"angle_bracketed":{"args":[{"lifetime":"'data"}],"bindings":[]}}}},"items":["0:207:2673","0:208:2040"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2760-0:83:2084":{"id":"b:2:2760-0:83:2084","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2733:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2084","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:749"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12910:2679":{"id":"2:12910:2679","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12089:1649"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42366:3400-0:120:138":{"id":"a:2:42366:3400-0:120:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42366:3400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:489:2042":{"id":"0:489:2042","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42377:2016","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13397:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8236:2044","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45055:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3015:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2456-0:83:2084":{"id":"b:2:2456-0:83:2084","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32732:2683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2450:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2084","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2458:27548"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12960:35059":{"id":"2:12960:35059","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12592:3351","str::split":"2:12951:26835","prim@char":"1:12072:453","`DoubleEndedIterator`":"2:7973:131","str::rsplit_terminator":"2:12963:35060"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:44175:7806","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:496:2045":{"id":"0:496:2045","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42377:2016","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13397:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45055:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3015:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12997:35068":{"id":"2:12997:35068","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13019:35074":{"id":"2:13019:35074","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12553:137","`FromStr`":"2:12552:3651"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42385:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12552:3651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12552:3651","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12921:28300":{"id":"2:12921:28300","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_checked":"2:12923:28304","str::split_at_mut":"2:12922:28301"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:182:2045":{"id":"0:182:2045","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[72,4],"end":[72,98]},"visibility":"default","docs":"Attempts to flush the object.\n\nOn success, returns `Poll::Ready(Ok(()))`.\n\nIf flushing cannot immediately complete, this method returns\n`Poll::Pending` and arranges for the current task (via `cx.waker()`) to\nreceive a notification when the object can make progress.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42377:2016","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13397:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45055:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:42385:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:3017:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:13029:35075":{"id":"2:13029:35075","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4771:35075"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:44424:7726","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13032:35076":{"id":"2:13032:35076","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4769:35076"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:44442:7725","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5585:35769":{"id":"5:5585:35769","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:286:2299","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:286:2299","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:483":{"id":"0:483","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[130,9],"end":[130,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10026:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2020","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:485:722"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32788:2015-0:502:2866":{"id":"a:2:32788:2015-0:502:2866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32788:2015","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32788:2015","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:502:2866","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:8-20:2545:1853":{"id":"0:8-20:2545:1853","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,47],"end":[96,55]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Response","name":"Response","id":"20:2545:1853","glob":false}}},"2:12966:28311":{"id":"2:12966:28311","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12072:453","self::pattern":"2:12592:3351","str::rsplitn":"2:12969:28313"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:44229:7661","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:197:2652":{"id":"0:197:2652","crate_id":0,"name":"filled","span":{"filename":"src/rt/io.rs","begin":[160,4],"end":[163,5]},"visibility":"public","docs":"Get a slice of the buffer that has been filled in with bytes.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13031:9602":{"id":"2:13031:9602","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4772:9602"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:44433:7605","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5604:28112":{"id":"5:5604:28112","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:13025:28110"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7622:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2456-0:365:2859":{"id":"b:2:2456-0:365:2859","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32732:2683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2450:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2859","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2458:27548"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2456-0:480:2020":{"id":"b:2:2456-0:480:2020","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32732:2683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2450:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2020","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2458:27548"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:370:2889":{"id":"0:370:2889","crate_id":0,"name":"downcast","span":{"filename":"src/upgrade.rs","begin":[152,4],"end":[164,5]},"visibility":"public","docs":"Tries to downcast the internal trait object to the type passed.\n\nOn success, returns the downcasted parts. On error, returns the\n`Upgraded` back.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42385:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Parts","id":"0:502:2866","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}},{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"0:178:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Write","id":"0:180:2021","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:32788:2015","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:241:2562":{"id":"0:241:2562","crate_id":0,"name":"Timer","span":{"filename":"src/rt/timer.rs","begin":[70,0],"end":[81,1]},"visibility":"public","docs":"A timer which provides timer-like functions.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:242:2730","0:243:2733","0:244:2736"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"2:12996:35067":{"id":"2:12996:35067","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12990:35064":{"id":"2:12990:35064","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:131:2379":{"id":"0:131:2379","crate_id":0,"name":"is_incomplete_message","span":{"filename":"src/error.rs","begin":[217,4],"end":[223,5]},"visibility":"public","docs":"Returns true if the connection closed before a message could complete.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:132:2233":{"id":"0:132:2233","crate_id":0,"name":"is_body_write_aborted","span":{"filename":"src/error.rs","begin":[226,4],"end":[238,5]},"visibility":"public","docs":"Returns true if the body write was aborted.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:218:2031":{"id":"0:218:2031","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[303,4],"end":[309,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42377:2016","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13397:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2020","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45055:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3015:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13205:199":{"id":"2:13205:199","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"Future","id":"2:45034:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"b:2:2766-0:120:138":{"id":"b:2:2766-0:120:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2740:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2736:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2769:138","2:2770:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2756-0:502:2866":{"id":"b:2:2756-0:502:2866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2733:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2730:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:502:2866","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2759:2237"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:509:722":{"id":"0:509:722","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[82,9],"end":[82,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10001:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9982:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:242:2730":{"id":"0:242:2730","crate_id":0,"name":"sleep","span":{"filename":"src/rt/timer.rs","begin":[72,4],"end":[72,63]},"visibility":"default","docs":"Return a future that resolves in `duration` time.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["duration",{"resolved_path":{"name":"Duration","id":"2:44891:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Pin","id":"2:42377:2016","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:286:2299","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Sleep","id":"0:245:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:2:42366:3400-0:188:2560":{"id":"a:2:42366:3400-0:188:2560","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42366:3400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2560","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:12907:27651":{"id":"2:12907:27651","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12140:14975"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5600:35772":{"id":"5:5600:35772","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7622:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7622:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2766-0:498:2862":{"id":"b:2:2766-0:498:2862","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2740:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2736:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2862","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2769:138","2:2770:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12978:2367":{"id":"2:12978:2367","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12592:3351","`DoubleEndedIterator`":"2:7973:131","prim@char":"1:12072:453","str::rmatches":"2:12981:35061"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:44329:7810","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13024:28111":{"id":"2:13024:28111","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:95:2153":{"id":"0:95:2153","crate_id":0,"name":"is_end_stream","span":{"filename":"src/body/incoming.rs","begin":[276,4],"end":[286,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:373:2031":{"id":"0:373:2031","crate_id":0,"name":"poll_read","span":{"filename":"src/upgrade.rs","begin":[168,4],"end":[174,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42377:2016","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13397:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2020","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45055:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:3015:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:317:2820":{"id":"0:317:2820","crate_id":0,"name":"ServiceFn","span":{"filename":"src/service/util.rs","begin":[42,0],"end":[45,1]},"visibility":"public","docs":"Service returned by [`service_fn`]","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}}},"0:94:2157":{"id":"0:94:2157","crate_id":0,"name":"poll_frame","span":{"filename":"src/body/incoming.rs","begin":[187,4],"end":[274,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42377:2016","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13397:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45055:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Option","id":"2:42242:194","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:42385:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Frame","id":"24:89:2081","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Data","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"24:42:2080","args":null}}}}],"bindings":[]}}}}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"24:42:2080","args":null}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12969:28313":{"id":"2:12969:28313","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12072:453","str::splitn":"2:12966:28311","self::pattern":"2:12592:3351"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:44247:7662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12612:14973","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13026:29501":{"id":"2:13026:29501","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:918:39692"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:261-0:241:2562":{"id":"0:261-0:241:2562","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[15,29],"end":[15,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::timer::Timer","name":"Timer","id":"0:241:2562","glob":false}}},"0:404:2882":{"id":"0:404:2882","crate_id":0,"name":"CanUpgrade","span":{"filename":"src/upgrade.rs","begin":[322,4],"end":[324,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:405:2884"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"2:12933:33016":{"id":"2:12933:33016","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:44417:7675","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5584":{"id":"5:5584","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5585:35769","5:5586:3108","5:5589:35770","5:5592:35771","5:5600:35772","5:5601:35773","5:5602:3618","5:5603:28113","5:5604:28112"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:96:2177":{"id":"0:96:2177","crate_id":0,"name":"size_hint","span":{"filename":"src/body/incoming.rs","begin":[288,4],"end":[310,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SizeHint","id":"24:106:2082","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:405:2884":{"id":"0:405:2884","crate_id":0,"name":"on_upgrade","span":{"filename":"src/upgrade.rs","begin":[323,8],"end":[323,41]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2862","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:224":{"id":"0:224","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[355,0],"end":[387,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"DerefMut","id":"2:3203:2607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"","id":"2:3190:127","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Write","id":"0:180:2021","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["poll_write_vectored","is_write_vectored"],"trait":{"name":"Write","id":"0:180:2021","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"std::pin::Pin","id":"2:42377:2016","args":{"angle_bracketed":{"args":[{"type":{"generic":"P"}}],"bindings":[]}}}},"items":["0:226:2041","0:227:2042","0:228:2047","0:229:2045","0:230:2046"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:10-20:2687:1855":{"id":"0:10-20:2687:1855","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,69],"end":[96,72]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Uri","name":"Uri","id":"20:2687:1855","glob":false}}},"2:12922:28301":{"id":"2:12922:28301","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12921:28300","str::split_at_mut_checked":"2:12924:28305"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5601:35773":{"id":"5:5601:35773","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:286:2299","`String`":"5:7622:243"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:286:2299","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7622:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2770:1627":{"id":"2:2770:1627","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42385:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2740:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:204:722":{"id":"0:204:722","crate_id":0,"name":"fmt","span":{"filename":"src/rt/io.rs","begin":[215,4],"end":[221,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10001:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9982:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12926:7676":{"id":"2:12926:7676","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12072:453"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:44095:7668","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3591-0:188:2560":{"id":"b:2:3591-0:188:2560","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32732:2683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3589:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2560","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3593:1640"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13016:35073":{"id":"2:13016:35073","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12072:453","self::pattern":"2:12592:3351"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12612:14973","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12975:28316":{"id":"2:12975:28316","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42242:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12612:14973","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:502:2866":{"id":"0:502:2866","crate_id":0,"name":"Parts","span":{"filename":"src/upgrade.rs","begin":[83,0],"end":[96,1]},"visibility":"public","docs":"The deconstructed parts of an [`Upgraded`] type.\n\nIncludes the original IO type, and a read buffer of bytes that the\nHTTP state machine may have already read before completing an upgrade.","links":{"`Upgraded`":"0:365:2859"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:504:2008","0:505:2874"],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:32731:237-0:502:2866","a:2:42366:3400-0:502:2866","a:2:2978:246-0:502:2866","a:2:32788:2015-0:502:2866","a:2:42367:3399-0:502:2866","b:2:2456-0:502:2866","b:2:2760-0:502:2866","b:2:2453-0:502:2866","b:2:3591-0:502:2866","b:2:2766-0:502:2866","b:2:2756-0:502:2866","b:2:2771-0:502:2866","0:507"]}}},"b:2:13203-0:498:2862":{"id":"b:2:13203-0:498:2862","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:45034:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoFuture","id":"2:13199:165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2862","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:13205:199","2:13206:165","2:13207:843"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"F"}}}},"a:2:32731:237-0:502:2866":{"id":"a:2:32731:237-0:502:2866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32731:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32731:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:502:2866","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:91":{"id":"0:91","crate_id":0,"name":null,"span":{"filename":"src/body/incoming.rs","begin":[183,0],"end":[311,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["is_end_stream","size_hint"],"trait":{"name":"Body","id":"24:42:2080","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2084","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:92:2156","0:93:138","0:94:2157","0:95:2153","0:96:2177"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:214":{"id":"0:214","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[294,0],"end":[296,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32732:2683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Read","id":"0:178:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:32788:2015","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:178:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"items":["0:487:2031"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:83:2084":{"id":"0:83:2084","crate_id":0,"name":"Incoming","span":{"filename":"src/body/incoming.rs","begin":[47,0],"end":[49,1]},"visibility":"public","docs":"A stream of `Bytes`, used when receiving bodies from the network.\n\nNote that Users should not instantiate this struct directly. When working with the hyper client,\n`Incoming` is returned to you in responses. Similarly, when operating with the hyper server,\nit is provided within requests.\n\n# Examples\n\n```rust,ignore\nasync fn echo(\n   req: Request<hyper::body::Incoming>,\n) -> Result<Response<BoxBody<Bytes, hyper::Error>>, hyper::Error> {\n   //Here, you can process `Incoming`\n}\n```","links":{},"attrs":["#[must_use = \"streams do nothing unless polled\"]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:32731:237-0:83:2084","a:2:42366:3400-0:83:2084","a:2:2978:246-0:83:2084","a:2:32788:2015-0:83:2084","a:2:42367:3399-0:83:2084","b:2:2456-0:83:2084","b:2:2760-0:83:2084","b:2:2453-0:83:2084","b:2:3591-0:83:2084","b:2:2766-0:83:2084","b:2:2756-0:83:2084","b:2:2771-0:83:2084","0:97","0:91"]}}},"b:2:2760-0:502:2866":{"id":"b:2:2760-0:502:2866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2733:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:502:2866","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2762:749"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:193":{"id":"0:193","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[135,0],"end":[212,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2560","args":{"angle_bracketed":{"args":[{"lifetime":"'data"}],"bindings":[]}}}},"items":["0:195:1045","0:196:2659","0:197:2652","0:198:2662"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2453-0:502:2866":{"id":"b:2:2453-0:502:2866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32732:2683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2447:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:502:2866","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2455:3017"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2760-0:480:2020":{"id":"b:2:2760-0:480:2020","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2733:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2020","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2762:749"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5603:28113":{"id":"5:5603:28113","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:13024:28111"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7622:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:376:2042":{"id":"0:376:2042","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/upgrade.rs","begin":[186,4],"end":[192,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42377:2016","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13397:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"io::IoSlice","id":"1:8236:2044","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45055:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:3015:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:378:2046":{"id":"0:378:2046","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/upgrade.rs","begin":[198,4],"end":[200,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42377:2016","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13397:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45055:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:3015:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:313:2766":{"id":"0:313:2766","crate_id":0,"name":"service_fn","span":{"filename":"src/service/util.rs","begin":[30,0],"end":[39,1]},"visibility":"public","docs":"Create a `Service` from a function.\n\n# Example\n\n```\nuse bytes::Bytes;\nuse hyper::{body, Request, Response, Version};\nuse http_body_util::Full;\nuse hyper::service::service_fn;\n\nlet service = service_fn(|req: Request<body::Incoming>| async move {\n    if req.version() == Version::HTTP_11 {\n        Ok(Response::new(Full::<Bytes>::from(\"Hello World\")))\n    } else {\n        // Note: it's usually better to return a Response\n        // with an appropriate StatusCode instead of an Err.\n        Err(\"not HTTP/1.1, abort connection\")\n    }\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"ServiceFn","id":"0:317:2820","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3218:141","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"crate::Request","id":"20:2525:1852","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}}],"output":{"generic":"S"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:45034:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2978:246-0:365:2859":{"id":"a:2:2978:246-0:365:2859","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2978:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2859","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:2:32788:2015-0:480:2020":{"id":"a:2:32788:2015-0:480:2020","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32788:2015","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2020","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12943:2636":{"id":"2:12943:2636","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:42244:191","prim@char":"1:12072:453","self::pattern":"2:12592:3351"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42242:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:265:1864":{"id":"0:265:1864","crate_id":0,"name":"service","span":{"filename":"src/service/mod.rs","begin":[1,0],"end":[36,31]},"visibility":"public","docs":"Asynchronous Services\n\nA [`Service`] is a trait representing an asynchronous\nfunction of a request to a response. It's similar to\n`async fn(Request) -> Result<Response, Error>`.\n\nThe argument and return value isn't strictly required to be for HTTP.\nTherefore, hyper uses several \"trait aliases\" to reduce clutter around\nbounds. These are:\n\n- `HttpService`: This is blanketly implemented for all types that\n  implement `Service<http::Request<B1>, Response = http::Response<B2>>`.\n\n# HttpService\n\nIn hyper, especially in the server setting, a `Service` is usually bound\nto a single connection. It defines how to respond to **all** requests that\nconnection will receive.\n\nThe helper [`service_fn`] should be sufficient for most cases, but\nif you need to implement `Service` for a type manually, you can follow the example\nin `service_struct_impl.rs`.","links":{"`service_fn`":"0:313:2766"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:343-0:313:2766"],"is_stripped":false}}},"2:12994:35066":{"id":"2:12994:35066","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:188:2560":{"id":"0:188:2560","crate_id":0,"name":"ReadBuf","span":{"filename":"src/rt/io.rs","begin":[121,0],"end":[125,1]},"visibility":"public","docs":"A wrapper around a byte buffer that is incrementally filled and initialized.\n\nThis type is a sort of \"double cursor\". It tracks three regions in the\nbuffer: a region at the beginning of the buffer that has been logically\nfilled with data, a region that has been initialized at some point but not\nyet logically filled, and a region at the end that may be uninitialized.\nThe filled region is guaranteed to be a subset of the initialized region.\n\nIn summary, the contents of the buffer can be visualized as:\n\n```not_rust\n[             capacity              ]\n[ filled |         unfilled         ]\n[    initialized    | uninitialized ]\n```\n\nIt is undefined behavior to de-initialize any bytes from the uninitialized\nregion, since it is merely unknown whether this region is uninitialized or\nnot, and if part of it turns out to be initialized, it must stay initialized.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:193","a:2:32731:237-0:188:2560","a:2:42366:3400-0:188:2560","a:2:2978:246-0:188:2560","a:2:32788:2015-0:188:2560","a:2:42367:3399-0:188:2560","b:2:2456-0:188:2560","b:2:2760-0:188:2560","b:2:2453-0:188:2560","b:2:3591-0:188:2560","b:2:2766-0:188:2560","b:2:2756-0:188:2560","b:2:2771-0:188:2560","0:202"]}}},"0:127:2372":{"id":"0:127:2372","crate_id":0,"name":"is_parse_status","span":{"filename":"src/error.rs","begin":[187,4],"end":[189,5]},"visibility":"public","docs":"Returns true if this was an HTTP parse error caused by an invalid response status code or\nreason phrase.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5586:3108":{"id":"5:5586:3108","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7622:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7622:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:129:2376":{"id":"0:129:2376","crate_id":0,"name":"is_canceled","span":{"filename":"src/error.rs","begin":[197,4],"end":[199,5]},"visibility":"public","docs":"Returns true if this was about a `Request` that was canceled.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2978:246-0:120:138":{"id":"a:2:2978:246-0:120:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2978:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:216":{"id":"0:216","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[298,0],"end":[310,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"DerefMut","id":"2:3203:2607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"","id":"2:3190:127","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"0:178:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:178:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"std::pin::Pin","id":"2:42377:2016","args":{"angle_bracketed":{"args":[{"type":{"generic":"P"}}],"bindings":[]}}}},"items":["0:218:2031"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3591-0:120:138":{"id":"b:2:3591-0:120:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32732:2683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3589:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3593:1640"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42367:3399-0:498:2862":{"id":"a:2:42367:3399-0:498:2862","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42367:3399","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2862","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:220":{"id":"0:220","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[347,0],"end":[349,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32732:2683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Write","id":"0:180:2021","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:32788:2015","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["poll_write_vectored","is_write_vectored"],"trait":{"name":"Write","id":"0:180:2021","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Box","id":"5:286:2299","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:488:2041","0:489:2042","0:490:2047","0:491:2045","0:492:2046"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:133:2382":{"id":"0:133:2382","crate_id":0,"name":"is_timeout","span":{"filename":"src/error.rs","begin":[241,4],"end":[243,5]},"visibility":"public","docs":"Returns true if the error was caused by a timeout.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:490:2047":{"id":"0:490:2047","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:258-0:180:2021":{"id":"0:258-0:180:2021","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,49],"end":[14,54]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::Write","name":"Write","id":"0:180:2021","glob":false}}},"0:144:722":{"id":"0:144:722","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[515,4],"end":[522,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10001:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9982:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:379:2047":{"id":"0:379:2047","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/upgrade.rs","begin":[202,4],"end":[204,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42367:3399-0:365:2859":{"id":"a:2:42367:3399-0:365:2859","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42367:3399","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2859","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:500":{"id":"0:500","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[73,9],"end":[73,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2469:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2862","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:501:457"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:493:2041":{"id":"0:493:2041","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42377:2016","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13397:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45055:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3015:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:98:722":{"id":"0:98:722","crate_id":0,"name":"fmt","span":{"filename":"src/body/incoming.rs","begin":[314,4],"end":[334,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10001:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9982:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2771-0:480:2020":{"id":"b:2:2771-0:480:2020","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2730:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2740:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2020","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2774:138","2:2775:1625"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2456-0:120:138":{"id":"b:2:2456-0:120:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32732:2683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2450:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2458:27548"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:169:2558":{"id":"0:169:2558","crate_id":0,"name":"bounds","span":{"filename":"src/rt/bounds.rs","begin":[1,0],"end":[109,1]},"visibility":"public","docs":"Trait aliases\n\nTraits in this module ease setting bounds and usually automatically\nimplemented by implementing another trait.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[],"is_stripped":false}}},"0:128:2374":{"id":"0:128:2374","crate_id":0,"name":"is_user","span":{"filename":"src/error.rs","begin":[192,4],"end":[194,5]},"visibility":"public","docs":"Returns true if this error was caused by user code.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:92:2156":{"id":"0:92:2156","crate_id":0,"name":"Data","span":{"filename":"src/body/incoming.rs","begin":[184,4],"end":[184,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Bytes","id":"22:395:2018","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:198:2662":{"id":"0:198:2662","crate_id":0,"name":"unfilled","span":{"filename":"src/rt/io.rs","begin":[167,4],"end":[177,5]},"visibility":"public","docs":"Get a cursor to the unfilled portion of the buffer.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'cursor","mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2020","args":{"angle_bracketed":{"args":[{"lifetime":"'cursor"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'cursor","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12947:3511":{"id":"2:12947:3511","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:42244:191","prim@char":"1:12072:453","self::pattern":"2:12592:3351"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42242:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12612:14973","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12919:35056":{"id":"2:12919:35056","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12078:1545","str::slice_mut_unchecked":"2:12920:35057","crate::ops::Index":"2:39861:3148"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2766-0:83:2084":{"id":"b:2:2766-0:83:2084","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2740:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2736:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2084","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2769:138","2:2770:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:230:2046":{"id":"0:230:2046","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[384,4],"end":[386,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42377:2016","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13397:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45055:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3015:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32731:237-0:498:2862":{"id":"a:2:32731:237-0:498:2862","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32731:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2862","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2762:749":{"id":"2:2762:749","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:504:2008":{"id":"0:504:2008","crate_id":0,"name":"io","span":{"filename":"src/upgrade.rs","begin":[85,4],"end":[85,13]},"visibility":"public","docs":"The original IO object used before the upgrade.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"T"}}},"0:485:722":{"id":"0:485:722","crate_id":0,"name":"fmt","span":{"filename":"src/rt/io.rs","begin":[130,9],"end":[130,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10001:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9982:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12901:35052":{"id":"2:12901:35052","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2978:246-0:83:2084":{"id":"a:2:2978:246-0:83:2084","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2978:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2084","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32788:2015-0:498:2862":{"id":"a:2:32788:2015-0:498:2862","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32788:2015","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2862","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2766-0:188:2560":{"id":"b:2:2766-0:188:2560","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2740:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2736:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2560","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2769:138","2:2770:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:255-0:178:2019":{"id":"0:255-0:178:2019","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,19],"end":[14,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::Read","name":"Read","id":"0:178:2019","glob":false}}},"0:229:2045":{"id":"0:229:2045","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[380,4],"end":[382,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42377:2016","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13397:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45055:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3015:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:243:2733":{"id":"0:243:2733","crate_id":0,"name":"sleep_until","span":{"filename":"src/rt/timer.rs","begin":[75,4],"end":[75,68]},"visibility":"default","docs":"Return a future that resolves at `deadline`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["deadline",{"resolved_path":{"name":"Instant","id":"1:9160:162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Pin","id":"2:42377:2016","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:286:2299","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Sleep","id":"0:245:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:365:2859":{"id":"0:365:2859","crate_id":0,"name":"Upgraded","span":{"filename":"src/upgrade.rs","begin":[66,0],"end":[68,1]},"visibility":"public","docs":"An upgraded HTTP connection.\n\nThis type holds a trait object internally of the original IO that\nwas used to speak HTTP before the upgrade. It can be used directly\nas a `Read` or `Write` for convenience.\n\nAlternatively, if the exact type is known, this can be deconstructed\ninto its parts.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:369","a:2:32731:237-0:365:2859","a:2:42366:3400-0:365:2859","a:2:2978:246-0:365:2859","a:2:32788:2015-0:365:2859","a:2:42367:3399-0:365:2859","b:2:2456-0:365:2859","b:2:2760-0:365:2859","b:2:2453-0:365:2859","b:2:3591-0:365:2859","b:2:2766-0:365:2859","b:2:2756-0:365:2859","b:2:2771-0:365:2859","0:372","0:374","0:380"]}}},"a:2:42367:3399-0:83:2084":{"id":"a:2:42367:3399-0:83:2084","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42367:3399","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2084","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:257-0:480:2020":{"id":"0:257-0:480:2020","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,34],"end":[14,47]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::ReadBufCursor","name":"ReadBufCursor","id":"0:480:2020","glob":false}}},"2:12972:28315":{"id":"2:12972:28315","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42242:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:501:457":{"id":"0:501:457","crate_id":0,"name":"clone","span":{"filename":"src/upgrade.rs","begin":[73,9],"end":[73,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2862","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:168:1303":{"id":"0:168:1303","crate_id":0,"name":"rt","span":{"filename":"src/rt/mod.rs","begin":[1,0],"end":[42,1]},"visibility":"public","docs":"Runtime components\n\nThe traits and types within this module are used to allow plugging in\nruntime types. These include:\n\n- Executors\n- Timers\n- IO transports","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:169:2558","0:255-0:178:2019","0:256-0:188:2560","0:257-0:480:2020","0:258-0:180:2021","0:260-0:245:2561","0:261-0:241:2562","0:262:2578"],"is_stripped":false}}},"b:2:2766-0:365:2859":{"id":"b:2:2766-0:365:2859","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2740:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2736:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2859","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2769:138","2:2770:1627"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42366:3400-0:83:2084":{"id":"a:2:42366:3400-0:83:2084","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42366:3400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2084","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:264:2581":{"id":"0:264:2581","crate_id":0,"name":"execute","span":{"filename":"src/rt/mod.rs","begin":[41,4],"end":[41,32]},"visibility":"default","docs":"Place the future into the executor to be run.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fut",{"generic":"Fut"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:69-24:89:2081":{"id":"0:69-24:89:2081","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[24,0],"end":[24,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"http_body::Frame","name":"Frame","id":"24:89:2081","glob":false}}},"a:2:42366:3400-0:365:2859":{"id":"a:2:42366:3400-0:365:2859","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42366:3400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2859","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:165:1862":{"id":"0:165:1862","crate_id":0,"name":"ext","span":{"filename":"src/ext/mod.rs","begin":[1,0],"end":[236,1]},"visibility":"public","docs":"HTTP extensions.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[],"is_stripped":false}}},"b:2:2771-0:502:2866":{"id":"b:2:2771-0:502:2866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2730:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2740:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:502:2866","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2774:138","2:2775:1625"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13010:35071":{"id":"2:13010:35071","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12072:453","self::pattern":"2:12592:3351"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12612:14973","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12934:28317":{"id":"2:12934:28317","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12072:453","self::pattern":"2:12592:3351"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12923:28304":{"id":"2:12923:28304","crate_id":2,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\n#![feature(split_at_checked)]\n\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"2:12924:28305"},"attrs":["#[must_use]","#[unstable(feature = \"split_at_checked\", reason = \"new API\", issue =\n\"119128\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42242:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2456-0:502:2866":{"id":"b:2:2456-0:502:2866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32732:2683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2450:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:502:2866","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2458:27548"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12954:28307":{"id":"2:12954:28307","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12072:453","self::pattern":"2:12592:3351"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12408:7656","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:143":{"id":"0:143","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[514,0],"end":[523,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10026:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:144:722"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:375:2041":{"id":"0:375:2041","crate_id":0,"name":"poll_write","span":{"filename":"src/upgrade.rs","begin":[178,4],"end":[184,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42377:2016","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13397:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45055:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:3015:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:207:2673":{"id":"0:207:2673","crate_id":0,"name":"as_mut","span":{"filename":"src/rt/io.rs","begin":[232,4],"end":[234,5]},"visibility":"public","docs":"Access the unfilled part of the buffer.\n\n# Safety\n\nThe caller must not uninitialize any bytes that may have been\ninitialized before.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"2:30937:2605","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:2775:1625":{"id":"2:2775:1625","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:42385:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2740:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:245:2561":{"id":"0:245:2561","crate_id":0,"name":"Sleep","span":{"filename":"src/rt/timer.rs","begin":[84,0],"end":[93,1]},"visibility":"public","docs":"A future returned by a `Timer`.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32731:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2978:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Future","id":"2:45034:150","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"tuple":[]}}}}]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"0:385:199":{"id":"0:385:199","crate_id":0,"name":"Output","span":{"filename":"src/upgrade.rs","begin":[227,4],"end":[227,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Result","id":"2:42385:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Upgraded","id":"0:365:2859","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"a:2:42366:3400-0:502:2866":{"id":"a:2:42366:3400-0:502:2866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42366:3400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42366:3400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:502:2866","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32731:237-0:365:2859":{"id":"a:2:32731:237-0:365:2859","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32731:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2859","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2756-0:365:2859":{"id":"b:2:2756-0:365:2859","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2733:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2730:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2859","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2759:2237"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2774:138":{"id":"2:2774:138","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32661:3092","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:12998:35069":{"id":"2:12998:35069","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12072:453","self::pattern":"2:12592:3351"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12617:14972","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:15-0:117:226":{"id":"0:15-0:117:226","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[101,30],"end":[101,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::error::Result","name":"Result","id":"0:117:226","glob":false}}},"2:2759:2237":{"id":"2:2759:2237","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2733:145"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:389:722":{"id":"0:389:722","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[246,4],"end":[248,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10001:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9982:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:12-20:1837:1857":{"id":"0:12-20:1837:1857","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[99,0],"end":[99,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"crate::http::HeaderMap","name":"HeaderMap","id":"20:1837:1857","glob":false}}},"b:2:2453-0:498:2862":{"id":"b:2:2453-0:498:2862","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32732:2683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2447:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2862","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2455:3017"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:492:2046":{"id":"0:492:2046","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42377:2016","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13397:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45055:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3015:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2453-0:188:2560":{"id":"b:2:2453-0:188:2560","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32732:2683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2447:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2560","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2455:3017"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:256-0:188:2560":{"id":"0:256-0:188:2560","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,25],"end":[14,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::ReadBuf","name":"ReadBuf","id":"0:188:2560","glob":false}}},"b:2:2756-0:498:2862":{"id":"b:2:2756-0:498:2862","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2733:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2730:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2862","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2759:2237"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:195:1045":{"id":"0:195:1045","crate_id":0,"name":"new","span":{"filename":"src/rt/io.rs","begin":[138,4],"end":[146,5]},"visibility":"public","docs":"Create a new `ReadBuf` with a slice of initialized bytes.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["raw",{"borrowed_ref":{"lifetime":"'data","mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13028:29503":{"id":"2:13028:29503","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:918:39692"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12932:35058":{"id":"2:12932:35058","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:44389:7812","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:494:2042":{"id":"0:494:2042","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42377:2016","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13397:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8236:2044","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45055:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3015:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:67-22:395:2018":{"id":"0:67-22:395:2018","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[22,21],"end":[22,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"bytes::Bytes","name":"Bytes","id":"22:395:2018","glob":false}}},"b:2:2756-0:83:2084":{"id":"b:2:2756-0:83:2084","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2733:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2730:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2084","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2759:2237"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:64:1861":{"id":"0:64:1861","crate_id":0,"name":"body","span":{"filename":"src/body/mod.rs","begin":[1,0],"end":[46,1]},"visibility":"public","docs":"Streaming bodies for Requests and Responses\n\nFor both [Clients](crate::client) and [Servers](crate::server), requests and\nresponses use streaming bodies, instead of complete buffering. This\nallows applications to not use memory they don't need, and allows exerting\nback-pressure on connections by only reading when asked.\n\nThere are two pieces to this in hyper:\n\n- **The [`Body`] trait** describes all possible bodies.\n  hyper allows any body type that implements `Body`, allowing\n  applications to have fine-grained control over their streaming.\n- **The [`Incoming`] concrete type**, which is an implementation\n  of `Body`, and returned by hyper as a \"receive stream\" (so, for server\n  requests and client responses).\n\nThere are additional implementations available in [`http-body-util`][],\nsuch as a `Full` or `Empty` body.\n\n[`http-body-util`]: https://docs.rs/http-body-util","links":{"`Body`":"24:42:2080","`Incoming`":"0:83:2084"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:66-22:22:2017","0:67-22:395:2018","0:68-24:42:2080","0:69-24:89:2081","0:70-24:106:2082","0:71-0:83:2084"],"is_stripped":false}}},"2:12915:28277":{"id":"2:12915:28277","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10682:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10682:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12917:2689":{"id":"2:12917:2689","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10682:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10682:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12928:1873":{"id":"2:12928:1873","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:44111:2018","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2771-0:120:138":{"id":"b:2:2771-0:120:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2730:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2740:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2774:138","2:2775:1625"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42367:3399-0:480:2020":{"id":"a:2:42367:3399-0:480:2020","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42367:3399","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2020","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2760-0:498:2862":{"id":"b:2:2760-0:498:2862","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2733:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2862","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2762:749"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:388":{"id":"0:388","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[245,0],"end":[249,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10026:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2862","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:389:722"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12930:33036":{"id":"2:12930:33036","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12929:33026"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:44408:7814","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:384":{"id":"0:384","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[226,0],"end":[243,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Future","id":"2:45034:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2862","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:385:199","0:386:1161"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12984:35062":{"id":"2:12984:35062","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12592:3351","`DoubleEndedIterator`":"2:7973:131","prim@char":"1:12072:453","str::rmatch_indices":"2:12987:35063"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:44275:7808","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:491:2045":{"id":"0:491:2045","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42377:2016","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13397:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45055:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3015:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:507":{"id":"0:507","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[82,9],"end":[82,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10026:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10026:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:502:2866","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:509:722"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:130:2264":{"id":"0:130:2264","crate_id":0,"name":"is_closed","span":{"filename":"src/error.rs","begin":[202,4],"end":[214,5]},"visibility":"public","docs":"Returns true if a sender's channel is closed.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:253:2597":{"id":"0:253:2597","crate_id":0,"name":"Sealed","span":{"filename":"src/rt/timer.rs","begin":[126,4],"end":[126,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":[]}}},"a:2:2978:246-0:188:2560":{"id":"a:2:2978:246-0:188:2560","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2978:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2560","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12951:26835":{"id":"2:12951:26835","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12592:3351","`DoubleEndedIterator`":"2:7973:131","prim@char":"1:12072:453","str::split_whitespace":"2:12929:33026","str::rsplit":"2:12957:28309"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:44125:3596","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:487:2031":{"id":"0:487:2031","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[295,4],"end":[295,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42377:2016","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13397:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2020","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45055:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3015:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:148:2387":{"id":"0:148:2387","crate_id":0,"name":"source","span":{"filename":"src/error.rs","begin":[532,4],"end":[537,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42242:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"dyn_trait":{"traits":[{"trait":{"name":"StdError","id":"2:2818:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13007:28318":{"id":"2:13007:28318","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12072:453","self::pattern":"2:12592:3351"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42242:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12612:14973","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:179:2031":{"id":"0:179:2031","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[38,4],"end":[42,42]},"visibility":"default","docs":"Attempts to read bytes into the `buf`.\n\nOn success, returns `Poll::Ready(Ok(()))` and places data in the\nunfilled portion of `buf`. If no data was read (`buf.remaining()` is\nunchanged), it implies that EOF has been reached.\n\nIf no data is available for reading, the method returns `Poll::Pending`\nand arranges for the current task (via `cx.waker()`) to receive a\nnotification when the object becomes readable or is closed.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42377:2016","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13397:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2020","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45055:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:42385:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:3017:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:2:32788:2015-0:83:2084":{"id":"a:2:32788:2015-0:83:2084","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32788:2015","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2084","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42366:3400-0:480:2020":{"id":"a:2:42366:3400-0:480:2020","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42366:3400","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2020","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:3591-0:480:2020":{"id":"b:2:3591-0:480:2020","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32732:2683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3589:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2020","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3593:1640"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12957:28309":{"id":"2:12957:28309","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12592:3351","`DoubleEndedIterator`":"2:7973:131","prim@char":"1:12072:453","str::split":"2:12951:26835"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:44143:7659","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12612:14973","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:178:2019":{"id":"0:178:2019","crate_id":0,"name":"Read","span":{"filename":"src/rt/io.rs","begin":[28,0],"end":[43,1]},"visibility":"public","docs":"Reads bytes from a source.\n\nThis trait is similar to `std::io::Read`, but supports asynchronous reads.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:179:2031"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:372","0:214","0:212","0:216"]}}},"2:12898":{"id":"2:12898","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12899:879","2:12900:2035","2:12901:35052","2:12902:35053","2:12904:35054","2:12907:27651","2:12908:35055","2:12909:333","2:12910:2679","2:12911:26928","2:12913:2526","2:12915:28277","2:12917:2689","2:12919:35056","2:12920:35057","2:12921:28300","2:12922:28301","2:12923:28304","2:12924:28305","2:12926:7676","2:12927:7823","2:12928:1873","2:12929:33026","2:12930:33036","2:12931:32335","2:12932:35058","2:12933:33016","2:12934:28317","2:12937:27763","2:12940:27765","2:12943:2636","2:12947:3511","2:12951:26835","2:12954:28307","2:12957:28309","2:12960:35059","2:12963:35060","2:12966:28311","2:12969:28313","2:12972:28315","2:12975:28316","2:12978:2367","2:12981:35061","2:12984:35062","2:12987:35063","2:12990:35064","2:12992:35065","2:12994:35066","2:12996:35067","2:12997:35068","2:12998:35069","2:13001:35070","2:13004:27616","2:13007:28318","2:13010:35071","2:13013:35072","2:13016:35073","2:13019:35074","2:13021:28114","2:13022:29498","2:13023:28115","2:13024:28111","2:13025:28110","2:13026:29501","2:13027:29502","2:13028:29503","2:13029:35075","2:13031:9602","2:13032:35076"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2756-0:480:2020":{"id":"b:2:2756-0:480:2020","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2733:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2730:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2020","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2759:2237"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12920:35057":{"id":"2:12920:35057","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12078:1545","crate::ops::IndexMut":"2:3253:3149","str::slice_unchecked":"2:12919:35056"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:71-0:83:2084":{"id":"0:71-0:83:2084","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[27,0],"end":[27,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::incoming::Incoming","name":"Incoming","id":"0:83:2084","glob":false}}},"0:202":{"id":"0:202","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[214,0],"end":[222,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10026:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2560","args":{"angle_bracketed":{"args":[{"lifetime":"'data"}],"bindings":[]}}}},"items":["0:204:722"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:374":{"id":"0:374","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[177,0],"end":[205,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["poll_write_vectored","is_write_vectored"],"trait":{"name":"Write","id":"0:180:2021","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2859","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:375:2041","0:376:2042","0:377:2045","0:378:2046","0:379:2047"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42367:3399-0:188:2560":{"id":"a:2:42367:3399-0:188:2560","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42367:3399","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2560","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13001:35070":{"id":"2:13001:35070","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12072:453","self::pattern":"2:12592:3351"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12940:27765":{"id":"2:12940:27765","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12072:453","self::pattern":"2:12592:3351"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12612:14973","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:222":{"id":"0:222","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[351,0],"end":[353,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32732:2683","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Write","id":"0:180:2021","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:32788:2015","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["poll_write_vectored","is_write_vectored"],"trait":{"name":"Write","id":"0:180:2021","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"items":["0:493:2041","0:494:2042","0:495:2047","0:496:2045","0:497:2046"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13206:165":{"id":"2:13206:165","crate_id":2,"name":"IntoFuture","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"F"}}}},"2:12963:35060":{"id":"2:12963:35060","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12592:3351","str::split":"2:12951:26835","prim@char":"1:12072:453","str::split_terminator":"2:12960:35059"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:44193:7807","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12597:7649","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12612:14973","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:486:2031":{"id":"0:486:2031","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[291,4],"end":[291,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42377:2016","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13397:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2020","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45055:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3015:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5860:1602":{"id":"5:5860:1602","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7622:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32788:2015-0:188:2560":{"id":"a:2:32788:2015-0:188:2560","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32788:2015","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2560","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:244:2736":{"id":"0:244:2736","crate_id":0,"name":"reset","span":{"filename":"src/rt/timer.rs","begin":[78,4],"end":[80,5]},"visibility":"default","docs":"Reset a future to resolve at `new_deadline` instead.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["sleep",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Pin","id":"2:42377:2016","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:286:2299","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Sleep","id":"0:245:2561","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}}}}],["new_deadline",{"resolved_path":{"name":"Instant","id":"1:9160:162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13022:29498":{"id":"2:13022:29498","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:40215:29456","Self::is_ascii":"2:13021:28114"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42242:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:40215:29456","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2458:27548":{"id":"2:2458:27548","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32731:237-0:120:138":{"id":"a:2:32731:237-0:120:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32731:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}}},"paths":{"25:13758:9505":{"crate_id":25,"path":["tokio","io","util","read_int","ReadU64"],"kind":"struct"},"27:2088:4421":{"crate_id":27,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:41025:7624":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"25:11684:9533":{"crate_id":25,"path":["tokio","io","util","write_int","WriteF32"],"kind":"struct"},"20:0:1849":{"crate_id":20,"path":["http"],"kind":"module"},"1:945:7361":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"1:10946:4134":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"2:44750:7679":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"17:14788:6337":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"25:3696:5295":{"crate_id":25,"path":["tokio","net","tcp","split","WriteHalf"],"kind":"struct"},"25:6123:5332":{"crate_id":25,"path":["tokio","runtime","time","handle","Handle"],"kind":"struct"},"6:5046:4589":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"2:44247:7662":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"6:7516:2401":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"27:5794:4702":{"crate_id":27,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:21372:33612":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"27:6326:8357":{"crate_id":27,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"25:7364:5367":{"crate_id":25,"path":["tokio","runtime","task","state","Snapshot"],"kind":"struct"},"6:6471:4909":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"6:6768:8503":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"25:4783:3928":{"crate_id":25,"path":["tokio","runtime","context","current","SetCurrentGuard"],"kind":"struct"},"1:8864:8068":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"1:6438:186":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"20:2045:5506":{"crate_id":20,"path":["http","header","map","RawLinks"],"kind":"struct"},"18:754:5653":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"27:7509:4984":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:48373:7946":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"16:3830:6850":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"1:10870:27624":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"25:1089:3698":{"crate_id":25,"path":["tokio","fs","file","State"],"kind":"enum"},"2:41470:3620":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:39952:214":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:40995:7746":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"17:13999:6169":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"17:10877:5802":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:11102:5820":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"26:973:5270":{"crate_id":26,"path":["mio","net","uds","datagram","UnixDatagram"],"kind":"struct"},"25:10877:37105":{"crate_id":25,"path":["tokio","util","try_lock","TryLock"],"kind":"struct"},"1:1590:7369":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"1:12089:1649":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"27:5302:4582":{"crate_id":27,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"1:12044:9608":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"5:4822:722":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"22:1089:3594":{"crate_id":22,"path":["bytes","buf","chain","Chain"],"kind":"struct"},"25:3689:5294":{"crate_id":25,"path":["tokio","net","tcp","split","ReadHalf"],"kind":"struct"},"6:4876:4504":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"16:2336:6789":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:9155:235":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:32820:116":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"27:7682:5020":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:44442:7725":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:12087:802":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"17:13173:6037":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"2:46970:7880":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"16:7355:7193":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"20:1847:3641":{"crate_id":20,"path":["http","header","map","Iter"],"kind":"struct"},"25:1137:5282":{"crate_id":25,"path":["tokio","fs","read_dir","DirEntry"],"kind":"struct"},"17:10155:5784":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"1:6624:3193":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"2:22542:9894":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"2:43874:7786":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"29:0:3200":{"crate_id":29,"path":["tokio_macros"],"kind":"module"},"17:15324:6514":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"17:11595:5871":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"16:6788:36489":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"16:4844:6869":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"17:14545:6270":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"25:101:3162":{"crate_id":25,"path":["tokio","future","poll_fn","PollFn"],"kind":"struct"},"20:2652:3675":{"crate_id":20,"path":["http","uri","path","PathAndQuery"],"kind":"struct"},"5:40:4029":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"6:5290:4708":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"20:2712:3608":{"crate_id":20,"path":["http","uri","ErrorKind"],"kind":"enum"},"1:10719:129":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"1:8931:3515":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"1:10747:31958":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"25:11537:9536":{"crate_id":25,"path":["tokio","io","util","write_int","WriteU32Le"],"kind":"struct"},"27:7167:4881":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"5:7635:7471":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"2:44026:7796":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"25:12539:3596":{"crate_id":25,"path":["tokio","io","util","split","Split"],"kind":"struct"},"16:6811:22470":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"17:15168:6476":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2:42291:174":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"16:2819:6816":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"27:524:4231":{"crate_id":27,"path":["libc","unix","timespec"],"kind":"struct"},"11:1923:7372":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"1:8478:8059":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"2:42182:5262":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"1:504:4047":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"27:9679:5249":{"crate_id":27,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"2:45157:7843":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"5:1161:36252":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"2:10001:144":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"1:3240:31427":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:3221:142":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"27:637:4265":{"crate_id":27,"path":["libc","unix","pollfd"],"kind":"struct"},"5:3732:4031":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"16:2641:6808":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"16:2489:6801":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"1:11424:8626":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"25:4466:5280":{"crate_id":25,"path":["tokio","net","unix","pipe","OpenOptions"],"kind":"struct"},"17:12300:22657":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"27:5543:4645":{"crate_id":27,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:43243:7230":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"1:4261:9738":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"5:7370:7461":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"25:10528:5441":{"crate_id":25,"path":["tokio","time","error","Elapsed"],"kind":"struct"},"25:2836:5302":{"crate_id":25,"path":["tokio","io","util","copy","CopyBuffer"],"kind":"struct"},"6:5174:4646":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"25:5712:5332":{"crate_id":25,"path":["tokio","runtime","scheduler","Handle"],"kind":"enum"},"2:728:190":{"crate_id":2,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"17:13272:6043":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"6:6811:5034":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"1:10887:8071":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"17:12201:5950":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"18:573:5609":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"17:10982:22545":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"25:13268:9515":{"crate_id":25,"path":["tokio","io","util","read_int","ReadU64Le"],"kind":"struct"},"1:939:7359":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"16:7523:6837":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"1:8614:3641":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"1:8954:3699":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:13525:9620":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:45055:207":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"25:258:2560":{"crate_id":25,"path":["tokio","io","read_buf","ReadBuf"],"kind":"struct"},"1:9017:3187":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"1:6227:3083":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"5:3028:36259":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"1:11579:5269":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:15:2288":{"crate_id":2,"path":["core","write"],"kind":"macro"},"6:6900:5053":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"18:735:26719":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"23:30:2597":{"crate_id":23,"path":["itoa","private","Sealed"],"kind":"trait"},"5:5050:3575":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"25:2845:119":{"crate_id":25,"path":["tokio","io","util","copy","Copy"],"kind":"struct"},"17:15078:6457":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"5:3018:36297":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"25:553:3916":{"crate_id":25,"path":["tokio","util","atomic_cell","AtomicCell"],"kind":"struct"},"1:8915:3641":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"2:32788:2015":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"5:2517:8516":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"26:668:3083":{"crate_id":26,"path":["mio","waker","Waker"],"kind":"struct"},"16:5601:22463":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"16:3600:5697":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"2:4250:14944":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:9472:4132":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"25:14406:37372":{"crate_id":25,"path":["tokio","io","util","buf_reader","_","__Origin"],"kind":"struct"},"25:9214:3235":{"crate_id":25,"path":["tokio","sync","task","atomic_waker","AtomicWaker"],"kind":"struct"},"17:14529:6268":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"19:0:1139":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"2:48344:7943":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"5:6954:4073":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"6:1517:4308":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:14489:6263":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"5:820:4034":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"18:515:5606":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"17:13606:6097":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"17:14284:6228":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"6:5477:4791":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"17:15655:6620":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"17:12443:5976":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"2:45047:227":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"16:7366:6834":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"25:4899:5332":{"crate_id":25,"path":["tokio","runtime","driver","Handle"],"kind":"struct"},"6:6524:4935":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"16:7176:36492":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"6:7314:5076":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"25:4414:5295":{"crate_id":25,"path":["tokio","net","unix","split","WriteHalf"],"kind":"struct"},"2:12552:3651":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"30:732:4211":{"crate_id":30,"path":["socket2","MsgHdrMut"],"kind":"struct"},"25:12125:9524":{"crate_id":25,"path":["tokio","io","util","write_int","WriteI8"],"kind":"struct"},"6:7348:5095":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:40683:7723":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"9:356:21465":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"27:0:884":{"crate_id":27,"path":["libc"],"kind":"module"},"17:11419:5800":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:3029:3128":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"16:5568:6889":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"1:8620:8066":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"30:441:4205":{"crate_id":30,"path":["socket2","sys","MaybeUninitSlice"],"kind":"struct"},"16:6610:7063":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"27:8440:5122":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"17:15102:6461":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"27:7663:5018":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"17:15582:6599":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"17:13553:6083":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"17:14463:6261":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:40912:3594":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"2:22815:7692":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"6:465:4220":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"25:7360:8380":{"crate_id":25,"path":["tokio","runtime","task","raw","RawTask"],"kind":"struct"},"0:265:1864":{"crate_id":0,"path":["hyper","service"],"kind":"module"},"8:0:2923":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"1:6068:220":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"1:2671:4100":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"17:12056:5938":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"5:7645:7472":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"27:7433:4947":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"6:7359:5100":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"17:12328:5958":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"25:6046:5350":{"crate_id":25,"path":["tokio","runtime","time","entry","StateCell"],"kind":"struct"},"25:13072:9519":{"crate_id":25,"path":["tokio","io","util","read_int","ReadI64Le"],"kind":"struct"},"17:10092:22534":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"25:11782:9531":{"crate_id":25,"path":["tokio","io","util","write_int","WriteI64"],"kind":"struct"},"17:15190:6482":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:21362:3419":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:41489:7636":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:46025:7844":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"25:12587:2334":{"crate_id":25,"path":["tokio","io","util","shutdown","Shutdown"],"kind":"struct"},"11:0:2926":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"16:5959:21576":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"17:11841:5899":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"27:719:4281":{"crate_id":27,"path":["libc","unix","tms"],"kind":"struct"},"2:42513:97":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:5713:2085":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"16:4937:6872":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2:42385:226":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2:3424:147":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"7:78:21444":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"6:7389:5122":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"25:10981:2561":{"crate_id":25,"path":["tokio","time","sleep","Sleep"],"kind":"struct"},"1:5527:115":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"1:12072:453":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"6:8197:5238":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:22408:15205":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"function"},"25:10813:37111":{"crate_id":25,"path":["tokio","util","sync_wrapper","SyncWrapper"],"kind":"struct"},"25:4767:3934":{"crate_id":25,"path":["tokio","runtime","context","scoped","set","Reset"],"kind":"struct"},"25:12636:5465":{"crate_id":25,"path":["tokio","io","util","read_until","ReadUntil"],"kind":"struct"},"25:10142:37886":{"crate_id":25,"path":["tokio","task","task_local","ScopeInnerErr"],"kind":"enum"},"2:44035:7797":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"16:2979:6841":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"6:485:4231":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"1:8236:2044":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"6:5014:4574":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"17:12399:5970":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"25:10185:4003":{"crate_id":25,"path":["tokio","task","join_set","JoinSet"],"kind":"struct"},"6:7429:5125":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"27:8347:5094":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:48364:7945":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"25:6265:5359":{"crate_id":25,"path":["tokio","runtime","time","source","TimeSource"],"kind":"struct"},"2:32701:7162":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"2:3190:127":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"17:11547:5735":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"16:5316:5784":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"20:483:2597":{"crate_id":20,"path":["http","header","map","as_header_name","Sealed"],"kind":"trait"},"16:7103:36491":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"1:2032:198":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"25:11145:9544":{"crate_id":25,"path":["tokio","io","util","write_int","WriteF64Le"],"kind":"struct"},"17:15456:6548":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"30:850:4217":{"crate_id":30,"path":["socket2","TcpKeepalive"],"kind":"struct"},"17:12792:5756":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"16:6292:7009":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"5:4065:4015":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"2:12663:14980":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"27:5664:4672":{"crate_id":27,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"17:13581:6093":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"27:5843:4711":{"crate_id":27,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"26:769:5267":{"crate_id":26,"path":["mio","net","tcp","listener","TcpListener"],"kind":"struct"},"25:9578:3700":{"crate_id":25,"path":["tokio","sync","mpsc","error","TryRecvError"],"kind":"enum"},"5:7528:9618":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"17:11497:5854":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"16:8012:7265":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"25:9530:3228":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","Semaphore"],"kind":"struct"},"25:543:3658":{"crate_id":25,"path":["tokio","trace","async_trace_leaf","Trace"],"kind":"struct"},"1:4825:9730":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"5:3024:36260":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"5:7362:3515":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:10031:130":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"25:5412:8379":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","queue","Steal"],"kind":"struct"},"25:4385:5270":{"crate_id":25,"path":["tokio","net","unix","datagram","socket","UnixDatagram"],"kind":"struct"},"14:220:7354":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"18:608:5624":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"14:31:7349":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:47544:7902":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"17:11743:5883":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"25:9652:3225":{"crate_id":25,"path":["tokio","sync","notify","Notify"],"kind":"struct"},"2:12354:7673":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"27:9246:8367":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"17:13473:6061":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"1:1574:3641":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"17:13844:6146":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"22:106:3088":{"crate_id":22,"path":["bytes","buf","buf_mut","BufMut"],"kind":"trait"},"1:4550:9740":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"11:832:5491":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"6:6880:5039":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"17:12724:22535":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"25:12076:9525":{"crate_id":25,"path":["tokio","io","util","write_int","WriteU16"],"kind":"struct"},"27:5375:4600":{"crate_id":27,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"25:7455:5395":{"crate_id":25,"path":["tokio","runtime","handle","TryCurrentError"],"kind":"struct"},"25:13366:9513":{"crate_id":25,"path":["tokio","io","util","read_int","ReadU16Le"],"kind":"struct"},"25:10487:5434":{"crate_id":25,"path":["tokio","time","clock","Clock"],"kind":"struct"},"5:7462:3515":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2:42450:196":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"2:42020:7644":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"27:5773:4694":{"crate_id":27,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:12140:14975":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"17:12647:5991":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"25:11194:9543":{"crate_id":25,"path":["tokio","io","util","write_int","WriteF32Le"],"kind":"struct"},"1:5132:7978":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"25:7489:5396":{"crate_id":25,"path":["tokio","runtime","thread_id","ThreadId"],"kind":"struct"},"25:5687:3698":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","idle","State"],"kind":"struct"},"1:7822:9649":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"17:13235:6040":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"2:12408:7656":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"27:6082:4765":{"crate_id":27,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"17:10612:5797":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"6:5376:4730":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"5:4911:217":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"6:7452:5132":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:9964:4200":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"1:5834:3185":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"16:5238:6876":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"27:8657:2401":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"25:7862:220":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","Receiver"],"kind":"struct"},"1:4823:9729":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"6:6609:4989":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:10671:8620":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"1:10156:9020":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"25:11929:9528":{"crate_id":25,"path":["tokio","io","util","write_int","WriteU128"],"kind":"struct"},"17:15390:6533":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"1:8248:3592":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"25:13905:9502":{"crate_id":25,"path":["tokio","io","util","read_int","ReadI8"],"kind":"struct"},"2:47750:7934":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:44389:7812":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"16:2553:6804":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"17:10534:36495":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"2:45096:3082":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:2730:163":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:3113:3137":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"5:4297:3641":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:48080:7937":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"2:21416:33627":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"27:6101:4771":{"crate_id":27,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"2:46359:7858":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"27:9646:8374":{"crate_id":27,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"17:14503:6266":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"2:12108:15263":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:8894:8070":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"17:12278:5956":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"25:9766:3228":{"crate_id":25,"path":["tokio","sync","semaphore","Semaphore"],"kind":"struct"},"20:2545:1853":{"crate_id":20,"path":["http","response","Response"],"kind":"struct"},"27:9600:4804":{"crate_id":27,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:48501:7954":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"24:89:2081":{"crate_id":24,"path":["http_body","frame","Frame"],"kind":"struct"},"1:11399:7993":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"2:46322:7856":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"6:5598:4830":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:12331:7672":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"15:0:2929":{"crate_id":15,"path":["addr2line"],"kind":"module"},"2:22807:7691":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2:9503:92":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:22537:9896":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"1:2733:3607":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"6:7412:5123":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"16:5662:22464":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"2:22913:7705":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"2:46646:7871":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"16:3010:5692":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"27:6304:4803":{"crate_id":27,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"25:11831:9530":{"crate_id":25,"path":["tokio","io","util","write_int","WriteI32"],"kind":"struct"},"25:409:98":{"crate_id":25,"path":["tokio","loom","std","atomic_usize","AtomicUsize"],"kind":"struct"},"1:1581:4015":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:4614:3452":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"6:5407:1109":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"25:13611:9508":{"crate_id":25,"path":["tokio","io","util","read_int","ReadI32"],"kind":"struct"},"24:106:2082":{"crate_id":24,"path":["http_body","size_hint","SizeHint"],"kind":"struct"},"17:10622:36500":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"17:15039:6448":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"2:13397:117":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"2:3501:3078":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:32732:2683":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"2:22061:7681":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"25:621:183":{"crate_id":25,"path":["tokio","util","linked_list","LinkedList"],"kind":"struct"},"17:14386:6242":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"16:5346:6878":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"17:14356:6239":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"1:10676:5280":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"2:8438:33635":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:32715:3451":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"2:40963:7613":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"17:13785:6139":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2:33208:3125":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"2:44347:7811":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"6:5122:4624":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"0:0:1872":{"crate_id":0,"path":["hyper"],"kind":"module"},"25:9709:220":{"crate_id":25,"path":["tokio","sync","oneshot","Receiver"],"kind":"struct"},"25:11040:4010":{"crate_id":25,"path":["tokio","task","task_local","TaskLocalFuture"],"kind":"struct"},"20:2025:5503":{"crate_id":20,"path":["http","header","map","Bucket"],"kind":"struct"},"27:1666:16764":{"crate_id":27,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"17:14012:6171":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"16:536:6775":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"6:4971:4549":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"15:288:21557":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"21:0:3050":{"crate_id":21,"path":["fnv"],"kind":"module"},"17:10284:5657":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:9102:27557":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"17:12695:5995":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"11:2403:3642":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"2:40633:7718":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"10:36:8448":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"2:34706:3138":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2:9982:226":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"17:11115:5822":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"25:2879:2115":{"crate_id":25,"path":["tokio","io","util","empty","Empty"],"kind":"struct"},"2:8026:3053":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"24:0:1874":{"crate_id":24,"path":["http_body"],"kind":"module"},"20:2063:5558":{"crate_id":20,"path":["http","header","map","Link"],"kind":"enum"},"16:6268:6821":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"27:9545:5241":{"crate_id":27,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"2:44433:7605":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:2496:2008":{"crate_id":1,"path":["std","io"],"kind":"module"},"2:38458:3140":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:8363:9739":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"16:7376:7194":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"6:5352:8460":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"25:7536:8381":{"crate_id":25,"path":["tokio","runtime","metrics","mock","HistogramBuilder"],"kind":"struct"},"25:9272:3236":{"crate_id":25,"path":["tokio","sync","once_cell","OnceCell"],"kind":"struct"},"17:12516:5985":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"16:5759:6912":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"1:10689:8098":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"11:2443:4015":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"27:5101:4539":{"crate_id":27,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"25:8186:5404":{"crate_id":25,"path":["tokio","sync","mpsc","unbounded","UnboundedReceiver"],"kind":"struct"},"27:9213:5225":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"18:726:5648":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"1:9076:8077":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"1:2276:3583":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"10:0:2925":{"crate_id":10,"path":["adler"],"kind":"module"},"17:10661:5798":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"16:7414:7195":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:40042:7717":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"25:10881:4009":{"crate_id":25,"path":["tokio","util","try_lock","LockGuard"],"kind":"struct"},"17:16165:6750":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"11:687:3642":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"17:13674:6099":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"5:7572:33144":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"25:4473:26855":{"crate_id":25,"path":["tokio","net","unix","pipe","PipeEnd"],"kind":"enum"},"11:1566:21532":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"27:5968:4733":{"crate_id":27,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"16:6408:7023":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"17:10317:5658":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:2736:257":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"2:3024:3123":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"16:4968:6873":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"25:14322:37372":{"crate_id":25,"path":["tokio","io","util","buf_writer","_","__Origin"],"kind":"struct"},"5:7704:4062":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"1:9030:8073":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"5:7089:4078":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"22:613:3089":{"crate_id":22,"path":["bytes","bytes_mut","BytesMut"],"kind":"struct"},"2:7480:15188":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"1:11290:2017":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"5:661:7440":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"17:14111:6184":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"2:3056:3146":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"30:839:4204":{"crate_id":30,"path":["socket2","RecvFlags"],"kind":"struct"},"1:3472:3575":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"11:1910:7370":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"17:13363:6048":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"6:6678:5020":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:1585:4062":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"5:7382:4015":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"17:11392:5846":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"6:5244:4684":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"25:1380:219":{"crate_id":25,"path":["tokio","io","ready","Ready"],"kind":"struct"},"2:44526:7816":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:3749:9698":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"27:468:15885":{"crate_id":27,"path":["libc","unix","DIR"],"kind":"enum"},"27:4786:19796":{"crate_id":27,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"2:43521:7784":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"16:4907:6871":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"1:9150:234":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"2:43503:3698":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"6:6729:8491":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"1:7686:4130":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"27:9252:5226":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"1:8304:2084":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"6:7446:5130":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"1:12085:800":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"6:5320:4720":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"17:10457:139":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"17:14994:6439":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"1:3561:2021":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:42170:7764":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"2:45034:150":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"25:10610:37369":{"crate_id":25,"path":["tokio","util","linked_list","DrainFilter"],"kind":"struct"},"11:856:7359":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"2:30943:3114":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"16:4399:6855":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"20:1922:5508":{"crate_id":20,"path":["http","header","map","Entry"],"kind":"enum"},"5:713:249":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"6:5336:5209":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"22:1117:3595":{"crate_id":22,"path":["bytes","buf","take","Take"],"kind":"struct"},"17:14868:6398":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"6:4885:4509":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"17:11256:5832":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"20:2512:3650":{"crate_id":20,"path":["http","method","extension","AllocatedExtension"],"kind":"struct"},"11:2369:7375":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"6:491:4233":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"2:42788:91":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"5:1301:5508":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2:4481:7609":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"15:394:21568":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"6:5528:4792":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:12422:5972":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"1:5861:3186":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"27:5475:4624":{"crate_id":27,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"27:6059:4755":{"crate_id":27,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"1:11858:4141":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"17:16105:6734":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"16:7565:7202":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"5:7517:7464":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"25:5641:37519":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","worker","InjectGuard"],"kind":"struct"},"20:1713:138":{"crate_id":20,"path":["http","error","Error"],"kind":"struct"},"14:165:21538":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"2:39817:3158":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"2:46836:7877":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"14:202:14988":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"2:7944:3054":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"17:12671:5993":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"1:9299:3729":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"6:1671:4412":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"16:7152:7142":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:40644:7719":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:5649:5036":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"25:7276:37396":{"crate_id":25,"path":["tokio","runtime","handle","TryCurrentErrorKind"],"kind":"enum"},"18:531:5613":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"25:1080:129":{"crate_id":25,"path":["tokio","fs","dir_builder","DirBuilder"],"kind":"struct"},"2:13199:165":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"6:4942:4539":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"16:6737:7083":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"25:11074:37372":{"crate_id":25,"path":["tokio","task","task_local","_","__Origin"],"kind":"struct"},"17:14260:6225":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"25:3614:5267":{"crate_id":25,"path":["tokio","net","tcp","listener","TcpListener"],"kind":"struct"},"2:41047:7748":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"6:5212:4669":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"20:2102:5510":{"crate_id":20,"path":["http","header","name","HdrName"],"kind":"struct"},"11:811:4062":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"17:10251:5656":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"17:13015:5974":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"25:4512:3076":{"crate_id":25,"path":["tokio","loom","std","unsafe_cell","UnsafeCell"],"kind":"struct"},"1:8298:3593":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"27:6142:4786":{"crate_id":27,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"1:4987:9765":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"5:7402:7462":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"6:6670:5018":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"17:16138:6741":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"6:473:4225":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:2363:15205":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"2:22379:2597":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"17:11341:5843":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"1:1862:7970":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"18:491:5608":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"1:1809:662":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:2353:639":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"27:7125:4856":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"27:6320:8354":{"crate_id":27,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"17:13766:6134":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"11:1066:21531":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"6:6738:8493":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"1:3317:3617":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"1:9069:8076":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"2:40022:3153":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"6:7546:5191":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"16:6908:7109":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"17:261:5661":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"17:15058:6449":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2:2859:1852":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"17:15010:6440":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"1:4650:9758":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"5:6764:4031":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:42148:33106":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"18:0:2932":{"crate_id":18,"path":["memchr"],"kind":"module"},"2:42747:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"17:15368:6528":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"17:11799:5892":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"20:2052:5507":{"crate_id":20,"path":["http","header","map","ExtraValue"],"kind":"struct"},"25:6282:5331":{"crate_id":25,"path":["tokio","runtime","time","Driver"],"kind":"struct"},"1:7774:3683":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"6:8288:4805":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"25:13464:9511":{"crate_id":25,"path":["tokio","io","util","read_int","ReadF32"],"kind":"struct"},"2:22183:2597":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"25:9899:5429":{"crate_id":25,"path":["tokio","sync","watch","state","StateSnapshot"],"kind":"struct"},"2:13273:3162":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:482:4109":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"17:11467:5852":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"25:433:3184":{"crate_id":25,"path":["tokio","loom","std","barrier","Barrier"],"kind":"struct"},"11:787:5490":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"25:7461:3966":{"crate_id":25,"path":["tokio","runtime","runtime","Runtime"],"kind":"struct"},"16:2573:6805":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"25:8124:3977":{"crate_id":25,"path":["tokio","sync","mpsc","list","Rx"],"kind":"struct"},"6:5489:8466":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"1:10729:2044":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"17:15748:6648":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"16:6803:7088":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"1:8996:9787":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"1:9089:8079":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"6:1547:4328":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"26:820:5268":{"crate_id":26,"path":["mio","net","tcp","stream","TcpStream"],"kind":"struct"},"1:4123:9719":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"1:8549:8061":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:2687:2597":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"22:1111:5482":{"crate_id":22,"path":["bytes","buf","reader","Reader"],"kind":"struct"},"2:10045:3443":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"27:654:4268":{"crate_id":27,"path":["libc","unix","winsize"],"kind":"struct"},"6:517:4253":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"27:8616:5148":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"16:6579:22469":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"17:14977:6437":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"18:651:5609":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"17:14575:5974":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"1:0:1537":{"crate_id":1,"path":["std"],"kind":"module"},"16:2995:21605":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"17:13877:6154":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"17:12683:5994":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"6:6763:8502":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"17:10170:5785":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"30:753:4199":{"crate_id":30,"path":["socket2","sockaddr","SockAddr"],"kind":"struct"},"1:4996:9766":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"25:10491:3648":{"crate_id":25,"path":["tokio","time","clock","Inner"],"kind":"struct"},"11:1603:7368":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"1:12023:8114":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"6:7602:5219":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"27:7270:4901":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:6621:8523":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"27:8796:5215":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"20:2428:5591":{"crate_id":20,"path":["http","header","value","ToStrError"],"kind":"struct"},"1:8278:3595":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"2:47094:7895":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"5:6944:4072":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"2:11637:7665":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"25:13513:9510":{"crate_id":25,"path":["tokio","io","util","read_int","ReadI128"],"kind":"struct"},"2:2733:145":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"25:10538:26892":{"crate_id":25,"path":["tokio","time","error","InsertError"],"kind":"enum"},"6:4870:4502":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"27:9279:5237":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"17:13064:6024":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:47360:7900":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"6:8006:8367":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"1:6151:4118":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"25:7415:2114":{"crate_id":25,"path":["tokio","runtime","builder","Kind"],"kind":"enum"},"2:44329:7810":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"2:40739:7728":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"27:1775:4313":{"crate_id":27,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"1:3579:3585":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"17:16187:6756":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"1:4011:9712":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"16:4462:6857":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"18:643:5609":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"25:4928:37387":{"crate_id":25,"path":["tokio","runtime","driver","IoHandle"],"kind":"enum"},"2:44541:7821":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2:44175:7806":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:40953:7742":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:7921:5736":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"1:6892:9811":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"2:43259:74":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"27:5189:4554":{"crate_id":27,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:10041:206":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"16:5846:6921":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"25:8573:2093":{"crate_id":25,"path":["tokio","sync","oneshot"],"kind":"module"},"1:11635:8108":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"25:3706:5318":{"crate_id":25,"path":["tokio","net","tcp","split_owned","OwnedReadHalf"],"kind":"struct"},"17:10828:36502":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"25:5767:5332":{"crate_id":25,"path":["tokio","runtime","io","driver","Handle"],"kind":"struct"},"25:9703:2085":{"crate_id":25,"path":["tokio","sync","oneshot","Sender"],"kind":"struct"},"25:11341:9540":{"crate_id":25,"path":["tokio","io","util","write_int","WriteI32Le"],"kind":"struct"},"27:492:4225":{"crate_id":27,"path":["libc","unix","utimbuf"],"kind":"struct"},"1:7976:129":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"20:2552:2866":{"crate_id":20,"path":["http","response","Parts"],"kind":"struct"},"2:8391:3643":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:32697:2341":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"27:8283:5071":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"1:2424:9675":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"5:7114:4081":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"1:8870:199":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"16:6141:36490":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"27:5455:4623":{"crate_id":27,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"25:9770:3229":{"crate_id":25,"path":["tokio","sync","semaphore","SemaphorePermit"],"kind":"struct"},"25:9666:5421":{"crate_id":25,"path":["tokio","sync","notify","AtomicNotification"],"kind":"struct"},"1:4069:9715":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"16:6282:7008":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:41013:7747":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"5:722:120":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"20:1968:5501":{"crate_id":20,"path":["http","header","map","ValueIterMut"],"kind":"struct"},"2:44853:8607":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"27:9635:8373":{"crate_id":27,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"17:11583:5867":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"25:12697:5467":{"crate_id":25,"path":["tokio","io","util","read_to_string","ReadToString"],"kind":"struct"},"17:15289:6503":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"1:8369:8048":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"17:14051:6176":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"2:38568:3142":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"2:11714:14969":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"2:3589:71":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"25:7377:5368":{"crate_id":25,"path":["tokio","runtime","blocking","pool","Spawner"],"kind":"struct"},"25:6257:5358":{"crate_id":25,"path":["tokio","runtime","time","entry","TimerHandle"],"kind":"struct"},"17:15635:6617":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"17:16198:6757":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"2:31507:3419":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"1:4718:5117":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"2:46692:7873":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"20:2448:1851":{"crate_id":20,"path":["http","method","Method"],"kind":"struct"},"2:47892:7935":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"20:2811:3066":{"crate_id":20,"path":["http","extensions","Extensions"],"kind":"struct"},"17:12494:5980":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"17:15769:6654":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"2:2001:189":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"17:4821:5687":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"26:0:3199":{"crate_id":26,"path":["mio"],"kind":"module"},"2:44399:7813":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"16:6244:22467":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"25:637:5276":{"crate_id":25,"path":["tokio","util","linked_list","Pointers"],"kind":"struct"},"17:11574:5864":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"16:7444:7198":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"18:680:5636":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"6:5266:4694":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"17:13972:5908":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"17:13455:6060":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"2:3449:33605":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"2:33932:3131":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"17:10044:22533":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"1:8012:2915":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:13221:33336":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:637:7962":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"1:12094:854":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"23:0:3051":{"crate_id":23,"path":["itoa"],"kind":"module"},"1:5720:7984":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"25:5005:5332":{"crate_id":25,"path":["tokio","runtime","scheduler","current_thread","Handle"],"kind":"struct"},"2:42985:3441":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"17:11702:5880":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"20:2742:1856":{"crate_id":20,"path":["http","version","Version"],"kind":"struct"},"27:7588:5002":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"6:6532:4940":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"25:6020:37866":{"crate_id":25,"path":["tokio","runtime","io","metrics","IoDriverMetrics"],"kind":"struct"},"2:48353:7944":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"16:7294:7181":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"2:13435:3080":{"crate_id":2,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"2:44275:7808":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:6507:3188":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"11:1891:4015":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"20:1178:2459":{"crate_id":20,"path":["http","status","InvalidStatusCode"],"kind":"struct"},"17:12711:138":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:41231:3595":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:47124:7896":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:2121:7476":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"2:4634:3076":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"25:10543:162":{"crate_id":25,"path":["tokio","time","instant","Instant"],"kind":"struct"},"17:11730:5882":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"1:10647:8093":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"2:7931:146":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:44555:7824":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:4784:9740":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"25:6249:3954":{"crate_id":25,"path":["tokio","runtime","time","entry","TimerEntry"],"kind":"struct"},"17:13252:6042":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"2:46169:7850":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"27:7878:5064":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"11:1883:3641":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"6:1485:4295":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:13248:205":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"25:4151:5262":{"crate_id":25,"path":["tokio","net","unix","socketaddr","SocketAddr"],"kind":"struct"},"1:2268:5282":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"6:8351:5249":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"16:6254:7005":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"2:44417:7675":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"17:15418:6540":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"1:867:5489":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"17:11324:5840":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:22793:33143":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"27:5337:4589":{"crate_id":27,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"25:730:3205":{"crate_id":25,"path":["tokio","select"],"kind":"macro"},"25:14338:5474":{"crate_id":25,"path":["tokio","io","util","buf_stream","BufStream"],"kind":"struct"},"6:6460:4901":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"17:11166:5825":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"6:5277:4702":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"5:2187:4047":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2:44620:7826":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:22394:9904":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"17:12557:5818":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"25:1397:3919":{"crate_id":25,"path":["tokio","io","poll_evented","PollEvented"],"kind":"struct"},"17:12043:5936":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"2:46340:7857":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"28:37:37931":{"crate_id":28,"path":["pin_project_lite","__private","AlwaysUnpin"],"kind":"struct"},"5:286:2299":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"11:2140:5498":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"6:7461:5136":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"16:6201:6819":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"2:44857:8608":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"16:3406:6845":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"17:12342:5963":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"1:12092:1648":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"6:5296:4711":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"20:2080:36526":{"crate_id":20,"path":["http","header","map","Danger"],"kind":"enum"},"17:12949:5683":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"27:1755:4308":{"crate_id":27,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"11:673:3641":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"2:4838:15032":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"27:1914:4357":{"crate_id":27,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"17:12993:22537":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"0:344:1865":{"crate_id":0,"path":["hyper","upgrade"],"kind":"module"},"11:351:36466":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"11:2542:8443":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"11:837:7358":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"16:2617:6807":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"2:7710:3177":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"17:15116:6462":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"25:10737:4004":{"crate_id":25,"path":["tokio","util","idle_notified_set","drain","AllEntries"],"kind":"struct"},"16:2749:6813":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"11:883:7362":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"1:11230:8106":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"2:39202:3144":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:8090:3608":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"25:9879:3699":{"crate_id":25,"path":["tokio","sync","watch","error","RecvError"],"kind":"struct"},"6:4985:4557":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:7749:2057":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"5:3236:7370":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"6:6915:5064":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"1:7987:8004":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"17:12251:5954":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"17:10018:22513":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"6:5146:4634":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"5:1332:5498":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"5:4456:3575":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"17:11269:22563":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"6:6756:8501":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"27:7531:4989":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:8215:2115":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:4:1122":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"17:11128:5775":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"25:3715:5319":{"crate_id":25,"path":["tokio","net","tcp","split_owned","ReuniteError"],"kind":"struct"},"25:9504:3700":{"crate_id":25,"path":["tokio","sync","broadcast","error","TryRecvError"],"kind":"enum"},"2:22728:7685":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"27:586:4253":{"crate_id":27,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"6:4800:4450":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"16:6849:7099":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"3:0:480":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"25:4448:5320":{"crate_id":25,"path":["tokio","net","unix","ucred","UCred"],"kind":"struct"},"6:5557:4814":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"16:2509:6802":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"25:2725:32335":{"crate_id":25,"path":["tokio","io","util","async_buf_read_ext","AsyncBufReadExt","lines"],"kind":"function"},"17:15151:6471":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:42204:7645":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"6:5483:8464":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"2:22462:15205":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"function"},"25:996:3583":{"crate_id":25,"path":["tokio","fs","read_to_string","read_to_string"],"kind":"function"},"25:7335:5390":{"crate_id":25,"path":["tokio","runtime","task","id","Id"],"kind":"struct"},"16:7609:7204":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"18:598:36510":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:8402:8050":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"27:8301:5076":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"6:5436:4765":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"1:1072:7366":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"20:2806:36584":{"crate_id":20,"path":["http","extensions","IdHasher"],"kind":"struct"},"6:5314:4719":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"6:6562:4963":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"6:5382:4733":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"17:9807:22517":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"2:31131:33093":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"17:12478:5979":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"25:5987:3945":{"crate_id":25,"path":["tokio","runtime","io","registration","Registration"],"kind":"struct"},"26:703:5264":{"crate_id":26,"path":["mio","io_source","IoSource"],"kind":"struct"},"17:11075:5818":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"1:11385:7992":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:46789:7876":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"17:13855:6147":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"25:4557:3925":{"crate_id":25,"path":["tokio","runtime","coop","with_budget","ResetGuard"],"kind":"struct"},"5:217:4030":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"27:5497:4633":{"crate_id":27,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"11:844:9619":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"16:6431:6827":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"17:10769:36498":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:44647:7678":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:4215:7607":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"16:6773:7085":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:3203:2607":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:48142:7938":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:10285:9691":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:44293:7809":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:34187:3134":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"27:4973:4509":{"crate_id":27,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"25:7855:3973":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","Permit"],"kind":"struct"},"6:4992:4560":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"27:5405:4615":{"crate_id":27,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"6:6621:4996":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"27:1856:4338":{"crate_id":27,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:4126:3575":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"16:8109:138":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"17:13814:6143":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"18:80:26708":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"27:7247:4900":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"1:3354:3612":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"17:13797:6140":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"25:14293:3605":{"crate_id":25,"path":["tokio","io","util","buf_writer","BufWriter"],"kind":"struct"},"1:3442:3620":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"25:4880:3648":{"crate_id":25,"path":["tokio","runtime","park","Inner"],"kind":"struct"},"1:3356:3613":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"25:10268:5432":{"crate_id":25,"path":["tokio","task","task_local","AccessError"],"kind":"struct"},"17:14449:6260":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"17:12621:5990":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"5:4137:3642":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"5:1820:4062":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"17:12213:5951":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"2:42827:98":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:10682:239":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"25:5998:5346":{"crate_id":25,"path":["tokio","runtime","io","scheduled_io","Waiters"],"kind":"struct"},"25:6325:2339":{"crate_id":25,"path":["tokio","runtime","task","core","Header"],"kind":"struct"},"1:8351:5262":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"30:806:4213":{"crate_id":30,"path":["socket2","Domain"],"kind":"struct"},"26:352:3083":{"crate_id":26,"path":["mio","sys","unix","waker","fdbased","Waker"],"kind":"struct"},"2:21384:33612":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"11:2383:3641":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"6:6650:5013":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"17:15931:6038":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"25:11292:9541":{"crate_id":25,"path":["tokio","io","util","write_int","WriteI64Le"],"kind":"struct"},"17:16093:6732":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"25:4919:37395":{"crate_id":25,"path":["tokio","runtime","driver","IoStack"],"kind":"enum"},"18:538:5616":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"16:7507:210":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"25:1645:3612":{"crate_id":25,"path":["tokio","io","stderr","Stderr"],"kind":"struct"},"5:5:1715":{"crate_id":5,"path":["alloc","vec"],"kind":"macro"},"6:6706:8487":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"6:7561:5199":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"17:12530:5987":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"27:5897:4720":{"crate_id":27,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"5:7599:7470":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"0:169:2558":{"crate_id":0,"path":["hyper","rt","bounds"],"kind":"module"},"20:2760:5594":{"crate_id":20,"path":["http","version","Http"],"kind":"enum"},"17:9938:22531":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"2:44424:7726":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:41255:7631":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"6:5643:4803":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:42552:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"26:131:5258":{"crate_id":26,"path":["mio","event","events","Events"],"kind":"struct"},"17:12863:6007":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"17:13538:6077":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"1:1040:5508":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"1:4720:5119":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"27:9606:4805":{"crate_id":27,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"27:7186:4883":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"20:1947:5498":{"crate_id":20,"path":["http","header","map","OccupiedEntry"],"kind":"struct"},"5:1486:3515":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"27:1737:4305":{"crate_id":27,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:4781:9767":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"25:8177:5405":{"crate_id":25,"path":["tokio","sync","mpsc","unbounded","WeakUnboundedSender"],"kind":"struct"},"6:5102:4616":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"2:44873:8612":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"27:5171:4549":{"crate_id":27,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"6:1723:4435":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:2516:201":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"5:7426:3515":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"17:10954:22544":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"17:13387:6052":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"17:11605:1856":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"25:2888:5306":{"crate_id":25,"path":["tokio","io","util","mem","Pipe"],"kind":"struct"},"5:3863:4062":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"11:1896:4062":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"6:7584:5215":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:13046:6021":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"27:8502:5125":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"25:3710:3923":{"crate_id":25,"path":["tokio","net","tcp","split_owned","OwnedWriteHalf"],"kind":"struct"},"27:5584:4650":{"crate_id":27,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"27:4936:4502":{"crate_id":27,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:5163:7978":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"26:429:8890":{"crate_id":26,"path":["mio","sys","unix","uds","socketaddr","AsciiEscaped"],"kind":"struct"},"2:44891:132":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"1:8966:3700":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"2:44684:7827":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:21627:9813":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"25:1442:5291":{"crate_id":25,"path":["tokio","io","async_fd","AsyncFdReadyMutGuard"],"kind":"struct"},"2:46137:7849":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2:42368:15255":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"25:11439:9538":{"crate_id":25,"path":["tokio","io","util","write_int","WriteU128Le"],"kind":"struct"},"2:22448:9905":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"16:7386:6835":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"25:12815:5470":{"crate_id":25,"path":["tokio","io","util","fill_buf","FillBuf"],"kind":"struct"},"27:8530:5130":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:41441:7633":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"20:684:5486":{"crate_id":20,"path":["http","header","value","InvalidHeaderValue"],"kind":"struct"},"2:43482:7776":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"25:9807:235":{"crate_id":25,"path":["tokio","sync","rwlock","write_guard","RwLockWriteGuard"],"kind":"struct"},"17:12659:5992":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"17:14855:6392":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"25:4442:5272":{"crate_id":25,"path":["tokio","net","unix","stream","UnixStream"],"kind":"struct"},"25:4403:5271":{"crate_id":25,"path":["tokio","net","unix","listener","UnixListener"],"kind":"struct"},"2:3224:143":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:46714:7874":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"25:7177:2057":{"crate_id":25,"path":["tokio","runtime","builder","Builder"],"kind":"struct"},"5:1517:5490":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"17:13832:6144":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"5:3275:34807":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"6:5283:4705":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"16:6077:6964":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"2:8082:179":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"17:11153:5801":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:1841:1196":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"5:7622:243":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"20:1957:2477":{"crate_id":20,"path":["http","header","map","ValueIter"],"kind":"struct"},"2:2521:135":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"1:3273:3614":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"17:10218:5655":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"6:5466:4786":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"6:8300:4807":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"25:1681:3575":{"crate_id":25,"path":["tokio","io","split","Guard"],"kind":"struct"},"17:16069:6727":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"17:11242:5830":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"20:2707:2462":{"crate_id":20,"path":["http","uri","InvalidUriParts"],"kind":"struct"},"2:1911:15215":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"16:5298:22462":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"17:16249:6767":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"27:703:4278":{"crate_id":27,"path":["libc","unix","itimerval"],"kind":"struct"},"1:7113:4126":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"6:497:4236":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"2:48410:7949":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"25:10914:8383":{"crate_id":25,"path":["tokio","util","cacheline","CachePadded"],"kind":"struct"},"2:33580:3127":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"25:11390:9539":{"crate_id":25,"path":["tokio","io","util","write_int","WriteI16Le"],"kind":"struct"},"20:2006:8384":{"crate_id":20,"path":["http","header","map","Pos"],"kind":"struct"},"17:15301:6509":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"13:109:36477":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"16:3741:6848":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"2:44845:8605":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"2:46199:7851":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"2:44111:2018":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"25:9782:3231":{"crate_id":25,"path":["tokio","sync","rwlock","owned_read_guard","OwnedRwLockReadGuard"],"kind":"struct"},"2:10462:4099":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"25:10500:138":{"crate_id":25,"path":["tokio","time","error","Error"],"kind":"struct"},"15:306:21558":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"16:7306:7182":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"27:7332:4922":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"1:11413:7995":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"1:12077:1512":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"5:816:102":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"27:9579:5243":{"crate_id":27,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"6:479:4228":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"5:143:3018":{"crate_id":5,"path":["alloc","boxed"],"kind":"module"},"5:6402:3084":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"1:893:4015":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:40876:3623":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"16:7335:6833":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"5:3241:34815":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"22:547:4012":{"crate_id":22,"path":["bytes","bytes","Shared"],"kind":"struct"},"17:14475:6262":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"17:15678:6633":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"28:43:3911":{"crate_id":28,"path":["pin_project_lite","__private","UnsafeDropInPlaceGuard"],"kind":"struct"},"27:6023:1109":{"crate_id":27,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"5:2079:2915":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"16:6362:6839":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"16:2529:6803":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"20:2657:3677":{"crate_id":20,"path":["http","uri","scheme","Scheme"],"kind":"struct"},"2:42222:7646":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"16:7998:6840":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"1:8604:7976":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"2:46890:7879":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2:10996:7658":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"5:3229:3641":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"1:8080:8006":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"25:9633:3222":{"crate_id":25,"path":["tokio","sync","mutex","OwnedMutexGuard"],"kind":"struct"},"2:44013:7795":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"11:1087:36476":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"17:14560:6274":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"1:723:154":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:44193:7807":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"2:11152:7664":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"25:10508:2114":{"crate_id":25,"path":["tokio","time","error","Kind"],"kind":"enum"},"25:599:3917":{"crate_id":25,"path":["tokio","util","wake_list","WakeList"],"kind":"struct"},"1:12090:1646":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"1:8923:8072":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"25:9840:220":{"crate_id":25,"path":["tokio","sync","watch","Receiver"],"kind":"struct"},"5:3017:3568":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"11:1107:7364":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"17:12189:5949":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"27:5155:4547":{"crate_id":27,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"17:11647:5876":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"5:4489:4053":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"2:22866:33107":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"6:1510:4305":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"17:11042:5813":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"17:12238:5953":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"27:5936:4729":{"crate_id":27,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"11:1142:7365":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"17:14147:6190":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"25:9694:3698":{"crate_id":25,"path":["tokio","sync","notify","State"],"kind":"enum"},"16:4871:6870":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"25:12571:37372":{"crate_id":25,"path":["tokio","io","util","split","_","__Origin"],"kind":"struct"},"6:5225:4675":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:2740:256":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"17:11688:5879":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"1:9145:187":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"11:2469:4062":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"27:1720:4303":{"crate_id":27,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"0:262:2578":{"crate_id":0,"path":["hyper","rt","Executor"],"kind":"trait"},"2:43306:3449":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"25:2764:26844":{"crate_id":25,"path":["tokio","io","util","async_seek_ext","AsyncSeekExt"],"kind":"trait"},"2:10037:3440":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"17:13424:6058":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"1:3811:5268":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"1:8358:8613":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"2:39877:213":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"16:7869:7252":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"25:8279:186":{"crate_id":25,"path":["tokio","sync","mutex","Mutex"],"kind":"struct"},"11:2352:5495":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"25:13979:5472":{"crate_id":25,"path":["tokio","io","util","read_exact","ReadExact"],"kind":"struct"},"2:46069:7846":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"6:6721:8490":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"6:5361:4723":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"17:437:5665":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"16:5919:22466":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"16:7684:7215":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:8394:3644":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"27:1794:4319":{"crate_id":27,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:34360:3135":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:45118:181":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"5:3270:7369":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"17:16121:6739":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"17:14189:6211":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"28:53:3912":{"crate_id":28,"path":["pin_project_lite","__private","UnsafeOverwriteGuard"],"kind":"struct"},"1:7960:140":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"1:12095:1704":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"6:5630:4850":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"2:42356:3397":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"6:8341:5247":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:40883:7736":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"2:7650:2115":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"6:5370:4729":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"27:2125:4435":{"crate_id":27,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:42630:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"9:391:21451":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"25:4667:3927":{"crate_id":25,"path":["tokio","runtime","context","blocking","DisallowBlockInPlaceGuard"],"kind":"struct"},"20:547:5484":{"crate_id":20,"path":["http","header","name","InvalidHeaderName"],"kind":"struct"},"1:11654:2081":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"17:13526:6074":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"18:659:5629":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"25:1125:3698":{"crate_id":25,"path":["tokio","fs","read_dir","State"],"kind":"enum"},"2:47284:7898":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:47206:7897":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"6:4959:4545":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"6:1593:4357":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"1:10230:115":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"5:4426:4053":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:43706:7785":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"30:785:4215":{"crate_id":30,"path":["socket2","sys","CcidEndpoints"],"kind":"struct"},"2:5097:860":{"crate_id":2,"path":["core","iter"],"kind":"module"},"1:4210:31295":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"1:914:7356":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"17:13723:6124":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"2:40627:7605":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"25:9489:3699":{"crate_id":25,"path":["tokio","sync","broadcast","error","RecvError"],"kind":"enum"},"1:640:7963":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"11:2151:5495":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"1:10952:4135":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"25:7859:3975":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","OwnedPermit"],"kind":"struct"},"6:5160:4645":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"17:11443:5851":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"17:14311:6230":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"9:237:3698":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"25:5252:5332":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","handle","Handle"],"kind":"struct"},"6:5200:4662":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:39914:212":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:8937:5406":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"16:6555:7050":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"1:849:3642":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"25:1433:3921":{"crate_id":25,"path":["tokio","io","async_fd","AsyncFd"],"kind":"struct"},"16:6376:7013":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"25:11096:5455":{"crate_id":25,"path":["tokio","task","local","RunUntil"],"kind":"struct"},"11:710:7356":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"17:13899:6155":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"5:2093:7445":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"1:880:5490":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:3522:3584":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"26:60:207":{"crate_id":26,"path":["mio","poll","Poll"],"kind":"struct"},"25:10601:5447":{"crate_id":25,"path":["tokio","util","bit","Pack"],"kind":"struct"},"25:10093:3575":{"crate_id":25,"path":["tokio","task","task_local","scope_inner","Guard"],"kind":"struct"},"25:3075:5310":{"crate_id":25,"path":["tokio","io","util","vec_with_initialized","VecWithInitialized"],"kind":"struct"},"26:738:5266":{"crate_id":26,"path":["mio","io_source","SelectorId"],"kind":"struct"},"5:3626:183":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"1:11495:4138":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"17:11898:5904":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"2:4560:3451":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"6:6636:5002":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"12:0:2927":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"17:12969:6013":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"27:737:4286":{"crate_id":27,"path":["libc","unix","servent"],"kind":"struct"},"27:7724:5034":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"25:10129:5431":{"crate_id":25,"path":["tokio","task","task_local","fmt","TransparentOption"],"kind":"struct"},"17:14372:6240":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"17:13412:6057":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"17:9916:22530":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"1:9035:117":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"6:5083:4615":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"25:577:3236":{"crate_id":25,"path":["tokio","util","once_cell","OnceCell"],"kind":"struct"},"16:149:4018":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"2:10026:121":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"17:15126:6463":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"6:6689:8478":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"1:10090:8084":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"1:4312:5270":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"9:446:21450":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"25:1218:2017":{"crate_id":25,"path":["tokio","io","blocking","Buf"],"kind":"struct"},"25:9847:2085":{"crate_id":25,"path":["tokio","sync","watch","Sender"],"kind":"struct"},"1:3589:3588":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"2:3051:3145":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"1:7223:31290":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"2:32661:3092":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"25:12269:5459":{"crate_id":25,"path":["tokio","io","util","write_buf","WriteBuf"],"kind":"struct"},"2:7898:15193":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"6:6505:4933":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"20:2644:3674":{"crate_id":20,"path":["http","uri","authority","Authority"],"kind":"struct"},"1:3315:3616":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"0:502:2866":{"crate_id":0,"path":["hyper","upgrade","Parts"],"kind":"struct"},"17:11493:5853":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"17:14212:6220":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"6:6698:8484":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"2:2818:138":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:4486:7610":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"27:5647:4669":{"crate_id":27,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"1:8285:2018":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"6:8317:8373":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:39861:3148":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:22036:9819":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"16:5521:6825":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"16:3545:6846":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"5:7543:3680":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:42036:9697":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"11:1025:5498":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"6:6409:4881":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:10039:3441":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"1:4821:9727":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"1:4109:9717":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"17:11016:5812":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"27:4920:4501":{"crate_id":27,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"17:15944:6039":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"27:602:4256":{"crate_id":27,"path":["libc","unix","hostent"],"kind":"struct"},"6:1628:4386":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:3214:3052":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"6:5181:4650":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:40801:33144":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"25:12525:37372":{"crate_id":25,"path":["tokio","io","util","take","_","__Origin"],"kind":"struct"},"2:2727:77":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"17:15376:6531":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"6:5390:4738":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"27:5827:4708":{"crate_id":27,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:32722:7711":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"2:10242:153":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"27:8474:5123":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"6:5423:4755":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"2:22355:9901":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"1:8461:3392":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:43925:7787":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"16:6599:7062":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:44849:8606":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:7070:8896":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"5:2226:8511":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"6:5415:4750":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"2:11138:7663":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"10:44:7378":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"2:2450:104":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"25:5763:5331":{"crate_id":25,"path":["tokio","runtime","io","driver","Driver"],"kind":"struct"},"2:44865:8610":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"17:11877:5902":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"27:1672:4295":{"crate_id":27,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"1:10847:8001":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"2:32818:3073":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"20:1837:1857":{"crate_id":20,"path":["http","header","map","HeaderMap"],"kind":"struct"},"25:11978:9527":{"crate_id":25,"path":["tokio","io","util","write_int","WriteU64"],"kind":"struct"},"22:22:2017":{"crate_id":22,"path":["bytes","buf","buf_impl","Buf"],"kind":"trait"},"1:4464:5272":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"22:306:5478":{"crate_id":22,"path":["bytes","buf","uninit_slice","UninitSlice"],"kind":"struct"},"5:7392:4042":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"11:2304:5508":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"2:4335:7608":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"25:631:5558":{"crate_id":25,"path":["tokio","util","linked_list","Link"],"kind":"trait"},"2:4269:15014":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"11:1051:5495":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"27:755:4291":{"crate_id":27,"path":["libc","unix","protoent"],"kind":"struct"},"1:9041:3648":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"16:7324:7189":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"1:3017:138":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"16:5878:6777":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"2:41057:7749":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"27:1839:4336":{"crate_id":27,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"25:10706:37090":{"crate_id":25,"path":["tokio","util","idle_notified_set","ListEntry"],"kind":"struct"},"25:1638:5293":{"crate_id":25,"path":["tokio","io","stdio_common","SplitByUtf8BoundaryIfWindows"],"kind":"struct"},"6:545:4268":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"25:7849:2085":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","Sender"],"kind":"struct"},"2:10851:3642":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"26:1082:5272":{"crate_id":26,"path":["mio","net","uds","stream","UnixStream"],"kind":"struct"},"16:5541:6880":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"21:10:26811":{"crate_id":21,"path":["fnv","FnvHasher"],"kind":"struct"},"2:45088:3081":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"2:40772:7732":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"2:21572:2597":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"2:12823:121":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"27:4990:4511":{"crate_id":27,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:40753:15039":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"6:7339:5094":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"27:7553:4996":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:36582:3139":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:2440:9680":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"1:8377:2084":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"17:13485:6064":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:5712:3575":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"1:6621:3192":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"25:14361:37372":{"crate_id":25,"path":["tokio","io","util","buf_stream","_","__Origin"],"kind":"struct"},"26:640:2085":{"crate_id":26,"path":["mio","sys","unix","pipe","Sender"],"kind":"struct"},"2:44915:3168":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"2:2469:114":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:41066:7627":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"25:7146:9545":{"crate_id":25,"path":["tokio","runtime","blocking","task","BlockingTask"],"kind":"struct"},"2:7258:3521":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"5:1181:36194":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"17:10185:5654":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"27:8389:5100":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"16:6422:4020":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"6:5536:4797":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:21574:9817":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"11:1903:7369":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"6:5344:5210":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"25:4874:5328":{"crate_id":25,"path":["tokio","runtime","park","UnparkThread"],"kind":"struct"},"2:21633:9816":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:3436:3156":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"17:12508:5983":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"25:13660:9507":{"crate_id":25,"path":["tokio","io","util","read_int","ReadI16"],"kind":"struct"},"27:8568:5136":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"5:3652:3642":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"17:14325:6233":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"25:5152:4012":{"crate_id":25,"path":["tokio","runtime","scheduler","inject","shared","Shared"],"kind":"struct"},"18:581:3419":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"27:5063:4530":{"crate_id":27,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"6:6629:5001":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"1:3570:32968":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"17:16212:6761":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"2:22493:2597":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"1:11058:8070":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"25:178:26838":{"crate_id":25,"path":["tokio","io","async_seek","AsyncSeek"],"kind":"trait"},"16:2593:6806":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"1:12070:403":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"5:1526:5491":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"16:5713:6904":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"25:7467:26882":{"crate_id":25,"path":["tokio","runtime","runtime","RuntimeFlavor"],"kind":"enum"},"2:12370:7674":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"27:6207:4808":{"crate_id":27,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"25:9115:233":{"crate_id":25,"path":["tokio","sync","rwlock","RwLock"],"kind":"struct"},"5:2104:7446":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"25:2727:2049":{"crate_id":25,"path":["tokio","io","util","async_read_ext","AsyncReadExt"],"kind":"trait"},"5:1716:4031":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"24:42:2080":{"crate_id":24,"path":["http_body","Body"],"kind":"trait"},"17:15023:6445":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"17:11773:5887":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"13:226:8436":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"17:11621:5873":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"25:7404:2085":{"crate_id":25,"path":["tokio","runtime","blocking","shutdown","Sender"],"kind":"struct"},"2:48399:7948":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"16:6724:7081":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"1:6725:233":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"6:4864:4501":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"16:6230:7003":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"5:4257:3575":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"17:15701:6634":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"17:15957:6684":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"17:11089:5819":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"25:153:26837":{"crate_id":25,"path":["tokio","io","async_read","AsyncRead"],"kind":"trait"},"25:2717:26843":{"crate_id":25,"path":["tokio","io","util","async_buf_read_ext","AsyncBufReadExt"],"kind":"trait"},"1:12076:332":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:10919:7656":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"5:1346:7366":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"4:0:2922":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"1:1887:7971":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"6:8253:5240":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"25:9759:3226":{"crate_id":25,"path":["tokio","sync","batch_semaphore","AcquireError"],"kind":"struct"},"2:22185:9815":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"2:38623:3143":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"18:481:5607":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"2:12597:7649":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"6:8306:8369":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"16:7932:7256":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"20:2677:2484":{"crate_id":20,"path":["http","uri","scheme","Protocol"],"kind":"enum"},"17:16259:6052":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"6:6874:5038":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"16:7491:7200":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"25:9475:3185":{"crate_id":25,"path":["tokio","sync","barrier","BarrierWaitResult"],"kind":"struct"},"16:8022:22476":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"25:10080:185":{"crate_id":25,"path":["tokio","task","task_local","LocalKey"],"kind":"struct"},"25:2883:3922":{"crate_id":25,"path":["tokio","io","util","mem","DuplexStream"],"kind":"struct"},"2:5018:34089":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"31:74:38810":{"crate_id":31,"path":["num_cpus","linux","CgroupVersion"],"kind":"enum"},"17:15342:6518":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"27:9624:8369":{"crate_id":27,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"1:4075:9716":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"2:7363:15195":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"25:7381:37874":{"crate_id":25,"path":["tokio","runtime","blocking","pool","SpawnerMetrics"],"kind":"struct"},"1:4879:4116":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"17:14587:6277":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"11:2562:8446":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"25:7587:2085":{"crate_id":25,"path":["tokio","sync","broadcast","Sender"],"kind":"struct"},"27:8760:5208":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"17:16223:6763":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"6:8294:4806":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"16:4355:6854":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"1:5512:7982":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"17:11227:5829":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:30937:2605":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"25:7852:5397":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","WeakSender"],"kind":"struct"},"2:21755:7682":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:8268:3594":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:2494:464":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"1:4017:9711":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"30:758:26927":{"crate_id":30,"path":["socket2","socket","InterfaceIndexOrAddress"],"kind":"enum"},"27:9511:5239":{"crate_id":27,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:1811:3110":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"17:14341:6235":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"1:10855:7983":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"25:389:95":{"crate_id":25,"path":["tokio","loom","std","atomic_u32","AtomicU32"],"kind":"struct"},"2:21625:2597":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"27:2072:4418":{"crate_id":27,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"25:10577:5445":{"crate_id":25,"path":["tokio","time","interval","Interval"],"kind":"struct"},"17:10350:5659":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"2:4366:3236":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:2266:139":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"20:438:2476":{"crate_id":20,"path":["http","header","map","into_header_name","IntoHeaderName"],"kind":"trait"},"6:5031:4582":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"1:8881:8069":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"17:10573:36501":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"5:2197:7447":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:40746:7729":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"2:44071:7800":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"6:5020:4577":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:2724:78":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"17:15313:6510":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"6:7330:5088":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"25:13942:9501":{"crate_id":25,"path":["tokio","io","util","read_int","ReadU8"],"kind":"struct"},"16:6030:6957":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"5:1508:5489":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"17:11510:5855":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"17:14414:6248":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"25:13856:9503":{"crate_id":25,"path":["tokio","io","util","read_int","ReadU16"],"kind":"struct"},"9:0:2924":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"6:578:4286":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"1:7467:31641":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"20:2788:3672":{"crate_id":20,"path":["http","byte_str","ByteStr"],"kind":"struct"},"2:12294:7669":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"11:2498:21527":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"16:6646:7075":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"2:3218:141":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"25:12499:3595":{"crate_id":25,"path":["tokio","io","util","take","Take"],"kind":"struct"},"17:13986:6168":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"6:7366:5104":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"6:4897:4514":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"25:7590:220":{"crate_id":25,"path":["tokio","sync","broadcast","Receiver"],"kind":"struct"},"17:14876:6399":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"17:2037:5671":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"17:11354:5844":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"1:1578:3515":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"20:919:2457":{"crate_id":20,"path":["http","method","InvalidMethod"],"kind":"struct"},"25:11488:9537":{"crate_id":25,"path":["tokio","io","util","write_int","WriteU64Le"],"kind":"struct"},"25:11733:9532":{"crate_id":25,"path":["tokio","io","util","write_int","WriteI128"],"kind":"struct"},"27:5242:4567":{"crate_id":27,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"25:9540:5406":{"crate_id":25,"path":["tokio","sync","mpsc","error","SendError"],"kind":"struct"},"27:9659:5247":{"crate_id":27,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"17:12707:5996":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"25:14094:2019":{"crate_id":25,"path":["tokio","io","util","read","Read"],"kind":"struct"},"25:6070:5351":{"crate_id":25,"path":["tokio","runtime","time","entry","TimerShared"],"kind":"struct"},"2:46522:7868":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2:22316:9900":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"20:1857:3642":{"crate_id":20,"path":["http","header","map","IterMut"],"kind":"struct"},"1:10710:140":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"16:4491:6858":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"11:2124:5508":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"25:7984:3976":{"crate_id":25,"path":["tokio","sync","mpsc","chan","Tx"],"kind":"struct"},"7:31:21437":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"30:286:4201":{"crate_id":30,"path":["socket2","sockref","SockRef"],"kind":"struct"},"1:9081:2342":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"1:909:5491":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:45134:7842":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"22:1104:5480":{"crate_id":22,"path":["bytes","buf","limit","Limit"],"kind":"struct"},"27:789:15906":{"crate_id":27,"path":["libc","unix","FILE"],"kind":"enum"},"2:11110:7661":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"17:10720:36497":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"25:9862:5406":{"crate_id":25,"path":["tokio","sync","watch","error","SendError"],"kind":"struct"},"2:46616:7870":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"18:698:5639":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"20:2090:2452":{"crate_id":20,"path":["http","header","name","HeaderName"],"kind":"struct"},"25:5992:3947":{"crate_id":25,"path":["tokio","runtime","io","scheduled_io","ScheduledIo"],"kind":"struct"},"16:7619:22474":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"17:11405:5847":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"1:12093:1645":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"25:1655:3616":{"crate_id":25,"path":["tokio","io","stdout","Stdout"],"kind":"struct"},"6:8247:5239":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"0:498:2862":{"crate_id":0,"path":["hyper","upgrade","OnUpgrade"],"kind":"struct"},"1:836:3641":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"17:13594:6094":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"1:7926:5281":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"17:15092:6460":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"25:7992:3977":{"crate_id":25,"path":["tokio","sync","mpsc","chan","Rx"],"kind":"struct"},"1:7616:5667":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"27:5222:4560":{"crate_id":27,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"16:5616:6890":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"1:11077:8612":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"1:2982:4115":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"6:1680:4418":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:15624:6612":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"30:690:4205":{"crate_id":30,"path":["socket2","MaybeUninitSlice"],"kind":"struct"},"20:1913:5492":{"crate_id":20,"path":["http","header","map","GetAll"],"kind":"struct"},"2:46377:7859":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"6:1559:4336":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:47394:7901":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"6:5565:4816":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"1:7667:4128":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"20:2244:36522":{"crate_id":20,"path":["http","header","name","StandardHeader"],"kind":"enum"},"2:22622:7683":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"17:10068:22516":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"16:4702:6864":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"16:4649:6862":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"5:6010:72":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2:32789:3074":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"17:11293:22564":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"27:6006:4744":{"crate_id":27,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"2:41479:4095":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"25:3084:3620":{"crate_id":25,"path":["tokio","io","util","repeat","Repeat"],"kind":"struct"},"17:15176:6479":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"17:15249:6493":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"25:7479:37397":{"crate_id":25,"path":["tokio","runtime","runtime","Scheduler"],"kind":"enum"},"17:12584:5801":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"25:9974:3995":{"crate_id":25,"path":["tokio","task","local","LocalDataEnterGuard"],"kind":"struct"},"27:688:4276":{"crate_id":27,"path":["libc","unix","sigval"],"kind":"struct"},"27:1687:4297":{"crate_id":27,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"17:12225:5952":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:726:9700":{"crate_id":2,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"6:8271:5243":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"6:1503:4303":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"27:5917:4723":{"crate_id":27,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"27:672:4273":{"crate_id":27,"path":["libc","unix","linger"],"kind":"struct"},"2:26357:266":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"2:10035:3439":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"17:12362:5968":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"2:3430:3154":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"9:481:21449":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"2:1925:8520":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"17:12175:5945":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"2:725:2597":{"crate_id":2,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"1:5476:7980":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"27:556:4236":{"crate_id":27,"path":["libc","unix","rusage"],"kind":"struct"},"2:44732:7836":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"25:9482:5406":{"crate_id":25,"path":["tokio","sync","broadcast","error","SendError"],"kind":"struct"},"2:42591:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"16:5630:6893":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"27:9458:5238":{"crate_id":27,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"16:2835:6817":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"27:6297:4853":{"crate_id":27,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"5:5200:3182":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"11:774:5489":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"6:5617:4844":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"17:15596:6605":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"2:9983:2021":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"27:7308:4913":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"27:8690:5188":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"25:1210:5286":{"crate_id":25,"path":["tokio","io","blocking","Blocking"],"kind":"struct"},"16:7429:36488":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"17:15760:6650":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"20:1876:5489":{"crate_id":20,"path":["http","header","map","Keys"],"kind":"struct"},"2:30905:3113":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2:39972:216":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"25:125:26836":{"crate_id":25,"path":["tokio","io","async_buf_read","AsyncBufRead"],"kind":"trait"},"27:508:4228":{"crate_id":27,"path":["libc","unix","timeval"],"kind":"struct"},"17:10524:5796":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"1:12097:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"17:9984:22532":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"17:11634:5875":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"25:7332:5366":{"crate_id":25,"path":["tokio","runtime","task","error","JoinError"],"kind":"struct"},"25:9788:3232":{"crate_id":25,"path":["tokio","sync","rwlock","owned_write_guard","OwnedRwLockWriteGuard"],"kind":"struct"},"20:2112:4115":{"crate_id":20,"path":["http","header","name","Repr"],"kind":"enum"},"17:13497:6065":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"2:30958:3448":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"6:4924:4530":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"11:490:154":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"11:1728:156":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"6:1692:4422":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"25:2867:5305":{"crate_id":25,"path":["tokio","io","util","copy_buf","CopyBuf"],"kind":"struct"},"17:10710:5799":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"17:15473:6555":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"17:13211:6039":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"16:5825:6772":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"16:6929:7111":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"1:8291:3596":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"17:12433:5974":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"17:12887:6008":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"2:48288:7941":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"6:1585:4352":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"16:2375:6796":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"27:5205:4557":{"crate_id":27,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:2558:202":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"25:5964:5344":{"crate_id":25,"path":["tokio","runtime","io","driver","ReadyEvent"],"kind":"struct"},"11:1007:5508":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"27:5435:4616":{"crate_id":27,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"22:395:2018":{"crate_id":22,"path":["bytes","bytes","Bytes"],"kind":"struct"},"16:6348:6822":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"2:41082:5444":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"2:43943:7790":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"25:204:26839":{"crate_id":25,"path":["tokio","io","async_write","AsyncWrite"],"kind":"trait"},"2:43491:157":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"5:916:4039":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"27:1816:4328":{"crate_id":27,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"25:9727:3700":{"crate_id":25,"path":["tokio","sync","oneshot","error","TryRecvError"],"kind":"enum"},"5:2299:8515":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2:12124:7667":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"25:5358:8378":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","park","Parker"],"kind":"struct"},"2:40816:7734":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"27:6314:8352":{"crate_id":27,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"17:11853:5900":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"16:6320:7011":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"2:43204:8594":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"1:5462:7979":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"25:9593:3699":{"crate_id":25,"path":["tokio","sync","mpsc","error","RecvError"],"kind":"struct"},"2:45037:219":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"17:12454:5977":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"2:7935:166":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"2:48540:7955":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"17:14933:6433":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"27:7647:5015":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"25:14374:3604":{"crate_id":25,"path":["tokio","io","util","buf_reader","BufReader"],"kind":"struct"},"5:4227:3575":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"2:33873:3133":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"16:5499:6823":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"5:1455:3641":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"17:11661:5877":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"6:5329:5208":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"17:14246:6223":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"1:5652:9783":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"1:8004:3606":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"25:11007:9548":{"crate_id":25,"path":["tokio","task","unconstrained","Unconstrained"],"kind":"struct"},"27:5881:4719":{"crate_id":27,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"5:7442:7463":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"30:828:2484":{"crate_id":30,"path":["socket2","Protocol"],"kind":"struct"},"20:1892:5491":{"crate_id":20,"path":["http","header","map","ValuesMut"],"kind":"struct"},"25:4407:5294":{"crate_id":25,"path":["tokio","net","unix","split","ReadHalf"],"kind":"struct"},"17:12264:5955":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"16:4433:6856":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"1:10382:4133":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"25:0:1876":{"crate_id":25,"path":["tokio"],"kind":"module"},"2:39892:210":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"27:7215:4896":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:44045:7798":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"20:2541:2057":{"crate_id":20,"path":["http","request","Builder"],"kind":"struct"},"5:3783:2915":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"5:3388:4062":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"27:5028:4523":{"crate_id":27,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"16:5331:5785":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"1:8526:3698":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"16:6045:206":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"1:4131:9721":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:40981:7743":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"14:40:6040":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"17:12808:6004":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"16:2689:6810":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"27:5519:4634":{"crate_id":27,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"1:1824:7968":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"27:2014:4405":{"crate_id":27,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"25:9886:1856":{"crate_id":25,"path":["tokio","sync","watch","state","Version"],"kind":"struct"},"2:42964:3439":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"16:6759:6830":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"25:5448:37367":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","queue","push_overflow","BatchTaskIter"],"kind":"struct"},"16:7225:22472":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"9:177:21517":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"11:102:5503":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"11:434:36469":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"25:3315:3698":{"crate_id":25,"path":["tokio","net","addr","sealed","State"],"kind":"enum"},"2:46239:7853":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"17:13946:6160":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"17:11788:5891":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"5:5926:4015":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"5:7559:7465":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"1:9460:139":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"16:8097:7272":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"27:5863:4715":{"crate_id":27,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"14:7:7349":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"25:14179:37372":{"crate_id":25,"path":["tokio","io","util","lines","_","__Origin"],"kind":"struct"},"1:1975:709":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"2:3419:253":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"2:40790:7733":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"25:6356:3958":{"crate_id":25,"path":["tokio","runtime","task","core","TaskIdGuard"],"kind":"struct"},"1:10700:8002":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"2:34050:3132":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:7364:15196":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"25:6921:3693":{"crate_id":25,"path":["tokio","runtime","task","Task"],"kind":"struct"},"6:1621:4382":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"5:7412:34819":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"25:6777:3698":{"crate_id":25,"path":["tokio","runtime","task","state","State"],"kind":"struct"},"25:14195:5473":{"crate_id":25,"path":["tokio","io","util","flush","Flush"],"kind":"struct"},"17:14177:6209":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"17:14298:6229":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"2:22675:7684":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"27:6291:4850":{"crate_id":27,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"17:15333:6517":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"1:7982:7974":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"6:5064:4600":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"17:256:5660":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"9:52:21468":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"5:7434:210":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"16:4813:6868":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"2:48478:7953":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"17:12851:6006":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:42004:7642":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"17:10671:36503":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"16:6669:7076":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"16:7537:6838":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"17:597:5667":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"1:11358:8107":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"20:2661:3673":{"crate_id":20,"path":["http","uri","scheme","Scheme2"],"kind":"enum"},"2:40856:7735":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"17:3597:5682":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"27:7356:4933":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"17:15400:6536":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"25:932:2058":{"crate_id":25,"path":["tokio","fs","read","read"],"kind":"function"},"25:1369:5251":{"crate_id":25,"path":["tokio","io","interest","Interest"],"kind":"struct"},"1:11647:27621":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"1:6691:3198":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"25:10652:5448":{"crate_id":25,"path":["tokio","util","rand","rt","RngSeedGenerator"],"kind":"struct"},"1:1054:5498":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"2:2447:103":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"1:1885:3729":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:22831:33137":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"26:189:5251":{"crate_id":26,"path":["mio","interest","Interest"],"kind":"struct"},"25:12974:9521":{"crate_id":25,"path":["tokio","io","util","read_int","ReadF32Le"],"kind":"struct"},"17:2203:5675":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"16:5038:6875":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"5:1145:36193":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"25:5911:3951":{"crate_id":25,"path":["tokio","runtime","io","scheduled_io","Readiness"],"kind":"struct"},"1:7816:9607":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"5:5390:4031":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"25:4424:5318":{"crate_id":25,"path":["tokio","net","unix","split_owned","OwnedReadHalf"],"kind":"struct"},"17:1207:5670":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:46500:7867":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"6:570:4281":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"25:14244:3594":{"crate_id":25,"path":["tokio","io","util","chain","Chain"],"kind":"struct"},"25:9642:3224":{"crate_id":25,"path":["tokio","sync","mutex","OwnedMappedMutexGuard"],"kind":"struct"},"11:1917:7371":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"2:41464:7635":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:31480:196":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:44408:7814":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"26:345:5260":{"crate_id":26,"path":["mio","sys","unix","sourcefd","SourceFd"],"kind":"struct"},"1:9160:162":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"27:9528:5240":{"crate_id":27,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"17:13959:6163":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"25:11635:9534":{"crate_id":25,"path":["tokio","io","util","write_int","WriteF64"],"kind":"struct"},"2:41448:7634":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"17:12485:22659":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"25:11243:9542":{"crate_id":25,"path":["tokio","io","util","write_int","WriteI128Le"],"kind":"struct"},"16:6858:7102":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"27:5081:4533":{"crate_id":27,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:2552:195":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"16:2917:21604":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"9:423:21452":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:8400:15192":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"25:1098:8079":{"crate_id":25,"path":["tokio","fs","file","Operation"],"kind":"enum"},"2:2973:119":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"1:1446:156":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:21430:33624":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"22:849:5479":{"crate_id":22,"path":["bytes","fmt","BytesRef"],"kind":"struct"},"2:40943:7741":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"20:1980:4016":{"crate_id":20,"path":["http","header","map","ValueDrain"],"kind":"struct"},"14:214:7353":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"25:7387:8727":{"crate_id":25,"path":["tokio","runtime","blocking","pool","Mandatory"],"kind":"enum"},"1:12073:1665":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"25:8716:69":{"crate_id":25,"path":["tokio","sync","batch_semaphore","Acquire"],"kind":"struct"},"27:4859:4468":{"crate_id":27,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"25:13709:9506":{"crate_id":25,"path":["tokio","io","util","read_int","ReadU128"],"kind":"struct"},"1:928:9619":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"17:9781:22527":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"25:9821:3237":{"crate_id":25,"path":["tokio","sync","once_cell","SetError"],"kind":"enum"},"25:4951:37398":{"crate_id":25,"path":["tokio","runtime","driver","TimeDriver"],"kind":"enum"},"7:0:1694":{"crate_id":7,"path":["unwind"],"kind":"module"},"16:6546:7049":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"5:6554:4015":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"17:16079:6728":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"2:30969:33109":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"14:187:21545":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:2983:2804":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"17:15356:6525":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"2:44572:7825":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:42425:3641":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"26:672:5256":{"crate_id":26,"path":["mio","event","event","Event"],"kind":"struct"},"17:15616:6611":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"2:44229:7661":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"25:10251:4000":{"crate_id":25,"path":["tokio","task","local","LocalSet"],"kind":"struct"},"1:10487:3683":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"18:689:5638":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"17:15569:6593":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"0:367:1102":{"crate_id":0,"path":["hyper","upgrade","on"],"kind":"function"},"6:4909:4523":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"17:15822:6663":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"16:7551:6828":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"5:1558:210":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"25:6006:5347":{"crate_id":25,"path":["tokio","runtime","io","scheduled_io","Waiter"],"kind":"struct"},"27:8406:5104":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"1:2588:3604":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"16:7194:36493":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"2:3172:3157":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"27:4953:4504":{"crate_id":27,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"25:360:37518":{"crate_id":25,"path":["tokio","net","addr","sealed","ToSocketAddrsPriv"],"kind":"trait"},"2:21401:33621":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:7837:8001":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"2:40029:2727":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:12592:3351":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"2:46668:7872":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"2:12612:14973":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"11:875:7361":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"5:860:4037":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"25:4891:5329":{"crate_id":25,"path":["tokio","runtime","park","CachedParkThread"],"kind":"struct"},"1:10738:31960":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"2:2978:246":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"17:11812:5895":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"18:96:26709":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"17:11524:5856":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"2:10043:3442":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"27:621:4262":{"crate_id":27,"path":["libc","unix","iovec"],"kind":"struct"},"18:623:36507":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:44698:14987":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"17:12543:5988":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"1:1063:5495":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"2:22893:8527":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"17:15281:6502":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"17:10419:5662":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"16:7595:6826":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"1:10666:8618":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"17:12107:5800":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"1:4061:9714":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"25:7410:220":{"crate_id":25,"path":["tokio","runtime","blocking","shutdown","Receiver"],"kind":"struct"},"6:6491:4922":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"16:7984:7263":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"27:1952:4382":{"crate_id":27,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"2:43513:7783":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"17:10915:36496":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"1:1602:7371":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"17:12929:6011":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"6:8259:5241":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"2:10396:4097":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"2:9830:3460":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"2:46570:7869":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"2:41241:7630":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"30:712:4206":{"crate_id":30,"path":["socket2","MsgHdr"],"kind":"struct"},"1:2422:8522":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"27:474:4220":{"crate_id":27,"path":["libc","unix","group"],"kind":"struct"},"25:5583:3944":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","worker","run","AbortOnPanic"],"kind":"struct"},"6:5052:4591":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"2:43268:3448":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"5:7587:7468":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"6:5515:8470":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"17:11142:5800":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"27:7395:4935":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"6:6379:4856":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"17:13738:6128":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"20:5:1850":{"crate_id":20,"path":["http","header"],"kind":"module"},"17:14091:6181":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"22:400:3788":{"crate_id":22,"path":["bytes","bytes","Vtable"],"kind":"struct"},"25:7075:37887":{"crate_id":25,"path":["tokio","runtime","blocking","pool","SpawnError"],"kind":"enum"},"17:15222:6489":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"25:5117:3939":{"crate_id":25,"path":["tokio","runtime","scheduler","inject","pop","Pop"],"kind":"struct"},"27:8814:5219":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"1:1826:7969":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"17:12150:5943":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"5:1470:3642":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"16:5726:6905":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"16:6331:7012":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"11:299:8437":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"6:5653:8471":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"2:40712:7605":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:9181:7649":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"6:5588:4824":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:43466:7773":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"13:0:2921":{"crate_id":13,"path":["std_detect"],"kind":"module"},"17:11865:5901":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"6:5400:4744":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"6:1526:4313":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:6626:4093":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"2:10958:7657":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"25:13170:9517":{"crate_id":25,"path":["tokio","io","util","read_int","ReadI16Le"],"kind":"struct"},"17:11915:22633":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:22:736":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"25:9777:3230":{"crate_id":25,"path":["tokio","sync","semaphore","OwnedSemaphorePermit"],"kind":"struct"},"16:2665:6809":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"25:5683:5340":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","counters","Counters"],"kind":"struct"},"27:7629:5014":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"17:12289:5957":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"2:22851:33112":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"25:9557:9787":{"crate_id":25,"path":["tokio","sync","mpsc","error","TrySendError"],"kind":"enum"},"25:9961:4012":{"crate_id":25,"path":["tokio","task","local","Shared"],"kind":"struct"},"6:5472:4789":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"25:2823:37384":{"crate_id":25,"path":["tokio","io","util","buf_writer","SeekState"],"kind":"enum"},"6:4811:4458":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:38513:3141":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:44379:3593":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:40903:7738":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"16:5645:6895":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"5:7353:3704":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"27:4815:4450":{"crate_id":27,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"17:16269:6057":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"17:11825:5897":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"1:9213:8081":{"crate_id":1,"path":["std","sys","pal","common","thread_local","fast_local","Key"],"kind":"struct"},"1:8310:8046":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"27:6041:4750":{"crate_id":27,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"27:8585:5137":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:43214:3448":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"2:40704:7725":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"25:808:139":{"crate_id":25,"path":["tokio","fs","file","File"],"kind":"struct"},"27:1969:4386":{"crate_id":27,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"20:1478:3676":{"crate_id":20,"path":["http","uri","port","Port"],"kind":"struct"},"1:11558:5267":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"22:0:1873":{"crate_id":22,"path":["bytes"],"kind":"module"},"2:46115:7848":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"25:9907:5430":{"crate_id":25,"path":["tokio","sync","watch","state","AtomicState"],"kind":"struct"},"1:5389:130":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"25:1650:3614":{"crate_id":25,"path":["tokio","io","stdin","Stdin"],"kind":"struct"},"18:563:5618":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"20:2525:1852":{"crate_id":20,"path":["http","request","Request"],"kind":"struct"},"17:14723:6286":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"16:4572:6861":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:42367:3399":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"25:5175:37089":{"crate_id":25,"path":["tokio","runtime","scheduler","inject","synced","Synced"],"kind":"struct"},"1:5209:204":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"1:4716:5115":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"25:12864:5471":{"crate_id":25,"path":["tokio","io","util","read_line","ReadLine"],"kind":"struct"},"1:11095:3164":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"5:7611:4058":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"25:5672:5339":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","MultiThread"],"kind":"struct"},"25:9747:3227":{"crate_id":25,"path":["tokio","sync","batch_semaphore","TryAcquireError"],"kind":"enum"},"17:11026:22546":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"9:329:8449":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"16:4518:6859":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"25:14032:2560":{"crate_id":25,"path":["tokio","io","util","read_buf","ReadBuf"],"kind":"struct"},"16:4761:6866":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"2:22759:7686":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:1939:3093":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"1:6979:4125":{"crate_id":1,"path":["std","sys","pal","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"2:48463:7952":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:40693:7724":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"25:8006:2116":{"crate_id":25,"path":["tokio","sync","mpsc","chan","Chan"],"kind":"struct"},"1:3234:32587":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"27:5757:4691":{"crate_id":27,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:33814:3129":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"6:5502:8469":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"17:11755:5885":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"1:621:3095":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"16:2459:6800":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"16:3177:6786":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"2:4409:3450":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"1:4047:9713":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"2:48002:7936":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"16:6134:6994":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"16:6215:7001":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"16:6941:22471":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"2:44084:7803":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"16:3993:6852":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"25:10862:5454":{"crate_id":25,"path":["tokio","util","wake","WakerRef"],"kind":"struct"},"0:365:2859":{"crate_id":0,"path":["hyper","upgrade","Upgraded"],"kind":"struct"},"1:951:7362":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"20:1900:4015":{"crate_id":20,"path":["http","header","map","Drain"],"kind":"struct"},"2:31026:33105":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"2:10876:3596":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"1:12055:27648":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"25:10656:5449":{"crate_id":25,"path":["tokio","util","rand","RngSeed"],"kind":"struct"},"27:6278:4844":{"crate_id":27,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"1:12083:698":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:41004:7618":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"1:6052:2085":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"17:12900:6010":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"2:40934:7740":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"16:2769:6814":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"25:9535:3228":{"crate_id":25,"path":["tokio","sync","mpsc","unbounded","Semaphore"],"kind":"struct"},"20:2564:1854":{"crate_id":20,"path":["http","status","StatusCode"],"kind":"struct"},"25:373:94":{"crate_id":25,"path":["tokio","loom","std","atomic_u16","AtomicU16"],"kind":"struct"},"25:3881:5269":{"crate_id":25,"path":["tokio","net","udp","UdpSocket"],"kind":"struct"},"25:1223:3698":{"crate_id":25,"path":["tokio","io","blocking","State"],"kind":"enum"},"1:11160:8622":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"25:4789:37383":{"crate_id":25,"path":["tokio","runtime","context","runtime","EnterRuntime"],"kind":"enum"},"30:817:4214":{"crate_id":30,"path":["socket2","Type"],"kind":"struct"},"25:5416:3648":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","queue","Inner"],"kind":"struct"},"2:41497:7638":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"17:10887:36499":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"26:356:5261":{"crate_id":26,"path":["mio","sys","unix","waker","eventfd","WakerInternal"],"kind":"struct"},"16:6099:6978":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"17:15463:6550":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"17:14516:6267":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"25:13317:9514":{"crate_id":25,"path":["tokio","io","util","read_int","ReadU32Le"],"kind":"struct"},"1:3814:5267":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"26:426:5262":{"crate_id":26,"path":["mio","sys","unix","uds","socketaddr","SocketAddr"],"kind":"struct"},"16:7971:7260":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"27:5680:4675":{"crate_id":27,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"25:9636:3223":{"crate_id":25,"path":["tokio","sync","mutex","MappedMutexGuard"],"kind":"struct"},"25:7674:3968":{"crate_id":25,"path":["tokio","sync","broadcast","WaitersList"],"kind":"struct"},"27:7821:5039":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"1:7931:5280":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"1:2450:9685":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:40828:9660":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"17:10137:22510":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"27:7413:4940":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:21418:33622":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:1968:3094":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"27:8736:5199":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"11:2423:3515":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"27:540:4233":{"crate_id":27,"path":["libc","unix","rlimit"],"kind":"struct"},"26:159:7711":{"crate_id":26,"path":["mio","event","source","Source"],"kind":"trait"},"0:64:1861":{"crate_id":0,"path":["hyper","body"],"kind":"module"},"2:42308:3642":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"27:5736:4685":{"crate_id":27,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"6:4932:4533":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:12089:5940":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"2:22406:33061":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"16:5555:6884":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"2:42325:3396":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"11:396:4025":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"17:16050:6043":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"2:42300:3641":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"25:10967:37372":{"crate_id":25,"path":["tokio","time","timeout","_","__Origin"],"kind":"struct"},"2:4227:111":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"1:4232:9735":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"17:11557:5859":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"1:12071:1041":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:44143:7659":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"16:6188:6999":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"27:1881:4350":{"crate_id":27,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:32708:7710":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"1:5706:220":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"17:9886:22529":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"1:7948:8003":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"6:0:884":{"crate_id":6,"path":["libc"],"kind":"module"},"16:2399:6797":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"5:1536:7356":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"27:9612:4806":{"crate_id":27,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:3832:3515":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:12086:801":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"1:8406:5104":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"17:12076:5939":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"17:11189:5826":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"6:8012:5226":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"6:6435:4896":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"25:14423:3585":{"crate_id":25,"path":["tokio","io","seek","Seek"],"kind":"struct"},"11:430:36474":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"25:10941:5419":{"crate_id":25,"path":["tokio","time","timeout","Timeout"],"kind":"struct"},"20:439:2597":{"crate_id":20,"path":["http","header","map","into_header_name","Sealed"],"kind":"trait"},"17:14912:6428":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"6:1699:4425":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"25:7634:3971":{"crate_id":25,"path":["tokio","sync","broadcast","RecvGuard"],"kind":"struct"},"17:15383:6532":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"16:6745:6829":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"11:2554:36475":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"27:7571:5001":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:44000:7736":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"6:5581:4821":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"25:7638:3970":{"crate_id":25,"path":["tokio","sync","broadcast","Recv"],"kind":"struct"},"2:47330:7899":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"17:13116:6026":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"1:8907:8071":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"6:564:4278":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"25:4840:5326":{"crate_id":25,"path":["tokio","runtime","coop","Budget"],"kind":"struct"},"17:10439:5786":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"27:7701:8361":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"5:6921:4060":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"17:15410:6539":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"6:523:4256":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"2:32731:237":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"25:9671:37088":{"crate_id":25,"path":["tokio","sync","notify","Notification"],"kind":"enum"},"1:7731:5432":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"16:0:2930":{"crate_id":16,"path":["gimli"],"kind":"module"},"5:6682:3515":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"27:2035:4411":{"crate_id":27,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"17:16151:6747":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"2:6615:7626":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"2:3253:3149":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"2:10479:4100":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"25:4737:3931":{"crate_id":25,"path":["tokio","runtime","context","runtime","EnterRuntimeGuard"],"kind":"struct"},"5:6600:4031":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"1:7802:9606":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"5:271:4031":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"25:9928:9546":{"crate_id":25,"path":["tokio","task","yield_now","yield_now","YieldNow"],"kind":"struct"},"1:645:9603":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"27:8547:5132":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"5:1547:7357":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"25:4492:220":{"crate_id":25,"path":["tokio","net","unix","pipe","Receiver"],"kind":"struct"},"1:3399:3601":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"17:15521:6592":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"5:2279:36288":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"28:0:1875":{"crate_id":28,"path":["pin_project_lite"],"kind":"module"},"25:9685:3984":{"crate_id":25,"path":["tokio","sync","notify","Notified"],"kind":"struct"},"2:44505:14986":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"5:3296:7372":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"1:12084:803":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:4605:4086":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:12079:1630":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"1:11045:8069":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"1:3275:3615":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"5:5699:4060":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"17:11715:5881":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"6:6657:5014":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:4240:9736":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"2:41982:171":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"6:5219:4672":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"17:12408:5971":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"27:5952:4730":{"crate_id":27,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"17:12030:5935":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"2:48326:7942":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:4572:9741":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"17:12318:5683":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"20:2702:2461":{"crate_id":20,"path":["http","uri","InvalidUri"],"kind":"struct"},"25:9647:3193":{"crate_id":25,"path":["tokio","sync","mutex","TryLockError"],"kind":"struct"},"2:40655:33124":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"5:6042:3182":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"25:9715:3699":{"crate_id":25,"path":["tokio","sync","oneshot","error","RecvError"],"kind":"struct"},"2:46738:7875":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"25:6220:3648":{"crate_id":25,"path":["tokio","runtime","time","Inner"],"kind":"struct"},"6:8282:4804":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"6:8029:5237":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"2:43934:7788":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"17:16235:6766":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"17:3473:5681":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"30:0:3201":{"crate_id":30,"path":["socket2"],"kind":"module"},"16:6965:8079":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:40670:7722":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"25:12207:5457":{"crate_id":25,"path":["tokio","io","util","write_all_buf","WriteAllBuf"],"kind":"struct"},"1:6378:220":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"2:33394:3124":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"1:11518:5268":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:43721:8602":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:44709:7828":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"27:6259:4830":{"crate_id":27,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"20:1935:5495":{"crate_id":20,"path":["http","header","map","VacantEntry"],"kind":"struct"},"16:2439:6799":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"6:532:4262":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"16:6152:6997":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"27:7231:4899":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"20:1868:3515":{"crate_id":20,"path":["http","header","map","IntoIter"],"kind":"struct"},"2:10290:7652":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"16:5006:6874":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"25:6511:3575":{"crate_id":25,"path":["tokio","runtime","task","harness","poll_future","Guard"],"kind":"struct"},"17:13922:6159":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"2:39992:3151":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"26:644:220":{"crate_id":26,"path":["mio","sys","unix","pipe","Receiver"],"kind":"struct"},"20:2648:2057":{"crate_id":20,"path":["http","uri","builder","Builder"],"kind":"struct"},"16:6895:7106":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"6:4952:4542":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"6:1653:4405":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"16:2304:21602":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"18:548:153":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"23:28:26817":{"crate_id":23,"path":["itoa","Integer"],"kind":"trait"},"17:15814:6660":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"22:1154:5483":{"crate_id":22,"path":["bytes","buf","writer","Writer"],"kind":"struct"},"27:4882:4478":{"crate_id":27,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:1934:7473":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:12075:1159":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"5:7470:3515":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"25:9794:3233":{"crate_id":25,"path":["tokio","sync","rwlock","owned_write_guard_mapped","OwnedRwLockMappedWriteGuard"],"kind":"struct"},"17:13437:6059":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"18:718:5645":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"6:4837:4478":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:3020:3072":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"6:4824:4468":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"27:7464:4963":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"27:5624:4662":{"crate_id":27,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"6:6417:4883":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"17:15197:6484":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"1:2035:197":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"27:1990:4394":{"crate_id":27,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:42669:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"27:5320:4587":{"crate_id":27,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:39781:3159":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"25:4428:3923":{"crate_id":25,"path":["tokio","net","unix","split_owned","OwnedWriteHalf"],"kind":"struct"},"27:5045:4527":{"crate_id":27,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:47048:7894":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"25:1770:5294":{"crate_id":25,"path":["tokio","io","split","ReadHalf"],"kind":"struct"},"1:5496:7981":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"5:4095:4031":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"16:5696:6899":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"6:7537:5188":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"27:6249:4824":{"crate_id":27,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"6:1639:4394":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:43725:7653":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:8315:2334":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"2:43231:33132":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"2:5056:3622":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"25:5409:3941":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","queue","Local"],"kind":"struct"},"5:0:307":{"crate_id":5,"path":["alloc"],"kind":"module"},"11:2569:7464":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"6:6714:8489":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"5:1418:100":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"25:4488:2085":{"crate_id":25,"path":["tokio","net","unix","pipe","Sender"],"kind":"struct"},"17:12768:22514":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"2:43963:7792":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"2:44719:7832":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:42433:3642":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"17:15206:6485":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"16:2319:6787":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"2:42708:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"25:1773:5295":{"crate_id":25,"path":["tokio","io","split","WriteHalf"],"kind":"struct"},"5:3262:7371":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"6:5134:4633":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:22508:9895":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"2:40846:4087":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"25:4856:3935":{"crate_id":25,"path":["tokio","runtime","coop","RestoreOnPending"],"kind":"struct"},"27:792:15907":{"crate_id":27,"path":["libc","unix","fpos_t"],"kind":"enum"},"5:6063:15499":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"1:10088:8085":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"27:5567:4646":{"crate_id":27,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"1:859:3515":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"1:7730:2597":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"25:10844:6996":{"crate_id":25,"path":["tokio","util","idle_notified_set","List"],"kind":"enum"},"25:9741:3698":{"crate_id":25,"path":["tokio","sync","oneshot","State"],"kind":"struct"},"17:15720:6639":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"2:21753:9814":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:11130:162":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"2:23957:236":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:8564:9778":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"6:5236:4681":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"1:10444:3616":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"27:7734:5023":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:39932:215":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"16:2419:6798":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"17:9737:22511":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"25:12446:2021":{"crate_id":25,"path":["tokio","io","util","write","Write"],"kind":"struct"},"23:14:4093":{"crate_id":23,"path":["itoa","Buffer"],"kind":"struct"},"2:48250:7940":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:9690:34401":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"17:14986:6438":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"2:4477:221":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"25:7351:3961":{"crate_id":25,"path":["tokio","runtime","task","join","JoinHandle"],"kind":"struct"},"25:4505:186":{"crate_id":25,"path":["tokio","loom","std","mutex","Mutex"],"kind":"struct"},"27:9562:5242":{"crate_id":27,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"16:4674:6863":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"17:2234:5678":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"25:7446:5392":{"crate_id":25,"path":["tokio","runtime","handle","EnterGuard"],"kind":"struct"},"2:3409:3152":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"6:4916:4527":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"25:9965:37365":{"crate_id":25,"path":["tokio","task","local","LocalState"],"kind":"struct"},"11:800:4015":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"17:12371:6011":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"6:6746:8494":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"1:12091:1647":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"25:7042:3963":{"crate_id":25,"path":["tokio","runtime","blocking","pool","BlockingPool"],"kind":"struct"},"20:2150:5513":{"crate_id":20,"path":["http","header","name","MaybeLower"],"kind":"struct"},"2:45145:7377":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"1:12039:31642":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"16:7889:7253":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"25:6551:3960":{"crate_id":25,"path":["tokio","runtime","task","abort","AbortHandle"],"kind":"struct"},"2:46300:7855":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"2:40215:29456":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"25:11027:37372":{"crate_id":25,"path":["tokio","task","unconstrained","_","__Origin"],"kind":"struct"},"1:6511:3189":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"17:14079:6180":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:11031:7659":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:3013:3070":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"25:1110:5280":{"crate_id":25,"path":["tokio","fs","open_options","OpenOptions"],"kind":"struct"},"25:8710:3228":{"crate_id":25,"path":["tokio","sync","batch_semaphore","Semaphore"],"kind":"struct"},"1:5827:3184":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"17:15992:6714":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"1:588:9601":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"6:4965:4547":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"16:6221:7002":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"25:9801:234":{"crate_id":25,"path":["tokio","sync","rwlock","read_guard","RwLockReadGuard"],"kind":"struct"},"5:5438:14961":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"25:13807:9504":{"crate_id":25,"path":["tokio","io","util","read_int","ReadU32"],"kind":"struct"},"26:340:5259":{"crate_id":26,"path":["mio","sys","unix","selector","epoll","event","debug_details","EventsDetails"],"kind":"struct"},"6:5306:4715":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"1:415:185":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"6:1490:4297":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"1:10247:31610":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"16:3856:6851":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"25:3088:3621":{"crate_id":25,"path":["tokio","io","util","sink","Sink"],"kind":"struct"},"27:7804:5038":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"17:13568:6089":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"25:13023:9520":{"crate_id":25,"path":["tokio","io","util","read_int","ReadI128Le"],"kind":"struct"},"11:2536:8442":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"17:15426:6542":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"25:13219:9516":{"crate_id":25,"path":["tokio","io","util","read_int","ReadU128Le"],"kind":"struct"},"2:44837:8603":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"24:95:2114":{"crate_id":24,"path":["http_body","frame","Kind"],"kind":"enum"},"20:2461:3648":{"crate_id":20,"path":["http","method","Inner"],"kind":"enum"},"17:11674:5878":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"1:3916:5269":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"16:4545:6860":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"1:4902:9726":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"5:4411:264":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:42866:3183":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"17:10818:5801":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"25:12384:5461":{"crate_id":25,"path":["tokio","io","util","write_vectored","WriteVectored"],"kind":"struct"},"6:5677:8357":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"2:40925:7739":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"17:10399:2018":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"2:4661:3453":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"6:6441:4899":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:13292:6044":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"17:11567:5861":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"2:11670:7666":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"2:41455:3188":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"2:32733:244":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"17:15138:6466":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"16:7914:7255":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"11:2231:5864":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"1:5045:3388":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"17:15445:6547":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"1:5321:203":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"6:7984:5225":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"1:9122:8383":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"2:43974:7793":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"16:2883:21603":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"6:7467:5137":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:9755:22509":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"11:328:8440":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"16:4787:6867":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"1:10069:7970":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"5:2748:5332":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"2:42316:3515":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"11:742:7357":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"17:14025:6172":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"20:1990:2915":{"crate_id":20,"path":["http","header","map","Cursor"],"kind":"enum"},"27:6218:4814":{"crate_id":27,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:42064:8593":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"17:15778:6656":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"17:11313:5838":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"1:4706:9716":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"25:9853:3451":{"crate_id":25,"path":["tokio","sync","watch","Ref"],"kind":"struct"},"27:6158:4789":{"crate_id":27,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"6:1663:4411":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:42366:3400":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"11:364:4023":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"2:46470:7866":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:43474:7775":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"6:6597:4984":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"25:10583:3648":{"crate_id":25,"path":["tokio","time","sleep","Inner"],"kind":"struct"},"17:16176:6755":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"27:2094:4422":{"crate_id":27,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"1:557:3961":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"16:7951:7259":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"17:15434:6543":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"6:5445:4771":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"1:12088:798":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"16:6394:7021":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"1:7754:5396":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"16:2729:6812":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"16:6116:6984":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"17:15734:6641":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:22924:9710":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:11069:31956":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"5:3639:3641":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"25:4433:5319":{"crate_id":25,"path":["tokio","net","unix","split_owned","ReuniteError"],"kind":"struct"},"20:2560:2057":{"crate_id":20,"path":["http","response","Builder"],"kind":"struct"},"1:6275:7985":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"6:6478:4913":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"17:11367:5818":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"27:8777:5211":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"16:2789:6815":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"5:7720:4066":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"27:1896:4352":{"crate_id":27,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:44861:8609":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"2:21646:7682":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"27:5702:4681":{"crate_id":27,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"6:5191:4657":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"17:13325:6046":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"16:3773:6849":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"1:2271:2058":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"1:7627:8111":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"2:48384:7947":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:12606:5641":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"25:8019:5398":{"crate_id":25,"path":["tokio","sync","mpsc","chan","RxFields"],"kind":"struct"},"2:43285:138":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"2:9498:85":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:4392:5271":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"25:10663:5451":{"crate_id":25,"path":["tokio","util","rand","FastRand"],"kind":"struct"},"16:2709:6811":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"5:933:3641":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"27:2053:4412":{"crate_id":27,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:40972:7615":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"18:670:5635":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"17:13089:2339":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:21399:33616":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"16:3709:6847":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"17:12824:22536":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"25:13562:9509":{"crate_id":25,"path":["tokio","io","util","read_int","ReadI64"],"kind":"struct"},"25:440:3185":{"crate_id":25,"path":["tokio","loom","std","barrier","BarrierWaitResult"],"kind":"struct"},"1:6547:3196":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"5:6421:3085":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"9:501:7427":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"6:586:4291":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"20:482:26729":{"crate_id":20,"path":["http","header","map","as_header_name","AsHeaderName"],"kind":"trait"},"2:44055:7799":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"6:5665:8352":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"11:700:3515":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"16:5865:6927":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"17:15836:6666":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"1:10935:3934":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"6:7485:5148":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:11335:4136":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"2:41096:7629":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"2:10672:2597":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"6:5636:4853":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"17:15608:6608":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"2:1717:3575":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"6:553:4273":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"25:6160:5355":{"crate_id":25,"path":["tokio","runtime","time","wheel","level","Level"],"kind":"struct"},"25:9469:5413":{"crate_id":25,"path":["tokio","sync","barrier","BarrierState"],"kind":"struct"},"3:234:226":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"2:44101:7804":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"16:3260:6844":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"20:2420:2453":{"crate_id":20,"path":["http","header","value","HeaderValue"],"kind":"struct"},"17:13187:6038":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"17:2175:22591":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"1:8981:9786":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"25:4870:5327":{"crate_id":25,"path":["tokio","runtime","park","ParkThread"],"kind":"struct"},"25:13121:9518":{"crate_id":25,"path":["tokio","io","util","read_int","ReadI32Le"],"kind":"struct"},"25:2807:37384":{"crate_id":25,"path":["tokio","io","util","buf_reader","SeekState"],"kind":"enum"},"14:0:2928":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"27:6197:4797":{"crate_id":27,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"25:9608:26872":{"crate_id":25,"path":["tokio","sync","mpsc","error","SendTimeoutError"],"kind":"enum"},"16:6445:7025":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"17:3264:5679":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:9685:33632":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"25:12331:5460":{"crate_id":25,"path":["tokio","io","util","write_all","WriteAll"],"kind":"struct"},"16:2859:6818":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"27:2101:4425":{"crate_id":27,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"16:4283:6853":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"27:7291:4909":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:3464:3077":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:2693:3597":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"30:114:4200":{"crate_id":30,"path":["socket2","socket","Socket"],"kind":"struct"},"2:30681:9699":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"6:5624:4847":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"2:7973:131":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"25:8174:5403":{"crate_id":25,"path":["tokio","sync","mpsc","unbounded","UnboundedSender"],"kind":"struct"},"25:6941:3962":{"crate_id":25,"path":["tokio","runtime","task","UnownedTask"],"kind":"struct"},"1:3504:2019":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"25:10560:26890":{"crate_id":25,"path":["tokio","time","interval","MissedTickBehavior"],"kind":"enum"},"1:6330:2085":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"11:2326:5498":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"16:7452:22473":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"27:5139:4545":{"crate_id":27,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:15273:6501":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"26:648:2342":{"crate_id":26,"path":["mio","token","Token"],"kind":"struct"},"2:22073:33619":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"6:8328:8374":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"2:3061:3147":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"2:3039:3126":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"6:1535:4319":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"17:13146:6030":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"2:46091:7847":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:1804:638":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"6:1496:4300":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:13470:152":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"27:5122:4542":{"crate_id":27,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"6:7306:5071":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"1:8224:3621":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"2:22031:2597":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"17:11063:5817":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"1:12078:1545":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"27:5720:4684":{"crate_id":27,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"16:7482:7199":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"27:5810:4705":{"crate_id":27,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"25:9463:3184":{"crate_id":25,"path":["tokio","sync","barrier","Barrier"],"kind":"struct"},"27:5353:4591":{"crate_id":27,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"17:14271:6226":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"17:10997:5810":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"20:2532:2866":{"crate_id":20,"path":["http","request","Parts"],"kind":"struct"},"17:14752:6306":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:22743:8524":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"17:1098:5668":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"17:13774:6136":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"2:43953:7791":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"22:1098:3515":{"crate_id":22,"path":["bytes","buf","iter","IntoIter"],"kind":"struct"},"2:10494:4104":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"25:5002:5336":{"crate_id":25,"path":["tokio","runtime","scheduler","current_thread","CurrentThread"],"kind":"struct"},"1:357:7960":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"17:513:5666":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"17:12597:5989":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"1:8085:5512":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"25:9985:3999":{"crate_id":25,"path":["tokio","task","local","LocalEnterGuard"],"kind":"struct"},"26:120:5257":{"crate_id":26,"path":["mio","event","event","fmt","EventDetails"],"kind":"struct"},"6:5112:4623":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"1:6243:4122":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"27:7853:5053":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:7894:15194":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"16:5897:22465":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:4997:421":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:3346:211":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:5883:7616":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"2:44125:3596":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"6:6664:5015":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:22271:9899":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"27:6285:4847":{"crate_id":27,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"25:11586:9535":{"crate_id":25,"path":["tokio","io","util","write_int","WriteU16Le"],"kind":"struct"},"2:40785:107":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:7938:8002":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"11:1887:3515":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"16:7653:7211":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"27:5986:4738":{"crate_id":27,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"6:4787:4441":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"16:2355:6795":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"6:5002:4567":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"15:327:21562":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"25:1437:5288":{"crate_id":25,"path":["tokio","io","async_fd","AsyncFdReadyGuard"],"kind":"struct"},"11:1160:7366":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"16:7270:6931":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"25:6897:5454":{"crate_id":25,"path":["tokio","runtime","task","waker","WakerRef"],"kind":"struct"},"18:521:26721":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"2:12617:14972":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"2:44095:7668":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"1:1596:7370":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"17:13308:6045":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"25:310:9698":{"crate_id":25,"path":["tokio","net","addr","ToSocketAddrs"],"kind":"trait"},"27:6226:4816":{"crate_id":27,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"25:5972:15261":{"crate_id":25,"path":["tokio","runtime","io","driver","Direction"],"kind":"enum"},"25:9814:3234":{"crate_id":25,"path":["tokio","sync","rwlock","write_guard_mapped","RwLockMappedWriteGuard"],"kind":"struct"},"6:8265:5242":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"1:9048:26872":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"25:6269:5361":{"crate_id":25,"path":["tokio","runtime","time","wheel","level","Expiration"],"kind":"struct"},"16:5794:6915":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"20:2693:2866":{"crate_id":20,"path":["http","uri","Parts"],"kind":"struct"},"2:48425:7950":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"27:6242:4821":{"crate_id":27,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"26:1035:5271":{"crate_id":26,"path":["mio","net","uds","listener","UnixListener"],"kind":"struct"},"1:4248:9737":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"17:13509:6066":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"25:12166:9523":{"crate_id":25,"path":["tokio","io","util","write_int","WriteU8"],"kind":"struct"},"25:7440:5332":{"crate_id":25,"path":["tokio","runtime","handle","Handle"],"kind":"struct"},"6:559:4276":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"1:5906:3195":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"2:42474:90":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"2:44869:8611":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"27:5604:4657":{"crate_id":27,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"6:4891:4511":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"17:14402:6246":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:4203:7606":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"5:7045:263":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:2807:126":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"27:5006:4514":{"crate_id":27,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"5:5856:250":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:22782:7690":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:11430:8627":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"17:14847:6389":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"2:42441:3515":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"1:922:7358":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"18:706:5641":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"17:13344:6047":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"17:10905:5803":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"27:6173:4791":{"crate_id":27,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:10827:3641":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"2:11069:7660":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"14:160:7349":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"16:6692:7077":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"25:8601:3648":{"crate_id":25,"path":["tokio","sync","oneshot","Inner"],"kind":"struct"},"1:10339:8068":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"1:12082:696":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"6:5250:4685":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:41034:7625":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:21744:2597":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"25:3686:5317":{"crate_id":25,"path":["tokio","net","tcp","socket","TcpSocket"],"kind":"struct"},"2:46270:7854":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:3237:31417":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"6:6788:8361":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"17:14235:6221":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"25:9359:4012":{"crate_id":25,"path":["tokio","sync","watch","Shared"],"kind":"struct"},"27:2109:4429":{"crate_id":27,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"1:2438:9679":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"17:9858:22528":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"6:1707:4429":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"11:1582:7367":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"17:16032:6042":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"1:11112:8621":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"18:507:5609":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:10441:3614":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"17:13399:6055":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"2:45109:3079":{"crate_id":2,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"1:533:4110":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"2:2688:15043":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"17:15646:6618":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"11:2548:8444":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"25:2769:26845":{"crate_id":25,"path":["tokio","io","util","async_write_ext","AsyncWriteExt"],"kind":"trait"},"2:22900:7704":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"16:7118:3396":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"20:2037:5505":{"crate_id":20,"path":["http","header","map","Links"],"kind":"struct"},"1:3015:226":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"1:9235:27647":{"crate_id":1,"path":["std","sys","pal","common","thread_local","fast_local","DtorState"],"kind":"enum"},"27:7380:4934":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"25:14147:3593":{"crate_id":25,"path":["tokio","io","util","lines","Lines"],"kind":"struct"},"17:13753:6132":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"1:363:7961":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"2:33991:3130":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:6677:3197":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"2:46045:7845":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"27:5264:4574":{"crate_id":27,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"16:6462:22468":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"6:5260:4691":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"16:5580:6824":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"5:5434:14960":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"1:903:4062":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"1:918:7357":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"2:0:536":{"crate_id":2,"path":["core"],"kind":"module"},"26:333:3913":{"crate_id":26,"path":["mio","sys","unix","selector","epoll","Selector"],"kind":"struct"},"25:8120:3976":{"crate_id":25,"path":["tokio","sync","mpsc","list","Tx"],"kind":"struct"},"5:3020:8512":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"2:42978:3440":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"20:2012:5502":{"crate_id":20,"path":["http","header","map","HashValue"],"kind":"struct"},"18:765:26720":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"6:1580:4350":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"16:6062:6962":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"18:613:36508":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"1:12096:1255":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"26:900:5269":{"crate_id":26,"path":["mio","net","udp","UdpSocket"],"kind":"struct"},"1:8631:8067":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"6:6519:4934":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"16:7706:22475":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:8385:5320":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"2:5997:7617":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"27:1703:4300":{"crate_id":27,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"17:13024:22538":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"16:7400:6836":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"27:9618:4807":{"crate_id":27,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"1:5581:7983":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:48204:7939":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"25:10690:4007":{"crate_id":25,"path":["tokio","util","idle_notified_set","IdleNotifiedSet"],"kind":"struct"},"2:4550:4085":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"6:6542:4947":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:44841:8604":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"17:4986:5689":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"16:5278:6877":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"17:0:2931":{"crate_id":17,"path":["object"],"kind":"module"},"16:5485:6820":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"1:9467:5281":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"17:13375:6051":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"25:3324:37370":{"crate_id":25,"path":["tokio","net","addr","sealed","OneOrMore"],"kind":"enum"},"18:589:5619":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"16:4733:6865":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"1:4119:9718":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"17:9671:22512":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"25:7791:5490":{"crate_id":25,"path":["tokio","sync","mpsc","block","Values"],"kind":"struct"},"2:42242:194":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"1:9178:3164":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"6:6775:8504":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"25:6275:5362":{"crate_id":25,"path":["tokio","runtime","time","wheel","Wheel"],"kind":"struct"},"25:3310:5314":{"crate_id":25,"path":["tokio","net","addr","sealed","MaybeReady"],"kind":"struct"},"1:7996:8005":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"11:1676:4027":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"17:14436:6259":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"6:5039:4587":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"0:168:1303":{"crate_id":0,"path":["hyper","rt"],"kind":"module"},"17:10759:5800":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"17:14038:6174":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"25:4895:5331":{"crate_id":25,"path":["tokio","runtime","driver","Driver"],"kind":"struct"},"2:40727:15038":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"25:4808:3934":{"crate_id":25,"path":["tokio","runtime","context","runtime_mt","exit_runtime","Reset"],"kind":"struct"},"0:165:1862":{"crate_id":0,"path":["hyper","ext"],"kind":"module"},"1:2657:3605":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"2:34533:3136":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:44926:15302":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"25:5571:3934":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","worker","block_in_place","Reset"],"kind":"struct"},"25:6929:3984":{"crate_id":25,"path":["tokio","runtime","task","Notified"],"kind":"struct"},"17:14599:6284":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"6:538:4265":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"31:0:3202":{"crate_id":31,"path":["num_cpus"],"kind":"module"},"1:8428:7975":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:10250:157":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"16:8055:7162":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"25:709:37108":{"crate_id":25,"path":["tokio","util","markers","SyncNotSend"],"kind":"struct"},"27:4792:4441":{"crate_id":27,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:48448:7951":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"11:123:4021":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"17:11764:5886":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"16:6882:7103":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"17:403:5663":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:46867:7878":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:3698:4015":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"17:14066:6179":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"6:5546:4808":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"17:15799:6659":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:5807:3575":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"17:12572:5800":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"6:6447:4900":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"27:8711:5191":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"6:1686:4421":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:46424:7860":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"25:9657:5347":{"crate_id":25,"path":["tokio","sync","notify","Waiter"],"kind":"struct"},"17:15214:6487":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"20:2496:3649":{"crate_id":20,"path":["http","method","extension","InlineExtension"],"kind":"struct"},"2:42971:3438":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"20:1884:5490":{"crate_id":20,"path":["http","header","map","Values"],"kind":"struct"},"6:1565:4338":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:10447:3612":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"25:11880:9529":{"crate_id":25,"path":["tokio","io","util","write_int","WriteI16"],"kind":"struct"},"25:5081:3936":{"crate_id":25,"path":["tokio","runtime","scheduler","current_thread","CoreGuard"],"kind":"struct"},"2:46221:7852":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"6:6821:5023":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"1:1607:7372":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"20:2138:5512":{"crate_id":20,"path":["http","header","name","Custom"],"kind":"struct"},"27:8366:5095":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"25:1538:5292":{"crate_id":25,"path":["tokio","io","async_fd","TryIoError"],"kind":"struct"},"5:1567:7443":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"17:14968:6434":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"26:676:3641":{"crate_id":26,"path":["mio","event","events","Iter"],"kind":"struct"},"17:15266:6500":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"17:11214:5828":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"25:8511:3983":{"crate_id":25,"path":["tokio","sync","notify","NotifyWaitersList"],"kind":"struct"},"16:7345:7192":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"6:4979:4554":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"1:9196:3165":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"27:7612:5013":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"5:1054:4031":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"25:9629:187":{"crate_id":25,"path":["tokio","sync","mutex","MutexGuard"],"kind":"struct"},"5:1317:5495":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"25:1150:33336":{"crate_id":25,"path":["tokio","future","maybe_done","MaybeDone"],"kind":"enum"},"16:2284:21577":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"18:113:26710":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"20:2687:1855":{"crate_id":20,"path":["http","uri","Uri"],"kind":"struct"},"25:12925:9522":{"crate_id":25,"path":["tokio","io","util","read_int","ReadF64Le"],"kind":"struct"},"17:12127:5942":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"6:5671:8354":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:9070:3398":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:11661:2081":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:13415:3083":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:6426:7619":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"5:3200:101":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"2:7428:33013":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"18:635:5628":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"27:6189:4792":{"crate_id":27,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"25:12758:5469":{"crate_id":25,"path":["tokio","io","util","read_to_end","ReadToEnd"],"kind":"struct"},"17:11051:5814":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"17:14131:6185":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"26:62:5253":{"crate_id":26,"path":["mio","poll","Registry"],"kind":"struct"},"20:1803:36527":{"crate_id":20,"path":["http","extensions","AnyClone"],"kind":"trait"},"2:41106:7750":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:2365:15206":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"2:40720:7726":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"17:12353:5967":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"6:5457:4780":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"2:11124:7662":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:42377:2016":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"25:3729:5268":{"crate_id":25,"path":["tokio","net","tcp","stream","TcpStream"],"kind":"struct"},"27:4836:4458":{"crate_id":27,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"25:12027:9526":{"crate_id":25,"path":["tokio","io","util","write_int","WriteU32"],"kind":"struct"},"5:3798:7445":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:2971:3068":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"27:5280:4577":{"crate_id":27,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:10033:3438":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"5:6167:3575":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"2:39865:3150":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"17:12464:22658":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"17:12388:5969":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"1:11352:7988":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"25:13415:9512":{"crate_id":25,"path":["tokio","io","util","read_int","ReadF64"],"kind":"struct"},"6:7575:5211":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"17:11537:5857":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"27:6123:4780":{"crate_id":27,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"25:1120:5281":{"crate_id":25,"path":["tokio","fs","read_dir","ReadDir"],"kind":"struct"},"27:8328:5088":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"}},"external_crates":{"31":{"name":"num_cpus","html_root_url":null},"28":{"name":"pin_project_lite","html_root_url":null},"25":{"name":"tokio","html_root_url":null},"22":{"name":"bytes","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"29":{"name":"tokio_macros","html_root_url":null},"26":{"name":"mio","html_root_url":null},"23":{"name":"itoa","html_root_url":"https://docs.rs/itoa/1.0.9/"},"20":{"name":"http","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"30":{"name":"socket2","html_root_url":null},"27":{"name":"libc","html_root_url":null},"24":{"name":"http_body","html_root_url":null},"21":{"name":"fnv","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":28}