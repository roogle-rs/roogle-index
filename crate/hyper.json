{"root":"0:0:2411","crate_version":"1.3.1","includes_private":false,"index":{"2:13280:35398":{"id":"2:13280:35398","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"üóª‚ààüåè\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"üçî‚ààüåè\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:382:1326":{"id":"0:382:1326","crate_id":0,"name":"poll","span":{"filename":"src/upgrade.rs","begin":[227,4],"end":[240,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42307:2571","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13889:116","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44868:207","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:44843:151","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:131:2721":{"id":"0:131:2721","crate_id":0,"name":"is_body_write_aborted","span":{"filename":"src/error.rs","begin":[226,4],"end":[238,5]},"visibility":"public","docs":"Returns true if the body write was aborted.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[525,0],"end":[529,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10392:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:145:809"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:380":{"id":"0:380","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[224,0],"end":[241,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Future","id":"2:44843:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:487:3400","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:381:199","0:382:1326"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13281:336":{"id":"2:13281:336","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:13282:3218","`u8`":"1:12382:1865"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2999-0:361:3397":{"id":"b:2:2999-0:361:3397","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2958:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2968:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:3397","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3002:138","2:3003:1820"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5712:36117":{"id":"5:5712:36117","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:306:2837","`String`":"5:7754:243"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:306:2837","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7754:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:63:2663":{"id":"0:63:2663","crate_id":0,"name":"size_hint","span":{"filename":"src/body/incoming.rs","begin":[293,4],"end":[315,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SizeHint","id":"24:106:2562","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:255-0:240:3100":{"id":"0:255-0:240:3100","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[15,22],"end":[15,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::timer::Sleep","name":"Sleep","id":"0:240:3100","glob":false}}},"0:483:2813":{"id":"0:483:2813","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42307:2571","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13889:116","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8486:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44868:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3069:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:239:3275":{"id":"0:239:3275","crate_id":0,"name":"reset","span":{"filename":"src/rt/timer.rs","begin":[78,4],"end":[80,5]},"visibility":"default","docs":"Reset a future to resolve at `new_deadline` instead.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["sleep",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Pin","id":"2:42307:2571","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:306:2837","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Sleep","id":"0:240:3100","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}}}}],["new_deadline",{"resolved_path":{"name":"Instant","id":"1:9430:162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13298:6802":{"id":"2:13298:6802","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"yÃÜ\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'yÃÜ'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12363:476"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:44013:6794","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13342:29041":{"id":"2:13342:29041","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12363:476","self::pattern":"2:12960:3894","str::rsplitn":"2:13345:29043"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:44147:6786","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:312:3358":{"id":"0:312:3358","crate_id":0,"name":"ServiceFn","span":{"filename":"src/service/util.rs","begin":[42,0],"end":[45,1]},"visibility":"public","docs":"Service returned by [`service_fn`]","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}}},"0:493:2788":{"id":"0:493:2788","crate_id":0,"name":"io","span":{"filename":"src/upgrade.rs","begin":[85,4],"end":[85,13]},"visibility":"public","docs":"The original IO object used before the upgrade.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"T"}}},"0:273:151":{"id":"0:273:151","crate_id":0,"name":"Future","span":{"filename":"src/service/http.rs","begin":[21,4],"end":[21,79]},"visibility":"default","docs":"The `Future` returned by this `Service`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:44843:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"Result","id":"2:42315:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Response","id":"20:2587:2393","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"ResBody","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:269:3303","args":null}}}}],"bindings":[]}}}}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:269:3303","args":null}}}}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null}}},"0:15-0:116:226":{"id":"0:15-0:116:226","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[101,30],"end":[101,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::error::Result","name":"Result","id":"0:116:226","glob":false}}},"b:2:2988-0:361:3397":{"id":"b:2:2988-0:361:3397","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2961:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:3397","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2990:839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:363:1246":{"id":"0:363:1246","crate_id":0,"name":"on","span":{"filename":"src/upgrade.rs","begin":[105,0],"end":[107,1]},"visibility":"public","docs":"Gets a pending HTTP upgrade from this message.\n\nThis can be called on the following types:\n\n- `http::Request<B>`\n- `http::Response<B>`\n- `&mut http::Request<B>`\n- `&mut http::Response<B>`","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["msg",{"generic":"T"}]],"output":{"resolved_path":{"name":"OnUpgrade","id":"0:487:3400","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"sealed::CanUpgrade","id":"0:400:3419","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:217":{"id":"0:217","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[351,0],"end":[353,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32415:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Write","id":"0:175:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:32473:2803","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["poll_write_vectored","is_write_vectored"],"trait":{"name":"Write","id":"0:175:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"items":["0:482:2812","0:483:2813","0:484:2818","0:485:2816","0:486:2817"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:248:3136":{"id":"0:248:3136","crate_id":0,"name":"Sealed","span":{"filename":"src/rt/timer.rs","begin":[126,4],"end":[126,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":[]}}},"5:5950:1795":{"id":"5:5950:1795","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7754:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13336:35402":{"id":"2:13336:35402","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12960:3894","str::split":"2:13327:29035","prim@char":"1:12363:476","`DoubleEndedIterator`":"2:8329:130","str::rsplit_terminator":"2:13339:35403"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:44093:6958","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13309:33479":{"id":"2:13309:33479","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Za≈º√≥≈Çƒá gƒô≈õlƒÖ ja≈∫≈Ñ\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:44335:6801","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:281:151":{"id":"0:281:151","crate_id":0,"name":"Future","span":{"filename":"src/service/http.rs","begin":[36,4],"end":[36,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Future","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"Service","id":"0:292:2888","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Request","id":"20:2567:2392","args":{"angle_bracketed":{"args":[{"type":{"generic":"B1"}}],"bindings":[]}}}}}],"bindings":[]}}}}}}}},"0:213:2804":{"id":"0:213:2804","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[303,4],"end":[309,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42307:2571","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13889:116","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:469:2795","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44868:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3069:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:308:3304":{"id":"0:308:3304","crate_id":0,"name":"service_fn","span":{"filename":"src/service/util.rs","begin":[30,0],"end":[39,1]},"visibility":"public","docs":"Create a `Service` from a function.\n\n# Example\n\n```\nuse bytes::Bytes;\nuse hyper::{body, Request, Response, Version};\nuse http_body_util::Full;\nuse hyper::service::service_fn;\n\nlet service = service_fn(|req: Request<body::Incoming>| async move {\n    if req.version() == Version::HTTP_11 {\n        Ok(Response::new(Full::<Bytes>::from(\"Hello World\")))\n    } else {\n        // Note: it's usually better to return a Response\n        // with an appropriate StatusCode instead of an Err.\n        Err(\"not HTTP/1.1, abort connection\")\n    }\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"ServiceFn","id":"0:312:3358","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3450:141","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"crate::Request","id":"20:2567:2392","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}}],"output":{"generic":"S"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:44843:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:271:3308":{"id":"0:271:3308","crate_id":0,"name":"ResBody","span":{"filename":"src/service/http.rs","begin":[11,4],"end":[11,23]},"visibility":"default","docs":"The `Body` body of the `http::Response`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Body","id":"24:42:2560","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}}},"a:2:32473:2803-0:361:3397":{"id":"a:2:32473:2803-0:361:3397","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32473:2803","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:3397","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13291:35399":{"id":"2:13291:35399","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nunsafe {\n    assert_eq!(\"L√∂we ËÄÅËôé L√©opard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12369:1735","str::slice_mut_unchecked":"2:13292:35400","crate::ops::Index":"2:39728:3683"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13292:35400":{"id":"2:13292:35400","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12369:1735","crate::ops::IndexMut":"2:3485:3684","str::slice_unchecked":"2:13291:35399"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2984-0:183:3099":{"id":"b:2:2984-0:183:3099","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2961:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2958:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:183:3099","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2987:2725"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:272:138":{"id":"0:272:138","crate_id":0,"name":"Error","span":{"filename":"src/service/http.rs","begin":[18,4],"end":[18,54]},"visibility":"default","docs":"The error type that can occur within this `Service`.\n\nNote: Returning an `Error` to a hyper server will cause the connection\nto be abruptly aborted. In most cases, it is better to return a `Response`\nwith a 4xx or 5xx status code.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2958:163","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:306:2837","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"StdError","id":"2:3047:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:32414:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Sync","id":"2:3207:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}}},"2:13403:28956":{"id":"2:13403:28956","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1061:40326"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2711-0:469:2795":{"id":"b:2:2711-0:469:2795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32415:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2705:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:469:2795","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2713:3556"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:37-24:106:2562":{"id":"0:37-24:106:2562","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[25,0],"end":[25,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"http_body::SizeHint","name":"SizeHint","id":"24:106:2562","glob":false}}},"0:14-0:119:138":{"id":"0:14-0:119:138","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[101,23],"end":[101,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::error::Error","name":"Error","id":"0:119:138","glob":false}}},"0:179:2818":{"id":"0:179:2818","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[84,4],"end":[86,5]},"visibility":"default","docs":"Returns whether this writer has an efficient `poll_write_vectored`\nimplementation.\n\nThe default implementation returns `false`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2711-0:50:2564":{"id":"b:2:2711-0:50:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32415:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2705:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2713:3556"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:10-20:2731:2395":{"id":"0:10-20:2731:2395","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,69],"end":[96,72]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Uri","name":"Uri","id":"20:2731:2395","glob":false}}},"0:31:2400":{"id":"0:31:2400","crate_id":0,"name":"body","span":{"filename":"src/body/mod.rs","begin":[1,0],"end":[46,1]},"visibility":"public","docs":"Streaming bodies for Requests and Responses\n\nFor both [Clients](crate::client) and [Servers](crate::server), requests and\nresponses use streaming bodies, instead of complete buffering. This\nallows applications to not use memory they don't need, and allows exerting\nback-pressure on connections by only reading when asked.\n\nThere are two pieces to this in hyper:\n\n- **The [`Body`] trait** describes all possible bodies.\n  hyper allows any body type that implements `Body`, allowing\n  applications to have fine-grained control over their streaming.\n- **The [`Incoming`] concrete type**, which is an implementation\n  of `Body`, and returned by hyper as a \"receive stream\" (so, for server\n  requests and client responses).\n\nThere are additional implementations available in [`http-body-util`][],\nsuch as a `Full` or `Empty` body.\n\n[`http-body-util`]: https://docs.rs/http-body-util","links":{"`Body`":"24:42:2560","`Incoming`":"0:50:2564"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:33-22:24:2558","0:34-22:399:2559","0:35-24:42:2560","0:36-24:89:2561","0:37-24:106:2562","0:38-0:50:2564"],"is_stripped":false}}},"0:476:2804":{"id":"0:476:2804","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[295,4],"end":[295,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42307:2571","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13889:116","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:469:2795","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44868:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3069:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2711-0:183:3099":{"id":"b:2:2711-0:183:3099","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32415:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2705:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:183:3099","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2713:3556"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32414:237-0:487:3400":{"id":"a:2:32414:237-0:487:3400","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32414:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:487:3400","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13354:2905":{"id":"2:13354:2905","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12960:3894","`DoubleEndedIterator`":"2:8329:130","prim@char":"1:12363:476","str::rmatches":"2:13357:35404"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:44247:6962","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:339-0:292:2888":{"id":"0:339-0:292:2888","crate_id":0,"name":null,"span":{"filename":"src/service/mod.rs","begin":[29,0],"end":[29,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::service::Service","name":"Service","id":"0:292:2888","glob":false}}},"5:5703:36115":{"id":"5:5703:36115","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Œ£\";\n\nassert_eq!(\"œÉ\", sigma.to_lowercase());\n\n// but at the end of a word, it's œÇ, not œÉ:\nlet odysseus = \"·ΩàŒîŒ•Œ£Œ£ŒïŒéŒ£\";\n\nassert_eq!(\"·ΩÄŒ¥œÖœÉœÉŒµœçœÇ\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"ÂÜúÂéÜÊñ∞Âπ¥\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7754:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7754:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2994-0:361:3397":{"id":"b:2:2994-0:361:3397","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2968:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2964:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:3397","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2997:138","2:2998:1822"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3823-0:183:3099":{"id":"b:2:3823-0:183:3099","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32415:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3821:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:183:3099","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3825:1835"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:211":{"id":"0:211","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[298,0],"end":[310,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"DerefMut","id":"2:3428:3146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"","id":"2:3415:125","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"0:173:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:173:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"std::pin::Pin","id":"2:42307:2571","args":{"angle_bracketed":{"args":[{"type":{"generic":"P"}}],"bindings":[]}}}},"items":["0:213:2804"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:260:2404":{"id":"0:260:2404","crate_id":0,"name":"service","span":{"filename":"src/service/mod.rs","begin":[1,0],"end":[30,31]},"visibility":"public","docs":"Asynchronous Services\n\nA [`Service`] is a trait representing an asynchronous\nfunction of a request to a response. It's similar to\n`async fn(Request) -> Result<Response, Error>`.\n\nThe argument and return value isn't strictly required to be for HTTP.\nTherefore, hyper uses several \"trait aliases\" to reduce clutter around\nbounds. These are:\n\n- `HttpService`: This is blanketly implemented for all types that\n  implement `Service<http::Request<B1>, Response = http::Response<B2>>`.\n\n# HttpService\n\nIn hyper, especially in the server setting, a `Service` is usually bound\nto a single connection. It defines how to respond to **all** requests that\nconnection will receive.\n\nThe helper [`service_fn`] should be sufficient for most cases, but\nif you need to implement `Service` for a type manually, you can follow the example\nin `service_struct_impl.rs`.","links":{"`service_fn`":"0:308:3304","`Service`":"0:292:2888"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:338-0:269:3303","0:339-0:292:2888","0:340-0:308:3304"],"is_stripped":false}}},"0:0:2411":{"id":"0:0:2411","crate_id":0,"name":"hyper","span":{"filename":"src/lib.rs","begin":[1,0],"end":[138,1]},"visibility":"public","docs":" # hyper\n\n hyper is a **fast** and **correct** HTTP implementation written in and for Rust.\n\n ## Features\n\n - HTTP/1 and HTTP/2\n - Asynchronous design\n - Leading in performance\n - Tested and **correct**\n - Extensive production use\n - [Client](client/index.html) and [Server](server/index.html) APIs\n\n If just starting out, **check out the [Guides](https://hyper.rs/guides/1/)\n first.**\n\n ## \"Low-level\"\n\n hyper is a lower-level HTTP library, meant to be a building block\n for libraries and applications.\n\n If looking for just a convenient HTTP client, consider the\n [reqwest](https://crates.io/crates/reqwest) crate.\n\n # Optional Features\n\n hyper uses a set of [feature flags] to reduce the amount of compiled code.\n It is possible to just enable certain features over others. By default,\n hyper does not enable any features but allows one to enable a subset for\n their use case. Below is a list of the available feature flags. You may\n also notice above each function, struct and trait there is listed one or\n more feature flags that are required for that item to be used.\n\n If you are new to hyper it is possible to enable the `full` feature flag\n which will enable all public APIs. Beware though that this will pull in\n many extra dependencies that you may not need.\n\n The following optional features are available:\n\n - `http1`: Enables HTTP/1 support.\n - `http2`: Enables HTTP/2 support.\n - `client`: Enables the HTTP `client`.\n - `server`: Enables the HTTP `server`.\n\n [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section\n\n # Unstable Features\n\n hyper includes a set of unstable optional features that can be enabled through the use of a\n feature flag and a [configuration flag].\n\n The following is a list of feature flags and their corresponding `RUSTFLAG`:\n - `ffi`: Enables C API for hyper `hyper_unstable_ffi`.\n - `tracing`: Enables debug logging with `hyper_unstable_tracing`.\n\n Enabling an unstable feature is possible with the following `cargo` command, as of version `1.64.0`:\n ```notrust\n RUSTFLAGS=\"--cfg hyper_unstable_tracing\" cargo rustc --features client,http1,http2,tracing --crate-type cdylib\n```\n [configuration flag]: https://doc.rust-lang.org/reference/conditional-compilation.html\n\n # Stability\n\n It's worth talking a bit about the stability of hyper. hyper's API follows\n [SemVer](https://semver.org). Breaking changes will only be introduced in\n major versions, if ever. New additions to the API, such as new types,\n methods, or traits will only be added in minor versions.\n\n Some parts of hyper are documented as NOT being part of the stable API. The\n following is a brief list, you can read more about each one in the relevant\n part of the documentation.\n\n - Downcasting error types from `Error::source()` is not considered stable.\n - Private dependencies use of global variables is not considered stable.\n   So, if a dependency uses `log` or `tracing`, hyper doesn't promise it\n   will continue to do so.\n - Behavior from default options is not stable. hyper reserves the right to\n   add new options that are enabled by default which might alter the\n   behavior, for the purposes of protection. It is also possible to _change_\n   what the default options are set to, also in efforts to protect the\n   most people possible.","links":{},"attrs":["#![deny(missing_docs)]","#![deny(missing_debug_implementations)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:31:2400","0:162:2402","0:163:1485","0:260:2404","0:341:2405","0:5-20:5:2390","0:6-20:2488:2391","0:7-20:2567:2392","0:8-20:2587:2393","0:9-20:2606:2394","0:10-20:2731:2395","0:11-20:2788:2396","0:12-20:1794:2397","0:14-0:119:138","0:15-0:116:226"],"is_stripped":false}}},"a:2:42276:3933-0:361:3397":{"id":"a:2:42276:3933-0:361:3397","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42276:3933","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:3397","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:365":{"id":"0:365","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[133,0],"end":[163,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Upgraded","id":"0:361:3397","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:366:3426"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2714-0:491:3404":{"id":"b:2:2714-0:491:3404","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32415:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2708:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:491:3404","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2716:27438"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42276:3933-0:50:2564":{"id":"a:2:42276:3933-0:50:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42276:3933","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2984-0:119:138":{"id":"b:2:2984-0:119:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2961:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2958:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2987:2725"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3823-0:469:2795":{"id":"b:2:3823-0:469:2795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32415:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3821:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:469:2795","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3825:1835"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:481:2817":{"id":"0:481:2817","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42307:2571","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13889:116","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44868:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3069:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:292:2888":{"id":"0:292:2888","crate_id":0,"name":"Service","span":{"filename":"src/service/service.rs","begin":[20,0],"end":[40,1]},"visibility":"public","docs":"An asynchronous function from a `Request` to a `Response`.\n\nThe `Service` trait is a simplified interface making it easy to write\nnetwork applications in a modular and reusable way, decoupled from the\nunderlying protocol.\n\n# Functional\n\nA `Service` is a function of a `Request`. It immediately returns a\n`Future` representing the eventual completion of processing the\nrequest. The actual request processing may happen at any time in the\nfuture, on any thread or executor. The processing may depend on calling\nother services. At some point in the future, the processing will complete,\nand the `Future` will resolve to a response or error.\n\nAt a high level, the `Service::call` function represents an RPC request. The\n`Service` value can be a server or a client.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:294:2393","0:295:138","0:296:151","0:297:439"],"generics":{"params":[{"name":"Request","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}}},"0:116:226":{"id":"0:116:226","crate_id":0,"name":"Result","span":{"filename":"src/error.rs","begin":[6,0],"end":[6,51]},"visibility":"public","docs":"Result type often returned from methods that can have hyper `Error`s.","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"std::result::Result","id":"2:42315:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}}},"0:191:3198":{"id":"0:191:3198","crate_id":0,"name":"uninit","span":{"filename":"src/rt/io.rs","begin":[150,4],"end":[156,5]},"visibility":"public","docs":"Create a new `ReadBuf` with a slice of uninitialized bytes.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["raw",{"borrowed_ref":{"lifetime":"'data","mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"2:30795:3144","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2994-0:487:3400":{"id":"b:2:2994-0:487:3400","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2968:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2964:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:487:3400","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2997:138","2:2998:1822"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:495":{"id":"0:495","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[81,9],"end":[81,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10387:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10387:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:491:3404","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:497:809"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13273:35395":{"id":"2:13273:35395","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nassert!(s.is_char_boundary(0));\n// start of `ËÄÅ`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `√∂`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `ËÄÅ`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:485:2816":{"id":"0:485:2816","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42307:2571","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13889:116","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44868:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3069:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:237:3269":{"id":"0:237:3269","crate_id":0,"name":"sleep","span":{"filename":"src/rt/timer.rs","begin":[72,4],"end":[72,63]},"visibility":"default","docs":"Return a future that resolves in `duration` time.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["duration",{"resolved_path":{"name":"Duration","id":"2:44694:131","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Pin","id":"2:42307:2571","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:306:2837","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Sleep","id":"0:240:3100","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:13405:35418":{"id":"2:13405:35418","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"‚ù§\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_debug().to_string(), \"‚ù§\\\\n!\");\n```","links":{"`char::escape_debug`":"2:5013:35418"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:44342:6870","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:223:2818":{"id":"0:223:2818","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[376,4],"end":[378,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13308:35401":{"id":"2:13308:35401","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:44307:6964","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3823-0:487:3400":{"id":"b:2:3823-0:487:3400","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32415:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3821:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:487:3400","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3825:1835"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2994-0:50:2564":{"id":"b:2:2994-0:50:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2968:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2964:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2997:138","2:2998:1822"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:126:2910":{"id":"0:126:2910","crate_id":0,"name":"is_parse_status","span":{"filename":"src/error.rs","begin":[187,4],"end":[189,5]},"visibility":"public","docs":"Returns true if this was an HTTP parse error caused by an invalid response status code or\nreason phrase.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13357:35404":{"id":"2:13357:35404","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12960:3894","`DoubleEndedIterator`":"2:8329:130","prim@char":"1:12363:476","str::matches":"2:13354:2905"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:44265:6963","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:14901","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3823-0:119:138":{"id":"b:2:3823-0:119:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32415:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3821:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3825:1835"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5715:27583":{"id":"5:5715:27583","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert_eq!(\"gr√º√üe, j√ºrgen ‚ù§\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:13401:27586"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7754:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2984-0:50:2564":{"id":"b:2:2984-0:50:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2961:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2958:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2987:2725"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3207:247-0:50:2564":{"id":"a:2:3207:247-0:50:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3207:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:401:3421":{"id":"0:401:3421","crate_id":0,"name":"on_upgrade","span":{"filename":"src/upgrade.rs","begin":[321,8],"end":[321,41]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"OnUpgrade","id":"0:487:3400","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:13366:35407":{"id":"2:13366:35407","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32473:2803-0:491:3404":{"id":"a:2:32473:2803-0:491:3404","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32473:2803","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32473:2803","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:491:3404","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13400:27585":{"id":"2:13400:27585","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Gr√º√üe, J√ºrgen ‚ù§\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GR√º√üE, J√ºRGEN ‚ù§\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:34-22:399:2559":{"id":"0:34-22:399:2559","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[22,21],"end":[22,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"bytes::Bytes","name":"Bytes","id":"22:399:2559","glob":false}}},"a:2:3242:3711-0:487:3400":{"id":"a:2:3242:3711-0:487:3400","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3242:3711","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:487:3400","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:275":{"id":"0:275","crate_id":0,"name":null,"span":{"filename":"src/service/http.rs","begin":[27,0],"end":[41,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B1","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B2","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Service","id":"0:292:2888","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::Request","id":"20:2567:2392","args":{"angle_bracketed":{"args":[{"type":{"generic":"B1"}}],"bindings":[]}}}}}],"bindings":[{"name":"Response","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"crate::Response","id":"20:2587:2393","args":{"angle_bracketed":{"args":[{"type":{"generic":"B2"}}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"B2"},"bounds":[{"trait_bound":{"trait":{"name":"Body","id":"24:42:2560","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"","id":"0:292:2888","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2958:163","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:306:2837","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"StdError","id":"2:3047:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:32414:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Sync","id":"2:3207:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"HttpService","id":"0:269:3303","args":{"angle_bracketed":{"args":[{"type":{"generic":"B1"}}],"bindings":[]}}},"for":{"generic":"T"},"items":["0:279:3308","0:280:138","0:281:151"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2997:138":{"id":"2:2997:138","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2968:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"a:2:42276:3933-0:469:2795":{"id":"a:2:42276:3933-0:469:2795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42276:3933","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:469:2795","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:124":{"id":"0:124","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[170,0],"end":[512,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:125:2904","0:126:2910","0:127:2912","0:128:2914","0:129:2754","0:130:2917","0:131:2721","0:132:2920"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2994-0:469:2795":{"id":"b:2:2994-0:469:2795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2968:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2964:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:469:2795","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2997:138","2:2998:1822"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:127:2912":{"id":"0:127:2912","crate_id":0,"name":"is_user","span":{"filename":"src/error.rs","begin":[192,4],"end":[194,5]},"visibility":"public","docs":"Returns true if this error was caused by user code.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:484:2818":{"id":"0:484:2818","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2988-0:469:2795":{"id":"b:2:2988-0:469:2795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2961:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:469:2795","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2990:839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42277:3932-0:487:3400":{"id":"a:2:42277:3932-0:487:3400","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42277:3932","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:487:3400","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:366:3426":{"id":"0:366:3426","crate_id":0,"name":"downcast","span":{"filename":"src/upgrade.rs","begin":[151,4],"end":[162,5]},"visibility":"public","docs":"Tries to downcast the internal trait object to the type passed.\n\nOn success, returns the downcasted parts. On error, returns the\n`Upgraded` back.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42315:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Parts","id":"0:491:3404","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}},{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"0:173:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Write","id":"0:175:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:32473:2803","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5714:27582":{"id":"5:5714:27582","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert_eq!(\"GR√º√üE, J√ºRGEN ‚ù§\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:13400:27585"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7754:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5695":{"id":"5:5695","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5696:36113","5:5697:3642","5:5700:36114","5:5703:36115","5:5711:36116","5:5712:36117","5:5713:4167","5:5714:27582","5:5715:27583"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:491:3404":{"id":"0:491:3404","crate_id":0,"name":"Parts","span":{"filename":"src/upgrade.rs","begin":[83,0],"end":[95,1]},"visibility":"public","docs":"The deconstructed parts of an [`Upgraded`] type.\n\nIncludes the original IO type, and a read buffer of bytes that the\nHTTP state machine may have already read before completing an upgrade.","links":{"`Upgraded`":"0:361:3397"},"attrs":["#[non_exhaustive]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:493:2788","0:494:3412"],"fields_stripped":false}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:3207:247-0:491:3404","a:2:32414:237-0:491:3404","a:2:42277:3932-0:491:3404","a:2:3242:3711-0:491:3404","a:2:42276:3933-0:491:3404","a:2:32473:2803-0:491:3404","b:2:2999-0:491:3404","b:2:2994-0:491:3404","b:2:3823-0:491:3404","b:2:2714-0:491:3404","b:2:2984-0:491:3404","b:2:2988-0:491:3404","b:2:2711-0:491:3404","0:495"]}}},"0:163:1485":{"id":"0:163:1485","crate_id":0,"name":"rt","span":{"filename":"src/rt/mod.rs","begin":[1,0],"end":[42,1]},"visibility":"public","docs":"Runtime components\n\nThe traits and types within this module are used to allow plugging in\nruntime types. These include:\n\n- Executors\n- Timers\n- IO transports","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:164:3097","0:250-0:173:2794","0:251-0:183:3099","0:252-0:469:2795","0:253-0:175:2796","0:255-0:240:3100","0:256-0:236:3101","0:257:3117"],"is_stripped":false}}},"0:369:2804":{"id":"0:369:2804","crate_id":0,"name":"poll_read","span":{"filename":"src/upgrade.rs","begin":[166,4],"end":[172,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42307:2571","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13889:116","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:469:2795","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44868:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:3069:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:183:3099":{"id":"0:183:3099","crate_id":0,"name":"ReadBuf","span":{"filename":"src/rt/io.rs","begin":[121,0],"end":[125,1]},"visibility":"public","docs":"A wrapper around a byte buffer that is incrementally filled and initialized.\n\nThis type is a sort of \"double cursor\". It tracks three regions in the\nbuffer: a region at the beginning of the buffer that has been logically\nfilled with data, a region that has been initialized at some point but not\nyet logically filled, and a region at the end that may be uninitialized.\nThe filled region is guaranteed to be a subset of the initialized region.\n\nIn summary, the contents of the buffer can be visualized as:\n\n```not_rust\n[             capacity              ]\n[ filled |         unfilled         ]\n[    initialized    | uninitialized ]\n```\n\nIt is undefined behavior to de-initialize any bytes from the uninitialized\nregion, since it is merely unknown whether this region is uninitialized or\nnot, and if part of it turns out to be initialized, it must stay initialized.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:188","a:2:3207:247-0:183:3099","a:2:32414:237-0:183:3099","a:2:42277:3932-0:183:3099","a:2:3242:3711-0:183:3099","a:2:42276:3933-0:183:3099","a:2:32473:2803-0:183:3099","b:2:2999-0:183:3099","b:2:2994-0:183:3099","b:2:3823-0:183:3099","b:2:2714-0:183:3099","b:2:2984-0:183:3099","b:2:2988-0:183:3099","b:2:2711-0:183:3099","0:197"]}}},"b:2:2714-0:119:138":{"id":"b:2:2714-0:119:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32415:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2708:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2716:27438"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:132:2920":{"id":"0:132:2920","crate_id":0,"name":"is_timeout","span":{"filename":"src/error.rs","begin":[241,4],"end":[243,5]},"visibility":"public","docs":"Returns true if the error was caused by a timeout.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:400:3419":{"id":"0:400:3419","crate_id":0,"name":"CanUpgrade","span":{"filename":"src/upgrade.rs","begin":[320,4],"end":[322,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:401:3421"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"2:13348:29045":{"id":"2:13348:29045","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42182:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:188":{"id":"0:188","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[135,0],"end":[212,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReadBuf","id":"0:183:3099","args":{"angle_bracketed":{"args":[{"lifetime":"'data"}],"bindings":[]}}}},"items":["0:190:1188","0:191:3198","0:192:3191","0:193:3201"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2994-0:183:3099":{"id":"b:2:2994-0:183:3099","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2968:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2964:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:183:3099","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2997:138","2:2998:1822"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2999-0:119:138":{"id":"b:2:2999-0:119:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2958:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2968:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3002:138","2:3003:1820"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13389:35415":{"id":"2:13389:35415","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12363:476","self::pattern":"2:12960:3894"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:479:2818":{"id":"0:479:2818","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13373:35411":{"id":"2:13373:35411","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊™') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:338-0:269:3303":{"id":"0:338-0:269:3303","crate_id":0,"name":null,"span":{"filename":"src/service/mod.rs","begin":[28,0],"end":[28,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::http::HttpService","name":"HttpService","id":"0:269:3303","glob":false}}},"0:209":{"id":"0:209","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[294,0],"end":[296,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32415:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Read","id":"0:173:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:32473:2803","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:173:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"items":["0:476:2804"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:482:2812":{"id":"0:482:2812","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42307:2571","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13889:116","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44868:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3069:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13374:35412":{"id":"2:13374:35412","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12363:476","self::pattern":"2:12960:3894"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12986:14900","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:35-24:42:2560":{"id":"0:35-24:42:2560","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[23,0],"end":[23,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"http_body::Body","name":"Body","id":"24:42:2560","glob":false}}},"b:2:3823-0:361:3397":{"id":"b:2:3823-0:361:3397","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32415:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3821:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:3397","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3825:1835"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3242:3711-0:491:3404":{"id":"a:2:3242:3711-0:491:3404","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3242:3711","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:491:3404","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:13386:35414":{"id":"2:13386:35414","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12363:476","self::pattern":"2:12960:3894"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:14901","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2988-0:183:3099":{"id":"b:2:2988-0:183:3099","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2961:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:183:3099","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2990:839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:296:151":{"id":"0:296:151","crate_id":0,"name":"Future","span":{"filename":"src/service/service.rs","begin":[28,4],"end":[28,70]},"visibility":"default","docs":"The future response value.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:44843:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"Result","id":"2:42315:226","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Response","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:292:2888","args":null}}}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:292:2888","args":null}}}}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null}}},"2:13399:27584":{"id":"2:13399:27584","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferr√∂s\".eq_ignore_ascii_case(\"FERR√∂S\"));\nassert!(!\"Ferr√∂s\".eq_ignore_ascii_case(\"FERR√ñS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3002:138":{"id":"2:3002:138","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32338:3617","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:2999-0:50:2564":{"id":"b:2:2999-0:50:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2958:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2968:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3002:138","2:3003:1820"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2984-0:361:3397":{"id":"b:2:2984-0:361:3397","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2961:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2958:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:3397","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2987:2725"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:294:2393":{"id":"0:294:2393","crate_id":0,"name":"Response","span":{"filename":"src/service/service.rs","begin":[22,4],"end":[22,18]},"visibility":"default","docs":"Responses given by the service.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}}},"b:5:793-0:487:3400":{"id":"b:5:793-0:487:3400","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2727:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:789:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:487:3400","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:795:4045","5:796:4046","5:797:4047"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:370":{"id":"0:370","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[175,0],"end":[203,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["poll_write_vectored","is_write_vectored"],"trait":{"name":"Write","id":"0:175:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:3397","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:371:2812","0:372:2813","0:373:2816","0:374:2817","0:375:2818"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:385:809":{"id":"0:385:809","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[244,4],"end":[246,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10353:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10334:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:797:4047":{"id":"5:797:4047","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13295:29033":{"id":"2:13295:29033","crate_id":2,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that‚Äôs not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\nlet s = \"Per Martin-L√∂f\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-L√∂f\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside ‚Äú√∂‚Äù\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"2:13296:29034"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42182:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:222:2813":{"id":"0:222:2813","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[368,4],"end":[374,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42307:2571","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13889:116","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8486:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44868:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3069:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13351:29046":{"id":"2:13351:29046","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42182:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:14901","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13692:963":{"id":"2:13692:963","crate_id":2,"name":"into_future","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoFuture","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"IntoFuture","id":"2:44846:164","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:377:809":{"id":"0:377:809","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[206,4],"end":[208,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10353:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10334:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13272:2806":{"id":"2:13272:2806","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13327:29035":{"id":"2:13327:29035","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12960:3894","`DoubleEndedIterator`":"2:8329:130","prim@char":"1:12363:476","str::split_whitespace":"2:13301:33503","str::rsplit":"2:13333:29039"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:44043:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:269:3303":{"id":"0:269:3303","crate_id":0,"name":"HttpService","span":{"filename":"src/service/http.rs","begin":[9,0],"end":[25,1]},"visibility":"public","docs":"An asynchronous function from `Request` to `Response`.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:271:3308","0:272:138","0:273:151"],"generics":{"params":[{"name":"ReqBody","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"sealed::Sealed","id":"0:288:3136","args":{"angle_bracketed":{"args":[{"type":{"generic":"ReqBody"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:275"]}}},"0:259:3120":{"id":"0:259:3120","crate_id":0,"name":"execute","span":{"filename":"src/rt/mod.rs","begin":[41,4],"end":[41,32]},"visibility":"default","docs":"Place the future into the executor to be run.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fut",{"generic":"Fut"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:197":{"id":"0:197","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[214,0],"end":[222,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10387:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:183:3099","args":{"angle_bracketed":{"args":[{"lifetime":"'data"}],"bindings":[]}}}},"items":["0:199:809"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3207:247-0:469:2795":{"id":"a:2:3207:247-0:469:2795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3207:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:469:2795","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3207:247-0:119:138":{"id":"a:2:3207:247-0:119:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3207:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2988-0:491:3404":{"id":"b:2:2988-0:491:3404","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2961:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:491:3404","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2990:839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:7-20:2567:2392":{"id":"0:7-20:2567:2392","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,38],"end":[96,45]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Request","name":"Request","id":"20:2567:2392","glob":false}}},"2:13306:32641":{"id":"2:13306:32641","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:44297:4141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13300:2412":{"id":"2:13300:2412","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:44029:2559","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13690:199":{"id":"2:13690:199","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"Future","id":"2:44843:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"0:125:2904":{"id":"0:125:2904","crate_id":0,"name":"is_parse","span":{"filename":"src/error.rs","begin":[172,4],"end":[174,5]},"visibility":"public","docs":"Returns true if this was an HTTP parse error.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:224:2816":{"id":"0:224:2816","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[380,4],"end":[382,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42307:2571","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13889:116","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44868:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3069:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:280:138":{"id":"0:280:138","crate_id":0,"name":"Error","span":{"filename":"src/service/http.rs","begin":[35,4],"end":[35,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"Service","id":"0:292:2888","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Request","id":"20:2567:2392","args":{"angle_bracketed":{"args":[{"type":{"generic":"B1"}}],"bindings":[]}}}}}],"bindings":[]}}}}}}}},"b:2:2711-0:361:3397":{"id":"b:2:2711-0:361:3397","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32415:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2705:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:3397","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2713:3556"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2716:27438":{"id":"2:2716:27438","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13409:35419":{"id":"2:13409:35419","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:5011:35419"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:44360:6869","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:199:809":{"id":"0:199:809","crate_id":0,"name":"fmt","span":{"filename":"src/rt/io.rs","begin":[215,4],"end":[221,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10353:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10334:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13293:29029":{"id":"2:13293:29029","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-L√∂f\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-L√∂f\", last);\n```","links":{"str::split_at_checked":"2:13295:29033","str::split_at_mut":"2:13294:29030"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13368:35408":{"id":"2:13368:35408","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊¢') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:174:2804":{"id":"0:174:2804","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[38,4],"end":[42,42]},"visibility":"default","docs":"Attempts to read bytes into the `buf`.\n\nOn success, returns `Poll::Ready(Ok(()))` and places data in the\nunfilled portion of `buf`. If no data was read (`buf.remaining()` is\nunchanged), it implies that EOF has been reached.\n\nIf no data is available for reading, the method returns `Poll::Pending`\nand arranges for the current task (via `cx.waker()`) to receive a\nnotification when the object becomes readable or is closed.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42307:2571","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13889:116","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:469:2795","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44868:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:42315:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:3071:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:2711-0:119:138":{"id":"b:2:2711-0:119:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32415:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2705:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2713:3556"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32414:237-0:469:2795":{"id":"a:2:32414:237-0:469:2795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32414:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:469:2795","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:474:809":{"id":"0:474:809","crate_id":0,"name":"fmt","span":{"filename":"src/rt/io.rs","begin":[130,9],"end":[130,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10353:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10334:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2714-0:469:2795":{"id":"b:2:2714-0:469:2795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32415:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2708:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:469:2795","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2716:27438"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:238:3272":{"id":"0:238:3272","crate_id":0,"name":"sleep_until","span":{"filename":"src/rt/timer.rs","begin":[75,4],"end":[75,68]},"visibility":"default","docs":"Return a future that resolves at `deadline`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["deadline",{"resolved_path":{"name":"Instant","id":"1:9430:162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Pin","id":"2:42307:2571","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:306:2837","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Sleep","id":"0:240:3100","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:480:2816":{"id":"0:480:2816","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42307:2571","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13889:116","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44868:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3069:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42277:3932-0:361:3397":{"id":"a:2:42277:3932-0:361:3397","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42277:3932","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:3397","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:2:42277:3932-0:183:3099":{"id":"a:2:42277:3932-0:183:3099","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42277:3932","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:183:3099","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:375:2818":{"id":"0:375:2818","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/upgrade.rs","begin":[200,4],"end":[202,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2999-0:183:3099":{"id":"b:2:2999-0:183:3099","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2958:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2968:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:183:3099","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3002:138","2:3003:1820"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:373:2816":{"id":"0:373:2816","crate_id":0,"name":"poll_flush","span":{"filename":"src/upgrade.rs","begin":[192,4],"end":[194,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42307:2571","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13889:116","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44868:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:3069:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3207:247-0:487:3400":{"id":"a:2:3207:247-0:487:3400","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3207:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:487:3400","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32414:237-0:491:3404":{"id":"a:2:32414:237-0:491:3404","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32414:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32414:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:491:3404","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42277:3932-0:50:2564":{"id":"a:2:42277:3932-0:50:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42277:3932","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:221:2812":{"id":"0:221:2812","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[360,4],"end":[366,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42307:2571","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13889:116","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44868:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3069:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:5-20:5:2390":{"id":"0:5-20:5:2390","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,22],"end":[96,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::header","name":"header","id":"20:5:2390","glob":false}}},"b:2:3823-0:50:2564":{"id":"b:2:3823-0:50:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32415:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3821:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3825:1835"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:478:2813":{"id":"0:478:2813","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42307:2571","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13889:116","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8486:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44868:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3069:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:175:2796":{"id":"0:175:2796","crate_id":0,"name":"Write","span":{"filename":"src/rt/io.rs","begin":[48,0],"end":[100,1]},"visibility":"public","docs":"Write bytes asynchronously.\n\nThis trait is similar to `std::io::Write`, but for asynchronous writes.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:176:2812","0:177:2816","0:178:2817","0:179:2818","0:180:2813"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:219","0:217","0:215","0:370"]}}},"0:142":{"id":"0:142","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[514,0],"end":[523,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10387:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:143:809"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:371:2812":{"id":"0:371:2812","crate_id":0,"name":"poll_write","span":{"filename":"src/upgrade.rs","begin":[176,4],"end":[182,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42307:2571","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13889:116","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44868:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:3069:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:240:3100":{"id":"0:240:3100","crate_id":0,"name":"Sleep","span":{"filename":"src/rt/timer.rs","begin":[84,0],"end":[93,1]},"visibility":"public","docs":"A future returned by a `Timer`.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32414:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3207:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Future","id":"2:44843:151","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"tuple":[]}}}}]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"2:13319:3175":{"id":"2:13319:3175","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('√©'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:42184:191","prim@char":"1:12363:476","self::pattern":"2:12960:3894"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42182:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13345:29043":{"id":"2:13345:29043","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12363:476","str::splitn":"2:13342:29041","self::pattern":"2:12960:3894"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:44165:6787","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:14901","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13408:9519":{"id":"2:13408:9519","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:5014:9519"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:44351:6727","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13274:35396":{"id":"2:13274:35396","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji üßë‚Äçüî¨ (scientist) could be split so that the string only\nincludes üßë (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"‚ù§Ô∏èüß°üíõüíöüíôüíú\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"‚ù§Ô∏èüß°\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42276:3933-0:183:3099":{"id":"a:2:42276:3933-0:183:3099","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42276:3933","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:183:3099","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:341:2405":{"id":"0:341:2405","crate_id":0,"name":"upgrade","span":{"filename":"src/upgrade.rs","begin":[1,0],"end":[407,1]},"visibility":"public","docs":"HTTP Upgrades\n\nThis module deals with managing [HTTP Upgrades][mdn] in hyper. Since\nseveral concepts in HTTP allow for first talking HTTP, and then converting\nto a different protocol, this module conflates them into a single API.\nThose include:\n\n- HTTP/1.1 Upgrades\n- HTTP `CONNECT`\n\nYou are responsible for any other pre-requisites to establish an upgrade,\nsuch as sending the appropriate headers, methods, and status codes. You can\nthen use [`on`][] to grab a `Future` which will resolve to the upgraded\nconnection object, or an error if the upgrade fails.\n\n[mdn]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism\n\n# Client\n\nSending an HTTP upgrade from the [`client`](super::client) involves setting\neither the appropriate method, if wanting to `CONNECT`, or headers such as\n`Upgrade` and `Connection`, on the `http::Request`. Once receiving the\n`http::Response` back, you must check for the specific information that the\nupgrade is agreed upon by the server (such as a `101` status code), and then\nget the `Future` from the `Response`.\n\n# Server\n\nReceiving upgrade requests in a server requires you to check the relevant\nheaders in a `Request`, and if an upgrade should be done, you then send the\ncorresponding headers in a response. To then wait for hyper to finish the\nupgrade, you call `on()` with the `Request`, and then can spawn a task\nawaiting it.\n\n# Example\n\nSee [this example][example] showing how upgrades work with both\nClients and Servers.\n\n[example]: https://github.com/hyperium/hyper/blob/master/examples/upgrades.rs","links":{"`on`":"0:363:1246"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:361:3397","0:487:3400","0:491:3404","0:363:1246"],"is_stripped":false}}},"b:2:2714-0:50:2564":{"id":"b:2:2714-0:50:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32415:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2708:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2716:27438"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:251-0:183:3099":{"id":"0:251-0:183:3099","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,25],"end":[14,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::ReadBuf","name":"ReadBuf","id":"0:183:3099","glob":false}}},"2:3003:1820":{"id":"2:3003:1820","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:42315:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2968:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13287:29006":{"id":"2:13287:29006","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"üóª‚ààüåè\";\nunsafe {\n    assert_eq!(\"üóª\", v.get_unchecked(0..4));\n    assert_eq!(\"‚àà\", v.get_unchecked(4..7));\n    assert_eq!(\"üåè\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:36-24:89:2561":{"id":"0:36-24:89:2561","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[24,0],"end":[24,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"http_body::Frame","name":"Frame","id":"24:89:2561","glob":false}}},"a:2:3242:3711-0:469:2795":{"id":"a:2:3242:3711-0:469:2795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3242:3711","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:469:2795","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:497:809":{"id":"0:497:809","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[81,9],"end":[81,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10353:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10334:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13395:35417":{"id":"2:13395:35417","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12921:137","`FromStr`":"2:12920:4191"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42315:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12920:4191","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12920:4191","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5700:36114":{"id":"5:5700:36114","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7754:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7754:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:33-22:24:2558":{"id":"0:33-22:24:2558","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[22,16],"end":[22,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"bytes::Buf","name":"Buf","id":"22:24:2558","glob":false}}},"0:162:2402":{"id":"0:162:2402","crate_id":0,"name":"ext","span":{"filename":"src/ext/mod.rs","begin":[1,0],"end":[237,1]},"visibility":"public","docs":"HTTP extensions.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[],"is_stripped":false}}},"0:490:480":{"id":"0:490:480","crate_id":0,"name":"clone","span":{"filename":"src/upgrade.rs","begin":[72,9],"end":[72,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"OnUpgrade","id":"0:487:3400","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:219":{"id":"0:219","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[355,0],"end":[387,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"DerefMut","id":"2:3428:3146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"","id":"2:3415:125","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Write","id":"0:175:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["poll_write_vectored","is_write_vectored"],"trait":{"name":"Write","id":"0:175:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"std::pin::Pin","id":"2:42307:2571","args":{"angle_bracketed":{"args":[{"type":{"generic":"P"}}],"bindings":[]}}}},"items":["0:221:2812","0:222:2813","0:223:2818","0:224:2816","0:225:2817"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13323:3987":{"id":"2:13323:3987","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('√©'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:42184:191","prim@char":"1:12363:476","self::pattern":"2:12960:3894"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42182:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:14901","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3825:1835":{"id":"2:3825:1835","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39897:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:202:3212":{"id":"0:202:3212","crate_id":0,"name":"as_mut","span":{"filename":"src/rt/io.rs","begin":[232,4],"end":[234,5]},"visibility":"public","docs":"Access the unfilled part of the buffer.\n\n# Safety\n\nThe caller must not uninitialize any bytes that may have been\ninitialized before.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"2:30795:3144","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13392:35416":{"id":"2:13392:35416","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12363:476","self::pattern":"2:12960:3894"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:14901","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:340-0:308:3304":{"id":"0:340-0:308:3304","crate_id":0,"name":null,"span":{"filename":"src/service/mod.rs","begin":[30,0],"end":[30,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::util::service_fn","name":"service_fn","id":"0:308:3304","glob":false}}},"b:2:2711-0:487:3400":{"id":"b:2:2711-0:487:3400","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32415:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2705:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:487:3400","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2713:3556"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2999-0:487:3400":{"id":"b:2:2999-0:487:3400","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2958:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2968:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:487:3400","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3002:138","2:3003:1820"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2999-0:491:3404":{"id":"b:2:2999-0:491:3404","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2958:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2968:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:491:3404","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3002:138","2:3003:1820"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2984-0:487:3400":{"id":"b:2:2984-0:487:3400","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2961:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2958:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:487:3400","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2987:2725"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13333:29039":{"id":"2:13333:29039","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12960:3894","`DoubleEndedIterator`":"2:8329:130","prim@char":"1:12363:476","str::split":"2:13327:29035"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:44061:6784","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:14901","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:796:4046":{"id":"5:796:4046","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2994-0:491:3404":{"id":"b:2:2994-0:491:3404","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2968:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2964:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:491:3404","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2997:138","2:2998:1822"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:256-0:236:3101":{"id":"0:256-0:236:3101","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[15,29],"end":[15,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::timer::Timer","name":"Timer","id":"0:236:3101","glob":false}}},"0:128:2914":{"id":"0:128:2914","crate_id":0,"name":"is_canceled","span":{"filename":"src/error.rs","begin":[197,4],"end":[199,5]},"visibility":"public","docs":"Returns true if this was about a `Request` that was canceled.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2711-0:491:3404":{"id":"b:2:2711-0:491:3404","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32415:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2705:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:491:3404","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2713:3556"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2990:839":{"id":"2:2990:839","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2998:1822":{"id":"2:2998:1822","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42315:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2968:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:192:3191":{"id":"0:192:3191","crate_id":0,"name":"filled","span":{"filename":"src/rt/io.rs","begin":[160,4],"end":[163,5]},"visibility":"public","docs":"Get a slice of the buffer that has been filled in with bytes.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3207:247-0:491:3404":{"id":"a:2:3207:247-0:491:3404","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3207:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3207:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:491:3404","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:469:2795":{"id":"0:469:2795","crate_id":0,"name":"ReadBufCursor","span":{"filename":"src/rt/io.rs","begin":[131,0],"end":[133,1]},"visibility":"public","docs":"The cursor part of a [`ReadBuf`].\n\nThis is created by calling `ReadBuf::unfilled()`.","links":{"`ReadBuf`":"0:183:3099"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:200","a:2:3207:247-0:469:2795","a:2:32414:237-0:469:2795","a:2:42277:3932-0:469:2795","a:2:3242:3711-0:469:2795","a:2:42276:3933-0:469:2795","a:2:32473:2803-0:469:2795","b:2:2999-0:469:2795","b:2:2994-0:469:2795","b:2:3823-0:469:2795","b:2:2714-0:469:2795","b:2:2984-0:469:2795","b:2:2988-0:469:2795","b:2:2711-0:469:2795","0:472"]}}},"b:2:13688-0:487:3400":{"id":"b:2:13688-0:487:3400","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:44843:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoFuture","id":"2:44846:164","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:487:3400","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:13690:199","2:13691:164","2:13692:963"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"F"}}}},"0:361:3397":{"id":"0:361:3397","crate_id":0,"name":"Upgraded","span":{"filename":"src/upgrade.rs","begin":[65,0],"end":[67,1]},"visibility":"public","docs":"An upgraded HTTP connection.\n\nThis type holds a trait object internally of the original IO that\nwas used to speak HTTP before the upgrade. It can be used directly\nas a `Read` or `Write` for convenience.\n\nAlternatively, if the exact type is known, this can be deconstructed\ninto its parts.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:365","a:2:3207:247-0:361:3397","a:2:32414:237-0:361:3397","a:2:42277:3932-0:361:3397","a:2:3242:3711-0:361:3397","a:2:42276:3933-0:361:3397","a:2:32473:2803-0:361:3397","b:2:2999-0:361:3397","b:2:2994-0:361:3397","b:2:3823-0:361:3397","b:2:2714-0:361:3397","b:2:2984-0:361:3397","b:2:2988-0:361:3397","b:2:2711-0:361:3397","0:376","0:368","0:370"]}}},"0:368":{"id":"0:368","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[165,0],"end":[173,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:173:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:3397","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:369:2804"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2714-0:361:3397":{"id":"b:2:2714-0:361:3397","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32415:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2708:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:3397","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2716:27438"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13398:28952":{"id":"2:13398:28952","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:40083:14976","Self::is_ascii":"2:13397:27580"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42182:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:40083:14976","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:173:2794":{"id":"0:173:2794","crate_id":0,"name":"Read","span":{"filename":"src/rt/io.rs","begin":[28,0],"end":[43,1]},"visibility":"public","docs":"Reads bytes from a source.\n\nThis trait is similar to `std::io::Read`, but supports asynchronous reads.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:174:2804"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:211","0:368","0:209","0:207"]}}},"b:2:2714-0:183:3099":{"id":"b:2:2714-0:183:3099","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32415:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2708:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:183:3099","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2716:27438"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:146":{"id":"0:146","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[531,0],"end":[538,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","provide","cause","description","type_id"],"trait":{"name":"Error","id":"2:3047:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:147:2925"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2999-0:469:2795":{"id":"b:2:2999-0:469:2795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2958:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2968:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:469:2795","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3002:138","2:3003:1820"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:60:138":{"id":"0:60:138","crate_id":0,"name":"Error","span":{"filename":"src/body/incoming.rs","begin":[190,4],"end":[190,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:32414:237-0:361:3397":{"id":"a:2:32414:237-0:361:3397","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32414:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:3397","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13285:3065":{"id":"2:13285:3065","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:42184:191"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42182:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:129:2754":{"id":"0:129:2754","crate_id":0,"name":"is_closed","span":{"filename":"src/error.rs","begin":[202,4],"end":[214,5]},"visibility":"public","docs":"Returns true if a sender's channel is closed.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:795:4045":{"id":"5:795:4045","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"a:2:42277:3932-0:119:138":{"id":"a:2:42277:3932-0:119:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42277:3932","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:372:2813":{"id":"0:372:2813","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/upgrade.rs","begin":[184,4],"end":[190,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42307:2571","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13889:116","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"io::IoSlice","id":"1:8486:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44868:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:3069:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:64":{"id":"0:64","crate_id":0,"name":null,"span":{"filename":"src/body/incoming.rs","begin":[318,0],"end":[340,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10387:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:65:809"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13270":{"id":"2:13270","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:13271:1006","2:13272:2806","2:13273:35395","2:13274:35396","2:13276:35397","2:13279:28948","2:13280:35398","2:13281:336","2:13282:3218","2:13283:29005","2:13285:3065","2:13287:29006","2:13289:3228","2:13291:35399","2:13292:35400","2:13293:29029","2:13294:29030","2:13295:29033","2:13296:29034","2:13298:6802","2:13299:6975","2:13300:2412","2:13301:33503","2:13303:33469","2:13306:32641","2:13308:35401","2:13309:33479","2:13310:29047","2:13313:28553","2:13316:28555","2:13319:3175","2:13323:3987","2:13327:29035","2:13330:29037","2:13333:29039","2:13336:35402","2:13339:35403","2:13342:29041","2:13345:29043","2:13348:29045","2:13351:29046","2:13354:2905","2:13357:35404","2:13360:35405","2:13363:35406","2:13366:35407","2:13368:35408","2:13370:35409","2:13372:35410","2:13373:35411","2:13374:35412","2:13377:35413","2:13380:27767","2:13383:29048","2:13386:35414","2:13389:35415","2:13392:35416","2:13395:35417","2:13397:27580","2:13398:28952","2:13399:27584","2:13400:27585","2:13401:27586","2:13402:28955","2:13403:28956","2:13404:28957","2:13405:35418","2:13408:9519","2:13409:35419"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5713:4167":{"id":"5:5713:4167","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7754:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7754:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:215":{"id":"0:215","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[347,0],"end":[349,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32415:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Write","id":"0:175:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:32473:2803","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["poll_write_vectored","is_write_vectored"],"trait":{"name":"Write","id":"0:175:2796","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Box","id":"5:306:2837","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:477:2812","0:478:2813","0:479:2818","0:480:2816","0:481:2817"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:164:3097":{"id":"0:164:3097","crate_id":0,"name":"bounds","span":{"filename":"src/rt/bounds.rs","begin":[1,0],"end":[109,1]},"visibility":"public","docs":"Trait aliases\n\nTraits in this module ease setting bounds and usually automatically\nimplemented by implementing another trait.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[],"is_stripped":false}}},"2:13279:28948":{"id":"2:13279:28948","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12507:14903"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13401:27586":{"id":"2:13401:27586","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GR√ú√üE, J√úRGEN ‚ù§\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"gr√ú√üe, j√úrgen ‚ù§\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3207:247-0:183:3099":{"id":"a:2:3207:247-0:183:3099","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3207:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:183:3099","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:193:3201":{"id":"0:193:3201","crate_id":0,"name":"unfilled","span":{"filename":"src/rt/io.rs","begin":[167,4],"end":[177,5]},"visibility":"public","docs":"Get a cursor to the unfilled portion of the buffer.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'cursor","mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ReadBufCursor","id":"0:469:2795","args":{"angle_bracketed":{"args":[{"lifetime":"'cursor"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'cursor","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:252-0:469:2795":{"id":"0:252-0:469:2795","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,34],"end":[14,47]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::ReadBufCursor","name":"ReadBufCursor","id":"0:469:2795","glob":false}}},"a:2:3207:247-0:361:3397":{"id":"a:2:3207:247-0:361:3397","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3207:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:3397","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:177:2816":{"id":"0:177:2816","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[72,4],"end":[72,98]},"visibility":"default","docs":"Attempts to flush the object.\n\nOn success, returns `Poll::Ready(Ok(()))`.\n\nIf flushing cannot immediately complete, this method returns\n`Poll::Pending` and arranges for the current task (via `cx.waker()`) to\nreceive a notification when the object can make progress.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42307:2571","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13889:116","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44868:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:42315:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:3071:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:2:32414:237-0:183:3099":{"id":"a:2:32414:237-0:183:3099","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32414:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:183:3099","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32414:237-0:50:2564":{"id":"a:2:32414:237-0:50:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32414:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:297:439":{"id":"0:297:439","crate_id":0,"name":"call","span":{"filename":"src/service/service.rs","begin":[39,4],"end":[39,49]},"visibility":"default","docs":"Process the request and return the response asynchronously.\n`call` takes `&self` instead of `mut &self` because:\n- It prepares the way for async fn,\n  since then the future only borrows `&self`, and thus a Service can concurrently handle\n  multiple outstanding requests at once.\n- It's clearer that Services can likely be cloned\n- To share state across clones, you generally need `Arc<Mutex<_>>`\n  That means you're not really using the `&mut self` and could do with a `&self`.\nThe discussion on this is here: <https://github.com/hyperium/hyper/issues/3040>","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["req",{"generic":"Request"}]],"output":{"qualified_path":{"name":"Future","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:292:2888","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:2988-0:50:2564":{"id":"b:2:2988-0:50:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2961:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2990:839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:257:3117":{"id":"0:257:3117","crate_id":0,"name":"Executor","span":{"filename":"src/rt/mod.rs","begin":[39,0],"end":[42,1]},"visibility":"public","docs":"An executor of futures.\n\nThis trait allows Hyper to abstract over async runtimes. Implement this trait for your own type.\n\n# Example\n\n```\n# use hyper::rt::Executor;\n# use std::future::Future;\n#[derive(Clone)]\nstruct TokioExecutor;\n\nimpl<F> Executor<F> for TokioExecutor\nwhere\n    F: Future + Send + 'static,\n    F::Output: Send + 'static,\n{\n    fn execute(&self, future: F) {\n        tokio::spawn(future);\n    }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:259:3120"],"generics":{"params":[{"name":"Fut","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}}},"b:2:2714-0:487:3400":{"id":"b:2:2714-0:487:3400","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32415:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2708:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:487:3400","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2716:27438"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13296:29034":{"id":"2:13296:29034","crate_id":2,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that‚Äôs not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\nlet mut s = \"Per Martin-L√∂f\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-L√∂f\", last);\n}\nassert_eq!(\"PER Martin-L√∂f\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside ‚Äú√∂‚Äù\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"2:13295:29033"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42182:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13282:3218":{"id":"2:13282:3218","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12382:1865"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32414:237-0:119:138":{"id":"a:2:32414:237-0:119:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32414:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:253-0:175:2796":{"id":"0:253-0:175:2796","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,49],"end":[14,54]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::Write","name":"Write","id":"0:175:2796","glob":false}}},"5:5696:36113":{"id":"5:5696:36113","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:306:2837","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:306:2837","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13383:29048":{"id":"2:13383:29048","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12363:476","self::pattern":"2:12960:3894"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42182:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:14901","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2988-0:119:138":{"id":"b:2:2988-0:119:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2961:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2990:839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42277:3932-0:469:2795":{"id":"a:2:42277:3932-0:469:2795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42277:3932","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:469:2795","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:6-20:2488:2391":{"id":"0:6-20:2488:2391","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,30],"end":[96,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Method","name":"Method","id":"20:2488:2391","glob":false}}},"2:13360:35405":{"id":"2:13360:35405","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12960:3894","`DoubleEndedIterator`":"2:8329:130","prim@char":"1:12363:476","str::rmatch_indices":"2:13363:35406"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:44193:6960","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2994-0:119:138":{"id":"b:2:2994-0:119:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2968:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2964:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2997:138","2:2998:1822"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:374:2817":{"id":"0:374:2817","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/upgrade.rs","begin":[196,4],"end":[198,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42307:2571","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13889:116","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44868:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:3069:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:250-0:173:2794":{"id":"0:250-0:173:2794","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,19],"end":[14,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::Read","name":"Read","id":"0:173:2794","glob":false}}},"0:288:3136":{"id":"0:288:3136","crate_id":0,"name":"Sealed","span":{"filename":"src/service/http.rs","begin":[51,4],"end":[51,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}}},"a:2:32473:2803-0:469:2795":{"id":"a:2:32473:2803-0:469:2795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32473:2803","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:469:2795","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2988-0:487:3400":{"id":"b:2:2988-0:487:3400","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2961:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:487:3400","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2990:839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:190:1188":{"id":"0:190:1188","crate_id":0,"name":"new","span":{"filename":"src/rt/io.rs","begin":[138,4],"end":[146,5]},"visibility":"public","docs":"Create a new `ReadBuf` with a slice of initialized bytes.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["raw",{"borrowed_ref":{"lifetime":"'data","mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13316:28555":{"id":"2:13316:28555","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12363:476","self::pattern":"2:12960:3894"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:14901","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:143:809":{"id":"0:143:809","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[515,4],"end":[522,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10353:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10334:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:8-20:2587:2393":{"id":"0:8-20:2587:2393","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,47],"end":[96,55]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Response","name":"Response","id":"20:2587:2393","glob":false}}},"0:11-20:2788:2396":{"id":"0:11-20:2788:2396","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,74],"end":[96,81]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Version","name":"Version","id":"20:2788:2396","glob":false}}},"0:279:3308":{"id":"0:279:3308","crate_id":0,"name":"ResBody","span":{"filename":"src/service/http.rs","begin":[33,4],"end":[33,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"B2"}}}},"0:58":{"id":"0:58","crate_id":0,"name":null,"span":{"filename":"src/body/incoming.rs","begin":[188,0],"end":[316,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["is_end_stream","size_hint"],"trait":{"name":"Body","id":"24:42:2560","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:59:2641","0:60:138","0:61:2642","0:62:2638","0:63:2663"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:475:2804":{"id":"0:475:2804","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[291,4],"end":[291,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42307:2571","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13889:116","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:469:2795","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44868:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3069:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:178:2817":{"id":"0:178:2817","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[75,4],"end":[78,42]},"visibility":"default","docs":"Attempts to shut down this writer.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42307:2571","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13889:116","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44868:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:42315:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:3071:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:295:138":{"id":"0:295:138","crate_id":0,"name":"Error","span":{"filename":"src/service/service.rs","begin":[25,4],"end":[25,15]},"visibility":"default","docs":"Errors produced by the service.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}}},"2:2713:3556":{"id":"2:2713:3556","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13377:35413":{"id":"2:13377:35413","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12363:476","self::pattern":"2:12960:3894"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:494:3412":{"id":"0:494:3412","crate_id":0,"name":"read_buf","span":{"filename":"src/upgrade.rs","begin":[94,4],"end":[94,23]},"visibility":"public","docs":"A buffer of bytes that have been read but not processed as HTTP.\n\nFor instance, if the `Connection` is used for an HTTP upgrade request,\nit is possible the server sent back the first bytes of the new protocol\nalong with the response upgrade.\n\nYou will want to check for any existing bytes if you plan to continue\ncommunicating on the IO object.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"bytes::Bytes","id":"22:399:2559","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"a:2:32473:2803-0:487:3400":{"id":"a:2:32473:2803-0:487:3400","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32473:2803","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:487:3400","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3823-0:491:3404":{"id":"b:2:3823-0:491:3404","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32415:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3821:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:491:3404","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3825:1835"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32473:2803-0:183:3099":{"id":"a:2:32473:2803-0:183:3099","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32473:2803","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:183:3099","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13271:1006":{"id":"2:13271:1006","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"∆íoo\".len(), 4); // fancy f!\nassert_eq!(\"∆íoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12363:476"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:50:2564":{"id":"0:50:2564","crate_id":0,"name":"Incoming","span":{"filename":"src/body/incoming.rs","begin":[52,0],"end":[54,1]},"visibility":"public","docs":"A stream of `Bytes`, used when receiving bodies from the network.\n\nNote that Users should not instantiate this struct directly. When working with the hyper client,\n`Incoming` is returned to you in responses. Similarly, when operating with the hyper server,\nit is provided within requests.\n\n# Examples\n\n```rust,ignore\nasync fn echo(\n   req: Request<hyper::body::Incoming>,\n) -> Result<Response<BoxBody<Bytes, hyper::Error>>, hyper::Error> {\n   //Here, you can process `Incoming`\n}\n```","links":{},"attrs":["#[must_use = \"streams do nothing unless polled\"]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:3207:247-0:50:2564","a:2:32414:237-0:50:2564","a:2:42277:3932-0:50:2564","a:2:3242:3711-0:50:2564","a:2:42276:3933-0:50:2564","a:2:32473:2803-0:50:2564","b:2:2999-0:50:2564","b:2:2994-0:50:2564","b:2:3823-0:50:2564","b:2:2714-0:50:2564","b:2:2984-0:50:2564","b:2:2988-0:50:2564","b:2:2711-0:50:2564","0:58","0:64"]}}},"0:147:2925":{"id":"0:147:2925","crate_id":0,"name":"source","span":{"filename":"src/error.rs","begin":[532,4],"end":[537,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42182:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"dyn_trait":{"traits":[{"trait":{"name":"StdError","id":"2:3047:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13380:27767":{"id":"2:13380:27767","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns the substring after the prefix,\nwrapped in `Some`. Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12363:476","self::pattern":"2:12960:3894"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42182:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32473:2803-0:119:138":{"id":"a:2:32473:2803-0:119:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32473:2803","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32473:2803-0:50:2564":{"id":"a:2:32473:2803-0:50:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32473:2803","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:180:2813":{"id":"0:180:2813","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[89,4],"end":[99,5]},"visibility":"default","docs":"Like `poll_write`, except that it writes from a slice of buffers.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42307:2571","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13889:116","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8486:2815","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44868:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:42315:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:3071:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:59:2641":{"id":"0:59:2641","crate_id":0,"name":"Data","span":{"filename":"src/body/incoming.rs","begin":[189,4],"end":[189,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Bytes","id":"22:399:2559","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:42277:3932-0:491:3404":{"id":"a:2:42277:3932-0:491:3404","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42277:3932","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42277:3932","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:491:3404","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13310:29047":{"id":"2:13310:29047","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12363:476","self::pattern":"2:12960:3894"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:225:2817":{"id":"0:225:2817","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[384,4],"end":[386,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42307:2571","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13889:116","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44868:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3069:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:489":{"id":"0:489","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[72,9],"end":[72,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2727:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:487:3400","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:490:480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:376":{"id":"0:376","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[205,0],"end":[209,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10387:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:3397","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:377:809"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13313:28553":{"id":"2:13313:28553","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, in which case this function will return true if\nthe `&str` is a prefix of this string slice.\n\nThe [pattern] can also be a [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\nThese will only be checked against the first character of this string slice.\nLook at the second example below regarding behavior for slices of [`char`]s.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```\n\n```\nlet bananas = \"bananas\";\n\n// Note that both of these assert successfully.\nassert!(bananas.starts_with(&['b', 'a', 'n', 'a']));\nassert!(bananas.starts_with(&['a', 'b', 'c', 'd']));\n```","links":{"prim@char":"1:12363:476","self::pattern":"2:12960:3894"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:12-20:1794:2397":{"id":"0:12-20:1794:2397","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[99,0],"end":[99,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"crate::http::HeaderMap","name":"HeaderMap","id":"20:1794:2397","glob":false}}},"2:13339:35403":{"id":"2:13339:35403","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12960:3894","str::split":"2:13327:29035","prim@char":"1:12363:476","str::split_terminator":"2:13336:35402"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:44111:6959","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:14901","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:384":{"id":"0:384","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[243,0],"end":[247,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10387:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:487:3400","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:385:809"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13294:29030":{"id":"2:13294:29030","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-L√∂f\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-L√∂f\", last);\n}\nassert_eq!(\"PER Martin-L√∂f\", s);\n```","links":{"str::split_at":"2:13293:29029","str::split_at_mut_checked":"2:13296:29034"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13372:35410":{"id":"2:13372:35410","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™\";\nassert!(Some('◊¢') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2984-0:469:2795":{"id":"b:2:2984-0:469:2795","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2961:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2958:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:469:2795","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2987:2725"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42276:3933-0:491:3404":{"id":"a:2:42276:3933-0:491:3404","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42276:3933","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42276:3933","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:491:3404","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13276:35397":{"id":"2:13276:35397","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"‚ù§Ô∏èüß°üíõüíöüíôüíú\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"‚ù§Ô∏èüß°üíõ\");\n```","links":{"str::floor_char_boundary":"2:13274:35396"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:203:2811":{"id":"0:203:2811","crate_id":0,"name":"advance","span":{"filename":"src/rt/io.rs","begin":[242,4],"end":[245,5]},"visibility":"public","docs":"Advance the `filled` cursor by `n` bytes.\n\n# Safety\n\nThe caller must take care that `n` more bytes have been initialized.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13289:3228":{"id":"2:13289:3228","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"üóª‚ààüåè\");\nunsafe {\n    assert_eq!(\"üóª\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"‚àà\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"üåè\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13404:28957":{"id":"2:13404:28957","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1061:40326"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2987:2725":{"id":"2:2987:2725","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2961:145"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:472":{"id":"0:472","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[130,9],"end":[130,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10387:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:469:2795","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:474:809"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3242:3711-0:50:2564":{"id":"a:2:3242:3711-0:50:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3242:3711","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2564","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:5948-0:119:138":{"id":"b:5:5948-0:119:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10392:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32415:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5946:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5950:1795"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:477:2812":{"id":"0:477:2812","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42307:2571","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13889:116","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44868:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3069:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3242:3711-0:119:138":{"id":"a:2:3242:3711-0:119:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3242:3711","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3242:3711-0:361:3397":{"id":"a:2:3242:3711-0:361:3397","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3242:3711","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:3397","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:13397:27580":{"id":"2:13397:27580","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:9-20:2606:2394":{"id":"0:9-20:2606:2394","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,57],"end":[96,67]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::StatusCode","name":"StatusCode","id":"20:2606:2394","glob":false}}},"0:487:3400":{"id":"0:487:3400","crate_id":0,"name":"OnUpgrade","span":{"filename":"src/upgrade.rs","begin":[73,0],"end":[75,1]},"visibility":"public","docs":"A future for a possible HTTP upgrade.\n\nIf no upgrade was available, or it doesn't succeed, yields an `Error`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:3207:247-0:487:3400","a:2:32414:237-0:487:3400","a:2:42277:3932-0:487:3400","a:2:3242:3711-0:487:3400","a:2:42276:3933-0:487:3400","a:2:32473:2803-0:487:3400","b:2:2999-0:487:3400","b:2:2994-0:487:3400","b:2:13688-0:487:3400","b:2:3823-0:487:3400","b:2:2714-0:487:3400","b:2:2984-0:487:3400","b:2:2988-0:487:3400","b:2:2711-0:487:3400","b:5:793-0:487:3400","0:380","0:489","0:384"]}}},"0:65:809":{"id":"0:65:809","crate_id":0,"name":"fmt","span":{"filename":"src/body/incoming.rs","begin":[319,4],"end":[339,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10353:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10334:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:38-0:50:2564":{"id":"0:38-0:50:2564","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[27,0],"end":[27,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::incoming::Incoming","name":"Incoming","id":"0:50:2564","glob":false}}},"0:119:138":{"id":"0:119:138","crate_id":0,"name":"Error","span":{"filename":"src/error.rs","begin":[31,0],"end":[33,1]},"visibility":"public","docs":"Represents errors that can occur handling HTTP streams.\n\n# Formatting\n\nThe `Display` implementation of this type will only print the details of\nthis level of error, even though it may have been caused by another error\nand contain that error in its source. To print all the relevant\ninformation, including the source chain, using something like\n`std::error::Report`, or equivalent 3rd party types.\n\nThe contents of the formatted error message of this specific `Error` type\nis unspecified. **You must not depend on it.** The wording and details may\nchange in any version, with the goal of improving error messages.\n\n# Source\n\nA `hyper::Error` may be caused by another error. To aid in debugging,\nthose are exposed in `Error::source()` as erased types. While it is\npossible to check the exact type of the sources, they **can not be depended\non**. They may come from private internal dependencies, and are subject to\nchange at any moment.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:124","a:2:3207:247-0:119:138","a:2:32414:237-0:119:138","a:2:42277:3932-0:119:138","a:2:3242:3711-0:119:138","a:2:42276:3933-0:119:138","a:2:32473:2803-0:119:138","b:2:2999-0:119:138","b:2:2994-0:119:138","b:2:3823-0:119:138","b:2:2714-0:119:138","b:2:2984-0:119:138","b:2:2988-0:119:138","b:2:2711-0:119:138","b:5:5948-0:119:138","0:142","0:144","0:146"]}}},"0:176:2812":{"id":"0:176:2812","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[59,4],"end":[63,45]},"visibility":"default","docs":"Attempt to write bytes from `buf` into the destination.\n\nOn success, returns `Poll::Ready(Ok(num_bytes_written)))`. If\nsuccessful, it must be guaranteed that `n <= buf.len()`. A return value\nof `0` means that the underlying object is no longer able to accept\nbytes, or that the provided buffer is empty.\n\nIf the object is not ready for writing, the method returns\n`Poll::Pending` and arranges for the current task (via `cx.waker()`) to\nreceive a notification when the object becomes writable or is closed.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42307:2571","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13889:116","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44868:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:42315:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:3071:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:2:42276:3933-0:119:138":{"id":"a:2:42276:3933-0:119:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42276:3933","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:145:809":{"id":"0:145:809","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[526,4],"end":[528,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10353:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10334:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:486:2817":{"id":"0:486:2817","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42307:2571","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13889:116","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44868:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3069:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3242:3711-0:183:3099":{"id":"a:2:3242:3711-0:183:3099","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3242:3711","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:183:3099","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:130:2917":{"id":"0:130:2917","crate_id":0,"name":"is_incomplete_message","span":{"filename":"src/error.rs","begin":[217,4],"end":[223,5]},"visibility":"public","docs":"Returns true if the connection closed before a message could complete.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42276:3933-0:487:3400":{"id":"a:2:42276:3933-0:487:3400","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42276:3933","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:487:3400","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2984-0:491:3404":{"id":"b:2:2984-0:491:3404","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2961:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2958:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:491:3404","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2987:2725"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13363:35406":{"id":"2:13363:35406","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12960:3894","`DoubleEndedIterator`":"2:8329:130","prim@char":"1:12363:476","str::match_indices":"2:13360:35405"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:44211:6961","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:14901","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13370:35409":{"id":"2:13370:35409","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊™') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:381:199":{"id":"0:381:199","crate_id":0,"name":"Output","span":{"filename":"src/upgrade.rs","begin":[225,4],"end":[225,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Result","id":"2:42315:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Upgraded","id":"0:361:3397","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"2:13283:29005":{"id":"2:13283:29005","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"üóª‚ààüåè\");\n\nassert_eq!(Some(\"üóª\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:42184:191"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42182:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:236:3101":{"id":"0:236:3101","crate_id":0,"name":"Timer","span":{"filename":"src/rt/timer.rs","begin":[70,0],"end":[81,1]},"visibility":"public","docs":"A timer which provides timer-like functions.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:237:3269","0:238:3272","0:239:3275"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"0:207":{"id":"0:207","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[290,0],"end":[292,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32415:3222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Read","id":"0:173:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:32473:2803","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:173:2794","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Box","id":"5:306:2837","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:475:2804"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13301:33503":{"id":"2:13301:33503","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:13303:33469"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:44317:6965","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13299:6975":{"id":"2:13299:6975","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"yÃÜes\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'yÃÜ')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12363:476"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:44019:6956","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13303:33469":{"id":"2:13303:33469","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:13301:33503"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:44326:6966","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13691:164":{"id":"2:13691:164","crate_id":2,"name":"IntoFuture","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"F"}}}},"2:13402:28955":{"id":"2:13402:28955","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1061:40326"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:62:2638":{"id":"0:62:2638","crate_id":0,"name":"is_end_stream","span":{"filename":"src/body/incoming.rs","begin":[281,4],"end":[291,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:61:2642":{"id":"0:61:2642","crate_id":0,"name":"poll_frame","span":{"filename":"src/body/incoming.rs","begin":[192,4],"end":[279,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42307:2571","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13889:116","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44868:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Option","id":"2:42182:194","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:42315:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Frame","id":"24:89:2561","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Data","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"24:42:2560","args":null}}}}],"bindings":[]}}}}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"24:42:2560","args":null}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13330:29037":{"id":"2:13330:29037","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12363:476","self::pattern":"2:12960:3894"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12775:6781","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5711:36116":{"id":"5:5711:36116","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"ÂÜúÂéÜÊñ∞Âπ¥\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tsch√º√ü\";\n\nassert_eq!(\"TSCH√úSS\", s.to_uppercase());\n```","links":{"`String`":"5:7754:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7754:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5697:3642":{"id":"5:5697:3642","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7754:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7754:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:6773","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:200":{"id":"0:200","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[224,0],"end":[276,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:469:2795","args":{"angle_bracketed":{"args":[{"lifetime":"'data"}],"bindings":[]}}}},"items":["0:202:3212","0:203:2811"],"negative":false,"synthetic":false,"blanket_impl":null}}}},"paths":{"1:9280:116":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"6:559:7640":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"11:785:4481":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"2:40715:107":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"18:573:4604":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"16:7058:6116":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"17:15586:5522":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"16:2860:5894":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"11:1564:21483":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"2:13912:3627":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:6961:6748":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"2:11509:6788":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:8005:2826":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"2:21771:9745":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"17:13570:22495":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"2:23058:33388":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:8291:165":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:8342:4507":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:33842:3665":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"17:12409:22597":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"0:363:1246":{"crate_id":0,"path":["hyper","upgrade","on"],"kind":"function"},"17:12082:4895":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"16:6028:5902":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"6:7454:8500":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:40997:6897":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:44846:164":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"25:2141:70":{"crate_id":25,"path":["tokio","sync","batch_semaphore","Acquire"],"kind":"struct"},"1:11086:28463":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"2:39840:216":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"17:16832:5123":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"6:6765:8378":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"2:41381:6756":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"17:15148:5355":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"1:5783:9711":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:21722:33517":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"2:44959:6995":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"11:842:9536":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"18:613:36682":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:22260:33519":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"18:491:4603":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"25:3254:2565":{"crate_id":25,"path":["tokio","sync","watch","Sender"],"kind":"struct"},"20:1841:4481":{"crate_id":20,"path":["http","header","map","Values"],"kind":"struct"},"16:4873:5940":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"17:12108:4898":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"17:14483:5237":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"2:47262:7128":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"16:6904:6100":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"18:515:4601":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"6:5586:8143":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"25:2966:3760":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","Semaphore"],"kind":"struct"},"17:12163:4902":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"1:2642:4153":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"25:860:4386":{"crate_id":25,"path":["tokio","runtime","park","CachedParkThread"],"kind":"struct"},"2:8329:130":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"17:13006:5011":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"17:11851:4868":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"2:46622:7068":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"5:7241:35137":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"16:7372:5912":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"20:2536:4190":{"crate_id":20,"path":["http","method","extension","InlineExtension"],"kind":"struct"},"25:3036:187":{"crate_id":25,"path":["tokio","sync","mutex","MutexGuard"],"kind":"struct"},"1:4925:9649":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"25:951:220":{"crate_id":25,"path":["tokio","sync","broadcast","Receiver"],"kind":"struct"},"5:1395:4487":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"17:14220:5172":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"2:11367:6783":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"6:5375:8049":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"25:366:95":{"crate_id":25,"path":["tokio","loom","std","atomic_u32","AtomicU32"],"kind":"struct"},"6:1494:7660":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"17:16701:5819":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"2:10387:120":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"5:7704:15182":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:22935:8634":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"17:11653:4847":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:40883:6890":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"6:4792:7803":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"1:5337:204":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"1:1864:7160":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"6:1643:7757":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"5:6153:15442":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"25:1213:2565":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","Sender"],"kind":"struct"},"20:1963:7543":{"crate_id":20,"path":["http","header","map","Pos"],"kind":"struct"},"17:16812:5845":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"1:12388:1927":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"2:22379:3136":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"5:2265:9503":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"25:882:4392":{"crate_id":25,"path":["tokio","runtime","driver","IoStack"],"kind":"struct"},"5:6132:3726":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:42277:3932":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"25:2901:3728":{"crate_id":25,"path":["tokio","sync","barrier","Barrier"],"kind":"struct"},"17:13838:5102":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"17:15896:5594":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"18:608:4621":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:32398:4068":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"2:21769:3136":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"6:5007:7928":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"1:12380:912":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"16:6953:6104":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:21705:33511":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"25:1216:4396":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","WeakSender"],"kind":"struct"},"2:22644:9833":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"17:10115:22477":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"16:7716:36662":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"1:1866:7161":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:3679:33613":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"17:14750:5289":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"11:2137:4490":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"17:15714:5548":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"25:2907:4433":{"crate_id":25,"path":["tokio","sync","barrier","BarrierState"],"kind":"struct"},"17:11386:22503":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"17:14393:5221":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"2:42122:7176":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"1:985:6458":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"18:0:3469":{"crate_id":18,"path":["memchr"],"kind":"module"},"2:42276:3933":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:45961:7012":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"25:3116:220":{"crate_id":25,"path":["tokio","sync","oneshot","Receiver"],"kind":"struct"},"17:16798:5844":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"5:5006:217":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"1:907:4480":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"2:3433:3619":{"crate_id":2,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"2:40987:6896":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:8477:4170":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"1:8603:8715":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"5:6016:4483":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"18:659:4628":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"17:13082:4818":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"1:2081:197":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"6:1625:7745":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"17:10487:22489":{"crate_id":17,"path":["object","common","RelocationFlags"],"kind":"enum"},"16:6337:5999":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"1:8532:2559":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"1:12382:1865":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"6:8008:8584":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:3666:3691":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"5:3097:8623":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"16:3695:5928":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"2:40953:6895":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:5855:7191":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"2:10404:4058":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:3440:4161":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"8:0:3460":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"1:9160:4182":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"18:589:4614":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"1:6187:2565":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"17:15136:5002":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"1:8614:7275":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"9:422:21403":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"18:623:36680":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"1:12390:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"18:765:26685":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"6:5295:8022":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"17:13592:5052":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"1:12387:975":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"17:16241:5710":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"17:10630:4655":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"16:4184:5932":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"16:2415:21528":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"25:3247:220":{"crate_id":25,"path":["tokio","sync","watch","Receiver"],"kind":"struct"},"5:7777:6587":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"17:1339:4669":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:42110:6915":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"17:14640:5258":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"17:13157:5020":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"17:12135:4900":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"16:7578:7311":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"17:11281:4819":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"2:44147:6786":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:2548:2788":{"crate_id":1,"path":["std","io"],"kind":"module"},"25:417:3729":{"crate_id":25,"path":["tokio","loom","std","barrier","BarrierWaitResult"],"kind":"struct"},"17:14886:5311":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"1:3662:27827":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"2:4:1266":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"17:13398:5038":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"16:7980:5916":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"2:3253:3658":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"1:5848:2565":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"5:5501:35119":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"6:5051:7950":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"17:11592:4780":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"1:8865:7295":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"20:2788:2396":{"crate_id":20,"path":["http","version","Version"],"kind":"struct"},"2:10034:33621":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"17:13781:5088":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"1:12330:28366":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"6:5196:7977":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"17:10141:22478":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:30816:4049":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"7:32:21388":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:43114:8704":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"1:9417:3740":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"1:9466:3702":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"1:8468:2600":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"17:11777:4860":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"6:7469:8504":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"6:1675:7775":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"17:13193:5023":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"17:2437:4677":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"17:11457:4832":{"crate_id":17,"path":["object","read","archive","ArchiveOffset"],"kind":"struct"},"17:13349:5034":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:43636:6778":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"5:4917:809":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"5:5150:4122":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"1:11676:7202":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"11:1920:6469":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"6:8249:8597":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"18:80:26674":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:40731:15182":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:8028:4935":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"17:13055:4840":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"17:11606:4817":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"17:14438:5231":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:9527:6773":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"6:8284:8605":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"17:12699:4978":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"1:9262:3731":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"17:14358:5217":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"17:14327:5210":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"1:4171:9638":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"20:2694:4215":{"crate_id":20,"path":["http","uri","path","PathAndQuery"],"kind":"struct"},"6:4984:7915":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:3212:3342":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"5:1239:35110":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"2:6149:6738":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"16:6389:6005":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2:12661:6795":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"22:24:2558":{"crate_id":22,"path":["bytes","buf","buf_impl","Buf"],"kind":"trait"},"25:3214:235":{"crate_id":25,"path":["tokio","sync","rwlock","write_guard","RwLockWriteGuard"],"kind":"struct"},"17:11358:22502":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"2:33369:3662":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"20:523:3136":{"crate_id":20,"path":["http","header","map","as_header_name","Sealed"],"kind":"trait"},"25:2026:4188":{"crate_id":25,"path":["tokio","sync","oneshot","Inner"],"kind":"struct"},"0:257:3117":{"crate_id":0,"path":["hyper","rt","Executor"],"kind":"trait"},"1:12379:906":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"18:698:4638":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"17:11432:22504":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"1:2476:9595":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"17:12225:4909":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"17:15549:5515":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"17:11065:4815":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"6:1711:7792":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"14:7:6442":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"5:7852:6589":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2:43396:6927":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"17:13757:5087":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"17:14947:5320":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"17:10516:22490":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"22:111:3613":{"crate_id":22,"path":["bytes","buf","buf_mut","BufMut"],"kind":"trait"},"16:4120:5930":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"1:8809:9706":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"2:8437:178":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"17:14612:5254":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"17:667:4666":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"1:7723:28372":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"17:15953:5610":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"18:718:4644":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"1:11688:7206":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:46815:7104":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"16:8179:6292":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"1:6286:28452":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"2:46643:7069":{"crate_id":2,"path":["core","core_arch","simd","m8x32"],"kind":"struct"},"1:11264:8720":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"6:8031:8595":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"1:8185:7221":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"2:45978:7013":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"17:10534:4796":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"2:43169:33476":{"crate_id":2,"path":["core","fmt","rt","ArgumentType"],"kind":"enum"},"1:8551:2564":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:44317:6965":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:38325:3675":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"25:3293:2396":{"crate_id":25,"path":["tokio","sync","watch","state","Version"],"kind":"struct"},"20:2699:4217":{"crate_id":20,"path":["http","uri","scheme","Scheme"],"kind":"struct"},"17:12044:4889":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"2:44860:227":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"17:12008:4735":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"1:10331:7162":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"16:5649:5959":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2:4842:14953":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"17:10368:22485":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"6:6462:8238":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:4885:9685":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"2:47040:7109":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"16:5727:4796":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:23240:6847":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"2:42182:194":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"2:5976:4122":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"17:15701:5543":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2:44165:6787":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"17:13610:5055":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"1:8337:7228":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"1:573:9508":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"2:3338:3672":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"11:430:36644":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"2:40874:6889":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:38435:3677":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"2:39820:214":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"17:14312:5208":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV2"],"kind":"struct"},"16:6658:6064":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"16:5742:4797":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:43840:6939":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"6:6507:8268":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"6:6437:8233":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:2803:202":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"2:3450:141":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"1:6362:3627":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"16:8483:6343":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"11:351:36635":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"2:5315:4171":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"6:6790:8387":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"1:12314:7343":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"1:7930:28422":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"6:6700:8360":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"18:96:26675":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"17:12952:5004":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"6:4970:7907":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:44297:4141":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"11:809:6547":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"1:1486:156":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"11:396:36633":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:597:7153":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"5:898:6541":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"5:3703:182":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"17:15050:5341":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"17:12983:22623":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"2:44013:6794":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"17:15010:5338":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"1:2492:9600":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:39782:212":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:12975:4640":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"16:908:4660":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"2:13969:152":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"6:578:7650":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"1:12375:761":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:12008:6790":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"2:41046:6898":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"1:11665:4240":{"crate_id":1,"path":["std","sys","thread_local","fast_local","eager","State"],"kind":"enum"},"1:3533:4169":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"1:5841:220":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"1:10944:7222":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"16:4956:5943":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"16:7949:5915":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:12966:6773":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"2:40495:6727":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:6576:186":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"2:2958:163":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:41437:6761":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"22:1122:4463":{"crate_id":22,"path":["bytes","buf","limit","Limit"],"kind":"struct"},"2:14024:9539":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"5:6516:3628":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"11:1085:36629":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"2:44351:6727":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"17:15753:5559":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:41395:3733":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"17:16218:5697":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"5:1259:36196":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:47128:7113":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"6:5117:7964":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"6:5541:8124":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"16:8669:6252":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"17:16084:5669":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"1:12386:1841":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"17:16198:5694":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"1:6800:3737":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"2:46493:7063":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"17:10549:4797":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"16:6269:5989":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"17:12869:5041":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"17:11075:36675":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"17:15036:5340":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"5:3940:6547":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"25:3110:2565":{"crate_id":25,"path":["tokio","sync","oneshot","Sender"],"kind":"struct"},"11:772:4480":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"2:7999:2600":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:5170:9689":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"2:819:190":{"crate_id":2,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"11:364:36631":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"1:6722:3743":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"6:5676:8186":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:22607:15136":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"1:10924:7221":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"1:9407:234":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"15:327:21513":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"21:10:26776":{"crate_id":21,"path":["fnv","FnvHasher"],"kind":"struct"},"25:186:26802":{"crate_id":25,"path":["tokio","io","async_write","AsyncWrite"],"kind":"trait"},"6:7586:8574":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:46443:7061":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"16:8058:6288":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"1:10715:4163":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"2:2708:104":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:9403:4122":{"crate_id":1,"path":["std","sync","poison","Guard"],"kind":"struct"},"1:8192:7222":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"2:11290:6781":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"16:6462:22418":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"6:6480:8248":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"2:23295:6852":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"16:5085:5946":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"17:14055:5139":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"16:7159:6140":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"16:6302:5996":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"1:11024:27764":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"2:41022:4625":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"1:9176:3991":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"22:857:4461":{"crate_id":22,"path":["bytes","fmt","BytesRef"],"kind":"struct"},"16:6696:6073":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"6:1589:7715":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:43628:6937":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"5:5545:14887":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"1:9395:3732":{"crate_id":1,"path":["std","sync","mutex","MappedMutexGuard"],"kind":"struct"},"2:47194:7119":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"17:14708:5268":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"2:41036:6751":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:4356:9661":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"9:500:6525":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:42162:6770":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"17:16775:5839":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"6:6882:8408":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"5:4217:4183":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"16:7075:22421":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"6:0:1011":{"crate_id":6,"path":["libc"],"kind":"module"},"17:12216:4908":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"1:3907:7173":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"17:12736:4981":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"2:3200:3710":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"25:995:26805":{"crate_id":25,"path":["tokio","sync","broadcast","RecvGuard"],"kind":"struct"},"1:6803:3738":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"2:23747:236":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"17:10218:22480":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"6:5255:8000":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"6:6631:8332":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:3242:3711":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"17:14114:5162":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"17:16132:5670":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"17:16026:5627":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"1:3071:138":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"16:4766:5937":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"18:643:4604":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"2:40083:14976":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"17:15852:5580":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"16:5318:5954":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"1:8628:7277":{"crate_id":1,"path":["std","os","unix","net","ucred","UCred"],"kind":"struct"},"15:0:3466":{"crate_id":15,"path":["addr2line"],"kind":"module"},"6:7341:8463":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:2961:145":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"6:6443:8236":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"5:1410:4490":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"1:10895:7330":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"2:43141:8712":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"16:8503:6344":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"2:21751:33524":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"6:538:7629":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"16:155:5848":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"17:11706:4852":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"1:8538:4144":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"16:8267:6302":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"16:8066:22426":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"2:10398:4060":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"17:14672:5262":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"17:13427:5039":{"crate_id":17,"path":["object","read","ObjectMapFile"],"kind":"struct"},"17:12762:4983":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:39745:213":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"6:1530:7676":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"11:854:6456":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"16:5689:5960":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"1:2474:9594":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"1:12335:9525":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"2:46345:7041":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"17:5305:4689":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"2:40816:4172":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"0:361:3397":{"crate_id":0,"path":["hyper","upgrade","Upgraded"],"kind":"struct"},"25:3040:3755":{"crate_id":25,"path":["tokio","sync","mutex","OwnedMutexGuard"],"kind":"struct"},"2:42363:4183":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"2:40893:134":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:2239:129":{"crate_id":1,"path":["std","ffi","os_str","Display"],"kind":"struct"},"5:2357:34972":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"6:5127:7965":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"2:32405:6855":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"22:555:4427":{"crate_id":22,"path":["bytes","bytes","Shared"],"kind":"struct"},"17:14099:5156":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"17:12992:5008":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"25:1391:4401":{"crate_id":25,"path":["tokio","sync","mpsc","chan","Rx"],"kind":"struct"},"2:42702:91":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"25:1535:4401":{"crate_id":25,"path":["tokio","sync","mpsc","list","Rx"],"kind":"struct"},"2:4563:6730":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"2:39897:3266":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"25:552:182":{"crate_id":25,"path":["tokio","util","linked_list","LinkedList"],"kind":"struct"},"10:44:6476":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"2:8280:146":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:47137:7114":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"20:1892:4487":{"crate_id":20,"path":["http","header","map","VacantEntry"],"kind":"struct"},"17:15939:5608":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"17:10729:4658":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"2:47011:7108":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"20:2587:2393":{"crate_id":20,"path":["http","response","Response"],"kind":"struct"},"1:12369:1735":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"1:4227:9643":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"6:8014:8586":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"5:7558:3991":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"25:3078:37341":{"crate_id":25,"path":["tokio","sync","notify","Notification"],"kind":"enum"},"2:46007:7015":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"11:1140:6462":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"2:12960:3894":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"17:10394:22486":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"25:3177:3761":{"crate_id":25,"path":["tokio","sync","semaphore","SemaphorePermit"],"kind":"struct"},"2:45940:7007":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"17:15475:5504":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"2:30801:3649":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"17:16520:5761":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"17:11566:4842":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:10392:129":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"2:47324:7143":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"22:1107:4142":{"crate_id":22,"path":["bytes","buf","chain","Chain"],"kind":"struct"},"1:8849:7183":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"2:21822:3136":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"16:7883:6016":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"17:12035:4886":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"17:15351:5412":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"5:6795:3991":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"2:44982:6996":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"2:32391:6854":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"6:8319:8613":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"17:13890:5113":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"20:2567:2392":{"crate_id":20,"path":["http","request","Request"],"kind":"struct"},"17:15812:5569":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"2:22226:9747":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"17:5131:4687":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"11:2420:3991":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"1:1080:4503":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"9:390:21402":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"16:5348:5955":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2:2040:676":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"2:43207:138":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"1:11938:7340":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"18:113:26676":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"5:5946:251":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"25:1153:4481":{"crate_id":25,"path":["tokio","sync","mpsc","block","Values"],"kind":"struct"},"6:6411:8218":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:42739:98":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:8234:7169":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"2:43425:4240":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"2:23284:6851":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"1:1618:3991":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"2:44540:6979":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"17:12524:4964":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"3:0:510":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:22951:6817":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"17:12962:22622":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"6:5477:8108":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"2:42478:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"5:1794:35119":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"2:46555:7065":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"20:2602:2826":{"crate_id":20,"path":["http","response","Builder"],"kind":"struct"},"17:16377:5737":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"5:1645:6546":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"16:2660:5885":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"5:3716:4182":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"16:2570:5881":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"2:23196:6843":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"1:8495:4140":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"17:15496:5509":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"17:12191:4905":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"11:123:7560":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"20:1825:3991":{"crate_id":20,"path":["http","header","map","IntoIter"],"kind":"struct"},"16:2684:5886":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"20:2834:4212":{"crate_id":20,"path":["http","byte_str","ByteStr"],"kind":"struct"},"17:16209:5695":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"20:2501:4188":{"crate_id":20,"path":["http","method","Inner"],"kind":"enum"},"2:40746:6877":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"2:40607:6870":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"17:11016:4814":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"6:6902:8422":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"25:337:37359":{"crate_id":25,"path":["tokio","net","addr","sealed","ToSocketAddrsPriv"],"kind":"trait"},"2:4642:4067":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:4873:3621":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"2:22381:9743":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"25:386:98":{"crate_id":25,"path":["tokio","loom","std","atomic_usize","AtomicUsize"],"kind":"struct"},"2:23262:6849":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"2:7711:14973":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"16:7259:6166":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"6:5622:8164":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"2:46688:7070":{"crate_id":2,"path":["core","core_arch","simd","m16x16"],"kind":"struct"},"17:13014:5013":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"2:10396:4052":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"17:11232:22505":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"14:220:6449":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"2:44360:6869":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"17:10597:4654":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"17:11902:4873":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:12389:1430":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"17:13222:22491":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"5:7544:34923":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"14:160:6442":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"17:13491:5043":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"17:11319:36677":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"25:838:4385":{"crate_id":25,"path":["tokio","runtime","park","UnparkThread"],"kind":"struct"},"1:4215:9640":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"5:7216:35149":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"2:3694:3618":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:32503:3714":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"16:7495:6194":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"25:1231:220":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","Receiver"],"kind":"struct"},"2:10179:4050":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"11:708:6453":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"1:10509:28414":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"1:4821:8486":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"25:1035:26808":{"crate_id":25,"path":["tokio","sync","broadcast","WaitersList"],"kind":"struct"},"2:4478:14871":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"5:7691:6579":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"16:6713:6074":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"17:15844:5579":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"2:10847:28468":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"2:42441:97":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:4809:9638":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"16:2880:5895":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"17:13547:5048":{"crate_id":17,"path":["object","read","RelocationMap"],"kind":"struct"},"17:11878:4817":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"16:6588:6045":{"crate_id":16,"path":["gimli","read","cfi","UnwindExpression"],"kind":"struct"},"2:22579:3136":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"11:1158:6463":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"9:355:21416":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"11:2148:4487":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"16:2640:5884":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"16:2772:5890":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"5:7168:264":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"16:5060:5945":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"15:306:21509":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:12383:1847":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"2:43443:6936":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:22974:6822":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"16:8233:22427":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"11:0:3463":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"6:8330:8614":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"1:4113:9633":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"1:9139:7299":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"1:628:9518":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"17:15665:5538":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:3268:3661":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"17:11926:4874":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:12986:14900":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"17:12392:4931":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"16:6843:6093":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"17:15077:5345":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"1:9152:7300":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"1:7990:7152":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"2:31201:3958":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"1:8647:7279":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"6:5044:7948":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"6:7563:8562":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"16:7223:6154":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"1:920:4481":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:9430:162":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"6:4805:7812":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"5:3277:101":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"2:2727:113":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"17:11788:4862":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"17:14832:5304":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:23043:33374":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"2:3280:3680":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"1:2320:139":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"1:10721:4161":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"1:11861:7174":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"2:3397:3692":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"17:11733:22524":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"25:2913:3729":{"crate_id":25,"path":["tokio","sync","barrier","BarrierWaitResult"],"kind":"struct"},"17:11831:4840":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"17:15679:5539":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"6:8296:8607":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"17:16786:5841":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"1:8794:7290":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"6:517:7617":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:10613:157":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"0:491:3404":{"crate_id":0,"path":["hyper","upgrade","Parts"],"kind":"struct"},"5:2157:3452":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"1:1849:701":{"crate_id":1,"path":["std","env"],"kind":"module"},"6:491:7597":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"6:5319:8032":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"16:8636:22429":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"6:1500:7663":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"5:4536:4122":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"16:6876:6097":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:11229:8713":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"2:42881:4053":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"6:6770:8379":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"22:399:2559":{"crate_id":22,"path":["bytes","bytes","Bytes"],"kind":"struct"},"6:4976:7910":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"1:9286:4188":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"17:12371:4929":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"6:6659:8345":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"6:6611:8324":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:12376:740":{"crate_id":1,"path":["std","f128"],"kind":"primitive"},"2:46316:7040":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"17:16684:5817":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"2:40796:6884":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"2:13733:205":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"16:5417:5957":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"16:7401:36660":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"17:16171:5685":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"6:5482:8110":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"11:1725:156":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"25:834:4384":{"crate_id":25,"path":["tokio","runtime","park","ParkThread"],"kind":"struct"},"1:4983:7182":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"17:14692:5263":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:40591:6869":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"2:11222:4183":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:4107:9634":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:42218:4183":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"1:9709:139":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"1:5100:9683":{"crate_id":1,"path":["std","os","net","linux_ext","socket","UnixSocketExt"],"kind":"trait"},"1:4335:9659":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"18:598:36681":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:41181:6753":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:46153:7031":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"2:3202:118":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"17:15777:5563":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"17:14917:5317":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"6:473:7589":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:44307:6964":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"18:635:4627":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"16:5198:5950":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"6:4964:7905":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"1:12364:1887":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"2:44446:6968":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"5:6668:4483":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"2:23023:33395":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:3614:4132":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"1:10990:27916":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"2:40580:6868":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"17:14533:4937":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"5:1625:6454":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"6:1507:7666":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"16:8121:210":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"20:721:4476":{"crate_id":20,"path":["http","header","value","InvalidHeaderValue"],"kind":"struct"},"1:8651:8473":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"25:2927:4241":{"crate_id":25,"path":["tokio","sync","broadcast","error","RecvError"],"kind":"enum"},"2:32380:2879":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"1:8070:9524":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"17:11958:4876":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"6:6731:8367":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"6:6381:8193":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"16:6440:22417":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"16:6205:22416":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:11957:2561":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"17:14586:5250":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"5:3095:36191":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"6:4902:7876":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:2591:677":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:7329:28466":{"crate_id":1,"path":["std","sys","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"17:11448:4831":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"2:2761:201":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"5:2594:8627":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"17:317:4659":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"5:5309:3726":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"16:7416:6179":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"1:4927:9651":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:21683:3958":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:8239:7225":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"17:16555:5791":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"17:12826:4986":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"1:2490:9599":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"14:31:6442":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:23116:9632":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"5:3352:35115":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:23137:3136":{"crate_id":2,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"17:12840:4991":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"6:4929:7891":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"5:1496:100":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"2:47247:7127":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"17:10843:4803":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"16:2920:5897":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"1:8263:3452":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"1:4819:8484":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"1:1112:6463":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"1:3344:4163":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:42266:3930":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"25:3333:7541":{"crate_id":25,"path":["tokio","util","cacheline","CachePadded"],"kind":"struct"},"2:41195:6754":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2:43849:6940":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"6:553:7637":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:46132:7030":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:39732:3685":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"2:23085:8637":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:8771:4240":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"2:30763:3648":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"25:3154:3759":{"crate_id":25,"path":["tokio","sync","batch_semaphore","TryAcquireError"],"kind":"enum"},"2:42404:90":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:3490:4148":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"25:2920:4416":{"crate_id":25,"path":["tokio","sync","broadcast","error","SendError"],"kind":"struct"},"6:5334:8036":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"2:47168:7117":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"1:6928:233":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"11:685:4183":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:44326:6966":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"25:3148:4240":{"crate_id":25,"path":["tokio","sync","oneshot","State"],"kind":"struct"},"5:306:2837":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"18:735:26684":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:46738:7072":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:9422:3741":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"2:4785:8632":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"16:6084:5963":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"6:6740:8369":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"16:2900:5896":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"2:44639:6985":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:8243:15125":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:11440:6785":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"17:14031:5137":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"16:2950:5898":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"2:11481:6786":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"5:6100:72":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2:12721:6799":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"17:15989:5619":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"17:10663:4656":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:10761:4935":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"25:3184:3762":{"crate_id":25,"path":["tokio","sync","semaphore","OwnedSemaphorePermit"],"kind":"struct"},"17:16008:5624":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"16:7192:22422":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:7476:31912":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"2:10764:15204":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"25:1419:4407":{"crate_id":25,"path":["tokio","sync","mpsc","chan","RxFields"],"kind":"struct"},"5:894:102":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2:2338:6596":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"6:4957:7902":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"17:13945:5121":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"25:844:4188":{"crate_id":25,"path":["tokio","runtime","park","Inner"],"kind":"struct"},"20:2686:4214":{"crate_id":20,"path":["http","uri","authority","Authority"],"kind":"struct"},"2:40542:33380":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"2:12041:6791":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"2:46170:7032":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:2502:9605":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"17:12625:4970":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"6:7391:8491":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:39760:210":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"20:1879:4503":{"crate_id":20,"path":["http","header","map","Entry"],"kind":"enum"},"2:40531:6863":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"20:2059:4505":{"crate_id":20,"path":["http","header","name","HdrName"],"kind":"struct"},"17:16036:5632":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"25:3189:3763":{"crate_id":25,"path":["tokio","sync","rwlock","owned_read_guard","OwnedRwLockReadGuard"],"kind":"struct"},"17:15973:5616":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"16:2435:21554":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"1:6410:7193":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"17:10097:22476":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"11:2301:4503":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"18:507:4604":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"2:30537:9619":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"2:11329:6782":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"16:7938:6280":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:7827:15119":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"17:11291:36671":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"2:10353:144":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"1:3036:7171":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"2:41922:170":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"17:12359:4928":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"17:12260:22596":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCacheSlice"],"kind":"enum"},"6:7518:2939":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"17:12711:4979":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"6:532:7626":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:2705:103":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"1:685:9520":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"17:15090:5346":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"11:2533:7566":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"2:3415:125":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"16:7212:6153":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"9:328:7573":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"17:13933:5118":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"16:8096:6289":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"17:2378:22552":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"5:1533:4182":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"17:14859:5307":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"25:665:186":{"crate_id":25,"path":["tokio","loom","std","mutex","Mutex"],"kind":"struct"},"16:8320:22428":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"25:2702:3768":{"crate_id":25,"path":["tokio","sync","once_cell","OnceCell"],"kind":"struct"},"5:6884:35119":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"17:14807:5301":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"16:6098:5968":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"17:16159:5682":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"5:1586:4480":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"16:3048:21556":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"25:3122:4241":{"crate_id":25,"path":["tokio","sync","oneshot","error","RecvError"],"kind":"struct"},"1:9326:2880":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"5:143:3557":{"crate_id":5,"path":["alloc","boxed"],"kind":"module"},"17:11114:4816":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"25:1588:4413":{"crate_id":25,"path":["tokio","sync","mpsc","unbounded","UnboundedSender"],"kind":"struct"},"17:13145:5019":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"20:1947:3452":{"crate_id":20,"path":["http","header","map","Cursor"],"kind":"enum"},"13:229:7559":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:44461:6973":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"25:562:4553":{"crate_id":25,"path":["tokio","util","linked_list","Link"],"kind":"trait"},"16:3141:4692":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"17:16714:5825":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"2:41960:6767":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"5:7649:6578":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"2:32474:3622":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2:6072:4122":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"18:521:26686":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"17:14284:5201":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"2:13889:116":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"5:798:119":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"25:3043:3732":{"crate_id":25,"path":["tokio","sync","mutex","MappedMutexGuard"],"kind":"struct"},"6:6823:8396":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:44029:2559":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"6:6521:8269":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"1:3304:28261":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"5:994:9538":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"1:1647:6469":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"17:13205:5024":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"5:7594:3991":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"17:13322:22493":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"2:42776:3727":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"17:12851:4995":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"25:1998:2575":{"crate_id":25,"path":["tokio","sync","oneshot"],"kind":"module"},"25:287:9618":{"crate_id":25,"path":["tokio","net","addr","ToSocketAddrs"],"kind":"trait"},"16:7282:6167":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"1:8180:7220":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:39069:3679":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:1927:7164":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"1:10961:7319":{"crate_id":1,"path":["std","sys","pal","unix","fs","Mode"],"kind":"struct"},"2:2605:15136":{"crate_id":2,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"22:620:3614":{"crate_id":22,"path":["bytes","bytes_mut","BytesMut"],"kind":"struct"},"17:13028:5015":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"17:16642:5806":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"16:6159:5974":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"2:45893:7004":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"6:5230:7993":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"16:2840:5893":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"17:10274:22482":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"1:958:6454":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"17:16668:5812":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"5:4569:4122":{"crate_id":5,"path":["alloc","collections","vec_deque","shrink_to","Guard"],"kind":"struct"},"16:7386:6176":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"17:11579:4844":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"17:10332:22484":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"1:979:6456":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"25:948:2565":{"crate_id":25,"path":["tokio","sync","broadcast","Sender"],"kind":"struct"},"6:1690:7784":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:11222:4818":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:44670:6805":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"2:3088:2392":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"6:6473:8246":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"5:2304:8622":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"6:1657:7768":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"1:4305:31911":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"17:12941:5003":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"6:6564:8298":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:3563:4122":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"20:2095:4507":{"crate_id":20,"path":["http","header","name","Custom"],"kind":"struct"},"20:1849:4482":{"crate_id":20,"path":["http","header","map","ValuesMut"],"kind":"struct"},"1:9293:27769":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"2:44676:8713":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:505:28459":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"24:42:2560":{"crate_id":24,"path":["http_body","Body"],"kind":"trait"},"5:3318:35112":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"22:1116:3991":{"crate_id":22,"path":["bytes","buf","iter","IntoIter"],"kind":"struct"},"17:10696:4657":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:12698:6798":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"2:10394:4053":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"17:16728:5828":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"17:14507:5238":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"17:14902:5313":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"17:10784:4799":{"crate_id":17,"path":["object","read","read_cache","ReadCacheInternal"],"kind":"struct"},"18:689:4637":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"25:3059:3757":{"crate_id":25,"path":["tokio","sync","notify","Notify"],"kind":"struct"},"2:43435:6935":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:8706:9693":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"5:40:9551":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"18:754:4652":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"17:15655:5537":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"6:5405:8064":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"1:1979:3630":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"17:14405:5223":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"1:6857:3744":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLock"],"kind":"struct"},"15:394:21519":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"25:3201:3765":{"crate_id":25,"path":["tokio","sync","rwlock","owned_write_guard_mapped","OwnedRwLockMappedWriteGuard"],"kind":"struct"},"17:16595:5091":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"5:1132:35119":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"1:6465:2565":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"6:7316:8445":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:13818:5101":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"16:6731:6084":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"17:14975:5326":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"20:511:26694":{"crate_id":20,"path":["http","header","map","as_header_name","AsHeaderName"],"kind":"trait"},"2:43228:4051":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"2:3649:254":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:4823:8488":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"6:5311:8028":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"17:15829:5577":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"2:44475:6976":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"17:13871:5108":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"17:14375:5220":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"11:740:6454":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"6:7350:8464":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:3428:3146":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:40557:6866":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"11:2121:4503":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:10605:153":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:43858:6942":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"17:2227:4670":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"2:23185:6842":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"6:5562:8136":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"17:12347:4927":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"6:7577:8571":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"6:6526:8270":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"17:15540:5514":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"6:6534:8275":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"11:2551:36630":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"17:14460:5232":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"17:14416:5224":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"16:6866:22420":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"2:26147:267":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"16:6408:6012":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"2:8300:3595":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"2:10653:6776":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"6:5670:8184":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"17:11720:4854":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"2:42307:2571":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"1:1902:7162":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"11:1580:6464":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"1:3910:7174":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"16:2550:5880":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:46299:7039":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:3596:2794":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"6:6419:8220":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:13196:120":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"17:15531:5510":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"16:4241:5933":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:46717:7071":{"crate_id":2,"path":["core","core_arch","simd","m32x8"],"kind":"struct"},"25:672:3621":{"crate_id":25,"path":["tokio","loom","std","unsafe_cell","UnsafeCell"],"kind":"struct"},"6:5648:8176":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"5:7077:14934":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"18:706:4640":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"17:14140:5167":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"17:12056:4893":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"1:2015:792":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"25:240:3099":{"crate_id":25,"path":["tokio","io","read_buf","ReadBuf"],"kind":"struct"},"20:1433:4216":{"crate_id":20,"path":["http","uri","port","Port"],"kind":"struct"},"25:3092:4445":{"crate_id":25,"path":["tokio","sync","notify","Notified"],"kind":"struct"},"1:5519:129":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"2:11523:6789":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"6:6638:8333":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:46103:7021":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"5:7836:6547":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"2:21842:6813":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"20:2386:4586":{"crate_id":20,"path":["http","header","value","ToStrError"],"kind":"struct"},"6:4816:7820":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:42210:4182":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"1:5626:7188":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"1:1636:6467":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"6:4896:7873":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"17:13909:5114":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"1:2078:198":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"25:893:4389":{"crate_id":25,"path":["tokio","runtime","scheduler","Handle"],"kind":"enum"},"2:2932:14975":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"2:13932:3624":{"crate_id":2,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"2:40694:6874":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"struct"},"1:11702:7207":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"6:7539:8552":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:47090:7111":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"6:1703:7788":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"1:9168:7301":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"6:5036:7943":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"6:5151:7967":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:43928:6947":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"11:1907:6467":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"5:5549:14888":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"16:8209:5908":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"21:0:3589":{"crate_id":21,"path":["fnv"],"kind":"module"},"5:1898:6547":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"1:11221:27912":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"20:2731:2395":{"crate_id":20,"path":["http","uri","Uri"],"kind":"struct"},"2:2752:487":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"2:21693:33511":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"2:13641:6894":{"crate_id":2,"path":["core","future","async_drop","Fuse"],"kind":"struct"},"17:15418:5467":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"20:2746:2999":{"crate_id":20,"path":["http","uri","InvalidUri"],"kind":"struct"},"17:11818:4866":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"2:3047:138":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"17:15439:5475":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"2:0:568":{"crate_id":2,"path":["core"],"kind":"module"},"2:43182:74":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"1:4327:9658":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"25:2993:9715":{"crate_id":25,"path":["tokio","sync","mpsc","error","TrySendError"],"kind":"enum"},"2:23007:6824":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"6:4875:7864":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"17:12906:4999":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"1:9314:7308":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"5:7660:9535":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"1:9241:9715":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"1:9334:7311":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"16:5255:5952":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"1:8214:140":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"18:581:3958":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"2:44492:6977":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:11682:7339":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:33157:3659":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"23:30:3136":{"crate_id":23,"path":["itoa","private","Sealed"],"kind":"trait"},"5:7514:4483":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"5:7043:14932":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"1:10914:8717":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"2:40653:6872":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"16:7168:6141":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:41404:6758":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"6:485:7595":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"5:4307:4122":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"18:670:4634":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"2:46060:7018":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"12:0:3464":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"22:1129:4465":{"crate_id":22,"path":["bytes","buf","reader","Reader"],"kind":"struct"},"20:2047:2990":{"crate_id":20,"path":["http","header","name","HeaderName"],"kind":"struct"},"25:1223:4398":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","PermitIterator"],"kind":"struct"},"17:13970:5124":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"18:481:4602":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"6:5494:8113":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"2:45846:6997":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"6:6652:8344":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"17:11691:4850":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"17:11503:4835":{"crate_id":17,"path":["object","read","archive","ArchiveSymbol"],"kind":"struct"},"1:10350:7321":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"1:10601:7297":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"17:11515:4836":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"25:2971:3760":{"crate_id":25,"path":["tokio","sync","mpsc","unbounded","Semaphore"],"kind":"struct"},"6:1521:7671":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"6:7463:8503":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"16:6421:5856":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"2:44933:3623":{"crate_id":2,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"16:8711:6365":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"2:44970:6474":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:42888:4060":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"2:39728:3683":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"1:12366:1324":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"17:10296:22483":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"11:881:6459":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"16:6111:5973":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:15:2779":{"crate_id":2,"path":["core","write"],"kind":"macro"},"11:1914:6468":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"17:15739:5556":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"17:14738:5287":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"20:2201:36711":{"crate_id":20,"path":["http","header","name","StandardHeader"],"kind":"enum"},"17:12176:4903":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"16:7462:6190":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"17:11998:4879":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"16:4983:5944":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"17:12249:4914":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"2:3453:142":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"17:14084:5150":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"1:8202:7223":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"1:5451:203":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"1:5780:8394":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"17:11475:22505":{"crate_id":17,"path":["object","read","archive","SymbolIteratorInternal"],"kind":"enum"},"1:9115:199":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"1:9412:235":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"17:14269:5197":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"2:44335:6801":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"17:13733:5073":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"17:14796:5299":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:13706:33300":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"6:4997:7921":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"5:3809:35119":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"5:3339:6468":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2:3639:3687":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:6513:220":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"17:12860:4996":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"2:8059:3721":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"2:4443:6729":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"17:10564:4653":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"17:15573:5517":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"11:2559:7570":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"1:3301:33009":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"5:7534:6576":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"6:5282:8017":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:10039:33232":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"14:40:5088":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"1:10644:28424":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"6:6716:8365":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"16:7990:6285":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"1:11001:7219":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"17:13958:5123":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"2:23251:6848":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"6:5217:7989":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"16:2590:5882":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"2:40903:6735":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:9275:7302":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"5:3313:6467":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"25:160:26801":{"crate_id":25,"path":["tokio","io","async_seek","AsyncSeek"],"kind":"trait"},"5:7767:6586":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"1:11733:8729":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:5969:3729":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"1:11356:7338":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"11:1049:4487":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"6:4869:7863":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"1:12361:420":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"2:39890:3688":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:968:9536":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"20:2583:2826":{"crate_id":20,"path":["http","request","Builder"],"kind":"struct"},"5:5809:14932":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"6:6544:8282":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"17:12570:4968":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"16:8014:5918":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"1:12362:1184":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"5:4142:4483":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"16:6123:5906":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"17:15731:5553":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2:44694:131":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:42201:173":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"1:11421:2558":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"20:586:4474":{"crate_id":20,"path":["http","header","name","InvalidHeaderName"],"kind":"struct"},"1:12374:745":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"5:3860:3452":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"1:4888:9663":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"16:546:5854":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"17:12293:4919":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"1:8247:7226":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"6:5271:8009":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:4355:4122":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"17:13537:5002":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"6:8308:8609":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"5:1564:3991":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"1:9551:7163":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"1:11882:7175":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:5277:34499":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"17:16385:5740":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"2:43970:6951":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"2:44850:219":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"6:5139:7966":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"17:15946:5609":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"16:6144:22415":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"1:9347:27740":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"16:8000:5917":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"17:14560:5247":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"0:163:1485":{"crate_id":0,"path":["hyper","rt"],"kind":"module"},"5:1636:210":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"17:14845:5306":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"23:28:26783":{"crate_id":23,"path":["itoa","Integer"],"kind":"trait"},"17:13662:5060":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"16:8612:5922":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:12507:14903":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"6:7414:8492":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:42235:3929":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:11041:3136":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"6:1597:7720":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:12981:14901":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"16:7907:6271":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"20:5:2390":{"crate_id":20,"path":["http","header"],"kind":"module"},"6:6708:8363":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"16:6970:5904":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"6:5488:8111":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"17:10928:4813":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:8382:3594":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:39800:215":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"6:8343:8618":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:7401:28426":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"2:22248:6812":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:34054:3669":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"22:1172:4466":{"crate_id":22,"path":["bytes","buf","writer","Writer"],"kind":"struct"},"2:43941:6948":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"2:4431:6728":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"6:7332:8457":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:22473:9827":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"17:14963:5324":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:34573:3673":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"5:4377:4182":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"16:7044:5909":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"16:7471:6193":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"2:46284:7038":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"25:528:26811":{"crate_id":25,"path":["tokio","util","wake_list","WakeList"],"kind":"struct"},"5:3465:6547":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"1:8622:2564":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"17:15876:5587":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"6:7548:8555":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:40720:6876":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:876:4182":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"16:5282:5953":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"11:830:4482":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"16:5224:5951":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"2:47285:7129":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"18:531:4608":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"6:5603:8150":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"16:3308:5868":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"1:1094:4490":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"6:4990:7918":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"6:5186:7970":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:32505:115":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"2:38380:3676":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:12491:6792":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"2:47148:7115":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"11:102:4497":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"1:2325:2827":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:43388:6925":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:13034:14908":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:46214:7034":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"2:46605:7067":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"25:3260:4068":{"crate_id":25,"path":["tokio","sync","watch","Ref"],"kind":"struct"},"17:14652:5259":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"16:6852:6094":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"11:1674:36638":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"1:11312:8721":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"2:3654:147":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:34400:3671":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:41419:6902":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"16:6984:5921":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"20:1982:4497":{"crate_id":20,"path":["http","header","map","Bucket"],"kind":"struct"},"24:89:2561":{"crate_id":24,"path":["http_body","frame","Frame"],"kind":"struct"},"0:341:2405":{"crate_id":0,"path":["hyper","upgrade"],"kind":"module"},"16:6625:6048":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"20:2751:3000":{"crate_id":20,"path":["http","uri","InvalidUriParts"],"kind":"struct"},"2:39684:3693":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"2:10335:2796":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"2:46185:7033":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"0:162:2402":{"crate_id":0,"path":["hyper","ext"],"kind":"module"},"17:16399:5743":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"17:13209:138":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"20:1925:4493":{"crate_id":20,"path":["http","header","map","ValueIterMut"],"kind":"struct"},"2:9848:85":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"11:2539:7567":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"16:2530:5879":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"16:5757:5961":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"2:3576:211":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"6:4890:7871":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"1:991:6459":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"1:12363:476":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"17:15836:5578":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"2:33708:3668":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"11:488:154":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"1:3069:226":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"2:12079:14896":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"2:3928:4483":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"20:1937:4494":{"crate_id":20,"path":["http","header","map","ValueDrain"],"kind":"struct"},"1:11104:28465":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"6:570:7645":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"17:12018:4881":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"2:6263:6739":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:8175:4736":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"17:15621:5526":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"16:4694:5936":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:46398:7044":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"6:1632:7749":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"6:1551:7691":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:44342:6870":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"16:5709:22414":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"11:1880:4182":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"1:1614:4182":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"25:2135:3760":{"crate_id":25,"path":["tokio","sync","batch_semaphore","Semaphore"],"kind":"struct"},"17:14043:5138":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"25:1600:4414":{"crate_id":25,"path":["tokio","sync","mpsc","unbounded","UnboundedReceiver"],"kind":"struct"},"2:41976:9617":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"6:5551:8130":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"17:583:4665":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"6:6672:8349":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"24:0:2413":{"crate_id":24,"path":["http_body"],"kind":"module"},"2:4716:6731":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"1:0:1727":{"crate_id":1,"path":["std"],"kind":"module"},"1:5658:114":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"5:3306:4182":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"1:3671:4133":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"2:7776:33371":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:11727:8728":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"1:4165:9637":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"1:12373:742":{"crate_id":1,"path":["std","f16"],"kind":"primitive"},"16:6173:5977":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"1:677:7154":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"2:4594:3768":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:10919:8719":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"11:434:36640":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"25:107:26799":{"crate_id":25,"path":["tokio","io","async_buf_read","AsyncBufRead"],"kind":"trait"},"6:6876:8407":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:11051:239":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"10:36:7572":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"5:1223:36195":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"1:11009:7190":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"1:5606:7187":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"16:4267:5934":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"1:899:3991":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"17:12280:4917":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"6:5635:8170":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"1:11098:28458":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"20:1133:2997":{"crate_id":20,"path":["http","status","InvalidStatusCode"],"kind":"struct"},"2:40758:2559":{"crate_id":2,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"2:42626:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"2:46982:7107":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"17:12798:22621":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"17:14520:5241":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"17:14599:5252":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"2:40570:6867":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"5:0:309":{"crate_id":5,"path":["alloc"],"kind":"module"},"16:4902:5941":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"6:7308:8440":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"20:1794:2397":{"crate_id":20,"path":["http","header","map","HeaderMap"],"kind":"struct"},"16:3441:5926":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"2:44093:6958":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:21737:33516":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"11:2380:4182":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"20:32:4472":{"crate_id":20,"path":["http","header","map","MaxSizeReached"],"kind":"struct"},"25:705:37382":{"crate_id":25,"path":["tokio","runtime","coop","with_budget","ResetGuard"],"kind":"struct"},"1:10973:2815":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"2:32415:3222":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"20:2009:4501":{"crate_id":20,"path":["http","header","map","ExtraValue"],"kind":"struct"},"5:221:6538":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"16:8165:5910":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"20:1904:4490":{"crate_id":20,"path":["http","header","map","OccupiedEntry"],"kind":"struct"},"20:512:36749":{"crate_id":20,"path":["http","header","map","as_header_name","TryEntryError"],"kind":"enum"},"1:2748:4145":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"2:4851:4069":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"17:16323:5727":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"16:7959:6283":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2:41429:6759":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:46937:7106":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"1:4408:7177":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"20:2606:2394":{"crate_id":20,"path":["http","status","StatusCode"],"kind":"struct"},"7:0:1917":{"crate_id":7,"path":["unwind"],"kind":"module"},"6:5533:8119":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"14:187:21496":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"20:1914:3016":{"crate_id":20,"path":["http","header","map","ValueIter"],"kind":"struct"},"5:6258:4122":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"1:12367:335":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"9:176:21468":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"17:12204:4906":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"11:1023:4490":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"16:8598:6356":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"1:9199:4241":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"6:5224:7990":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"5:1595:4481":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:7710:14972":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"17:10803:2559":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"17:16613:5101":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"16:7554:22424":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"14:202:14916":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"2:47157:7116":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"17:12897:4998":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"2:43413:157":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:22999:6823":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"25:1591:4415":{"crate_id":25,"path":["tokio","sync","mpsc","unbounded","WeakUnboundedSender"],"kind":"struct"},"17:15121:5352":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2:2797:195":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"17:472:4662":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"1:11210:7299":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:43989:6952":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:4497:14945":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"17:11309:4820":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"2:36449:3674":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"5:7502:6574":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"1:10224:6912":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"2:13758:3697":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"16:8626:6358":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"2:31174:196":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:44868:207":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"1:4696:9664":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"16:2450:5869":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"11:1105:6461":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"17:16341:5733":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"1:933:4483":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"1:5006:9648":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"1:8347:4157":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:2968:257":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"20:2037:36762":{"crate_id":20,"path":["http","header","map","Danger"],"kind":"enum"},"17:12066:2396":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"1:9211:4242":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"6:5107:7963":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:8596:7176":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"2:30827:33389":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"17:16761:5835":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"6:5428:8074":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"0:31:2400":{"crate_id":0,"path":["hyper","body"],"kind":"module"},"16:2704:5887":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:46383:7043":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2:44629:6981":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"20:1857:4483":{"crate_id":20,"path":["http","header","map","Drain"],"kind":"struct"},"2:2217:189":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"6:1727:7797":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:9853:92":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"17:11952:4875":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"16:2467:5871":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"6:6748:8370":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"5:7566:210":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"17:11173:36672":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:5256:438":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"6:465:7584":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"17:12149:4901":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"17:11421:4830":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"5:938:9537":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"1:11197:7298":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"20:1767:36763":{"crate_id":20,"path":["http","extensions","AnyClone"],"kind":"trait"},"17:15410:5464":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"1:9390:187":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"17:14346:5215":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"20:2381:2991":{"crate_id":20,"path":["http","header","value","HeaderValue"],"kind":"struct"},"1:8723:7288":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"6:4921:7889":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:9448:3701":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"20:2020:4553":{"crate_id":20,"path":["http","header","map","Link"],"kind":"enum"},"2:10334:226":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"1:962:6455":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"2:46045:7017":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"20:1969:4496":{"crate_id":20,"path":["http","header","map","HashValue"],"kind":"struct"},"6:7487:8514":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:4205:9639":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"20:2806:4589":{"crate_id":20,"path":["http","version","Http"],"kind":"enum"},"2:43878:6944":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"17:12319:4924":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"1:4674:9663":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"6:6813:8393":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:2607:15137":{"crate_id":2,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"1:12377:918":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:47069:7110":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:22867:6815":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:7156:9739":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"20:2574:3404":{"crate_id":20,"path":["http","request","Parts"],"kind":"struct"},"6:5471:8105":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"2:22:824":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"1:889:4183":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"1:7358:9010":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"9:53:21419":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"6:6723:8366":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"2:22920:6816":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:42874:4052":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"6:5349:8038":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"17:16656:5810":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"5:735:6539":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"2:32416:244":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"20:1664:138":{"crate_id":20,"path":["http","error","Error"],"kind":"struct"},"2:44909:3626":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:44652:6989":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"17:322:4660":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"18:680:4635":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"2:3249:3713":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"16:5379:5956":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"20:2488:2391":{"crate_id":20,"path":["http","method","Method"],"kind":"struct"},"2:42226:3991":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"5:3094:4045":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"6:4937:7893":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:5084:14963":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"2:21948:9742":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"2:46584:7066":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:45993:7014":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"5:2275:6552":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"5:789:250":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:47209:7120":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"6:4914:7885":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:42298:4224":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"17:16283:5716":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"1:9721:28415":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"6:1584:7713":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"20:1994:4499":{"crate_id":20,"path":["http","header","map","Links"],"kind":"struct"},"17:14001:5133":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"17:16362:5736":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"6:8261:8599":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"1:5291:7185":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:39648:3694":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"2:3821:71":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"17:13515:22494":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"25:1383:4400":{"crate_id":25,"path":["tokio","sync","mpsc","chan","Tx"],"kind":"struct"},"25:517:4198":{"crate_id":25,"path":["tokio","trace","async_trace_leaf","Trace"],"kind":"struct"},"2:33775:3666":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"5:4172:35119":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:2143:15147":{"crate_id":2,"path":["core","ptr","metadata","Thin"],"kind":"trait_alias"},"25:1936:37378":{"crate_id":25,"path":["tokio","sync","notify","NotifyWaitersList"],"kind":"struct"},"2:3288:3682":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"1:8562:2872":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"16:6368:5850":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"1:8673:7180":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:23174:6841":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"17:16507:5087":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"2:2766:135":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"17:13306:5032":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:40687:6873":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"2:44729:15246":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"17:15760:5560":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"13:0:3458":{"crate_id":13,"path":["std_detect"],"kind":"module"},"2:44618:14915":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:10402:206":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:22221:3136":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"2:11247:4144":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"16:6749:5861":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"2:6972:7542":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"1:9738:128":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"20:2069:7171":{"crate_id":20,"path":["http","header","name","Repr"],"kind":"enum"},"17:0:3468":{"crate_id":17,"path":["object"],"kind":"module"},"5:3347:6466":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"25:3195:3764":{"crate_id":25,"path":["tokio","sync","rwlock","owned_write_guard","OwnedRwLockWriteGuard"],"kind":"struct"},"20:1804:4182":{"crate_id":20,"path":["http","header","map","Iter"],"kind":"struct"},"17:14127:5166":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"17:14997:5337":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:3283:3681":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"1:6203:220":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"17:11401:4827":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"2:44425:14914":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"17:12537:4965":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"17:3720:4680":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"6:5462:8099":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"6:6758:8377":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"17:12776:4984":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"11:2545:7568":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"2:43124:4049":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"1:11821:7173":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:42663:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"16:7542:6202":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"2:23229:6846":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"16:2506:5878":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"16:6781:6087":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"17:14152:5170":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"17:13635:2877":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"5:5:1943":{"crate_id":5,"path":["alloc","vec"],"kind":"macro"},"1:12368:1701":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"17:16311:5725":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"17:11163:4817":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"20:2594:3404":{"crate_id":20,"path":["http","response","Parts"],"kind":"struct"},"6:7604:8577":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:21720:33522":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:5962:3728":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:8793:33620":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"6:5593:8145":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"1:1925:7163":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"5:7719:6582":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"1:4343:9660":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"2:10862:33725":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"2:6772:6741":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"5:7675:6571":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"16:3587:5927":{"crate_id":16,"path":["gimli","arch","MIPS"],"kind":"struct"},"1:7885:7210":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"1:12370:1825":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"2:44567:6804":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"17:11026:36674":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"1:2329:4131":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"2:21739:33514":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"20:1833:4480":{"crate_id":20,"path":["http","header","map","Keys"],"kind":"struct"},"2:10830:34239":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"2:42355:4182":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"0:164:3097":{"crate_id":0,"path":["hyper","rt","bounds"],"kind":"module"},"1:8076:9569":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:40852:4142":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"17:15315:5381":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"25:868:4389":{"crate_id":25,"path":["tokio","runtime","driver","Handle"],"kind":"struct"},"2:816:9620":{"crate_id":2,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"18:651:4604":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"1:10935:7313":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"2:46252:7036":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"2:3207:247":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:4712:221":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"17:15431:5474":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"2:44922:34363":{"crate_id":2,"path":["core","task","wake","ExtData"],"kind":"enum"},"1:763:154":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"17:12583:4969":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"2:42144:6768":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"2:8247:15124":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"6:6680:8351":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"16:8028:6286":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"6:5205:7982":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"25:1531:4400":{"crate_id":25,"path":["tokio","sync","mpsc","list","Tx"],"kind":"struct"},"16:4152:5931":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"16:5172:5949":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"17:13070:4817":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"6:5387:8053":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"2:4904:4070":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"2:40823:6885":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"2:45861:7000":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"16:7807:36665":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"17:15641:5534":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"6:5241:7996":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"16:2990:5900":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"16:6502:21527":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"22:1135:4143":{"crate_id":22,"path":["bytes","buf","take","Take"],"kind":"struct"},"1:9716:7220":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"25:808:4383":{"crate_id":25,"path":["tokio","runtime","coop","Budget"],"kind":"struct"},"2:2931:3136":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"16:3110:5923":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"2:40921:6891":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"1:10352:7320":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"17:10823:4661":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:8746:150":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:12346:27760":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"17:15106:5348":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"2:43190:4049":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"16:6573:6042":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"16:8105:6290":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"1:3307:28288":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"16:2966:5899":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"17:15981:5617":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"1:1630:6466":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"25:350:94":{"crate_id":25,"path":["tokio","loom","std","atomic_u16","AtomicU16"],"kind":"struct"},"1:11964:2561":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"13:110:36646":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"2:40614:14969":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"2:4061:3991":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"5:7602:3991":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"15:288:21508":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"16:903:4659":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"16:8565:6351":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"11:2440:4483":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"16:6822:22419":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"5:3875:6550":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"0:487:3400":{"crate_id":0,"path":["hyper","upgrade","OnUpgrade"],"kind":"struct"},"17:13719:5072":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"17:10938:36673":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"25:3306:4457":{"crate_id":25,"path":["tokio","sync","watch","state","StateSnapshot"],"kind":"struct"},"17:14573:5249":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"6:4842:7840":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"25:3134:4242":{"crate_id":25,"path":["tokio","sync","oneshot","error","TryRecvError"],"kind":"enum"},"6:7368:8473":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"6:7986:8583":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"1:3442:4162":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"16:8528:6346":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:43960:6950":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"2:22605:34249":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"6:4881:7866":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"16:6808:5901":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"2:42004:8703":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"11:2466:6547":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"17:15919:5602":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"1:8228:128":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"6:1667:7774":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:3258:3663":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"17:15769:5561":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"17:12306:4921":{"crate_id":17,"path":["object","read","macho","fat","MachOFatFile"],"kind":"struct"},"16:7521:6200":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"5:4506:35131":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"1:10418:9152":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"6:5641:8173":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"1:3845:9618":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"16:896:5863":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"2:12775:6781":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:44019:6956":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"25:3073:4442":{"crate_id":25,"path":["tokio","sync","notify","AtomicNotification"],"kind":"struct"},"17:10861:139":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"11:1064:21482":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"17:13798:5091":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"17:1220:4667":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"17:14335:5212":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"16:7016:6112":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"1:8515:4142":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"25:2794:4427":{"crate_id":25,"path":["tokio","sync","watch","Shared"],"kind":"struct"},"2:42315:226":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"16:3126:21557":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"2:39860:3686":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"1:8876:7296":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"17:16332:5731":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"17:11757:22525":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"25:820:37379":{"crate_id":25,"path":["tokio","runtime","coop","RestoreOnPending"],"kind":"struct"},"16:7765:6233":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"6:8255:8598":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"25:3221:3766":{"crate_id":25,"path":["tokio","sync","rwlock","write_guard_mapped","RwLockMappedWriteGuard"],"kind":"struct"},"6:6917:8433":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"17:15997:5620":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"6:1514:7668":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"25:3064:4439":{"crate_id":25,"path":["tokio","sync","notify","Waiter"],"kind":"struct"},"0:260:2404":{"crate_id":0,"path":["hyper","service"],"kind":"module"},"6:5682:8189":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"0:0:2411":{"crate_id":0,"path":["hyper"],"kind":"module"},"16:4404:5935":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"14:214:6448":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"1:9321:7309":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"1:9182:4416":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"17:13361:5035":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"17:11985:4878":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"2:46267:7037":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"11:671:4182":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"16:8723:138":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"17:14547:5246":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"25:3101:4240":{"crate_id":25,"path":["tokio","sync","notify","State"],"kind":"enum"},"2:40965:6746":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"6:5025:7937":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"1:437:185":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"17:2406:4674":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"17:10778:4798":{"crate_id":17,"path":["object","read","read_cache","ReadCache"],"kind":"struct"},"1:1621:4483":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:9416:3931":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"2:11495:6787":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"17:12550:4967":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"17:12605:4817":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"17:11617:4818":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"5:1424:6463":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"6:1539:7682":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"17:12816:4682":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"6:5381:8050":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"1:4489:7178":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"6:5265:8006":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:13983:5125":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"17:10246:22481":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"1:11798:27828":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:3036:124":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"2:2150:6592":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"2:42515:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"17:11124:36670":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:33641:3664":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"17:11539:4840":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"6:8199:8596":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"5:4491:265":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"1:378:7148":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"16:6998:6105":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"16:6837:6092":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"17:16750:5834":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"6:6691:8354":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"1:9109:7297":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"2:42895:4061":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"17:13471:4682":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"11:2400:4183":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"2:22517:9828":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"2:4455:110":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:40768:9579":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"2:10406:4059":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"2:44843:151":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"17:16187:5689":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"18:548:153":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"16:6942:6103":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"1:5114:9684":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"6:6493:8257":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:2077:1368":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"2:1964:4122":{"crate_id":2,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"2:4795:4068":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"17:12976:5006":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"2:11198:4182":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"6:7431:8493":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:45925:7006":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"5:291:35119":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"17:12920:5000":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"2:40912:6737":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:45876:7001":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"22:404:4314":{"crate_id":22,"path":["bytes","bytes","Vtable"],"kind":"struct"},"2:3485:3684":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"2:22814:6814":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:6871:3745":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLockGuard"],"kind":"struct"},"25:1228:4399":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","OwnedPermit"],"kind":"struct"},"6:6777:8380":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"17:13041:5016":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"1:4143:9635":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"11:2566:6578":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"6:5412:1253":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"25:0:2414":{"crate_id":25,"path":["tokio"],"kind":"module"},"5:6714:35119":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"2:42088:33397":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"16:2796:5891":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"2:22555:9829":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"24:106:2562":{"crate_id":24,"path":["http_body","size_hint","SizeHint"],"kind":"struct"},"2:41171:4143":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"16:7305:6168":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"17:10167:22479":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"1:9367:7541":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"2:43789:6938":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"1:9126:7298":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"16:5449:5958":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:12378:900":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"1:3397:4165":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"11:2366:6472":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"9:236:4240":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2:5357:986":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:40944:6740":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"17:11630:4846":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"1:11511:28454":{"crate_id":1,"path":["std","sys","sync","once","futex","CompletionGuard"],"kind":"struct"},"2:44043:4144":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"25:615:37361":{"crate_id":25,"path":["tokio","util","markers","SyncNotSend"],"kind":"struct"},"22:311:4460":{"crate_id":22,"path":["bytes","buf","uninit_slice","UninitSlice"],"kind":"struct"},"25:3166:3758":{"crate_id":25,"path":["tokio","sync","batch_semaphore","AcquireError"],"kind":"struct"},"2:12737:6800":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"17:3503:4678":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:30795:3144":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:12381:893":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"6:6623:8331":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"16:7838:22425":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"20:466:3015":{"crate_id":20,"path":["http","header","map","into_header_name","IntoHeaderName"],"kind":"trait"},"2:44193:6960":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"2:23092:6836":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:6686:3734":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"1:4774:9681":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"6:5019:7934":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:43950:6949":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"16:2724:5888":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:4721:6732":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:2322:7168":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"17:13692:5064":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"16:7969:6284":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"1:2726:28468":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"17:15557:5516":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"5:4582:35131":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"17:13169:5021":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"25:135:26800":{"crate_id":25,"path":["tokio","io","async_read","AsyncRead"],"kind":"trait"},"1:12384:1853":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"17:11553:4841":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"20:2857:3606":{"crate_id":20,"path":["http","extensions","Extensions"],"kind":"struct"},"6:7448:8498":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:34227:3670":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"6:1569:7701":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"17:12648:4971":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"6:5249:7999":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:43404:6928":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"25:83:3697":{"crate_id":25,"path":["tokio","future","poll_fn","PollFn"],"kind":"struct"},"6:5395:8058":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"1:8486:2815":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"6:5658:8177":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"16:4810:5938":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"2:3456:143":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:44111:6959":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"11:873:6458":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"11:698:3991":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:3444:3593":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"11:1900:6466":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"16:2620:5883":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"17:15064:5344":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"17:14872:5308":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"17:13290:4755":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"17:15864:5586":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"5:3373:6469":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"17:10793:4801":{"crate_id":17,"path":["object","read","read_cache","ReadCacheRange"],"kind":"struct"},"2:42380:196":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"5:7067:14933":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"2:43153:6321":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"1:12385:1859":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:40974:6747":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"17:10031:22475":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"10:0:3462":{"crate_id":10,"path":["adler"],"kind":"module"},"2:8749:4184":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"5:3105:34897":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:43889:6945":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"11:835:6455":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"2:22701:9823":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"11:1601:6465":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"17:12687:4977":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"1:7989:3136":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"5:7731:6584":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:41944:6765":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"9:0:3461":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"11:1893:6547":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"1:8091:7219":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"1:4929:9652":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"14:165:21489":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"11:2228:4886":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"11:1888:4483":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"17:13119:5018":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"1:3653:2796":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"1:5996:3730":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"17:14072:5147":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"17:11805:4865":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"1:7875:4666":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"17:15602:5525":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"6:8290:8606":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"1:6378:28471":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"1:8545:4141":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"2:40786:6878":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"1:8056:9523":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"16:7919:6272":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"23:14:7542":{"crate_id":23,"path":["itoa","Buffer"],"kind":"struct"},"16:8546:6348":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"6:545:7632":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"6:4947:7899":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"25:999:9457":{"crate_id":25,"path":["tokio","sync","broadcast","Recv"],"kind":"struct"},"5:4337:4122":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"6:5088:7962":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"16:6188:5979":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"6:5366:8043":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"6:5629:8167":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"2:2952:78":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"2:39910:6861":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"6:1489:7658":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"17:11527:4839":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"1:3399:4166":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"5:7754:243":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:7605:3998":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"2:32945:3660":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"16:6239:5983":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"1:11716:7209":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"2:46074:7019":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:44901:3625":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"17:15024:5339":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"1:4563:7179":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"2:2964:258":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"2:1833:15081":{"crate_id":2,"path":["core","intrinsics","AggregateRawPtr"],"kind":"trait"},"6:6449:8237":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"25:410:3728":{"crate_id":25,"path":["tokio","loom","std","barrier","Barrier"],"kind":"struct"},"25:3054:3738":{"crate_id":25,"path":["tokio","sync","mutex","TryLockError"],"kind":"struct"},"17:13451:5041":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"25:3286:4241":{"crate_id":25,"path":["tokio","sync","watch","error","RecvError"],"kind":"struct"},"2:40501:6862":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"17:15785:5565":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:40865:6888":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"16:8043:36659":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"2:44211:6961":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:42371:3991":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:10648:9611":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"6:1563:7699":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"16:3987:4705":{"crate_id":16,"path":["gimli","arch","PowerPc64"],"kind":"struct"},"11:328:7564":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"6:5357:8039":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"2:46235:7035":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"5:7574:6577":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"6:5520:8118":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"17:12335:4926":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"6:5288:8020":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"2:43915:6885":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"17:12886:4997":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"16:8223:6294":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"3:234:226":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"20:877:2995":{"crate_id":20,"path":["http","method","InvalidMethod"],"kind":"struct"},"2:44943:180":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"2:3731:3620":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"17:10977:36676":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:2141:15146":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:943:6547":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"20:2107:4508":{"crate_id":20,"path":["http","header","name","MaybeLower"],"kind":"struct"},"1:2712:4154":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"1:6041:3742":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"2:22985:33393":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"17:506:4664":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"17:15963:5613":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"16:6794:6088":{"crate_id":16,"path":["gimli","read","relocate","RelocateReader"],"kind":"struct"},"16:8137:5919":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"17:14821:5303":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"16:6042:5905":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"1:8608:9662":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"1:8255:4155":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"1:5712:7190":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:3660:3689":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"6:523:7620":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"1:4012:7175":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"1:3681:4136":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"6:5441:8084":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"6:1696:7785":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"17:12028:4883":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"17:13266:22492":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"5:2182:6551":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"1:2787:4156":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"25:2976:4416":{"crate_id":25,"path":["tokio","sync","mpsc","error","SendError"],"kind":"struct"},"17:12234:4910":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"17:10442:22488":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"16:5113:5947":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"1:8010:7213":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"16:3014:21555":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"2:2955:77":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"1:6682:3733":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"2:38490:3678":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:42552:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"11:1005:4503":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"11:2349:4487":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"2:43868:6943":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"16:6680:6070":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackageSections"],"kind":"struct"},"2:32384:6252":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"17:13554:5049":{"crate_id":17,"path":["object","read","RelocationMapEntry"],"kind":"struct"},"5:7743:6585":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"1:10492:114":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"5:2171:6550":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"6:5165:7968":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"6:8302:8608":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"16:0:3467":{"crate_id":16,"path":["gimli"],"kind":"module"},"25:3314:4458":{"crate_id":25,"path":["tokio","sync","watch","state","AtomicState"],"kind":"struct"},"1:5091:9682":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"1:8859:4182":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"1:661:3632":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"5:1011:4182":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"1:532:9503":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"1:10982:27914":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"2:44002:6955":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"17:15286:5361":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"11:2495:21478":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"2:40599:6727":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:32338:3617":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:22687:3136":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"1:3346:4164":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"25:1219:4397":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","Permit"],"kind":"struct"},"6:6599:8319":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"5:1614:6453":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"5:1548:4183":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"16:3834:5929":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"2:44265:6963":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"16:7358:5911":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"16:6608:206":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"11:299:7561":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"5:6535:3629":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"1:4219:9641":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"17:13181:5022":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"2:21830:9744":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:12920:4191":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"6:5420:8069":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"17:15905:5595":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"9:480:21400":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"20:0:2389":{"crate_id":20,"path":["http"],"kind":"module"},"2:13618:3699":{"crate_id":2,"path":["core","future","async_drop","AsyncDropInPlace"],"kind":"struct"},"16:4844:5939":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"25:2942:4242":{"crate_id":25,"path":["tokio","sync","broadcast","error","TryRecvError"],"kind":"enum"},"16:6064:5907":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"20:1870:4484":{"crate_id":20,"path":["http","header","map","GetAll"],"kind":"struct"},"6:479:7592":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"17:16494:5073":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"5:3101:34896":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"1:11282:162":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"5:1604:4482":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"6:1684:7781":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"19:0:1301":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"16:7731:3929":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"20:1814:4183":{"crate_id":20,"path":["http","header","map","IterMut"],"kind":"struct"},"16:6890:5903":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"25:3269:4416":{"crate_id":25,"path":["tokio","sync","watch","error","SendError"],"kind":"struct"},"20:2737:3404":{"crate_id":20,"path":["http","uri","Parts"],"kind":"struct"},"2:46089:7020":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:11950:28395":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"6:5301:8025":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"25:1704:186":{"crate_id":25,"path":["tokio","sync","mutex","Mutex"],"kind":"struct"},"17:11678:4849":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"2:40702:6875":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:1103:4487":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"1:12149:28457":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"2:23273:6850":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"25:3049:3756":{"crate_id":25,"path":["tokio","sync","mutex","OwnedMappedMutexGuard"],"kind":"struct"},"2:33909:3667":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"6:497:7600":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"25:3228:3769":{"crate_id":25,"path":["tokio","sync","once_cell","SetError"],"kind":"enum"},"16:4929:5942":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:44247:6962":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"1:384:7150":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"17:13095:5017":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"17:15887:5591":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"7:79:21395":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"1:949:4482":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"1:4157:9636":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"16:7337:6172":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"6:5570:8138":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:21950:6813":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:44604:6980":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:47232:7126":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"16:2820:5892":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"16:6738:36664":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"17:16297:5718":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"16:7789:36663":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"1:11247:3701":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"1:2008:3631":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"20:2690:2826":{"crate_id":20,"path":["http","uri","builder","Builder"],"kind":"struct"},"6:7361:8469":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"17:12787:4985":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"16:6914:6101":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"17:16179:5688":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"11:798:4483":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"17:15689:5540":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"5:1379:4503":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"18:726:4647":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"6:5341:8037":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"1:11981:28420":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Bomb"],"kind":"struct"},"2:40935:6894":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:5642:7189":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"23:0:3590":{"crate_id":23,"path":["itoa"],"kind":"module"},"2:40843:6887":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"4:0:3459":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"1:11041:7300":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"17:16822:5118":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"6:5179:7969":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"17:13385:5036":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"2:44838:8714":{"crate_id":2,"path":["core","future","async_drop","Noop"],"kind":"struct"},"16:6640:6050":{"crate_id":16,"path":["gimli","read","dwarf","DwarfSections"],"kind":"struct"},"2:46028:7016":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"2:23218:6845":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"17:13921:5117":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"17:3854:4681":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"14:0:3465":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"6:8273:8601":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"25:2545:233":{"crate_id":25,"path":["tokio","sync","rwlock","RwLock"],"kind":"struct"},"22:0:2412":{"crate_id":22,"path":["bytes"],"kind":"module"},"20:2002:4500":{"crate_id":20,"path":["http","header","map","RawLinks"],"kind":"struct"},"9:445:21401":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"2:44718:3705":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"1:10718:4165":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"6:4829:7830":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:46510:7064":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"20:2703:4213":{"crate_id":20,"path":["http","uri","scheme","Scheme2"],"kind":"enum"},"2:32473:2803":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"16:7350:6174":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"1:680:7155":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:41388:6757":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"2:8755:15123":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"17:10418:22487":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"25:3173:3760":{"crate_id":25,"path":["tokio","sync","semaphore","Semaphore"],"kind":"struct"},"17:13854:5106":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"17:14773:5298":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"1:954:6453":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"6:5057:7952":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"20:2756:4157":{"crate_id":20,"path":["http","uri","ErrorKind"],"kind":"enum"},"6:5507:8117":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"5:2825:4389":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"6:5325:8033":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"16:8298:6306":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"16:8151:5920":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"17:12749:4982":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"17:16739:5833":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"1:8525:4143":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"2:23105:6837":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"6:6666:8346":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:2047:3644":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"16:6256:5988":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"18:538:4611":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"16:8585:6353":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"25:568:4382":{"crate_id":25,"path":["tokio","util","linked_list","Pointers"],"kind":"struct"},"2:10400:4061":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"2:12475:15193":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"2:6967:8633":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"11:1884:3991":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"16:3889:4697":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"17:15931:5605":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"1:9226:9714":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"17:12931:5002":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"2:45908:7005":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:5260:7185":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:10954:140":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"5:7494:3991":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"1:5592:7186":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"16:7424:22423":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"2:46366:7042":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:21938:3136":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"5:7524:6575":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"25:864:4388":{"crate_id":25,"path":["tokio","runtime","driver","Driver"],"kind":"struct"},"16:5144:5948":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"20:467:3136":{"crate_id":20,"path":["http","header","map","into_header_name","Sealed"],"kind":"trait"},"1:8557:7271":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:11402:6784":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:1625:6547":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"25:1405:2601":{"crate_id":25,"path":["tokio","sync","mpsc","chan","Chan"],"kind":"struct"},"11:2323:4490":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"17:15160:5359":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"17:11864:4869":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"17:11465:4833":{"crate_id":17,"path":["object","read","archive","ArchiveSymbolIterator"],"kind":"struct"},"5:7485:4246":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"16:7030:6114":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"17:16632:5805":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"16:2486:5877":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:41006:6749":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2:21824:9741":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"2:32414:237":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"25:3014:4242":{"crate_id":25,"path":["tokio","sync","mpsc","error","TryRecvError"],"kind":"enum"},"17:12095:4897":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"25:3208:234":{"crate_id":25,"path":["tokio","sync","rwlock","read_guard","RwLockReadGuard"],"kind":"struct"},"2:46892:7105":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"25:3029:4241":{"crate_id":25,"path":["tokio","sync","mpsc","error","RecvError"],"kind":"struct"},"2:22729:9824":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"2:22593:9832":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"17:16145:5676":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"17:11971:4877":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"6:8353:8620":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:1642:6468":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"5:2377:8626":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"6:5450:8090":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"17:14627:5257":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"17:16264:5711":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"20:2552:4189":{"crate_id":20,"path":["http","method","extension","AllocatedExtension"],"kind":"struct"},"17:14933:5318":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"6:8267:8600":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"2:41410:4169":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"24:95:2599":{"crate_id":24,"path":["http_body","frame","Kind"],"kind":"enum"},"16:7508:6197":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:47111:7112":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"20:2852:36745":{"crate_id":20,"path":["http","extensions","IdHasher"],"kind":"struct"},"2:47183:7118":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"6:5069:7961":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"6:586:7654":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"17:16019:5625":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"25:2644:3767":{"crate_id":25,"path":["tokio","sync","task","atomic_waker","AtomicWaker"],"kind":"struct"},"2:22658:15136":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"6:564:7642":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"18:563:4613":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:22734:9822":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"17:14299:5206":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV1"],"kind":"struct"},"16:2748:5889":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"2:46472:7062":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"17:12122:4899":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"17:14019:5134":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"17:12673:4973":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"5:3729:4183":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"17:12723:4980":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:44061:6784":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"20:2719:3023":{"crate_id":20,"path":["http","uri","scheme","Protocol"],"kind":"enum"},"2:13601:6808":{"crate_id":2,"path":["core","future","async_drop","AsyncDropOwning"],"kind":"struct"},"2:42589:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"2:23207:6844":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"}},"external_crates":{"23":{"name":"itoa","html_root_url":"https://docs.rs/itoa/1.0.11/"},"20":{"name":"http","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"25":{"name":"tokio","html_root_url":null},"22":{"name":"bytes","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"24":{"name":"http_body","html_root_url":null},"21":{"name":"fnv","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":30}