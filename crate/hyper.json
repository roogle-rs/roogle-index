{"root":"0:0:1863","crate_version":"1.1.0","includes_private":false,"index":{"b:2:2731-0:365:2852":{"id":"b:2:2731-0:365:2852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:120:134":{"id":"0:120:134","crate_id":0,"name":"Error","span":{"filename":"src/error.rs","begin":[31,0],"end":[33,1]},"visibility":"public","docs":"Represents errors that can occur handling HTTP streams.\n\n# Formatting\n\nThe `Display` implementation of this type will only print the details of\nthis level of error, even though it may have been caused by another error\nand contain that error in its source. To print all the relevant\ninformation, including the source chain, using something like\n`std::error::Report`, or equivalent 3rd party types.\n\nThe contents of the formatted error message of this specific `Error` type\nis unspecified. **You must not depend on it.** The wording and details may\nchange in any version, with the goal of improving error messages.\n\n# Source\n\nA `hyper::Error` may be caused by another error. To aid in debugging,\nthose are exposed in `Error::source()` as erased types. While it is\npossible to check the exact type of the sources, they **can not be depended\non**. They may come from private internal dependencies, and are subject to\nchange at any moment.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:125","a:2:32518:2008-0:120:134","a:2:42146:3385-0:120:134","a:2:32436:243-0:120:134","a:2:42147:3384-0:120:134","a:2:2949:253-0:120:134","b:2:2737-0:120:134","b:2:3496-0:120:134","b:2:2427-0:120:134","b:2:2424-0:120:134","b:2:2742-0:120:134","b:2:2727-0:120:134","b:2:2731-0:120:134","b:5:5809-0:120:134","0:145","0:147","0:143"]}}},"0:380":{"id":"0:380","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[207,0],"end":[211,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9867:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:381:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12853:34324":{"id":"2:12853:34324","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12393:133","`FromStr`":"2:12392:3635"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42165:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12392:3635","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12392:3635","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:212":{"id":"0:212","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[290,0],"end":[292,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Read","id":"0:178:2012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:32518:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:178:2012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Box","id":"5:281:2292","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:487:2024"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5551:34999":{"id":"5:5551:34999","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7534:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:258-0:180:2014":{"id":"0:258-0:180:2014","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,49],"end":[14,54]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::Write","name":"Write","id":"0:180:2014","glob":false}}},"0:261-0:241:2555":{"id":"0:261-0:241:2555","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[15,29],"end":[15,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::timer::Timer","name":"Timer","id":"0:241:2555","glob":false}}},"2:12818:34312":{"id":"2:12818:34312","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12432:3336","`DoubleEndedIterator`":"2:7826:127","prim@char":"1:12032:451","str::rmatch_indices":"2:12821:34313"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:44068:7779","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:228:2040":{"id":"0:228:2040","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[376,4],"end":[378,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:689:3553":{"id":"5:689:3553","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:373:2024":{"id":"0:373:2024","crate_id":0,"name":"poll_read","span":{"filename":"src/upgrade.rs","begin":[168,4],"end":[174,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42157:2009","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13224:113","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2013","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44855:213","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:2944:232","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2737-0:365:2852":{"id":"b:2:2737-0:365:2852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3496-0:481:2013":{"id":"b:2:3496-0:481:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3498:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12761:7794":{"id":"2:12761:7794","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12032:451"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43894:7775","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2427-0:188:2553":{"id":"b:2:2427-0:188:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2553","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2429:26855"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12794:34309":{"id":"2:12794:34309","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12432:3336","str::split":"2:12785:26143","prim@char":"1:12032:451","`DoubleEndedIterator`":"2:7826:127","str::rsplit_terminator":"2:12797:34310"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43968:7777","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5555:26942":{"id":"5:5555:26942","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12859:26940"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3496-0:188:2553":{"id":"b:2:3496-0:188:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2553","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3498:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:133:2375":{"id":"0:133:2375","crate_id":0,"name":"is_timeout","span":{"filename":"src/error.rs","begin":[241,4],"end":[243,5]},"visibility":"public","docs":"Returns true if the error was caused by a timeout.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32436:243-0:499:2855":{"id":"a:2:32436:243-0:499:2855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12806:27155":{"id":"2:12806:27155","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42018:200","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:486:717":{"id":"0:486:717","crate_id":0,"name":"fmt","span":{"filename":"src/rt/io.rs","begin":[130,9],"end":[130,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12831:34318":{"id":"2:12831:34318","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5554:26943":{"id":"5:5554:26943","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12858:26941"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12844:34321":{"id":"2:12844:34321","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12032:451","self::pattern":"2:12432:3336"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12452:14803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:489:2034":{"id":"0:489:2034","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42157:2009","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13224:113","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44855:213","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2944:232","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:502:455":{"id":"0:502:455","crate_id":0,"name":"clone","span":{"filename":"src/upgrade.rs","begin":[73,9],"end":[73,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2727-0:481:2013":{"id":"b:2:2727-0:481:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2730:2230"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12788:27147":{"id":"2:12788:27147","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12032:451","self::pattern":"2:12432:3336"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12248:7626","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:208:2033":{"id":"0:208:2033","crate_id":0,"name":"advance","span":{"filename":"src/rt/io.rs","begin":[242,4],"end":[245,5]},"visibility":"public","docs":"Advance the `filled` cursor by `n` bytes.\n\n# Safety\n\nThe caller must take care that `n` more bytes have been initialized.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:127:2365":{"id":"0:127:2365","crate_id":0,"name":"is_parse_status","span":{"filename":"src/error.rs","begin":[187,4],"end":[189,5]},"visibility":"public","docs":"Returns true if this was an HTTP parse error caused by an invalid response status code or\nreason phrase.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:198:2655":{"id":"0:198:2655","crate_id":0,"name":"unfilled","span":{"filename":"src/rt/io.rs","begin":[167,4],"end":[177,5]},"visibility":"public","docs":"Get a cursor to the unfilled portion of the buffer.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'cursor","mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2013","args":{"angle_bracketed":{"args":[{"lifetime":"'cursor"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'cursor","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:255-0:178:2012":{"id":"0:255-0:178:2012","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,19],"end":[14,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::Read","name":"Read","id":"0:178:2012","glob":false}}},"0:129:2369":{"id":"0:129:2369","crate_id":0,"name":"is_canceled","span":{"filename":"src/error.rs","begin":[197,4],"end":[199,5]},"visibility":"public","docs":"Returns true if this was about a `Request` that was canceled.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2731-0:499:2855":{"id":"b:2:2731-0:499:2855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:125":{"id":"0:125","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[170,0],"end":[512,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Error","id":"0:120:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:126:2359","0:127:2365","0:128:2367","0:129:2369","0:130:2257","0:131:2372","0:132:2226","0:133:2375"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3496-0:499:2855":{"id":"b:2:3496-0:499:2855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:11-20:2756:1847":{"id":"0:11-20:2756:1847","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,74],"end":[96,81]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Version","name":"Version","id":"20:2756:1847","glob":false}}},"2:12774:27159":{"id":"2:12774:27159","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12032:451","self::pattern":"2:12432:3336"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12452:14803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42147:3384-0:188:2553":{"id":"a:2:42147:3384-0:188:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42147:3384","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2553","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:488:2024":{"id":"0:488:2024","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[295,4],"end":[295,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42157:2009","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13224:113","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2013","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44855:213","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2944:232","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:343-0:313:2759":{"id":"0:343-0:313:2759","crate_id":0,"name":null,"span":{"filename":"src/service/mod.rs","begin":[36,0],"end":[36,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::util::service_fn","name":"service_fn","id":"0:313:2759","glob":false}}},"2:12737:2028":{"id":"2:12737:2028","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12766:34308":{"id":"2:12766:34308","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:44182:7783","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:253:2590":{"id":"0:253:2590","crate_id":0,"name":"Sealed","span":{"filename":"src/rt/timer.rs","begin":[126,4],"end":[126,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":[]}}},"0:487:2024":{"id":"0:487:2024","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[291,4],"end":[291,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42157:2009","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13224:113","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2013","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44855:213","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2944:232","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:490:2035":{"id":"0:490:2035","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42157:2009","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13224:113","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8157:2037","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44855:213","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2944:232","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:64:1852":{"id":"0:64:1852","crate_id":0,"name":"body","span":{"filename":"src/body/mod.rs","begin":[1,0],"end":[46,1]},"visibility":"public","docs":"Streaming bodies for Requests and Responses\n\nFor both [Clients](crate::client) and [Servers](crate::server), requests and\nresponses use streaming bodies, instead of complete buffering. This\nallows applications to not use memory they don't need, and allows exerting\nback-pressure on connections by only reading when asked.\n\nThere are two pieces to this in hyper:\n\n- **The [`Body`] trait** describes all possible bodies.\n  hyper allows any body type that implements `Body`, allowing\n  applications to have fine-grained control over their streaming.\n- **The [`Incoming`] concrete type**, which is an implementation\n  of `Body`, and returned by hyper as a \"receive stream\" (so, for server\n  requests and client responses).\n\nThere are additional implementations available in [`http-body-util`][],\nsuch as a `Full` or `Empty` body.\n\n[`http-body-util`]: https://docs.rs/http-body-util","links":{"`Body`":"24:42:2073","`Incoming`":"0:83:2077"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:66-22:22:2010","0:67-22:395:2011","0:68-24:42:2073","0:69-24:89:2074","0:70-24:106:2075","0:71-0:83:2077"],"is_stripped":false}}},"0:169:2551":{"id":"0:169:2551","crate_id":0,"name":"bounds","span":{"filename":"src/rt/bounds.rs","begin":[1,0],"end":[109,1]},"visibility":"public","docs":"Trait aliases\n\nTraits in this module ease setting bounds and usually automatically\nimplemented by implementing another trait.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[],"is_stripped":false}}},"0:344:1856":{"id":"0:344:1856","crate_id":0,"name":"upgrade","span":{"filename":"src/upgrade.rs","begin":[1,0],"end":[409,1]},"visibility":"public","docs":"HTTP Upgrades\n\nThis module deals with managing [HTTP Upgrades][mdn] in hyper. Since\nseveral concepts in HTTP allow for first talking HTTP, and then converting\nto a different protocol, this module conflates them into a single API.\nThose include:\n\n- HTTP/1.1 Upgrades\n- HTTP `CONNECT`\n\nYou are responsible for any other pre-requisites to establish an upgrade,\nsuch as sending the appropriate headers, methods, and status codes. You can\nthen use [`on`][] to grab a `Future` which will resolve to the upgraded\nconnection object, or an error if the upgrade fails.\n\n[mdn]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism\n\n# Client\n\nSending an HTTP upgrade from the [`client`](super::client) involves setting\neither the appropriate method, if wanting to `CONNECT`, or headers such as\n`Upgrade` and `Connection`, on the `http::Request`. Once receiving the\n`http::Response` back, you must check for the specific information that the\nupgrade is agreed upon by the server (such as a `101` status code), and then\nget the `Future` from the `Response`.\n\n# Server\n\nReceiving upgrade requests in a server requires you to check the relevant\nheaders in a `Request`, and if an upgrade should be done, you then send the\ncorresponding headers in a response. To then wait for hyper to finish the\nupgrade, you call `on()` with the `Request`, and then can spawn a task\nawaiting it.\n\n# Example\n\nSee [this example][example] showing how upgrades work with both\nClients and Servers.\n\n[example]: https://github.com/hyperium/hyper/blob/master/examples/upgrades.rs","links":{"`on`":"0:367:1093"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:365:2852","0:499:2855","0:503:2859","0:367:1093"],"is_stripped":false}}},"a:2:32436:243-0:365:2852":{"id":"a:2:32436:243-0:365:2852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12809:27156":{"id":"2:12809:27156","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42018:200","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12452:14803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5553:3602":{"id":"5:5553:3602","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7534:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:70-24:106:2075":{"id":"0:70-24:106:2075","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[25,0],"end":[25,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"http_body::SizeHint","name":"SizeHint","id":"24:106:2075","glob":false}}},"0:130:2257":{"id":"0:130:2257","crate_id":0,"name":"is_closed","span":{"filename":"src/error.rs","begin":[202,4],"end":[214,5]},"visibility":"public","docs":"Returns true if a sender's channel is closed.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2731-0:481:2013":{"id":"b:2:2731-0:481:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:369":{"id":"0:369","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[134,0],"end":[165,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:370:2882"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2727-0:120:134":{"id":"b:2:2727-0:120:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2230"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:147":{"id":"0:147","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[531,0],"end":[538,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["type_id","description","source","cause","provide"],"trait":{"name":"Error","id":"2:2789:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:148:2380"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:68-24:42:2073":{"id":"0:68-24:42:2073","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[23,0],"end":[23,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"http_body::Body","name":"Body","id":"24:42:2073","glob":false}}},"b:2:2731-0:188:2553":{"id":"b:2:2731-0:188:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2553","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2424-0:365:2852":{"id":"b:2:2424-0:365:2852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:3010"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12791:27149":{"id":"2:12791:27149","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12432:3336","`DoubleEndedIterator`":"2:7826:127","prim@char":"1:12032:451","str::split":"2:12785:26143"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43936:7629","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12452:14803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2949:253-0:365:2852":{"id":"a:2:2949:253-0:365:2852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2727-0:503:2859":{"id":"b:2:2727-0:503:2859","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:503:2859","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2730:2230"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3496-0:120:134":{"id":"b:2:3496-0:120:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12744:28302":{"id":"2:12744:28302","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11987:14805"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2733:744":{"id":"2:2733:744","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:181:2034":{"id":"0:181:2034","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[59,4],"end":[63,45]},"visibility":"default","docs":"Attempt to write bytes from `buf` into the destination.\n\nOn success, returns `Poll::Ready(Ok(num_bytes_written)))`. If\nsuccessful, it must be guaranteed that `n <= buf.len()`. A return value\nof `0` means that the underlying object is no longer able to accept\nbytes, or that the provided buffer is empty.\n\nIf the object is not ready for writing, the method returns\n`Poll::Pending` and arranges for the current task (via `cx.waker()`) to\nreceive a notification when the object becomes writable or is closed.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42157:2009","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13224:113","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44855:213","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:42165:232","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:2946:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:2:42146:3385-0:499:2855":{"id":"a:2:42146:3385-0:499:2855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42146:3385","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12767:32495":{"id":"2:12767:32495","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:44210:7645","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:97":{"id":"0:97","crate_id":0,"name":null,"span":{"filename":"src/body/incoming.rs","begin":[313,0],"end":[335,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9867:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2077","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:98:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2427-0:83:2077":{"id":"b:2:2427-0:83:2077","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2077","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:26855"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:197:2645":{"id":"0:197:2645","crate_id":0,"name":"filled","span":{"filename":"src/rt/io.rs","begin":[160,4],"end":[163,5]},"visibility":"public","docs":"Get a slice of the buffer that has been filled in with bytes.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:404:2875":{"id":"0:404:2875","crate_id":0,"name":"CanUpgrade","span":{"filename":"src/upgrade.rs","begin":[322,4],"end":[324,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:405:2877"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"b:2:2427-0:365:2852":{"id":"b:2:2427-0:365:2852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:26855"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:691:3555":{"id":"5:691:3555","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:245:2554":{"id":"0:245:2554","crate_id":0,"name":"Sleep","span":{"filename":"src/rt/timer.rs","begin":[84,0],"end":[93,1]},"visibility":"public","docs":"A future returned by a `Timer`.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Future","id":"2:44834:146","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"tuple":[]}}}}]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"0:12-20:1837:1848":{"id":"0:12-20:1837:1848","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[99,0],"end":[99,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"crate::http::HeaderMap","name":"HeaderMap","id":"20:1837:1848","glob":false}}},"0:377:2038":{"id":"0:377:2038","crate_id":0,"name":"poll_flush","span":{"filename":"src/upgrade.rs","begin":[194,4],"end":[196,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42157:2009","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13224:113","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44855:213","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:2944:232","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:242:2723":{"id":"0:242:2723","crate_id":0,"name":"sleep","span":{"filename":"src/rt/timer.rs","begin":[72,4],"end":[72,63]},"visibility":"default","docs":"Return a future that resolves in `duration` time.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["duration",{"resolved_path":{"name":"Duration","id":"2:44688:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Pin","id":"2:42157:2009","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:281:2292","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Sleep","id":"0:245:2554","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:12736:873":{"id":"2:12736:873","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12032:451"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:117:232":{"id":"0:117:232","crate_id":0,"name":"Result","span":{"filename":"src/error.rs","begin":[6,0],"end":[6,51]},"visibility":"public","docs":"Result type often returned from methods that can have hyper `Error`s.","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"std::result::Result","id":"2:42165:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"resolved_path":{"name":"Error","id":"0:120:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}}},"a:2:42146:3385-0:120:134":{"id":"a:2:42146:3385-0:120:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42146:3385","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:12754:2682":{"id":"2:12754:2682","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10521:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10521:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12824:34314":{"id":"2:12824:34314","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5536:34996":{"id":"5:5536:34996","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:281:2292","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:281:2292","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:145":{"id":"0:145","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[525,0],"end":[529,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9872:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:146:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2424-0:83:2077":{"id":"b:2:2424-0:83:2077","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2077","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:3010"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12762:1864":{"id":"2:12762:1864","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43904:2011","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2426:3010":{"id":"2:2426:3010","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2727-0:499:2855":{"id":"b:2:2727-0:499:2855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2230"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42146:3385-0:503:2859":{"id":"a:2:42146:3385-0:503:2859","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42146:3385","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42146:3385","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:503:2859","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2949:253-0:499:2855":{"id":"a:2:2949:253-0:499:2855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:405:2877":{"id":"0:405:2877","crate_id":0,"name":"on_upgrade","span":{"filename":"src/upgrade.rs","begin":[323,8],"end":[323,41]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:12800:27151":{"id":"2:12800:27151","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12032:451","self::pattern":"2:12432:3336","str::rsplitn":"2:12803:27153"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:44022:7631","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:243:2726":{"id":"0:243:2726","crate_id":0,"name":"sleep_until","span":{"filename":"src/rt/timer.rs","begin":[75,4],"end":[75,68]},"visibility":"default","docs":"Return a future that resolves at `deadline`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["deadline",{"resolved_path":{"name":"Instant","id":"1:9109:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Pin","id":"2:42157:2009","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:281:2292","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Sleep","id":"0:245:2554","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:2:32436:243-0:83:2077":{"id":"a:2:32436:243-0:83:2077","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2077","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:7-20:2537:1843":{"id":"0:7-20:2537:1843","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,38],"end":[96,45]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Request","name":"Request","id":"20:2537:1843","glob":false}}},"2:12862:28346":{"id":"2:12862:28346","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:896:38836"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:207:2666":{"id":"0:207:2666","crate_id":0,"name":"as_mut","span":{"filename":"src/rt/io.rs","begin":[232,4],"end":[234,5]},"visibility":"public","docs":"Access the unfilled part of the buffer.\n\n# Safety\n\nThe caller must not uninitialize any bytes that may have been\ninitialized before.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"2:30614:2598","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13040:161":{"id":"2:13040:161","crate_id":2,"name":"IntoFuture","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"F"}}}},"0:226:2034":{"id":"0:226:2034","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[360,4],"end":[366,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42157:2009","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13224:113","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44855:213","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2944:232","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:496:2040":{"id":"0:496:2040","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12760:7646":{"id":"2:12760:7646","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12032:451"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43888:7638","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2737-0:83:2077":{"id":"b:2:2737-0:83:2077","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2077","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12771:27158":{"id":"2:12771:27158","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:12032:451","self::pattern":"2:12432:3336"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12865:9442":{"id":"2:12865:9442","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4671:9442"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:44226:7576","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2746:1617":{"id":"2:2746:1617","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:42165:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:317:2813":{"id":"0:317:2813","crate_id":0,"name":"ServiceFn","span":{"filename":"src/service/util.rs","begin":[42,0],"end":[45,1]},"visibility":"public","docs":"Service returned by [`service_fn`]","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}}},"0:372":{"id":"0:372","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[167,0],"end":[175,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:178:2012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:373:2024"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:370:2882":{"id":"0:370:2882","crate_id":0,"name":"downcast","span":{"filename":"src/upgrade.rs","begin":[152,4],"end":[164,5]},"visibility":"public","docs":"Tries to downcast the internal trait object to the type passed.\n\nOn success, returns the downcasted parts. On error, returns the\n`Upgraded` back.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42165:232","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Parts","id":"0:503:2859","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}},{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"0:178:2012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Write","id":"0:180:2014","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:32518:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:5-20:5:1841":{"id":"0:5-20:5:1841","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,22],"end":[96,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::header","name":"header","id":"20:5:1841","glob":false}}},"a:2:2949:253-0:120:134":{"id":"a:2:2949:253-0:120:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:131:2372":{"id":"0:131:2372","crate_id":0,"name":"is_incomplete_message","span":{"filename":"src/error.rs","begin":[217,4],"end":[223,5]},"visibility":"public","docs":"Returns true if the connection closed before a message could complete.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:10-20:2700:1846":{"id":"0:10-20:2700:1846","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,69],"end":[96,72]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Uri","name":"Uri","id":"20:2700:1846","glob":false}}},"2:12756:34306":{"id":"2:12756:34306","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12038:1536","str::slice_mut_unchecked":"2:12757:34307","crate::ops::Index":"2:39598:3134"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:196:2652":{"id":"0:196:2652","crate_id":0,"name":"uninit","span":{"filename":"src/rt/io.rs","begin":[150,4],"end":[156,5]},"visibility":"public","docs":"Create a new `ReadBuf` with a slice of uninitialized bytes.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["raw",{"borrowed_ref":{"lifetime":"'data","mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"2:30614:2598","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:6-20:2456:1842":{"id":"0:6-20:2456:1842","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,30],"end":[96,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Method","name":"Method","id":"20:2456:1842","glob":false}}},"0:205":{"id":"0:205","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[224,0],"end":[276,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2013","args":{"angle_bracketed":{"args":[{"lifetime":"'data"}],"bindings":[]}}}},"items":["0:207:2666","0:208:2033"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2424-0:188:2553":{"id":"b:2:2424-0:188:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2553","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2426:3010"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12828:34316":{"id":"2:12828:34316","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12841:27161":{"id":"2:12841:27161","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12032:451","self::pattern":"2:12432:3336"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42018:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12452:14803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:508":{"id":"0:508","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[82,9],"end":[82,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:9867:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9867:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:503:2859","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:510:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:378:2039":{"id":"0:378:2039","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/upgrade.rs","begin":[198,4],"end":[200,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42157:2009","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13224:113","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44855:213","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:2944:232","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:313:2759":{"id":"0:313:2759","crate_id":0,"name":"service_fn","span":{"filename":"src/service/util.rs","begin":[30,0],"end":[39,1]},"visibility":"public","docs":"Create a `Service` from a function.\n\n# Example\n\n```\nuse bytes::Bytes;\nuse hyper::{body, Request, Response, Version};\nuse http_body_util::Full;\nuse hyper::service::service_fn;\n\nlet service = service_fn(|req: Request<body::Incoming>| async move {\n    if req.version() == Version::HTTP_11 {\n        Ok(Response::new(Full::<Bytes>::from(\"Hello World\")))\n    } else {\n        // Note: it's usually better to return a Response\n        // with an appropriate StatusCode instead of an Err.\n        Err(\"not HTTP/1.1, abort connection\")\n    }\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"ServiceFn","id":"0:317:2813","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3127:137","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"crate::Request","id":"20:2537:1843","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}}],"output":{"generic":"S"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:44834:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2427-0:499:2855":{"id":"b:2:2427-0:499:2855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:26855"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12860:28344":{"id":"2:12860:28344","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:896:38836"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:497:2038":{"id":"0:497:2038","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42157:2009","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13224:113","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44855:213","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2944:232","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:501":{"id":"0:501","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[73,9],"end":[73,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2440:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:502:455"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:13037-0:499:2855":{"id":"b:2:13037-0:499:2855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:44834:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoFuture","id":"2:13033:161","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:13039:205","2:13040:161","2:13041:838"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"F"}}}},"b:2:2737-0:481:2013":{"id":"b:2:2737-0:481:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12747:2672":{"id":"2:12747:2672","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12049:1641"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:183:2039":{"id":"0:183:2039","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[75,4],"end":[78,42]},"visibility":"default","docs":"Attempts to shut down this writer.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42157:2009","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13224:113","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44855:213","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:42165:232","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:2946:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:2730:2230":{"id":"2:2730:2230","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2704:141"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:257-0:481:2013":{"id":"0:257-0:481:2013","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,34],"end":[14,47]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::ReadBufCursor","name":"ReadBufCursor","id":"0:481:2013","glob":false}}},"a:2:42147:3384-0:83:2077":{"id":"a:2:42147:3384-0:83:2077","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42147:3384","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2077","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:385:205":{"id":"0:385:205","crate_id":0,"name":"Output","span":{"filename":"src/upgrade.rs","begin":[227,4],"end":[227,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Result","id":"2:42165:232","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Upgraded","id":"0:365:2852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Error","id":"0:120:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"0:144:717":{"id":"0:144:717","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[515,4],"end":[522,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3496-0:83:2077":{"id":"b:2:3496-0:83:2077","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2077","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:381:717":{"id":"0:381:717","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[208,4],"end":[210,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32436:243-0:503:2859":{"id":"a:2:32436:243-0:503:2859","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:503:2859","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2949:253-0:503:2859":{"id":"a:2:2949:253-0:503:2859","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:503:2859","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12821:34313":{"id":"2:12821:34313","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12432:3336","`DoubleEndedIterator`":"2:7826:127","prim@char":"1:12032:451","str::match_indices":"2:12818:34312"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:44086:7780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12452:14803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32436:243-0:481:2013":{"id":"a:2:32436:243-0:481:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:14-0:120:134":{"id":"0:14-0:120:134","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[101,23],"end":[101,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::error::Error","name":"Error","id":"0:120:134","glob":false}}},"2:12855:26944":{"id":"2:12855:26944","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:227:2035":{"id":"0:227:2035","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[368,4],"end":[374,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42157:2009","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13224:113","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8157:2037","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44855:213","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2944:232","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12777:2629":{"id":"2:12777:2629","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:42020:197","prim@char":"1:12032:451","self::pattern":"2:12432:3336"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42018:200","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:386:1152":{"id":"0:386:1152","crate_id":0,"name":"poll","span":{"filename":"src/upgrade.rs","begin":[229,4],"end":[242,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42157:2009","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13224:113","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44855:213","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:44834:146","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:9-20:2576:1845":{"id":"0:9-20:2576:1845","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,57],"end":[96,67]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::StatusCode","name":"StatusCode","id":"20:2576:1845","glob":false}}},"2:2745:134":{"id":"2:2745:134","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32366:3082","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:495:2035":{"id":"0:495:2035","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42157:2009","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13224:113","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8157:2037","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44855:213","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2944:232","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:188:2553":{"id":"0:188:2553","crate_id":0,"name":"ReadBuf","span":{"filename":"src/rt/io.rs","begin":[121,0],"end":[125,1]},"visibility":"public","docs":"A wrapper around a byte buffer that is incrementally filled and initialized.\n\nThis type is a sort of \"double cursor\". It tracks three regions in the\nbuffer: a region at the beginning of the buffer that has been logically\nfilled with data, a region that has been initialized at some point but not\nyet logically filled, and a region at the end that may be uninitialized.\nThe filled region is guaranteed to be a subset of the initialized region.\n\nIn summary, the contents of the buffer can be visualized as:\n\n```not_rust\n[             capacity              ]\n[ filled |         unfilled         ]\n[    initialized    | uninitialized ]\n```\n\nIt is undefined behavior to de-initialize any bytes from the uninitialized\nregion, since it is merely unknown whether this region is uninitialized or\nnot, and if part of it turns out to be initialized, it must stay initialized.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:193","a:2:32518:2008-0:188:2553","a:2:42146:3385-0:188:2553","a:2:32436:243-0:188:2553","a:2:42147:3384-0:188:2553","a:2:2949:253-0:188:2553","b:2:2737-0:188:2553","b:2:3496-0:188:2553","b:2:2427-0:188:2553","b:2:2424-0:188:2553","b:2:2742-0:188:2553","b:2:2727-0:188:2553","b:2:2731-0:188:2553","0:202"]}}},"0:224":{"id":"0:224","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[355,0],"end":[387,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"DerefMut","id":"2:3112:2600","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"","id":"2:3099:123","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Write","id":"0:180:2014","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["is_write_vectored","poll_write_vectored"],"trait":{"name":"Write","id":"0:180:2014","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"std::pin::Pin","id":"2:42157:2009","args":{"angle_bracketed":{"args":[{"type":{"generic":"P"}}],"bindings":[]}}}},"items":["0:226:2034","0:227:2035","0:228:2040","0:229:2038","0:230:2039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:0:1863":{"id":"0:0:1863","crate_id":0,"name":"hyper","span":{"filename":"src/lib.rs","begin":[1,0],"end":[139,1]},"visibility":"public","docs":" # hyper\n\n hyper is a **fast** and **correct** HTTP implementation written in and for Rust.\n\n ## Features\n\n - HTTP/1 and HTTP/2\n - Asynchronous design\n - Leading in performance\n - Tested and **correct**\n - Extensive production use\n - [Client](client/index.html) and [Server](server/index.html) APIs\n\n If just starting out, **check out the [Guides](https://hyper.rs/guides/1/)\n first.**\n\n ## \"Low-level\"\n\n hyper is a lower-level HTTP library, meant to be a building block\n for libraries and applications.\n\n If looking for just a convenient HTTP client, consider the\n [reqwest](https://crates.io/crates/reqwest) crate.\n\n # Optional Features\n\n hyper uses a set of [feature flags] to reduce the amount of compiled code.\n It is possible to just enable certain features over others. By default,\n hyper does not enable any features but allows one to enable a subset for\n their use case. Below is a list of the available feature flags. You may\n also notice above each function, struct and trait there is listed one or\n more feature flags that are required for that item to be used.\n\n If you are new to hyper it is possible to enable the `full` feature flag\n which will enable all public APIs. Beware though that this will pull in\n many extra dependencies that you may not need.\n\n The following optional features are available:\n\n - `http1`: Enables HTTP/1 support.\n - `http2`: Enables HTTP/2 support.\n - `client`: Enables the HTTP `client`.\n - `server`: Enables the HTTP `server`.\n\n [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section\n\n # Unstable Features\n\n hyper includes a set of unstable optional features that can be enabled through the use of a\n feature flag and a [configuration flag].\n\n The following is a list of feature flags and their corresponding `RUSTFLAG`:\n - `ffi`: Enables C API for hyper `hyper_unstable_ffi`.\n - `tracing`: Enables debug logging with `hyper_unstable_tracing`.\n\n Enabling an unstable feature is possible with the following `cargo` command, as of version `1.64.0`:\n ```notrust\n RUSTFLAGS=\"--cfg hyper_unstable_tracing\" cargo rustc --features client,http1,http2,tracing --crate-type cdylib\n```\n [configuration flag]: https://doc.rust-lang.org/reference/conditional-compilation.html\n\n # Stability\n\n It's worth talking a bit about the stability of hyper. hyper's API follows\n [SemVer](https://semver.org). Breaking changes will only be introduced in\n major versions, if ever. New additions to the API, such as new types,\n methods, or traits will only be added in minor versions.\n\n Some parts of hyper are documented as NOT being part of the stable API. The\n following is a brief list, you can read more about each one in the relevant\n part of the documentation.\n\n - Downcasting error types from `Error::source()` is not considered stable.\n - Private dependencies use of global variables is not considered stable.\n   So, if a dependency uses `log` or `tracing`, hyper doesn't promise it\n   will continue to do so.\n - Behavior from default options is not stable. hyper reserves the right to\n   add new options that are enabled by default which might alter the\n   behavior, for the purposes of protection. It is also possible to _change_\n   what the default options are set to, also in efforts to protect the\n   most people possible.","links":{},"attrs":["#![deny(missing_docs)]","#![deny(missing_debug_implementations)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:64:1852","0:165:1853","0:168:1294","0:265:1855","0:344:1856","0:5-20:5:1841","0:6-20:2456:1842","0:7-20:2537:1843","0:8-20:2557:1844","0:9-20:2576:1845","0:10-20:2700:1846","0:11-20:2756:1847","0:12-20:1837:1848","0:14-0:120:134","0:15-0:117:232"],"is_stripped":false}}},"2:12764:32496":{"id":"2:12764:32496","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12763:32491"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:44201:7785","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12803:27153":{"id":"2:12803:27153","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12032:451","str::splitn":"2:12800:27151","self::pattern":"2:12432:3336"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:44040:7632","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12452:14803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2741:1619":{"id":"2:2741:1619","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42165:232","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:98:717":{"id":"0:98:717","crate_id":0,"name":"fmt","span":{"filename":"src/body/incoming.rs","begin":[314,4],"end":[334,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42146:3385-0:188:2553":{"id":"a:2:42146:3385-0:188:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42146:3385","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2553","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:506:2867":{"id":"0:506:2867","crate_id":0,"name":"read_buf","span":{"filename":"src/upgrade.rs","begin":[94,4],"end":[94,23]},"visibility":"public","docs":"A buffer of bytes that have been read but not processed as HTTP.\n\nFor instance, if the `Connection` is used for an HTTP upgrade request,\nit is possible the server sent back the first bytes of the new protocol\nalong with the response upgrade.\n\nYou will want to check for any existing bytes if you plan to continue\ncommunicating on the IO object.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"bytes::Bytes","id":"22:395:2011","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"a:2:32518:2008-0:481:2013":{"id":"a:2:32518:2008-0:481:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32518:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2427-0:120:134":{"id":"b:2:2427-0:120:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:26855"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:376:2035":{"id":"0:376:2035","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/upgrade.rs","begin":[186,4],"end":[192,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42157:2009","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13224:113","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"io::IoSlice","id":"1:8157:2037","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44855:213","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:2944:232","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42147:3384-0:481:2013":{"id":"a:2:42147:3384-0:481:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42147:3384","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:8-20:2557:1844":{"id":"0:8-20:2557:1844","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,47],"end":[96,55]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Response","name":"Response","id":"20:2557:1844","glob":false}}},"2:12739:34303":{"id":"2:12739:34303","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:204:717":{"id":"0:204:717","crate_id":0,"name":"fmt","span":{"filename":"src/rt/io.rs","begin":[215,4],"end":[221,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:195:1037":{"id":"0:195:1037","crate_id":0,"name":"new","span":{"filename":"src/rt/io.rs","begin":[138,4],"end":[146,5]},"visibility":"public","docs":"Create a new `ReadBuf` with a slice of initialized bytes.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["raw",{"borrowed_ref":{"lifetime":"'data","mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:244:2729":{"id":"0:244:2729","crate_id":0,"name":"reset","span":{"filename":"src/rt/timer.rs","begin":[78,4],"end":[80,5]},"visibility":"default","docs":"Reset a future to resolve at `new_deadline` instead.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["sleep",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Pin","id":"2:42157:2009","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:281:2292","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Sleep","id":"0:245:2554","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}}}}],["new_deadline",{"resolved_path":{"name":"Instant","id":"1:9109:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:389:717":{"id":"0:389:717","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[246,4],"end":[248,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2740:134":{"id":"2:2740:134","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:91":{"id":"0:91","crate_id":0,"name":null,"span":{"filename":"src/body/incoming.rs","begin":[183,0],"end":[311,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["is_end_stream","size_hint"],"trait":{"name":"Body","id":"24:42:2073","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2077","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:92:2149","0:93:134","0:94:2150","0:95:2146","0:96:2170"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:182:2038":{"id":"0:182:2038","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[72,4],"end":[72,98]},"visibility":"default","docs":"Attempts to flush the object.\n\nOn success, returns `Poll::Ready(Ok(()))`.\n\nIf flushing cannot immediately complete, this method returns\n`Poll::Pending` and arranges for the current task (via `cx.waker()`) to\nreceive a notification when the object can make progress.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42157:2009","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13224:113","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44855:213","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:42165:232","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:2946:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:214":{"id":"0:214","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[294,0],"end":[296,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Read","id":"0:178:2012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:32518:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:178:2012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"items":["0:488:2024"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:128:2367":{"id":"0:128:2367","crate_id":0,"name":"is_user","span":{"filename":"src/error.rs","begin":[192,4],"end":[194,5]},"visibility":"public","docs":"Returns true if this error was caused by user code.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32436:243-0:188:2553":{"id":"a:2:32436:243-0:188:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2553","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:193":{"id":"0:193","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[135,0],"end":[212,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2553","args":{"angle_bracketed":{"args":[{"lifetime":"'data"}],"bindings":[]}}}},"items":["0:195:1037","0:196:2652","0:197:2645","0:198:2655"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2427-0:503:2859":{"id":"b:2:2427-0:503:2859","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:503:2859","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2429:26855"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:185:2035":{"id":"0:185:2035","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[89,4],"end":[99,5]},"visibility":"default","docs":"Like `poll_write`, except that it writes from a slice of buffers.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42157:2009","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13224:113","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8157:2037","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44855:213","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:42165:232","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:2946:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42146:3385-0:83:2077":{"id":"a:2:42146:3385-0:83:2077","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42146:3385","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2077","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12765:30425":{"id":"2:12765:30425","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:44172:3577","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3496-0:365:2852":{"id":"b:2:3496-0:365:2852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:71-0:83:2077":{"id":"0:71-0:83:2077","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[27,0],"end":[27,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::incoming::Incoming","name":"Incoming","id":"0:83:2077","glob":false}}},"b:2:2427-0:481:2013":{"id":"b:2:2427-0:481:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2429:26855"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2737-0:503:2859":{"id":"b:2:2737-0:503:2859","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:503:2859","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5552:35000":{"id":"5:5552:35000","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:281:2292","`String`":"5:7534:249"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:281:2292","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12746:339":{"id":"2:12746:339","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12747:2672","`u8`":"1:12049:1641"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42147:3384-0:120:134":{"id":"a:2:42147:3384-0:120:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42147:3384","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:499:2855":{"id":"0:499:2855","crate_id":0,"name":"OnUpgrade","span":{"filename":"src/upgrade.rs","begin":[74,0],"end":[76,1]},"visibility":"public","docs":"A future for a possible HTTP upgrade.\n\nIf no upgrade was available, or it doesn't succeed, yields an `Error`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:32518:2008-0:499:2855","a:2:42146:3385-0:499:2855","a:2:32436:243-0:499:2855","a:2:42147:3384-0:499:2855","a:2:2949:253-0:499:2855","b:2:2737-0:499:2855","b:2:3496-0:499:2855","b:2:13037-0:499:2855","b:2:2427-0:499:2855","b:2:2424-0:499:2855","b:2:2742-0:499:2855","b:2:2727-0:499:2855","b:2:2731-0:499:2855","b:5:687-0:499:2855","0:384","0:501","0:388"]}}},"0:184:2040":{"id":"0:184:2040","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[84,4],"end":[86,5]},"visibility":"default","docs":"Returns whether this writer has an efficient `poll_write_vectored`\nimplementation.\n\nThe default implementation returns `false`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12861:28345":{"id":"2:12861:28345","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:896:38836"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12750:2519":{"id":"2:12750:2519","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:42020:197"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42018:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10521:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10521:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:494:2034":{"id":"0:494:2034","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42157:2009","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13224:113","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44855:213","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2944:232","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:216":{"id":"0:216","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[298,0],"end":[310,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"DerefMut","id":"2:3112:2600","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"","id":"2:3099:123","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"0:178:2012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:178:2012","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"std::pin::Pin","id":"2:42157:2009","args":{"angle_bracketed":{"args":[{"type":{"generic":"P"}}],"bindings":[]}}}},"items":["0:218:2024"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12741:34304":{"id":"2:12741:34304","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12739:34303"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2727-0:365:2852":{"id":"b:2:2727-0:365:2852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2230"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:220":{"id":"0:220","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[347,0],"end":[349,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Write","id":"0:180:2014","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:32518:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_write_vectored","poll_write_vectored"],"trait":{"name":"Write","id":"0:180:2014","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Box","id":"5:281:2292","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:489:2034","0:490:2035","0:491:2040","0:492:2038","0:493:2039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:510:717":{"id":"0:510:717","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[82,9],"end":[82,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:66-22:22:2010":{"id":"0:66-22:22:2010","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[22,16],"end":[22,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"bytes::Buf","name":"Buf","id":"22:22:2010","glob":false}}},"b:2:2424-0:503:2859":{"id":"b:2:2424-0:503:2859","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:503:2859","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2426:3010"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12859:26940":{"id":"2:12859:26940","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3498:1632":{"id":"2:3498:1632","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39780:2720","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:262:2571":{"id":"0:262:2571","crate_id":0,"name":"Executor","span":{"filename":"src/rt/mod.rs","begin":[39,0],"end":[42,1]},"visibility":"public","docs":"An executor of futures.\n\nThis trait allows Hyper to abstract over async runtimes. Implement this trait for your own type.\n\n# Example\n\n```\n# use hyper::rt::Executor;\n# use std::future::Future;\n#[derive(Clone)]\nstruct TokioExecutor;\n\nimpl<F> Executor<F> for TokioExecutor\nwhere\n    F: Future + Send + 'static,\n    F::Output: Send + 'static,\n{\n    fn execute(&self, future: F) {\n        tokio::spawn(future);\n    }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:264:2574"],"generics":{"params":[{"name":"Fut","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}}},"0:168:1294":{"id":"0:168:1294","crate_id":0,"name":"rt","span":{"filename":"src/rt/mod.rs","begin":[1,0],"end":[42,1]},"visibility":"public","docs":"Runtime components\n\nThe traits and types within this module are used to allow plugging in\nruntime types. These include:\n\n- Executors\n- Timers\n- IO transports","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:169:2551","0:255-0:178:2012","0:256-0:188:2553","0:257-0:481:2013","0:258-0:180:2014","0:260-0:245:2554","0:261-0:241:2555","0:262:2571"],"is_stripped":false}}},"2:12835:34320":{"id":"2:12835:34320","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12032:451","self::pattern":"2:12432:3336"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12863:34325":{"id":"2:12863:34325","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4670:34325"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:44217:7697","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12748:26236":{"id":"2:12748:26236","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:42020:197"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42018:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10521:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10521:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12758:27138":{"id":"2:12758:27138","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:12759:27139"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:96:2170":{"id":"0:96:2170","crate_id":0,"name":"size_hint","span":{"filename":"src/body/incoming.rs","begin":[288,4],"end":[310,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SizeHint","id":"24:106:2075","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12738:34302":{"id":"2:12738:34302","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:132:2226":{"id":"0:132:2226","crate_id":0,"name":"is_body_write_aborted","span":{"filename":"src/error.rs","begin":[226,4],"end":[238,5]},"visibility":"public","docs":"Returns true if the body write was aborted.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12847:34322":{"id":"2:12847:34322","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12032:451","self::pattern":"2:12432:3336"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32518:2008-0:120:134":{"id":"a:2:32518:2008-0:120:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32518:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:260-0:245:2554":{"id":"0:260-0:245:2554","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[15,22],"end":[15,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::timer::Sleep","name":"Sleep","id":"0:245:2554","glob":false}}},"0:241:2555":{"id":"0:241:2555","crate_id":0,"name":"Timer","span":{"filename":"src/rt/timer.rs","begin":[70,0],"end":[81,1]},"visibility":"public","docs":"A timer which provides timer-like functions.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:242:2723","0:243:2726","0:244:2729"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"a:2:42146:3385-0:365:2852":{"id":"a:2:42146:3385-0:365:2852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42146:3385","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:12797:34310":{"id":"2:12797:34310","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12432:3336","str::split":"2:12785:26143","prim@char":"1:12032:451","str::split_terminator":"2:12794:34309"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43986:7778","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12452:14803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2949:253-0:83:2077":{"id":"a:2:2949:253-0:83:2077","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2077","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32518:2008-0:365:2852":{"id":"a:2:32518:2008-0:365:2852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32518:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12752:27115":{"id":"2:12752:27115","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10521:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10521:245","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:15-0:117:232":{"id":"0:15-0:117:232","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[101,30],"end":[101,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::error::Result","name":"Result","id":"0:117:232","glob":false}}},"b:2:2742-0:83:2077":{"id":"b:2:2742-0:83:2077","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2077","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:230:2039":{"id":"0:230:2039","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[384,4],"end":[386,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42157:2009","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13224:113","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44855:213","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2944:232","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:503:2859":{"id":"0:503:2859","crate_id":0,"name":"Parts","span":{"filename":"src/upgrade.rs","begin":[83,0],"end":[96,1]},"visibility":"public","docs":"The deconstructed parts of an [`Upgraded`] type.\n\nIncludes the original IO type, and a read buffer of bytes that the\nHTTP state machine may have already read before completing an upgrade.","links":{"`Upgraded`":"0:365:2852"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:505:2001","0:506:2867"],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:32518:2008-0:503:2859","a:2:42146:3385-0:503:2859","a:2:32436:243-0:503:2859","a:2:42147:3384-0:503:2859","a:2:2949:253-0:503:2859","b:2:2737-0:503:2859","b:2:3496-0:503:2859","b:2:2427-0:503:2859","b:2:2424-0:503:2859","b:2:2742-0:503:2859","b:2:2727-0:503:2859","b:2:2731-0:503:2859","0:508"]}}},"0:367:1093":{"id":"0:367:1093","crate_id":0,"name":"on","span":{"filename":"src/upgrade.rs","begin":[106,0],"end":[108,1]},"visibility":"public","docs":"Gets a pending HTTP upgrade from this message.\n\nThis can be called on the following types:\n\n- `http::Request<B>`\n- `http::Response<B>`\n- `&mut http::Request<B>`\n- `&mut http::Response<B>`","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["msg",{"generic":"T"}]],"output":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"sealed::CanUpgrade","id":"0:404:2875","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5809-0:120:134":{"id":"b:5:5809-0:120:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9872:126","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5807:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5811:1594"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32518:2008-0:503:2859":{"id":"a:2:32518:2008-0:503:2859","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32518:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32518:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:503:2859","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2731-0:120:134":{"id":"b:2:2731-0:120:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:69-24:89:2074":{"id":"0:69-24:89:2074","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[24,0],"end":[24,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"http_body::Frame","name":"Frame","id":"24:89:2074","glob":false}}},"0:94:2150":{"id":"0:94:2150","crate_id":0,"name":"poll_frame","span":{"filename":"src/body/incoming.rs","begin":[187,4],"end":[274,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42157:2009","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13224:113","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44855:213","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Option","id":"2:42018:200","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:42165:232","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Frame","id":"24:89:2074","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Data","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"24:42:2073","args":null}}}}],"bindings":[]}}}}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"24:42:2073","args":null}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12763:32491":{"id":"2:12763:32491","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12764:32496"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:44192:7784","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12826:34315":{"id":"2:12826:34315","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2742-0:481:2013":{"id":"b:2:2742-0:481:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:493:2039":{"id":"0:493:2039","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42157:2009","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13224:113","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44855:213","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2944:232","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:83:2077":{"id":"0:83:2077","crate_id":0,"name":"Incoming","span":{"filename":"src/body/incoming.rs","begin":[47,0],"end":[49,1]},"visibility":"public","docs":"A stream of `Bytes`, used when receiving bodies from the network.\n\nNote that Users should not instantiate this struct directly. When working with the hyper client,\n`Incoming` is returned to you in responses. Similarly, when operating with the hyper server,\nit is provided within requests.\n\n# Examples\n\n```rust,ignore\nasync fn echo(\n   req: Request<hyper::body::Incoming>,\n) -> Result<Response<BoxBody<Bytes, hyper::Error>>, hyper::Error> {\n   //Here, you can process `Incoming`\n}\n```","links":{},"attrs":["#[must_use = \"streams do nothing unless polled\"]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:32518:2008-0:83:2077","a:2:42146:3385-0:83:2077","a:2:32436:243-0:83:2077","a:2:42147:3384-0:83:2077","a:2:2949:253-0:83:2077","b:2:2737-0:83:2077","b:2:3496-0:83:2077","b:2:2427-0:83:2077","b:2:2424-0:83:2077","b:2:2742-0:83:2077","b:2:2727-0:83:2077","b:2:2731-0:83:2077","0:91","0:97"]}}},"b:2:2737-0:188:2553":{"id":"b:2:2737-0:188:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2553","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2742-0:188:2553":{"id":"b:2:2742-0:188:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2553","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32436:243-0:120:134":{"id":"a:2:32436:243-0:120:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32436:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2727-0:83:2077":{"id":"b:2:2727-0:83:2077","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2077","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2230"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:143":{"id":"0:143","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[514,0],"end":[523,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9867:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:144:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2949:253-0:481:2013":{"id":"a:2:2949:253-0:481:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:687-0:499:2855":{"id":"b:5:687-0:499:2855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2440:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:3553","5:690:3554","5:691:3555"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13041:838":{"id":"2:13041:838","crate_id":2,"name":"into_future","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoFuture","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"IntoFuture","id":"2:13033:161","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:179:2024":{"id":"0:179:2024","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[38,4],"end":[42,42]},"visibility":"default","docs":"Attempts to read bytes into the `buf`.\n\nOn success, returns `Poll::Ready(Ok(()))` and places data in the\nunfilled portion of `buf`. If no data was read (`buf.remaining()` is\nunchanged), it implies that EOF has been reached.\n\nIf no data is available for reading, the method returns `Poll::Pending`\nand arranges for the current task (via `cx.waker()`) to receive a\nnotification when the object becomes readable or is closed.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42157:2009","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13224:113","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2013","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44855:213","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:42165:232","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:2946:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:12757:34307":{"id":"2:12757:34307","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12038:1536","crate::ops::IndexMut":"2:3162:3135","str::slice_unchecked":"2:12756:34306"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42147:3384-0:503:2859":{"id":"a:2:42147:3384-0:503:2859","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42147:3384","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42147:3384","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:503:2859","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:180:2014":{"id":"0:180:2014","crate_id":0,"name":"Write","span":{"filename":"src/rt/io.rs","begin":[48,0],"end":[100,1]},"visibility":"public","docs":"Write bytes asynchronously.\n\nThis trait is similar to `std::io::Write`, but for asynchronous writes.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:181:2034","0:182:2038","0:183:2039","0:184:2040","0:185:2035"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:224","0:220","0:222","0:374"]}}},"b:2:2424-0:499:2855":{"id":"b:2:2424-0:499:2855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:3010"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:484":{"id":"0:484","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[130,9],"end":[130,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9867:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:486:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2737-0:120:134":{"id":"b:2:2737-0:120:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:93:134":{"id":"0:93:134","crate_id":0,"name":"Error","span":{"filename":"src/body/incoming.rs","begin":[185,4],"end":[185,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:120:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:12759:27139":{"id":"2:12759:27139","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12758:27138"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:92:2149":{"id":"0:92:2149","crate_id":0,"name":"Data","span":{"filename":"src/body/incoming.rs","begin":[184,4],"end":[184,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Bytes","id":"22:395:2011","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:12785:26143":{"id":"2:12785:26143","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12432:3336","`DoubleEndedIterator`":"2:7826:127","prim@char":"1:12032:451","str::split_whitespace":"2:12763:32491","str::rsplit":"2:12791:27149"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43918:3580","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12832:34319":{"id":"2:12832:34319","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12032:451","self::pattern":"2:12432:3336"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12457:14802","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12745:34305":{"id":"2:12745:34305","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2742-0:499:2855":{"id":"b:2:2742-0:499:2855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2731-0:83:2077":{"id":"b:2:2731-0:83:2077","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2077","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:229:2038":{"id":"0:229:2038","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[380,4],"end":[382,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42157:2009","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13224:113","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44855:213","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2944:232","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42147:3384-0:365:2852":{"id":"a:2:42147:3384-0:365:2852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42147:3384","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:12850:34323":{"id":"2:12850:34323","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12032:451","self::pattern":"2:12432:3336"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12452:14803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5535":{"id":"5:5535","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5536:34996","5:5537:3098","5:5540:34997","5:5543:34998","5:5551:34999","5:5552:35000","5:5553:3602","5:5554:26943","5:5555:26942"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2742-0:365:2852":{"id":"b:2:2742-0:365:2852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32518:2008-0:188:2553":{"id":"a:2:32518:2008-0:188:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32518:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2553","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:264:2574":{"id":"0:264:2574","crate_id":0,"name":"execute","span":{"filename":"src/rt/mod.rs","begin":[41,4],"end":[41,32]},"visibility":"default","docs":"Place the future into the executor to be run.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fut",{"generic":"Fut"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:2424-0:481:2013":{"id":"b:2:2424-0:481:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2426:3010"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:265:1855":{"id":"0:265:1855","crate_id":0,"name":"service","span":{"filename":"src/service/mod.rs","begin":[1,0],"end":[36,31]},"visibility":"public","docs":"Asynchronous Services\n\nA [`Service`] is a trait representing an asynchronous\nfunction of a request to a response. It's similar to\n`async fn(Request) -> Result<Response, Error>`.\n\nThe argument and return value isn't strictly required to be for HTTP.\nTherefore, hyper uses several \"trait aliases\" to reduce clutter around\nbounds. These are:\n\n- `HttpService`: This is blanketly implemented for all types that\n  implement `Service<http::Request<B1>, Response = http::Response<B2>>`.\n\n# HttpService\n\nIn hyper, especially in the server setting, a `Service` is usually bound\nto a single connection. It defines how to respond to **all** requests that\nconnection will receive.\n\nThe helper [`service_fn`] should be sufficient for most cases, but\nif you need to implement `Service` for a type manually, you can follow the example\nin `service_struct_impl.rs`.","links":{"`service_fn`":"0:313:2759"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:343-0:313:2759"],"is_stripped":false}}},"2:12812:2360":{"id":"2:12812:2360","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12432:3336","`DoubleEndedIterator`":"2:7826:127","prim@char":"1:12032:451","str::rmatches":"2:12815:34311"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:44122:7781","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:148:2380":{"id":"0:148:2380","crate_id":0,"name":"source","span":{"filename":"src/error.rs","begin":[532,4],"end":[537,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42018:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"dyn_trait":{"traits":[{"trait":{"name":"StdError","id":"2:2789:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:491:2040":{"id":"0:491:2040","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42147:3384-0:499:2855":{"id":"a:2:42147:3384-0:499:2855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42147:3384","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13039:205":{"id":"2:13039:205","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"Future","id":"2:44834:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"a:2:42146:3385-0:481:2013":{"id":"a:2:42146:3385-0:481:2013","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42146:3385","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:178:2012":{"id":"0:178:2012","crate_id":0,"name":"Read","span":{"filename":"src/rt/io.rs","begin":[28,0],"end":[43,1]},"visibility":"public","docs":"Reads bytes from a source.\n\nThis trait is similar to `std::io::Read`, but supports asynchronous reads.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:179:2024"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:372","0:212","0:216","0:214"]}}},"0:481:2013":{"id":"0:481:2013","crate_id":0,"name":"ReadBufCursor","span":{"filename":"src/rt/io.rs","begin":[131,0],"end":[133,1]},"visibility":"public","docs":"The cursor part of a [`ReadBuf`].\n\nThis is created by calling `ReadBuf::unfilled()`.","links":{"`ReadBuf`":"0:188:2553"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:205","a:2:32518:2008-0:481:2013","a:2:42146:3385-0:481:2013","a:2:32436:243-0:481:2013","a:2:42147:3384-0:481:2013","a:2:2949:253-0:481:2013","b:2:2737-0:481:2013","b:2:3496-0:481:2013","b:2:2427-0:481:2013","b:2:2424-0:481:2013","b:2:2742-0:481:2013","b:2:2727-0:481:2013","b:2:2731-0:481:2013","0:484"]}}},"b:2:2424-0:120:134":{"id":"b:2:2424-0:120:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:102","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:3010"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:379:2040":{"id":"0:379:2040","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/upgrade.rs","begin":[202,4],"end":[204,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12830:34317":{"id":"2:12830:34317","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:505:2001":{"id":"0:505:2001","crate_id":0,"name":"io","span":{"filename":"src/upgrade.rs","begin":[85,4],"end":[85,13]},"visibility":"public","docs":"The original IO object used before the upgrade.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"T"}}},"5:5543:34998":{"id":"5:5543:34998","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7534:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:388":{"id":"0:388","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[245,0],"end":[249,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9867:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:389:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12857:26945":{"id":"2:12857:26945","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:384":{"id":"0:384","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[226,0],"end":[243,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Future","id":"2:44834:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:385:205","0:386:1152"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2949:253-0:188:2553":{"id":"a:2:2949:253-0:188:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:253","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2553","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2429:26855":{"id":"2:2429:26855","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2727-0:188:2553":{"id":"b:2:2727-0:188:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2553","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2730:2230"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32518:2008-0:83:2077":{"id":"a:2:32518:2008-0:83:2077","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32518:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2077","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12856:28341":{"id":"2:12856:28341","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39967:28301","Self::is_ascii":"2:12855:26944"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42018:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39967:28301","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12815:34311":{"id":"2:12815:34311","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12432:3336","`DoubleEndedIterator`":"2:7826:127","prim@char":"1:12032:451","str::matches":"2:12812:2360"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:44140:7782","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12452:14803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32518:2008-0:499:2855":{"id":"a:2:32518:2008-0:499:2855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32518:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12838:27160":{"id":"2:12838:27160","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12032:451","self::pattern":"2:12432:3336"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42018:200","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:492:2038":{"id":"0:492:2038","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42157:2009","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13224:113","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44855:213","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2944:232","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:218:2024":{"id":"0:218:2024","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[303,4],"end":[309,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42157:2009","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13224:113","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2013","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44855:213","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2944:232","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:126:2359":{"id":"0:126:2359","crate_id":0,"name":"is_parse","span":{"filename":"src/error.rs","begin":[172,4],"end":[174,5]},"visibility":"public","docs":"Returns true if this was an HTTP parse error.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:365:2852":{"id":"0:365:2852","crate_id":0,"name":"Upgraded","span":{"filename":"src/upgrade.rs","begin":[66,0],"end":[68,1]},"visibility":"public","docs":"An upgraded HTTP connection.\n\nThis type holds a trait object internally of the original IO that\nwas used to speak HTTP before the upgrade. It can be used directly\nas a `Read` or `Write` for convenience.\n\nAlternatively, if the exact type is known, this can be deconstructed\ninto its parts.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:369","a:2:32518:2008-0:365:2852","a:2:42146:3385-0:365:2852","a:2:32436:243-0:365:2852","a:2:42147:3384-0:365:2852","a:2:2949:253-0:365:2852","b:2:2737-0:365:2852","b:2:3496-0:365:2852","b:2:2427-0:365:2852","b:2:2424-0:365:2852","b:2:2742-0:365:2852","b:2:2727-0:365:2852","b:2:2731-0:365:2852","0:372","0:380","0:374"]}}},"0:375:2034":{"id":"0:375:2034","crate_id":0,"name":"poll_write","span":{"filename":"src/upgrade.rs","begin":[178,4],"end":[184,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42157:2009","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13224:113","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44855:213","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:2944:232","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12866:34326":{"id":"2:12866:34326","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4668:34326"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:44235:7696","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5811:1594":{"id":"5:5811:1594","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12768:27157":{"id":"2:12768:27157","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12032:451","self::pattern":"2:12432:3336"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:202":{"id":"0:202","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[214,0],"end":[222,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9867:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2553","args":{"angle_bracketed":{"args":[{"lifetime":"'data"}],"bindings":[]}}}},"items":["0:204:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2737-0:499:2855":{"id":"b:2:2737-0:499:2855","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2855","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:134","2:2741:1619"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:374":{"id":"0:374","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[177,0],"end":[205,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["is_write_vectored","poll_write_vectored"],"trait":{"name":"Write","id":"0:180:2014","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:375:2034","0:376:2035","0:377:2038","0:378:2039","0:379:2040"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:498:2039":{"id":"0:498:2039","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42157:2009","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13224:113","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44855:213","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2944:232","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3496-0:503:2859":{"id":"b:2:3496-0:503:2859","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:503:2859","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3498:1632"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5537:3098":{"id":"5:5537:3098","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7534:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:165:1853":{"id":"0:165:1853","crate_id":0,"name":"ext","span":{"filename":"src/ext/mod.rs","begin":[1,0],"end":[236,1]},"visibility":"public","docs":"HTTP extensions.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[],"is_stripped":false}}},"0:222":{"id":"0:222","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[351,0],"end":[353,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32437:2676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Write","id":"0:180:2014","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:32518:2008","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_write_vectored","poll_write_vectored"],"trait":{"name":"Write","id":"0:180:2014","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"items":["0:494:2034","0:495:2035","0:496:2040","0:497:2038","0:498:2039"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12781:3496":{"id":"2:12781:3496","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:42020:197","prim@char":"1:12032:451","self::pattern":"2:12432:3336"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42018:200","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12452:14803","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:95:2146":{"id":"0:95:2146","crate_id":0,"name":"is_end_stream","span":{"filename":"src/body/incoming.rs","begin":[276,4],"end":[286,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:690:3554":{"id":"5:690:3554","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5540:34997":{"id":"5:5540:34997","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7534:249"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7534:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12437:7619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:67-22:395:2011":{"id":"0:67-22:395:2011","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[22,21],"end":[22,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"bytes::Bytes","name":"Bytes","id":"22:395:2011","glob":false}}},"b:2:2742-0:120:134":{"id":"b:2:2742-0:120:134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2731-0:503:2859":{"id":"b:2:2731-0:503:2859","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:141","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:503:2859","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2733:744"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12735":{"id":"2:12735","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12736:873","2:12737:2028","2:12738:34302","2:12739:34303","2:12741:34304","2:12744:28302","2:12745:34305","2:12746:339","2:12747:2672","2:12748:26236","2:12750:2519","2:12752:27115","2:12754:2682","2:12756:34306","2:12757:34307","2:12758:27138","2:12759:27139","2:12760:7646","2:12761:7794","2:12762:1864","2:12763:32491","2:12764:32496","2:12765:30425","2:12766:34308","2:12767:32495","2:12768:27157","2:12771:27158","2:12774:27159","2:12777:2629","2:12781:3496","2:12785:26143","2:12788:27147","2:12791:27149","2:12794:34309","2:12797:34310","2:12800:27151","2:12803:27153","2:12806:27155","2:12809:27156","2:12812:2360","2:12815:34311","2:12818:34312","2:12821:34313","2:12824:34314","2:12826:34315","2:12828:34316","2:12830:34317","2:12831:34318","2:12832:34319","2:12835:34320","2:12838:27160","2:12841:27161","2:12844:34321","2:12847:34322","2:12850:34323","2:12853:34324","2:12855:26944","2:12856:28341","2:12857:26945","2:12858:26941","2:12859:26940","2:12860:28344","2:12861:28345","2:12862:28346","2:12863:34325","2:12865:9442","2:12866:34326"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2742-0:503:2859":{"id":"b:2:2742-0:503:2859","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:159","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:263","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:503:2859","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2745:134","2:2746:1617"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12858:26941":{"id":"2:12858:26941","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:146:717":{"id":"0:146:717","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[526,4],"end":[528,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9842:140","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9823:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:256-0:188:2553":{"id":"0:256-0:188:2553","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,25],"end":[14,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::ReadBuf","name":"ReadBuf","id":"0:188:2553","glob":false}}}},"paths":{"2:1897:8440":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"17:10803:5776":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"1:10538:3596":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"20:1178:2452":{"crate_id":20,"path":["http","status","InvalidStatusCode"],"kind":"struct"},"16:4806:6838":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"2:42148:15094":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"17:12077:5918":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"17:15244:6490":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"2:43093:3434":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"17:4773:5665":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"2:9872:126":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"6:507:4214":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"6:475:4198":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"17:10925:21903":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"2:12437:7619":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"25:12366:5438":{"crate_id":25,"path":["tokio","io","util","write_all","WriteAll"],"kind":"struct"},"17:12380:5952":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"2:4898:419":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:44669:8532":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"2:41246:4072":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"14:215:7326":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:43661:7757":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"27:9694:5218":{"crate_id":27,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"6:6781:5103":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"21:10:26119":{"crate_id":21,"path":["fnv","FnvHasher"],"kind":"struct"},"5:3155:100":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"17:13765:6120":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"1:11388:8547":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:8300:2077":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:12392:3635":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"17:10915:5785":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"6:4480:4505":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"16:6083:20934":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"17:13273:6021":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"17:16076:6723":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"16:6531:6994":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"6:4473:4501":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"17:14001:6154":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:3162:3135":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"5:6013:15338":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"6:4745:4628":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"11:1891:3996":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"27:7681:4974":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"11:2469:4043":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"17:10813:35712":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"25:11062:36761":{"crate_id":25,"path":["tokio","task","unconstrained","_","__Origin"],"kind":"struct"},"17:15689:6629":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:44217:7697":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"1:903:4043":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"2:30620:3104":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"17:11014:5795":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"1:6596:3182":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"25:13597:9351":{"crate_id":25,"path":["tokio","io","util","read_int","ReadI64"],"kind":"struct"},"5:7534:249":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"25:4923:36857":{"crate_id":25,"path":["tokio","runtime","driver","IoStack"],"kind":"enum"},"16:7284:3381":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"27:8622:5101":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:12663:117":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"27:9414:5204":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"6:5982:4918":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"25:9877:3436":{"crate_id":25,"path":["tokio","sync","watch","Ref"],"kind":"struct"},"17:2169:21948":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"25:9593:3683":{"crate_id":25,"path":["tokio","sync","mpsc","error","TryRecvError"],"kind":"enum"},"5:2972:3553":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"20:919:2450":{"crate_id":20,"path":["http","method","InvalidMethod"],"kind":"struct"},"1:11370:7966":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"2:44953:7814":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"17:15160:6466":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"1:621:3085":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"6:4535:4527":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"27:6032:4707":{"crate_id":27,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"25:5968:5322":{"crate_id":25,"path":["tokio","runtime","io","driver","ReadyEvent"],"kind":"struct"},"2:48212:7913":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"17:10051:5758":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"17:2031:5649":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"16:3888:6823":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"25:808:135":{"crate_id":25,"path":["tokio","fs","file","File"],"kind":"struct"},"2:36313:3128":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"25:7871:226":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","Receiver"],"kind":"struct"},"1:363:7932":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"17:13584:6072":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"2:22351:9724":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"25:3712:3904":{"crate_id":25,"path":["tokio","net","tcp","split_owned","OwnedWriteHalf"],"kind":"struct"},"1:3425:2012":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"11:856:7332":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"11:2498:20886":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"2:46554:7843":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"18:609:5602":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"25:4812:3915":{"crate_id":25,"path":["tokio","runtime","context","runtime_mt","exit_runtime","Reset"],"kind":"struct"},"16:2548:6776":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"1:12057:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:9671:3445":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"5:7284:7433":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"2:41835:8513":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"22:613:3079":{"crate_id":22,"path":["bytes","bytes_mut","BytesMut"],"kind":"struct"},"1:11051:4113":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"17:14786:6372":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"14:165:20896":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"27:7589:4941":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"6:6228:5017":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:44657:8529":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:9467:135":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"16:7568:6809":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"18:690:5616":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"27:7517:4913":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"18:515:5584":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"20:1876:5467":{"crate_id":20,"path":["http","header","map","Keys"],"kind":"struct"},"1:10944:2010":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"6:4556:4538":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:8011:3592":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"22:106:3078":{"crate_id":22,"path":["bytes","buf","buf_mut","BufMut"],"kind":"trait"},"2:44140:7782":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:10521:245":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:8326:8021":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"25:12481:2014":{"crate_id":25,"path":["tokio","io","util","write","Write"],"kind":"struct"},"25:10169:36315":{"crate_id":25,"path":["tokio","task","task_local","ScopeInnerErr"],"kind":"enum"},"25:13646:9350":{"crate_id":25,"path":["tokio","io","util","read_int","ReadI32"],"kind":"struct"},"9:237:3681":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"1:5381:7950":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"2:4309:3435":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"16:6318:6972":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:8251:15021":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"6:4884:4698":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"25:3691:5272":{"crate_id":25,"path":["tokio","net","tcp","split","ReadHalf"],"kind":"struct"},"2:46245:7829":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:22645:32584":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"16:2696:6782":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"25:9472:3169":{"crate_id":25,"path":["tokio","sync","barrier","Barrier"],"kind":"struct"},"6:7679:8345":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"16:2305:20960":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"16:7523:7166":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"27:8423:5049":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"25:7182:2050":{"crate_id":25,"path":["tokio","runtime","builder","Builder"],"kind":"struct"},"1:6466:3181":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"16:8195:7238":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"16:3830:6822":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"27:9730:5220":{"crate_id":27,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"1:9048:29607":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"2:23179:190":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"17:3584:5660":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"6:4800:4659":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"13:110:35692":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"27:4830:4419":{"crate_id":27,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"1:1743:658":{"crate_id":1,"path":["std","env"],"kind":"module"},"1:482:4087":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"1:5240:209":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"16:6600:21826":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"16:7513:7165":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2:22711:8447":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"17:15842:6011":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"2:22666:32592":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"2:2465:462":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"17:10726:35717":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"16:4585:6832":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"22:395:2011":{"crate_id":22,"path":["bytes","bytes","Bytes"],"kind":"struct"},"27:6307:4775":{"crate_id":27,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"1:9474:5259":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"5:1477:5467":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"1:3239:3600":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:4:1113":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"11:2383:3625":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"1:3163:29465":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"17:13056:6003":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"2:43787:7707":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"6:4860:4689":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"6:6159:5012":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:2421:103":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"20:2544:2859":{"crate_id":20,"path":["http","request","Parts"],"kind":"struct"},"2:3358:32899":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"25:5687:5318":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","counters","Counters"],"kind":"struct"},"6:7556:5216":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"6:0:878":{"crate_id":6,"path":["libc"],"kind":"module"},"16:5816:6877":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"20:2756:1847":{"crate_id":20,"path":["http","version","Version"],"kind":"struct"},"25:10895:5432":{"crate_id":25,"path":["tokio","util","wake","WakerRef"],"kind":"struct"},"2:42146:3385":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:40395:32571":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"0:0:1863":{"crate_id":0,"path":["hyper"],"kind":"module"},"16:6346:6974":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"20:1803:35741":{"crate_id":20,"path":["http","extensions","AnyClone"],"kind":"trait"},"17:11469:5834":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"25:7462:5373":{"crate_id":25,"path":["tokio","runtime","handle","TryCurrentError"],"kind":"struct"},"2:40562:7705":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"2:7788:162":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:4167:9567":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"10:44:7351":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"5:1527:216":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"25:1657:3600":{"crate_id":25,"path":["tokio","io","stdout","Stdout"],"kind":"struct"},"27:7501:4912":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"5:7003:4055":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"16:7503:6806":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:43493:7756":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"1:7838:5711":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"6:1664:4383":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"5:7434:9458":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"16:7597:35704":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"20:2506:3633":{"crate_id":20,"path":["http","method","extension","InlineExtension"],"kind":"struct"},"17:15855:6012":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"17:13182:6016":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"18:96:26017":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"17:11536:5848":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"11:742:7330":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"25:4509:182":{"crate_id":25,"path":["tokio","loom","std","mutex","Mutex"],"kind":"struct"},"11:2352:5473":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"16:6569:6800":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"25:9491:5384":{"crate_id":25,"path":["tokio","sync","broadcast","error","SendError"],"kind":"struct"},"2:40868:7721":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"17:13922:6144":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"25:11180:9386":{"crate_id":25,"path":["tokio","io","util","write_int","WriteF64Le"],"kind":"struct"},"5:1495:5469":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"17:12536:5964":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"11:364:4004":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"0:499:2855":{"crate_id":0,"path":["hyper","upgrade","OnUpgrade"],"kind":"struct"},"1:3994:9546":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"27:9712:5219":{"crate_id":27,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"18:671:5613":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"2:7784:142":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"25:631:5536":{"crate_id":25,"path":["tokio","util","linked_list","Link"],"kind":"trait"},"2:7281:32338":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"5:7375:3500":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"1:2662:3591":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"20:2706:2859":{"crate_id":20,"path":["http","uri","Parts"],"kind":"struct"},"11:434:35683":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"16:4745:6836":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"17:10775:5775":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"9:52:20827":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"6:4603:4565":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"16:4921:6842":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"2:42762:3425":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"20:438:2469":{"crate_id":20,"path":["http","header","map","into_header_name","IntoHeaderName"],"kind":"trait"},"30:712:4184":{"crate_id":30,"path":["socket2","MsgHdr"],"kind":"struct"},"25:2847:115":{"crate_id":25,"path":["tokio","io","util","copy","Copy"],"kind":"struct"},"17:11449:5710":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"1:12046:796":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"1:10940:7972":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"16:6960:7061":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"25:3717:5297":{"crate_id":25,"path":["tokio","net","tcp","split_owned","ReuniteError"],"kind":"struct"},"2:39773:3139":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"17:9651:21884":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"25:12793:5447":{"crate_id":25,"path":["tokio","io","util","read_to_end","ReadToEnd"],"kind":"struct"},"17:13121:6012":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"16:6279:6970":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"1:11981:8085":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"27:5282:4538":{"crate_id":27,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"17:13832:6132":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"2:38244:3130":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"18:660:5607":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:12035:1150":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"17:15049:6439":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"27:8490:5072":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"25:3312:5292":{"crate_id":25,"path":["tokio","net","addr","sealed","MaybeReady"],"kind":"struct"},"2:42216:3626":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"6:5829:4834":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"1:11612:2074":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"27:493:4203":{"crate_id":27,"path":["libc","unix","utimbuf"],"kind":"struct"},"18:481:5585":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"17:15321:6512":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"17:11476:5837":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"11:2151:5473":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"17:595:5645":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"27:8770:5126":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"6:4854:4686":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:42755:3423":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"25:4426:5296":{"crate_id":25,"path":["tokio","net","unix","split_owned","OwnedReadHalf"],"kind":"struct"},"2:44526:7807":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"17:15710:6632":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"17:12510:5963":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"2:40411:7693":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:42572:90":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"25:6516:3559":{"crate_id":25,"path":["tokio","runtime","task","harness","poll_future","Guard"],"kind":"struct"},"5:4252:3625":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"5:7497:7439":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"1:7732:9447":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"17:15868:6657":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"17:12387:22016":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"1:7895:125":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"16:5760:21822":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"17:13202:6017":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"17:12872:5986":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"18:507:5587":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"16:4417:6827":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"5:3191:7343":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"17:15279:6501":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"2:2324:635":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"5:1424:3625":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"17:435:5643":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"1:11593:8079":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"1:6357:182":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"27:8587:5100":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"5:4212:3559":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"17:10102:5633":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"2:2954:2797":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"27:5077:4501":{"crate_id":27,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"25:1772:5272":{"crate_id":25,"path":["tokio","io","split","ReadHalf"],"kind":"struct"},"2:3410:3071":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:22732:7675":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"16:8281:7245":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"27:2048:4383":{"crate_id":27,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"1:12052:1640":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"26:1084:5250":{"crate_id":26,"path":["mio","net","uds","stream","UnixStream"],"kind":"struct"},"2:22993:195":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"1:9196:8538":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"6:4686:4602":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"5:4411:3559":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"5:2979:35076":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"17:12009:5773":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:41222:3173":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"25:1640:5271":{"crate_id":25,"path":["tokio","io","stdio_common","SplitByUtf8BoundaryIfWindows"],"kind":"struct"},"1:8286:9569":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"1:11045:4112":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"2:43888:7638":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"1:7643:2590":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"25:7357:3942":{"crate_id":25,"path":["tokio","runtime","task","join","JoinHandle"],"kind":"struct"},"25:1223:3681":{"crate_id":25,"path":["tokio","io","blocking","State"],"kind":"enum"},"28:43:3892":{"crate_id":28,"path":["pin_project_lite","__private","UnsafeDropInPlaceGuard"],"kind":"struct"},"25:4492:2078":{"crate_id":25,"path":["tokio","net","unix","pipe","Sender"],"kind":"struct"},"11:1142:7338":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"22:1089:3578":{"crate_id":22,"path":["bytes","buf","chain","Chain"],"kind":"struct"},"17:12255:5940":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"2:40463:7697":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"2:32406:7135":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"25:4903:5310":{"crate_id":25,"path":["tokio","runtime","driver","Handle"],"kind":"struct"},"5:7422:7435":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"26:346:5238":{"crate_id":26,"path":["mio","sys","unix","sourcefd","SourceFd"],"kind":"struct"},"25:4430:3904":{"crate_id":25,"path":["tokio","net","unix","split_owned","OwnedWriteHalf"],"kind":"struct"},"5:2048:2908":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"5:2144:4028":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2:40447:7696":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"25:2838:5280":{"crate_id":25,"path":["tokio","io","util","copy","CopyBuffer"],"kind":"struct"},"17:12140:5926":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"1:4798:4094":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"18:614:35721":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"27:7797:4996":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:43842:7770":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"25:8015:2109":{"crate_id":25,"path":["tokio","sync","mpsc","chan","Chan"],"kind":"struct"},"27:527:4209":{"crate_id":27,"path":["libc","unix","timespec"],"kind":"struct"},"1:10812:125":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"16:6332:6792":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"2:30351:9539":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"25:10278:3981":{"crate_id":25,"path":["tokio","task","local","LocalSet"],"kind":"struct"},"27:6162:4733":{"crate_id":27,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"2:48285:7919":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"25:8001:3958":{"crate_id":25,"path":["tokio","sync","mpsc","chan","Rx"],"kind":"struct"},"17:14235:6206":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"25:4476:26163":{"crate_id":25,"path":["tokio","net","unix","pipe","PipeEnd"],"kind":"enum"},"20:684:5464":{"crate_id":20,"path":["http","header","value","InvalidHeaderValue"],"kind":"struct"},"25:14182:3577":{"crate_id":25,"path":["tokio","io","util","lines","Lines"],"kind":"struct"},"2:42086:3626":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"25:8183:5381":{"crate_id":25,"path":["tokio","sync","mpsc","unbounded","UnboundedSender"],"kind":"struct"},"1:4042:9549":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:33125:3113":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"17:15612:6607":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"17:12396:5953":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"2:48364:7924":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"17:14878:6407":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"16:2766:6785":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"1:6297:226":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"17:13407:6038":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"2:23334:7679":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"20:2715:2454":{"crate_id":20,"path":["http","uri","InvalidUri"],"kind":"struct"},"25:6011:5325":{"crate_id":25,"path":["tokio","runtime","io","scheduled_io","Waiter"],"kind":"struct"},"6:1632:4360":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:4151:9565":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"6:4628:4578":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:22605:32616":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"16:2472:6773":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"2:44688:128":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"16:5673:6797":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:9880:3426":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"17:13516:6070":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"1:6194:7956":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"2:10907:7630":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:1758:7939":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"1:11516:5245":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"5:7306:4023":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"27:8868:5169":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"27:8534:5078":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"27:7860:5012":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"1:8157:2037":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"25:7080:36314":{"crate_id":25,"path":["tokio","runtime","blocking","pool","SpawnError"],"kind":"enum"},"2:43876:7774":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"25:13548:9352":{"crate_id":25,"path":["tokio","io","util","read_int","ReadI128"],"kind":"struct"},"2:22188:2590":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"27:7761:4992":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"11:2124:5486":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"25:5256:5310":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","handle","Handle"],"kind":"struct"},"2:10714:3580":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"17:16160:6740":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"16:6968:21828":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"2:1815:1187":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"27:1740:4281":{"crate_id":27,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"20:482:26037":{"crate_id":20,"path":["http","header","map","as_header_name","AsHeaderName"],"kind":"trait"},"22:547:3993":{"crate_id":22,"path":["bytes","bytes","Shared"],"kind":"struct"},"6:4939:1100":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"25:5156:3993":{"crate_id":25,"path":["tokio","runtime","scheduler","inject","shared","Shared"],"kind":"struct"},"25:10695:5429":{"crate_id":25,"path":["tokio","util","rand","FastRand"],"kind":"struct"},"1:9094:183":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"25:4444:5250":{"crate_id":25,"path":["tokio","net","unix","stream","UnixStream"],"kind":"struct"},"27:468:15364":{"crate_id":27,"path":["libc","unix","DIR"],"kind":"enum"},"5:1439:3626":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:23117:191":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"2:44182:7783":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"16:7492:7162":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"17:15356:6520":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"11:1051:5473":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"1:415:181":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"1:1406:152":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"17:10510:5770":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:30636:3433":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"1:5568:5014":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"2:7333:15017":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"17:13026:5999":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"17:11141:5803":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"6:4455:4489":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:44546:7649":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"2:6299:7590":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"16:5963:6894":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"20:1922:5486":{"crate_id":20,"path":["http","header","map","Entry"],"kind":"enum"},"2:43053:3433":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"2:40489:7700":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"27:7328:4874":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"1:4038:9548":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"17:9968:21891":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"2:39675:221":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"6:6079:4979":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"25:12419:5439":{"crate_id":25,"path":["tokio","io","util","write_vectored","WriteVectored"],"kind":"struct"},"27:9770:4782":{"crate_id":27,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"16:6415:6981":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:4169:14844":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"27:5154:4517":{"crate_id":27,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:44834:146":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"6:6128:4998":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"17:15631:6612":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"27:7536:4918":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:39631:216":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"25:5575:3915":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","worker","block_in_place","Reset"],"kind":"struct"},"25:10536:2107":{"crate_id":25,"path":["tokio","time","error","Kind"],"kind":"enum"},"17:14989:6430":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"2:10990:7634":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"2:44192:7784":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"25:101:3148":{"crate_id":25,"path":["tokio","future","poll_fn","PollFn"],"kind":"struct"},"17:13145:6013":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"17:11800:5877":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"14:160:7322":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"6:6666:5054":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"14:202:14818":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"25:1435:3902":{"crate_id":25,"path":["tokio","io","async_fd","AsyncFd"],"kind":"struct"},"2:21208:32799":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"27:5095:4505":{"crate_id":27,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"20:2828:3059":{"crate_id":20,"path":["http","extensions","Extensions"],"kind":"struct"},"1:914:7329":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"2:5876:7588":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"17:11617:5854":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"2:44226:7576":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:48250:7916":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"25:3731:5246":{"crate_id":25,"path":["tokio","net","tcp","stream","TcpStream"],"kind":"struct"},"1:10953:7954":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"2:43721:7759":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"5:7316:35246":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"16:6929:7058":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"16:5866:6885":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"7:0:1686":{"crate_id":7,"path":["unwind"],"kind":"module"},"1:7529:5645":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"25:11621:9377":{"crate_id":25,"path":["tokio","io","util","write_int","WriteU16Le"],"kind":"struct"},"11:1160:7339":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"25:7370:5345":{"crate_id":25,"path":["tokio","runtime","task","state","Snapshot"],"kind":"struct"},"25:10976:5397":{"crate_id":25,"path":["tokio","time","timeout","Timeout"],"kind":"struct"},"20:2007:8355":{"crate_id":20,"path":["http","header","map","Pos"],"kind":"struct"},"25:4561:3906":{"crate_id":25,"path":["tokio","runtime","coop","with_budget","ResetGuard"],"kind":"struct"},"16:7436:6904":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"25:10107:181":{"crate_id":25,"path":["tokio","task","task_local","LocalKey"],"kind":"struct"},"6:4776:4647":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:44847:233":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"6:4449:4487":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"26:641:2078":{"crate_id":26,"path":["mio","sys","unix","pipe","Sender"],"kind":"struct"},"6:588:4264":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"27:7386:4879":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"6:6943:5193":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"11:102:5481":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"17:16180:6030":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"27:1818:4297":{"crate_id":27,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"16:7006:7072":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"17:14778:6371":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"2:46578:7844":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"20:2557:1844":{"crate_id":20,"path":["http","response","Response"],"kind":"struct"},"26:645:226":{"crate_id":26,"path":["mio","sys","unix","pipe","Receiver"],"kind":"struct"},"16:2284:20935":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:44478:7798":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"17:15546:6590":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"25:2766:26152":{"crate_id":25,"path":["tokio","io","util","async_seek_ext","AsyncSeekExt"],"kind":"trait"},"25:9734:3682":{"crate_id":25,"path":["tokio","sync","oneshot","error","RecvError"],"kind":"struct"},"25:14441:36761":{"crate_id":25,"path":["tokio","io","util","buf_reader","_","__Origin"],"kind":"struct"},"25:11719:9375":{"crate_id":25,"path":["tokio","io","util","write_int","WriteF32"],"kind":"struct"},"25:9713:3681":{"crate_id":25,"path":["tokio","sync","notify","State"],"kind":"enum"},"24:0:1865":{"crate_id":24,"path":["http_body"],"kind":"module"},"2:42650:3168":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"25:6051:5328":{"crate_id":25,"path":["tokio","runtime","time","entry","StateCell"],"kind":"struct"},"11:2231:5837":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"16:7041:7076":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"2:42069:170":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"16:2359:6768":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"1:4180:9568":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"2:7111:3506":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"27:474:4198":{"crate_id":27,"path":["libc","unix","group"],"kind":"struct"},"17:14765:6365":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:7751:15022":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:5753:3170":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"2:44441:7648":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"25:5413:3922":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","queue","Local"],"kind":"struct"},"2:13033:161":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"18:80:26016":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:11549:14799":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"17:13297:6025":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"25:10642:36601":{"crate_id":25,"path":["tokio","util","linked_list","DrainFilter"],"kind":"struct"},"5:1286:5473":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"5:5877:3996":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"16:6376:21825":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"11:1007:5486":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"6:7651:4785":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"25:11042:9390":{"crate_id":25,"path":["tokio","task","unconstrained","Unconstrained"],"kind":"struct"},"17:511:5644":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"25:6025:36750":{"crate_id":25,"path":["tokio","runtime","io","metrics","IoDriverMetrics"],"kind":"struct"},"27:7451:4900":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:43894:7775":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"17:15725:6633":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"17:15117:6458":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"1:1063:5473":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"17:12264:5941":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"6:4440:4482":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"16:8154:7233":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"25:14458:3569":{"crate_id":25,"path":["tokio","io","seek","Seek"],"kind":"struct"},"17:11576:5851":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"1:9069:8354":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"6:4783:4650":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"6:6136:8332":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"5:3581:179":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"20:2725:3592":{"crate_id":20,"path":["http","uri","ErrorKind"],"kind":"enum"},"2:44040:7632":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"16:6893:7056":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"17:14896:6411":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"1:3394:3559":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"6:4922:4716":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"17:15507:6578":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"17:12166:5928":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"17:16098:6729":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"6:1710:4403":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"1:909:5469":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"17:13663:6105":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"2:32427:7682":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"17:1094:5646":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"17:11485:5840":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"17:15101:6455":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:16170:6025":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"16:3797:6821":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"17:12273:5984":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"20:2690:2477":{"crate_id":20,"path":["http","uri","scheme","Protocol"],"kind":"enum"},"17:15645:6614":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:10131:7622":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:4821:9556":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"1:4906:9595":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"17:11701:5865":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"2:23779:242":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"9:426:20811":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:21239:32811":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"16:8205:21834":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"17:14509:6257":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"26:740:5244":{"crate_id":26,"path":["mio","io_source","SelectorId"],"kind":"struct"},"6:5052:4794":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"25:12732:5445":{"crate_id":25,"path":["tokio","io","util","read_to_string","ReadToString"],"kind":"struct"},"18:590:5597":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"17:11226:5813":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:43269:7747":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"17:14021:6157":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"25:310:9538":{"crate_id":25,"path":["tokio","net","addr","ToSocketAddrs"],"kind":"trait"},"2:12446:5619":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"25:6902:5432":{"crate_id":25,"path":["tokio","runtime","task","waker","WakerRef"],"kind":"struct"},"1:4635:5093":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"2:44911:177":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"27:7958:5017":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"1:9274:3710":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"27:592:4231":{"crate_id":27,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"20:2775:5572":{"crate_id":20,"path":["http","version","Http"],"kind":"enum"},"16:7694:6810":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"6:5033:4786":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"17:15990:6701":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"27:6229:4758":{"crate_id":27,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"6:5044:4792":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"5:3196:35240":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"16:6243:6957":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"11:1066:20890":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"17:10974:5791":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:10976:7633":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"25:10295:5410":{"crate_id":25,"path":["tokio","task","task_local","AccessError"],"kind":"struct"},"6:4814:4663":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"17:12244:5936":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"5:3225:7342":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"25:996:3567":{"crate_id":25,"path":["tokio","fs","read_to_string","read_to_string"],"kind":"function"},"2:43044:73":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"2:41749:167":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"5:6530:4012":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"6:7388:5215":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"17:15177:6473":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"17:12828:5984":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"25:440:3170":{"crate_id":25,"path":["tokio","loom","std","barrier","BarrierWaitResult"],"kind":"struct"},"1:1538:3500":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"1:8978:113":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"20:2720:2455":{"crate_id":20,"path":["http","uri","InvalidUriParts"],"kind":"struct"},"22:22:2010":{"crate_id":22,"path":["bytes","buf","buf_impl","Buf"],"kind":"trait"},"25:1098:8050":{"crate_id":25,"path":["tokio","fs","file","Operation"],"kind":"enum"},"16:3315:6817":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"25:6165:5333":{"crate_id":25,"path":["tokio","runtime","time","wheel","level","Level"],"kind":"struct"},"1:4625:9546":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"1:6146:3074":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"25:10212:3984":{"crate_id":25,"path":["tokio","task","join_set","JoinSet"],"kind":"struct"},"25:9871:2078":{"crate_id":25,"path":["tokio","sync","watch","Sender"],"kind":"struct"},"5:7367:3500":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2:44335:7792":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2:7747:15023":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"6:6658:5049":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"17:12572:5967":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"1:533:4088":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"2:48259:7917":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"6:1537:4291":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"25:3086:3604":{"crate_id":25,"path":["tokio","io","util","repeat","Repeat"],"kind":"struct"},"25:1080:125":{"crate_id":25,"path":["tokio","fs","dir_builder","DirBuilder"],"kind":"struct"},"15:394:20926":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"1:12038:1536":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"25:5420:3632":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","queue","Inner"],"kind":"struct"},"17:9790:21887":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"1:8292:8019":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"16:7554:6808":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"2:42103:3381":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"27:6414:4781":{"crate_id":27,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"25:1210:5264":{"crate_id":25,"path":["tokio","io","blocking","Blocking"],"kind":"struct"},"2:40609:4064":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"17:10881:21902":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"13:226:8407":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"1:7136:32184":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"2:2944:115":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"24:89:2074":{"crate_id":24,"path":["http_body","frame","Frame"],"kind":"struct"},"25:8195:5382":{"crate_id":25,"path":["tokio","sync","mpsc","unbounded","UnboundedReceiver"],"kind":"struct"},"1:4915:9596":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"17:11459:5832":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"25:7868:3956":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","OwnedPermit"],"kind":"struct"},"17:14194:6201":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"17:10207:5636":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"5:7548:7442":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"6:5009:4769":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"16:5088:6847":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"1:1966:204":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"25:7340:5368":{"crate_id":25,"path":["tokio","runtime","task","id","Id"],"kind":"struct"},"1:1821:7942":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"25:10914:3990":{"crate_id":25,"path":["tokio","util","try_lock","LockGuard"],"kind":"struct"},"25:11474:9380":{"crate_id":25,"path":["tokio","io","util","write_int","WriteU128Le"],"kind":"struct"},"6:6934:5189":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"16:6041:21824":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"16:7582:7168":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"25:9762:3681":{"crate_id":25,"path":["tokio","sync","oneshot","State"],"kind":"struct"},"25:7599:226":{"crate_id":25,"path":["tokio","sync","broadcast","Receiver"],"kind":"struct"},"27:5443:4578":{"crate_id":27,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"17:10785:35716":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"5:3217:7344":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"25:360:36586":{"crate_id":25,"path":["tokio","net","addr","sealed","ToSocketAddrsPriv"],"kind":"trait"},"17:13383:6034":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"1:8973:8044":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"2:22537:7655":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"6:5974:4913":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"26:60:213":{"crate_id":26,"path":["mio","poll","Poll"],"kind":"struct"},"17:11645:5856":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"25:1540:5270":{"crate_id":25,"path":["tokio","io","async_fd","TryIoError"],"kind":"struct"},"1:945:7334":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"17:14296:6215":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"2:43712:7758":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"25:9934:5408":{"crate_id":25,"path":["tokio","sync","watch","state","AtomicState"],"kind":"struct"},"1:12051:1639":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"27:5194:4523":{"crate_id":27,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"16:4774:6837":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"17:12701:5977":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"25:9864:226":{"crate_id":25,"path":["tokio","sync","watch","Receiver"],"kind":"struct"},"16:2526:6775":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"25:7422:2107":{"crate_id":25,"path":["tokio","runtime","builder","Kind"],"kind":"enum"},"16:5588:6796":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"11:2369:7348":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"16:5121:6848":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:22080:9729":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"1:8562:8038":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"27:7870:5001":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"27:8937:5189":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"25:9728:226":{"crate_id":25,"path":["tokio","sync","oneshot","Receiver"],"kind":"struct"},"2:9876:3424":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"2:48028:7909":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"20:1935:5473":{"crate_id":20,"path":["http","header","map","VacantEntry"],"kind":"struct"},"2:42224:3500":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"27:5593:4612":{"crate_id":27,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"3:0:478":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"5:7523:4039":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"2:40858:7599":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"2:44172:3577":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"20:2665:3658":{"crate_id":20,"path":["http","uri","path","PathAndQuery"],"kind":"struct"},"1:8213:3580":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"25:5992:3926":{"crate_id":25,"path":["tokio","runtime","io","registration","Registration"],"kind":"struct"},"6:5859:4859":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"25:9514:3683":{"crate_id":25,"path":["tokio","sync","broadcast","error","TryRecvError"],"kind":"enum"},"25:11278:9384":{"crate_id":25,"path":["tokio","io","util","write_int","WriteI128Le"],"kind":"struct"},"16:7128:8050":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"11:490:150":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"27:1841:4306":{"crate_id":27,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"25:10156:5409":{"crate_id":25,"path":["tokio","task","task_local","fmt","TransparentOption"],"kind":"struct"},"6:1650:4372":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"17:13097:6011":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"17:14122:6193":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"11:875:7334":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"27:700:4254":{"crate_id":27,"path":["libc","unix","sigval"],"kind":"struct"},"17:11395:5826":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"2:46776:7850":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2:46125:7824":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"17:9730:21885":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"27:7940:5016":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"25:9912:1847":{"crate_id":25,"path":["tokio","sync","watch","state","Version"],"kind":"struct"},"17:15566:6593":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"25:9722:2078":{"crate_id":25,"path":["tokio","sync","oneshot","Sender"],"kind":"struct"},"1:3930:9542":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"27:1909:4328":{"crate_id":27,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"25:9670:3210":{"crate_id":25,"path":["tokio","sync","notify","Notify"],"kind":"struct"},"2:47092:7868":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:41772:7612":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"1:7923:3590":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"25:4450:5298":{"crate_id":25,"path":["tokio","net","unix","ucred","UCred"],"kind":"struct"},"25:5362:8349":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","park","Parker"],"kind":"struct"},"25:9124:239":{"crate_id":25,"path":["tokio","sync","rwlock","RwLock"],"kind":"struct"},"18:736:26027":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"1:859:3500":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:40706:7712":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"25:5676:5317":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","MultiThread"],"kind":"struct"},"1:3280:3597":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"27:7718:4980":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:3081:3143":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"25:13352:9356":{"crate_id":25,"path":["tokio","io","util","read_int","ReadU32Le"],"kind":"struct"},"2:41997:7616":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"17:15267:6498":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"16:6721:21827":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"5:3818:4043":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"2:32549:3066":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"1:5446:111":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:44898:3073":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"17:11590:5852":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"2:4381:7580":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"1:12056:1246":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"16:7708:6811":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"1:9186:30013":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"16:6189:6935":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"2:44665:8531":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"2:40758:7717":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"25:5716:5310":{"crate_id":25,"path":["tokio","runtime","scheduler","Handle"],"kind":"enum"},"26:353:3074":{"crate_id":26,"path":["mio","sys","unix","waker","fdbased","Waker"],"kind":"struct"},"22:1117:3579":{"crate_id":22,"path":["bytes","buf","take","Take"],"kind":"struct"},"6:1703:4400":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"27:8017:5042":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"17:12758:5980":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"17:15903:6687":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"1:9034:8050":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"1:8814:8040":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"1:10535:3600":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"1:5987:226":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"16:2428:6771":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:45977:7818":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"17:13491:6066":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"27:7345:4877":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:12503:14810":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:11957:15102":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"2:6494:4070":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"27:7635:4962":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"16:3655:5675":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"16:7722:6801":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"27:1777:4286":{"crate_id":27,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"25:6782:3681":{"crate_id":25,"path":["tokio","runtime","task","state","State"],"kind":"struct"},"27:8651:5103":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"16:4557:6831":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"17:10422:5769":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"25:9704:3965":{"crate_id":25,"path":["tokio","sync","notify","Notified"],"kind":"struct"},"25:12062:9368":{"crate_id":25,"path":["tokio","io","util","write_int","WriteU32"],"kind":"struct"},"4:0:2915":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"17:11321:5773":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"5:1536:7416":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"17:15480:6566":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"16:6513:6986":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"5:1315:7339":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"1:11340:7963":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"1:2368:9519":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"25:258:2553":{"crate_id":25,"path":["tokio","io","read_buf","ReadBuf"],"kind":"struct"},"25:599:3898":{"crate_id":25,"path":["tokio","util","wake_list","WakeList"],"kind":"struct"},"11:1087:35691":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"25:7497:5374":{"crate_id":25,"path":["tokio","runtime","thread_id","ThreadId"],"kind":"struct"},"27:5821:4663":{"crate_id":27,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:21882:32807":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"1:2352:8442":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:10689:3626":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"25:12574:3580":{"crate_id":25,"path":["tokio","io","util","split","Split"],"kind":"struct"},"1:8936:9617":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"16:2864:6789":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"1:11307:7959":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"17:12115:5924":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"2:10302:4077":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"2:39602:3136":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"17:256:5638":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"1:7663:2050":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"16:4835:6839":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"6:4808:4662":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"18:548:149":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"27:9782:4784":{"crate_id":27,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:5592:3559":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"20:2093:2445":{"crate_id":20,"path":["http","header","name","HeaderName"],"kind":"struct"},"1:4028:9547":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:9344:91":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"27:716:4256":{"crate_id":27,"path":["libc","unix","itimerval"],"kind":"struct"},"16:2969:20962":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"1:4740:9557":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"27:6336:4794":{"crate_id":27,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"17:13322:6030":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"6:4506:4517":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"25:10845:36579":{"crate_id":25,"path":["tokio","util","sync_wrapper","SyncWrapper"],"kind":"struct"},"1:12049:1641":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"17:11243:5816":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"6:7622:5221":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"27:2089:4390":{"crate_id":27,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"6:7598:5217":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:3127:137":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"27:7780:4993":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"1:12054:848":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"1:5746:3169":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"16:2881:6790":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"18:521:26029":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"2:1906:7444":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"27:5618:4623":{"crate_id":27,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"17:16146:6739":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"11:883:7335":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"16:5905:6888":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"1:6540:3177":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"1:12031:1033":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"25:4884:3632":{"crate_id":25,"path":["tokio","runtime","park","Inner"],"kind":"struct"},"2:44653:8528":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"2:7503:2108":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"16:3032:6814":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"20:1957:2470":{"crate_id":20,"path":["http","header","map","ValueIter"],"kind":"struct"},"27:2023:4372":{"crate_id":27,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:43936:7629":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"6:5015:4770":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:23055:193":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"17:13935:6145":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"25:2727:30425":{"crate_id":25,"path":["tokio","io","util","async_buf_read_ext","AsyncBufReadExt","lines"],"kind":"foreign_type"},"16:5049:6846":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"17:10559:5771":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"16:4462:6828":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"16:7102:21829":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"2:43300:7754":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"17:12091:5922":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"5:7276:3500":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"5:1685:4012":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"17:15671:6623":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"17:11345:5824":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:40529:106":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:0:1528":{"crate_id":1,"path":["std"],"kind":"module"},"1:504:4028":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"27:4980:4480":{"crate_id":27,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"7:31:20796":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:21562:9644":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"27:7298:4861":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"20:1884:5468":{"crate_id":20,"path":["http","header","map","Values"],"kind":"struct"},"6:4902:4707":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"27:1865:4314":{"crate_id":27,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"27:6401:4828":{"crate_id":27,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"5:4444:4034":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"11:837:7331":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"1:3837:5247":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"5:6686:4012":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:34437:3127":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2:1785:3100":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"20:2083:35740":{"crate_id":20,"path":["http","header","map","Danger"],"kind":"enum"},"6:5928:4891":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"25:9829:241":{"crate_id":25,"path":["tokio","sync","rwlock","write_guard","RwLockWriteGuard"],"kind":"struct"},"25:433:3169":{"crate_id":25,"path":["tokio","loom","std","barrier","Barrier"],"kind":"struct"},"2:13107:3148":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"27:6049:4708":{"crate_id":27,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"25:5085:3917":{"crate_id":25,"path":["tokio","runtime","scheduler","current_thread","CoreGuard"],"kind":"struct"},"25:9498:3682":{"crate_id":25,"path":["tokio","sync","broadcast","error","RecvError"],"kind":"enum"},"6:5891:4877":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:1778:634":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"17:12418:5958":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"16:7462:7154":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"1:1556:7343":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"6:1570:4314":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:12137:7639":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"17:13218:6018":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:4919:33310":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"17:15345:6516":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"1:8493:9608":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"25:6287:5309":{"crate_id":25,"path":["tokio","runtime","time","Driver"],"kind":"struct"},"6:6071:4974":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"1:2622:3581":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"6:7365:8338":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"1:10155:8057":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"2:8289:33771":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"1:12042:691":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"1:2518:3588":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"27:5474:4593":{"crate_id":27,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"11:0:2919":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"2:2492:131":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"2:40546:32612":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"11:2423:3500":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"16:6560:4001":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"25:9768:3212":{"crate_id":25,"path":["tokio","sync","batch_semaphore","TryAcquireError"],"kind":"enum"},"2:42414:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"27:9374:5203":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"6:6012:4941":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"25:730:3190":{"crate_id":25,"path":["tokio","select"],"kind":"macro"},"20:1837:1848":{"crate_id":20,"path":["http","header","map","HeaderMap"],"kind":"struct"},"5:1387:99":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"14:31:7322":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:46156:7825":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"25:9992:36581":{"crate_id":25,"path":["tokio","task","local","LocalState"],"kind":"struct"},"30:0:3186":{"crate_id":30,"path":["socket2"],"kind":"module"},"17:11932:5908":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"27:5133:4511":{"crate_id":27,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"27:2001:4364":{"crate_id":27,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"17:10067:5632":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"11:787:5468":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"5:7338:216":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"1:3936:9541":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"1:8959:3172":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"6:483:4203":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:31210:3404":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"25:9675:5325":{"crate_id":25,"path":["tokio","sync","notify","Waiter"],"kind":"struct"},"2:32939:3114":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"20:1980:3997":{"crate_id":20,"path":["http","header","map","ValueDrain"],"kind":"struct"},"2:2986:3063":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"1:11144:8040":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:42769:3426":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"16:5017:6845":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"17:13695:6112":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2:40639:3607":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"2:3603:3996":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"2:15:2281":{"crate_id":2,"path":["core","write"],"kind":"macro"},"16:5384:21820":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"27:5326:4552":{"crate_id":27,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:32463:250":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"16:536:6748":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"1:4569:9588":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"2:22744:9540":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"5:7618:4043":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"6:4738:4624":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"9:507:7400":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"1:7668:5374":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"25:10120:3559":{"crate_id":25,"path":["tokio","task","task_local","scope_inner","Guard"],"kind":"struct"},"25:11768:9374":{"crate_id":25,"path":["tokio","io","util","write_int","WriteI128"],"kind":"struct"},"25:13793:9347":{"crate_id":25,"path":["tokio","io","util","read_int","ReadU64"],"kind":"struct"},"1:4700:9597":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"2:12248:7626":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"16:5435:6851":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"16:6226:6951":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"11:430:35681":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"2:2701:159":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"20:1868:3500":{"crate_id":20,"path":["http","header","map","IntoIter"],"kind":"struct"},"5:2474:8436":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"1:637:7933":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"16:7736:7175":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"1:8920:9616":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"27:2109:4396":{"crate_id":27,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:15013:6434":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"17:12410:5956":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"2:44235:7696":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"20:2572:2050":{"crate_id":20,"path":["http","response","Builder"],"kind":"struct"},"25:13401:9355":{"crate_id":25,"path":["tokio","io","util","read_int","ReadU16Le"],"kind":"struct"},"1:12048:793":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"26:1037:5249":{"crate_id":26,"path":["mio","net","uds","listener","UnixListener"],"kind":"struct"},"17:15037:6436":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:8200:3579":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"25:9836:3219":{"crate_id":25,"path":["tokio","sync","rwlock","write_guard_mapped","RwLockMappedWriteGuard"],"kind":"struct"},"1:7865:7974":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"17:14282:6213":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"2:42094:3500":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"25:7993:3957":{"crate_id":25,"path":["tokio","sync","mpsc","chan","Tx"],"kind":"struct"},"0:265:1855":{"crate_id":0,"path":["hyper","service"],"kind":"module"},"17:11549:5849":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"27:9776:4783":{"crate_id":27,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"11:1566:20891":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"20:2564:2859":{"crate_id":20,"path":["http","response","Parts"],"kind":"struct"},"1:3500:3569":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"25:12534:3579":{"crate_id":25,"path":["tokio","io","util","take","Take"],"kind":"struct"},"5:786:101":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"16:3915:6824":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"17:9813:21888":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"6:4870:4693":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"17:12127:5925":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"17:13334:6031":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"6:5104:4822":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"18:624:35722":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:38299:3131":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"16:2504:6774":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"25:3708:5296":{"crate_id":25,"path":["tokio","net","tcp","split_owned","OwnedReadHalf"],"kind":"struct"},"1:10767:5258":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"27:7278:4859":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:32402:2334":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"17:13976:6152":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"1:6070:4096":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"2:46226:7828":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"17:12180:5929":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"6:4461:4492":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"6:6764:5101":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:39551:3144":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"17:10988:5792":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"17:14399:6236":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"2:42748:3424":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:22125:9730":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"2:9874:3423":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"16:5743:6868":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"5:0:313":{"crate_id":5,"path":["alloc"],"kind":"module"},"25:0:1867":{"crate_id":25,"path":["tokio"],"kind":"module"},"25:153:26145":{"crate_id":25,"path":["tokio","io","async_read","AsyncRead"],"kind":"trait"},"25:2825:36303":{"crate_id":25,"path":["tokio","io","util","buf_writer","SeekState"],"kind":"enum"},"1:9164:8052":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"25:13254:9358":{"crate_id":25,"path":["tokio","io","util","read_int","ReadU128Le"],"kind":"struct"},"25:13205:9359":{"crate_id":25,"path":["tokio","io","util","read_int","ReadI16Le"],"kind":"struct"},"1:8872:5384":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"17:12784:5981":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"17:13633:6097":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:1873:3083":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"5:5650:4041":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"27:6143:4728":{"crate_id":27,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"1:6430:3174":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"5:830:4018":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"16:7360:35706":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"16:2596:6778":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"20:2039:5483":{"crate_id":20,"path":["http","header","map","Links"],"kind":"struct"},"18:113:26018":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"25:9609:3682":{"crate_id":25,"path":["tokio","sync","mpsc","error","RecvError"],"kind":"struct"},"17:4928:5667":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"2:41942:7735":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"16:6425:6982":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:22302:2590":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"25:4409:5272":{"crate_id":25,"path":["tokio","net","unix","split","ReadHalf"],"kind":"struct"},"2:32413:7681":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"6:5941:4900":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:30614:2598":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"2:4957:3606":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"6:7616:5220":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"2:10869:7629":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"25:3090:3605":{"crate_id":25,"path":["tokio","io","util","sink","Sink"],"kind":"struct"},"6:6961:5197":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"16:6261:6967":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"30:830:2477":{"crate_id":30,"path":["socket2","Protocol"],"kind":"struct"},"17:14497:6250":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"17:261:5639":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"6:4755:4635":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"17:10016:21868":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"1:8308:5298":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"17:13961:6149":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"25:6274:5339":{"crate_id":25,"path":["tokio","runtime","time","wheel","level","Expiration"],"kind":"struct"},"6:4914:4711":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"17:13448:6050":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"17:10242:5637":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"1:11158:8041":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"17:15253:6491":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"27:8738:5115":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"14:0:2921":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"2:26181:272":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"2:46023:7820":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"25:12850:5448":{"crate_id":25,"path":["tokio","io","util","fill_buf","FillBuf"],"kind":"struct"},"17:15557:6591":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"1:1969:203":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"5:2975:8432":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"25:13891:9345":{"crate_id":25,"path":["tokio","io","util","read_int","ReadU16"],"kind":"struct"},"11:2569:7435":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"2:4561:3438":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"2:48349:7923":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:4311:5249":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"17:14170:6198":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"16:7015:7075":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"27:1925:4330":{"crate_id":27,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:10962:7632":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:47636:7905":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"6:563:4251":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"25:9368:3993":{"crate_id":25,"path":["tokio","sync","watch","Shared"],"kind":"struct"},"6:6120:4996":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"1:3160:30893":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"1:2600:4078":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"6:569:4254":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"14:7:7322":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"17:12301:5943":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"0:344:1856":{"crate_id":0,"path":["hyper","upgrade"],"kind":"module"},"0:169:2551":{"crate_id":0,"path":["hyper","rt","bounds"],"kind":"module"},"16:6545:6996":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"2:42233:202":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"17:13463:6056":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"16:2618:6779":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"1:880:5468":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"16:4527:6830":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"1:4639:5097":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"1:3966:9543":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"25:7861:5375":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","WeakSender"],"kind":"struct"},"25:7487:36856":{"crate_id":25,"path":["tokio","runtime","runtime","Scheduler"],"kind":"enum"},"16:2744:6784":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"16:7660:7173":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"27:5703:4640":{"crate_id":27,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"5:1301:5476":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"17:10657:5773":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:9878:3425":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"27:8510:5073":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"16:6687:7022":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"2:44513:7803":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:4737:14862":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"2:40735:7586":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"25:178:26146":{"crate_id":25,"path":["tokio","io","async_seek","AsyncSeek"],"kind":"trait"},"5:3607:3626":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"25:11425:9381":{"crate_id":25,"path":["tokio","io","util","write_int","WriteI16Le"],"kind":"struct"},"27:4900:4446":{"crate_id":27,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:43016:32595":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"25:2729:2042":{"crate_id":25,"path":["tokio","io","util","async_read_ext","AsyncReadExt"],"kind":"trait"},"1:867:5467":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"2:47246:7871":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"5:7267:3687":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"16:5712:6863":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"24:95:2107":{"crate_id":24,"path":["http_body","frame","Kind"],"kind":"enum"},"17:9559:21869":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"26:975:5248":{"crate_id":26,"path":["mio","net","uds","datagram","UnixDatagram"],"kind":"struct"},"1:7689:3666":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"1:8281:8533":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"1:10738:8065":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"25:9843:3222":{"crate_id":25,"path":["tokio","sync","once_cell","SetError"],"kind":"enum"},"7:78:20803":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"5:6117:3559":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"5:1024:4012":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"5:5961:71":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"25:9823:240":{"crate_id":25,"path":["tokio","sync","rwlock","read_guard","RwLockReadGuard"],"kind":"struct"},"2:41231:7605":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"5:1131:35588":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"25:9478:5391":{"crate_id":25,"path":["tokio","sync","barrier","BarrierState"],"kind":"struct"},"1:893:3996":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"17:14822:6401":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"1:918:7330":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"1:11215:8545":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"1:12053:1637":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"2:32551:112":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"20:1900:3996":{"crate_id":20,"path":["http","header","map","Drain"],"kind":"struct"},"6:555:4246":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"2:46408:7839":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"25:637:5254":{"crate_id":25,"path":["tokio","util","linked_list","Pointers"],"kind":"struct"},"17:12953:5994":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"6:6691:5072":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:4450:4062":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"25:12201:9365":{"crate_id":25,"path":["tokio","io","util","write_int","WriteU8"],"kind":"struct"},"2:21992:2590":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:32436:243":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"25:4895:5307":{"crate_id":25,"path":["tokio","runtime","park","CachedParkThread"],"kind":"struct"},"17:12718:21893":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"25:6262:5336":{"crate_id":25,"path":["tokio","runtime","time","entry","TimerHandle"],"kind":"struct"},"2:46356:7837":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:10236:4074":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"1:11355:7964":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"16:6386:6978":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"17:11399:5827":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:33722:3119":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"25:8725:68":{"crate_id":25,"path":["tokio","sync","batch_semaphore","Acquire"],"kind":"struct"},"19:0:1130":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"11:2536:8413":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"17:15384:6528":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"17:11817:21990":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"6:7692:5225":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:8802:205":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"6:62:15364":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"17:15087:6452":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"2:22593:7660":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"25:621:179":{"crate_id":25,"path":["tokio","util","linked_list","LinkedList"],"kind":"struct"},"25:5006:5314":{"crate_id":25,"path":["tokio","runtime","scheduler","current_thread","CurrentThread"],"kind":"struct"},"1:7931:2908":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:4235:7579":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"27:2147:4407":{"crate_id":27,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"16:5982:6900":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"1:3510:3572":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"30:753:4177":{"crate_id":30,"path":["socket2","sockaddr","SockAddr"],"kind":"struct"},"2:11973:7637":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"6:6114:4993":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"17:15184:6474":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"22:849:5457":{"crate_id":22,"path":["bytes","fmt","BytesRef"],"kind":"struct"},"5:1486:5468":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"17:14843:6406":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"5:212:4011":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"1:849:3626":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"16:4986:6844":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:40998:3579":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"17:13882:5881":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"6:580:4259":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"1:6249:2078":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"6:6718:5082":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"17:13648:6101":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"6:4496:4511":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"6:7343:5203":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"22:1154:5461":{"crate_id":22,"path":["bytes","buf","writer","Writer"],"kind":"struct"},"25:6926:3676":{"crate_id":25,"path":["tokio","runtime","task","Task"],"kind":"struct"},"2:45931:7816":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"25:11572:9378":{"crate_id":25,"path":["tokio","io","util","write_int","WriteU32Le"],"kind":"struct"},"6:1521:4283":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"5:6842:4041":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"27:5211:4525":{"crate_id":27,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"25:6946:3943":{"crate_id":25,"path":["tokio","runtime","task","UnownedTask"],"kind":"struct"},"11:832:5469":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"17:12898:21894":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"25:3317:3681":{"crate_id":25,"path":["tokio","net","addr","sealed","State"],"kind":"enum"},"17:14312:6219":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"27:7837:8332":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"25:10515:5412":{"crate_id":25,"path":["tokio","time","clock","Clock"],"kind":"struct"},"25:10519:3632":{"crate_id":25,"path":["tokio","time","clock","Inner"],"kind":"struct"},"2:10126:9531":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:46001:7819":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"31:0:3187":{"crate_id":31,"path":["num_cpus"],"kind":"module"},"2:42336:86":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"22:1104:5458":{"crate_id":22,"path":["bytes","buf","limit","Limit"],"kind":"struct"},"25:6003:5324":{"crate_id":25,"path":["tokio","runtime","io","scheduled_io","Waiters"],"kind":"struct"},"2:13055:33455":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"27:6186:4743":{"crate_id":27,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"27:809:15419":{"crate_id":27,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:2704:141":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"1:3735:5245":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"17:12366:22015":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"5:3251:7345":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"17:10137:5634":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"2:46055:7821":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"25:9792:3214":{"crate_id":25,"path":["tokio","sync","semaphore","SemaphorePermit"],"kind":"struct"},"25:13940:9344":{"crate_id":25,"path":["tokio","io","util","read_int","ReadI8"],"kind":"struct"},"1:1562:7344":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"27:6012:4701":{"crate_id":27,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:43813:7767":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"6:6682:5066":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"26:131:5236":{"crate_id":26,"path":["mio","event","events","Events"],"kind":"struct"},"1:5395:7951":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:47216:7870":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:11178:8532":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"6:6927:5186":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"2:43290:3681":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"2:46263:7830":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"2:44890:3072":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"6:7702:5227":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"16:7318:7115":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"17:2228:5656":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"2:0:533":{"crate_id":2,"path":["core"],"kind":"module"},"6:4698:4611":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"0:262:2571":{"crate_id":0,"path":["hyper","rt","Executor"],"kind":"trait"},"27:8720:5114":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"20:2657:3657":{"crate_id":20,"path":["http","uri","authority","Authority"],"kind":"struct"},"26:189:5229":{"crate_id":26,"path":["mio","interest","Interest"],"kind":"struct"},"27:5114:4508":{"crate_id":27,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"6:6798:5108":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"17:12474:5773":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"17:13285:6024":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"25:9747:3683":{"crate_id":25,"path":["tokio","sync","oneshot","error","TryRecvError"],"kind":"enum"},"16:6844:7050":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"27:6424:8323":{"crate_id":27,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"2:4150:14774":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"16:3461:6818":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"1:11998:29594":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"18:681:5614":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"2:48426:7926":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:7906:7975":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"1:9099:240":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"2:23086:194":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"25:11016:2554":{"crate_id":25,"path":["tokio","time","sleep","Sleep"],"kind":"struct"},"1:10430:8039":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"17:10569:35715":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"27:8894:5177":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"26:0:3184":{"crate_id":26,"path":["mio"],"kind":"module"},"1:7599:4108":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"25:6128:5310":{"crate_id":25,"path":["tokio","runtime","time","handle","Handle"],"kind":"struct"},"17:14757:6362":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"27:5682:4635":{"crate_id":27,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"17:14359:6233":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"25:13156:9360":{"crate_id":25,"path":["tokio","io","util","read_int","ReadI32Le"],"kind":"struct"},"16:7768:6799":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"2:10796:7627":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"5:634:7413":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"2:46600:7845":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:40767:7589":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"22:400:3769":{"crate_id":22,"path":["bytes","bytes","Vtable"],"kind":"struct"},"25:4874:5305":{"crate_id":25,"path":["tokio","runtime","park","ParkThread"],"kind":"struct"},"1:9026:2335":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"0:503:2859":{"crate_id":0,"path":["hyper","upgrade","Parts"],"kind":"struct"},"27:5547:4602":{"crate_id":27,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"2:30648:32598":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"25:10769:3985":{"crate_id":25,"path":["tokio","util","idle_notified_set","drain","AllEntries"],"kind":"struct"},"17:10315:5640":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"17:13856:6133":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"1:5082:7949":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:9678:21874":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"25:11376:9382":{"crate_id":25,"path":["tokio","io","util","write_int","WriteI32Le"],"kind":"struct"},"1:3732:5246":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"2:42492:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"16:2574:6777":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"27:8470:5066":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"23:30:2590":{"crate_id":23,"path":["itoa","private","Sealed"],"kind":"trait"},"25:1444:5269":{"crate_id":25,"path":["tokio","io","async_fd","AsyncFdReadyMutGuard"],"kind":"struct"},"25:10947:8354":{"crate_id":25,"path":["tokio","util","cacheline","CachePadded"],"kind":"struct"},"20:1990:2908":{"crate_id":20,"path":["http","header","map","Cursor"],"kind":"enum"},"1:9104:241":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"20:1857:3626":{"crate_id":20,"path":["http","header","map","IterMut"],"kind":"struct"},"2:38189:3129":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"2:2949:253":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"16:7782:7177":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:41264:7608":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:7717:9446":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"1:7848:5258":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"1:4129:32187":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"25:10557:5419":{"crate_id":25,"path":["tokio","time","error","Elapsed"],"kind":"struct"},"2:44503:7799":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"17:14221:6203":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"9:0:2917":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"26:705:5242":{"crate_id":26,"path":["mio","io_source","IoSource"],"kind":"struct"},"6:6700:5073":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"1:12039:1622":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"2:44210:7645":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"27:8846:5166":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:2658:2590":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"17:12930:21895":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"2:2707:264":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"2:47010:7867":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:9014:8047":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"17:12486:5962":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"11:2554:35690":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"1:8274:5240":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"11:700:3500":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"11:2326:5476":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"25:7447:5310":{"crate_id":25,"path":["tokio","runtime","handle","Handle"],"kind":"struct"},"6:654:15771":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"16:7884:21833":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"2:40646:7707":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"6:5085:4808":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:3255:217":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"27:8812:2394":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"17:12596:5969":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"6:501:4211":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"18:652:5587":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"2:43761:7764":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"16:3065:5670":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"25:1647:3596":{"crate_id":25,"path":["tokio","io","stderr","Stderr"],"kind":"struct"},"25:1218:2010":{"crate_id":25,"path":["tokio","io","blocking","Buf"],"kind":"struct"},"1:8169:3576":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"5:5004:3559":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"2:7935:175":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"20:2674:3656":{"crate_id":20,"path":["http","uri","scheme","Scheme2"],"kind":"enum"},"2:48270:7918":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"25:9905:3682":{"crate_id":25,"path":["tokio","sync","watch","error","RecvError"],"kind":"struct"},"25:1775:5273":{"crate_id":25,"path":["tokio","io","split","WriteHalf"],"kind":"struct"},"1:7738:9489":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"1:8984:3632":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"1:10338:30289":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"16:2450:6772":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"5:5154:3167":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"2:32518:2008":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"27:646:4243":{"crate_id":27,"path":["libc","unix","pollfd"],"kind":"struct"},"2:4377:227":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"26:120:5235":{"crate_id":26,"path":["mio","event","event","fmt","EventDetails"],"kind":"struct"},"2:21994:9645":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"2:2334:15034":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"27:561:4214":{"crate_id":27,"path":["libc","unix","rusage"],"kind":"struct"},"16:4497:6829":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"1:8866:3500":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"25:1110:5258":{"crate_id":25,"path":["tokio","fs","open_options","OpenOptions"],"kind":"struct"},"16:149:3999":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"1:1545:4043":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"17:12584:5968":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"2:13328:9460":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:42998:3433":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"11:687:3626":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"1:5632:2078":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"11:673:3625":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"17:15287:6504":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"1:2370:9520":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"16:3600:6819":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"1:1054:5476":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"5:2973:35649":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"25:543:3642":{"crate_id":25,"path":["tokio","trace","async_trace_leaf","Trace"],"kind":"struct"},"1:5825:3180":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"27:9748:5221":{"crate_id":27,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"17:10471:35718":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:39512:3145":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"17:12335:5947":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"6:6100:4991":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"1:10822:2037":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"17:10667:35714":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:40787:7594":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"27:9676:5217":{"crate_id":27,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"16:5419:5758":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"16:6901:6802":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"27:4854:4428":{"crate_id":27,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"25:9546:3213":{"crate_id":25,"path":["tokio","sync","mpsc","unbounded","Semaphore"],"kind":"struct"},"27:9788:4785":{"crate_id":27,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"25:9551:5384":{"crate_id":25,"path":["tokio","sync","mpsc","error","SendError"],"kind":"struct"},"25:204:26147":{"crate_id":25,"path":["tokio","io","async_write","AsyncWrite"],"kind":"trait"},"17:13504:6067":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"16:2832:6788":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"2:40688:7710":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:39615:219":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"17:13478:6062":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"17:11675:5860":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"2:43740:7762":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"17:15003:6433":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"16:2321:6760":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"16:5830:6878":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"2:7563:3162":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"6:4523:4523":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:13082:211":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"2:34091:3124":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"27:6124:1100":{"crate_id":27,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"6:1576:4316":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:3366:3604":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"17:13707:6113":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"27:6395:4825":{"crate_id":27,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"2:44201:7785":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:10780:8070":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"25:11131:5433":{"crate_id":25,"path":["tokio","task","local","RunUntil"],"kind":"struct"},"27:6317:4786":{"crate_id":27,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"11:2542:8414":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:22257:9735":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"1:12033:1657":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"27:752:4264":{"crate_id":27,"path":["libc","unix","servent"],"kind":"struct"},"16:6401:6794":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"25:12304:5437":{"crate_id":25,"path":["tokio","io","util","write_buf","WriteBuf"],"kind":"struct"},"1:10247:8952":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"16:5634:6853":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"5:2062:7418":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"2:11508:7636":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"5:903:3625":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"17:15943:6015":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"11:328:8411":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"6:4578:4552":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"1:12047:797":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"16:5612:6798":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"1:11197:3150":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"17:11041:5773":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"25:5645:36321":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","worker","InjectGuard"],"kind":"struct"},"0:64:1852":{"crate_id":0,"path":["hyper","body"],"kind":"module"},"20:547:5462":{"crate_id":20,"path":["http","header","name","InvalidHeaderName"],"kind":"struct"},"2:23272:189":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"2:30812:32599":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"27:733:4259":{"crate_id":27,"path":["libc","unix","tms"],"kind":"struct"},"18:719:5623":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"11:2548:8415":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"1:645:9443":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:44645:8526":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:46107:7823":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2:22484:7654":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"17:13347:6032":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"22:1111:5460":{"crate_id":22,"path":["bytes","buf","reader","Reader"],"kind":"struct"},"2:40482:7699":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"25:11002:36761":{"crate_id":25,"path":["tokio","time","timeout","_","__Origin"],"kind":"struct"},"25:5416:8350":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","queue","Steal"],"kind":"struct"},"2:3099:123":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"6:4549:4535":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"6:4401:4456":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"1:5780:3171":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"2:31182:202":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"6:4724:4623":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"6:5955:4911":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:43071:134":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"2:13235:3074":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"25:14357:36761":{"crate_id":25,"path":["tokio","io","util","buf_writer","_","__Origin"],"kind":"struct"},"25:14279:3578":{"crate_id":25,"path":["tokio","io","util","chain","Chain"],"kind":"struct"},"17:10355:135":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"17:15062:6444":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:21436:9643":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"17:14485:5947":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"2:32519:3067":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"5:1516:7330":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"2:40619:7706":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"17:14950:6421":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:3199:3598":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"16:6583:6998":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"17:13309:6028":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"1:2426:2001":{"crate_id":1,"path":["std","io"],"kind":"module"},"25:7387:36751":{"crate_id":25,"path":["tokio","runtime","blocking","pool","SpawnerMetrics"],"kind":"struct"},"31:74:38026":{"crate_id":31,"path":["num_cpus","linux","CgroupVersion"],"kind":"enum"},"2:41919:32583":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"27:5176:4520":{"crate_id":27,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:43986:7778":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"27:1944:4335":{"crate_id":27,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"26:341:5237":{"crate_id":26,"path":["mio","sys","unix","selector","epoll","event","debug_details","EventsDetails"],"kind":"struct"},"1:4383:5250":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"27:5991:4698":{"crate_id":27,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"27:8698:5110":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:12055:1696":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"25:9781:3211":{"crate_id":25,"path":["tokio","sync","batch_semaphore","AcquireError"],"kind":"struct"},"16:6268:35705":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"20:2436:5569":{"crate_id":20,"path":["http","header","value","ToStrError"],"kind":"struct"},"17:11269:5791":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"11:800:3996":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"25:9541:3213":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","Semaphore"],"kind":"struct"},"6:4375:4436":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"25:3883:5247":{"crate_id":25,"path":["tokio","net","udp","UdpSocket"],"kind":"struct"},"2:40809:7719":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:8551:8037":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"28:37:37146":{"crate_id":28,"path":["pin_project_lite","__private","AlwaysUnpin"],"kind":"struct"},"11:1903:7342":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"11:351:35688":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"1:6644:239":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:33311:3116":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"6:1913:16763":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"5:4092:3626":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"27:4963:4479":{"crate_id":27,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"25:8129:3957":{"crate_id":25,"path":["tokio","sync","mpsc","list","Tx"],"kind":"struct"},"27:5917:4686":{"crate_id":27,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"25:1150:33455":{"crate_id":25,"path":["tokio","future","maybe_done","MaybeDone"],"kind":"enum"},"26:822:5246":{"crate_id":26,"path":["mio","net","tcp","stream","TcpStream"],"kind":"struct"},"16:8181:6813":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"20:2065:5536":{"crate_id":20,"path":["http","header","map","Link"],"kind":"enum"},"18:727:5626":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"1:5051:7949":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"27:7743:4991":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"6:4878:4697":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"25:7151:9387":{"crate_id":25,"path":["tokio","runtime","blocking","task","BlockingTask"],"kind":"struct"},"16:2406:6770":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"2:48387:7925":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"25:6330:2332":{"crate_id":25,"path":["tokio","runtime","task","core","Header"],"kind":"struct"},"2:42136:3382":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"2:32420:3436":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"17:10896:5783":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"1:3443:3568":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:3339:3140":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"17:11767:5874":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"2:44837:225":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"17:11088:5799":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:1883:15044":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"27:5661:4628":{"crate_id":27,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:46186:7826":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"6:4647:4593":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"6:7610:5219":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"1:11537:5247":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:43508:8522":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"25:9665:3178":{"crate_id":25,"path":["tokio","sync","mutex","TryLockError"],"kind":"struct"},"2:46980:7866":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"2:9867:117":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"1:5431:7953":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"1:723:150":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"25:9886:5384":{"crate_id":25,"path":["tokio","sync","watch","error","SendError"],"kind":"struct"},"25:13499:9353":{"crate_id":25,"path":["tokio","io","util","read_int","ReadF32"],"kind":"struct"},"2:44641:8525":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"17:12290:5942":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"17:13419:6039":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"6:4847:4683":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"17:12153:5927":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"1:5308:126":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"17:14439:6241":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"5:7330:3500":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:48136:7911":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:46532:7842":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"27:6328:4792":{"crate_id":27,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"6:6263:5042":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"25:1089:3681":{"crate_id":25,"path":["tokio","fs","file","State"],"kind":"enum"},"17:11690:5864":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"25:10001:3976":{"crate_id":25,"path":["tokio","task","local","LocalDataEnterGuard"],"kind":"struct"},"20:2700:1846":{"crate_id":20,"path":["http","uri","Uri"],"kind":"struct"},"30:114:4178":{"crate_id":30,"path":["socket2","socket","Socket"],"kind":"struct"},"27:2132:4400":{"crate_id":27,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"1:10473:4111":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"25:373:93":{"crate_id":25,"path":["tokio","loom","std","atomic_u16","AtomicU16"],"kind":"struct"},"17:10941:5786":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"25:10573:158":{"crate_id":25,"path":["tokio","time","instant","Instant"],"kind":"struct"},"25:12111:9367":{"crate_id":25,"path":["tokio","io","util","write_int","WriteU16"],"kind":"struct"},"6:7604:5218":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"1:1567:7345":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"5:2154:7419":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"1:8403:8030":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"25:7643:3952":{"crate_id":25,"path":["tokio","sync","broadcast","RecvGuard"],"kind":"struct"},"2:32366:3082":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"27:9829:5225":{"crate_id":27,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"27:6066:4711":{"crate_id":27,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"6:5897:4878":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"25:7468:3947":{"crate_id":25,"path":["tokio","runtime","runtime","Runtime"],"kind":"struct"},"2:2778:122":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"25:4387:5248":{"crate_id":25,"path":["tokio","net","unix","datagram","socket","UnixDatagram"],"kind":"struct"},"6:7657:8340":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"17:9860:21889":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"6:4830:4672":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"6:533:4234":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"27:5303:4545":{"crate_id":27,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"1:3241:3601":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"25:7647:3951":{"crate_id":25,"path":["tokio","sync","broadcast","Recv"],"kind":"struct"},"2:3133:139":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"23:14:4070":{"crate_id":23,"path":["itoa","Buffer"],"kind":"struct"},"2:3328:260":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"20:2553:2050":{"crate_id":20,"path":["http","request","Builder"],"kind":"struct"},"2:4103:7577":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"17:9891:21870":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"6:5068:4799":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"1:7754:7972":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"27:6249:4764":{"crate_id":27,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"30:758:26235":{"crate_id":30,"path":["socket2","socket","InterfaceIndexOrAddress"],"kind":"enum"},"25:11866:9372":{"crate_id":25,"path":["tokio","io","util","write_int","WriteI32"],"kind":"struct"},"27:7557:4925":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"17:11523:5846":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"18:699:5617":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"27:9805:8344":{"crate_id":27,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"1:12037:1503":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:10834:7628":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:22203:9734":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"2:5687:3559":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"2:12432:3336":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"5:7450:3663":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:39697:220":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"25:13009:9363":{"crate_id":25,"path":["tokio","io","util","read_int","ReadF32Le"],"kind":"struct"},"6:1682:4390":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"30:806:4191":{"crate_id":30,"path":["socket2","Domain"],"kind":"struct"},"27:5019:4487":{"crate_id":27,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"1:1534:3625":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"17:12684:5731":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"6:6813:5114":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"17:15079:6449":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"1:3323:3585":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"2:21193:32802":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"6:6086:4980":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"27:6369:4808":{"crate_id":27,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"1:12032:451":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"2:2418:102":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:22164:9731":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"28:0:1866":{"crate_id":28,"path":["pin_project_lite"],"kind":"module"},"6:5117:4828":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"27:6407:4831":{"crate_id":27,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"6:6837:5126":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:21225:32809":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"27:8919:5186":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"18:755:5631":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"16:5648:6857":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"27:4924:4456":{"crate_id":27,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"0:367:1093":{"crate_id":0,"path":["hyper","upgrade","on"],"kind":"function"},"25:7596:2078":{"crate_id":25,"path":["tokio","sync","broadcast","Sender"],"kind":"struct"},"1:8232:8017":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:43512:7623":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"2:40455:7576":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"17:13684:6109":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"6:6248:5031":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"25:8028:5376":{"crate_id":25,"path":["tokio","sync","mpsc","chan","RxFields"],"kind":"struct"},"1:3482:2014":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"20:439:2590":{"crate_id":20,"path":["http","header","map","into_header_name","Sealed"],"kind":"trait"},"20:2804:3655":{"crate_id":20,"path":["http","byte_str","ByteStr"],"kind":"struct"},"2:23210:187":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:10083:149":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"14:221:7327":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"11:396:4006":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"2:2698:76":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"25:12899:5449":{"crate_id":25,"path":["tokio","io","util","read_line","ReadLine"],"kind":"struct"},"20:483:2590":{"crate_id":20,"path":["http","header","map","as_header_name","Sealed"],"kind":"trait"},"1:8850:3625":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"17:15493:6572":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"27:2139:4403":{"crate_id":27,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"17:13162:6015":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"2:22682:32570":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:8242:3627":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:22553:8444":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"17:14145:6194":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:42208:3625":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"24:42:2073":{"crate_id":24,"path":["http_body","Body"],"kind":"trait"},"5:4865:223":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"27:7700:4979":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"27:4876:4436":{"crate_id":27,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:48230:7914":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"27:5843:4669":{"crate_id":27,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:11113:5801":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"1:5128:210":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"25:1439:5266":{"crate_id":25,"path":["tokio","io","async_fd","AsyncFdReadyGuard"],"kind":"struct"},"11:1917:7344":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"17:10035:5757":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"2:21564:7652":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:21434:2590":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"2:4127:107":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"1:12003:9448":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"17:11958:5911":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"5:2983:35077":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"20:1892:5469":{"crate_id":20,"path":["http","header","map","ValuesMut"],"kind":"struct"},"1:5415:7952":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"17:11194:21921":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"27:5955:4693":{"crate_id":27,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"17:12191:5930":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"5:3594:3625":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"1:8146:3605":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"1:10840:30029":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"17:15659:6621":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"25:6280:5340":{"crate_id":25,"path":["tokio","runtime","time","wheel","Wheel"],"kind":"struct"},"2:21845:9649":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"17:15125:6460":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"25:9799:3215":{"crate_id":25,"path":["tokio","sync","semaphore","OwnedSemaphorePermit"],"kind":"struct"},"25:5691:3681":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","idle","State"],"kind":"struct"},"6:6047:4962":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"27:609:4234":{"crate_id":27,"path":["libc","unix","hostent"],"kind":"struct"},"25:12622:2327":{"crate_id":25,"path":["tokio","io","util","shutdown","Shutdown"],"kind":"struct"},"27:6299:4770":{"crate_id":27,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"26:427:5240":{"crate_id":26,"path":["mio","sys","unix","uds","socketaddr","SocketAddr"],"kind":"struct"},"1:8006:5490":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:4534:3069":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"25:14230:5451":{"crate_id":25,"path":["tokio","io","util","flush","Flush"],"kind":"struct"},"1:12036:338":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"17:10520:35711":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"17:15294:6505":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"18:574:5587":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"17:11412:5828":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"17:11256:5817":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"11:774:5467":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"6:6868:2394":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:4115:7578":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"16:2670:6781":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"16:7474:7155":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"17:3251:5657":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"6:4529:4525":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:38354:3132":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:41215:7604":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"2:2440:110":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"25:9624:26180":{"crate_id":25,"path":["tokio","sync","mpsc","error","SendTimeoutError"],"kind":"enum"},"17:15329:6513":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"17:14455:6243":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"1:8858:8043":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"20:2157:5491":{"crate_id":20,"path":["http","header","name","MaybeLower"],"kind":"struct"},"25:2771:26153":{"crate_id":25,"path":["tokio","io","util","async_write_ext","AsyncWriteExt"],"kind":"trait"},"16:7621:21831":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"2:22431:7653":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:7580:4106":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"17:11507:1847":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"17:9943:21873":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"17:14385:6235":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"6:4932:4722":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"0:365:2852":{"crate_id":0,"path":["hyper","upgrade","Upgraded"],"kind":"struct"},"27:0:878":{"crate_id":27,"path":["libc"],"kind":"module"},"27:9622:5216":{"crate_id":27,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"16:8050:7225":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"20:2116:4093":{"crate_id":20,"path":["http","header","name","Repr"],"kind":"enum"},"6:4543:4532":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"25:125:26144":{"crate_id":25,"path":["tokio","io","async_buf_read","AsyncBufRead"],"kind":"trait"},"5:3738:2908":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"16:5363:6850":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"27:664:4246":{"crate_id":27,"path":["libc","unix","winsize"],"kind":"struct"},"17:10293:2011":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"2:39794:7688":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"17:12797:5983":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"27:5745:4650":{"crate_id":27,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"17:13724:6116":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"6:5075:4802":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"22:306:5456":{"crate_id":22,"path":["bytes","buf","uninit_slice","UninitSlice"],"kind":"struct"},"1:11234:158":{"crate_id":1,"path":["std","sys","unix","time","Instant"],"kind":"struct"},"6:4616:4569":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"25:2890:5284":{"crate_id":25,"path":["tokio","io","util","mem","Pipe"],"kind":"struct"},"2:44725:15141":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:11816:4119":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"25:12606:36761":{"crate_id":25,"path":["tokio","io","util","split","_","__Origin"],"kind":"struct"},"2:30580:3103":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"26:334:3894":{"crate_id":26,"path":["mio","sys","unix","selector","epoll","Selector"],"kind":"struct"},"6:123:15419":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"25:10910:36576":{"crate_id":25,"path":["tokio","util","try_lock","TryLock"],"kind":"struct"},"16:7613:7171":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"5:5992:3167":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"25:10633:5425":{"crate_id":25,"path":["tokio","util","bit","Pack"],"kind":"struct"},"17:10618:35713":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"1:2205:2051":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"25:7281:36861":{"crate_id":25,"path":["tokio","runtime","handle","TryCurrentErrorKind"],"kind":"enum"},"9:330:8420":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"29:0:3185":{"crate_id":29,"path":["tokio_macros"],"kind":"module"},"2:42078:3625":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"2:42531:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:951:7335":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"17:11714:5868":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"6:5146:8325":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"25:4405:5249":{"crate_id":25,"path":["tokio","net","unix","listener","UnixListener"],"kind":"struct"},"2:12213:7644":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"6:5867:4861":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"25:11327:9383":{"crate_id":25,"path":["tokio","io","util","write_int","WriteI64Le"],"kind":"struct"},"5:1270:5486":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2:43918:3580":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"1:4231:5248":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"6:1558:4306":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"5:4050:4012":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"25:4741:3912":{"crate_id":25,"path":["tokio","runtime","context","runtime","EnterRuntimeGuard"],"kind":"struct"},"1:8385:3377":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:47778:7906":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"25:5976:15100":{"crate_id":25,"path":["tokio","runtime","io","driver","Direction"],"kind":"enum"},"17:15374:6523":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"2:41955:5240":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"17:10950:5787":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"27:1883:4316":{"crate_id":27,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"5:4366:270":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"20:0:1840":{"crate_id":20,"path":["http"],"kind":"module"},"2:23148:196":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"16:7391:21830":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"25:7393:8647":{"crate_id":25,"path":["tokio","runtime","blocking","pool","Mandatory"],"kind":"enum"},"6:1501:4275":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:44637:8524":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"2:47280:7872":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"2:9824:2014":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"5:6871:4054":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"17:13742:6117":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"16:2644:6780":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"5:2183:8431":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"24:106:2075":{"crate_id":24,"path":["http_body","size_hint","SizeHint"],"kind":"struct"},"2:12197:7643":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"25:7417:226":{"crate_id":25,"path":["tokio","runtime","blocking","shutdown","Receiver"],"kind":"struct"},"16:8167:7236":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:11439:5830":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"16:2933:20961":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"1:1072:7339":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"27:806:15418":{"crate_id":27,"path":["libc","unix","FILE"],"kind":"enum"},"2:22217:15034":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"6:1674:4389":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"25:5452:36598":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","queue","push_overflow","BatchTaskIter"],"kind":"struct"},"5:7028:4058":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"17:11991:5913":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"1:8904:3683":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"25:4771:3915":{"crate_id":25,"path":["tokio","runtime","context","scoped","set","Reset"],"kind":"struct"},"1:8330:5082":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"1:3980:9544":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:41208:7603":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"1:9128:3150":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"2:7217:15025":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"27:5264:4535":{"crate_id":27,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:5763:7587":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"17:11155:5805":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"17:16062:6720":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"26:649:2335":{"crate_id":26,"path":["mio","token","Token"],"kind":"struct"},"1:6896:4103":{"crate_id":1,"path":["std","sys","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"27:1722:4278":{"crate_id":27,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"17:12432:5960":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"1:5625:226":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"6:5004:4767":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"16:8072:7226":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"1:7644:5410":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"5:142:3011":{"crate_id":5,"path":["alloc","boxed"],"kind":"module"},"1:8828:8041":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"17:12230:5931":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"2:4031:3559":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"17:11215:5811":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"1:11619:2074":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"27:5247:4532":{"crate_id":27,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"27:9442:5215":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"20:2661:2050":{"crate_id":20,"path":["http","uri","builder","Builder"],"kind":"struct"},"17:15337:6515":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"20:5:1841":{"crate_id":20,"path":["http","header"],"kind":"module"},"16:6467:6985":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"6:596:4269":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"2:11475:7635":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"2:44086:7780":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"17:15027:6435":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:4386:7581":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:10334:4082":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"17:12548:5965":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"2:12452:14803":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"17:13989:6153":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"6:4428:4479":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"20:1713:134":{"crate_id":20,"path":["http","error","Error"],"kind":"struct"},"9:357:20824":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"6:5140:8323":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"1:3166:29479":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:2711:263":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"17:13909:6142":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"2:2487:207":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"6:4824:4669":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:8842:8042":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:42453:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"27:5526:4601":{"crate_id":27,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"1:6162:4100":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"30:842:4182":{"crate_id":30,"path":["socket2","RecvFlags"],"kind":"struct"},"1:10578:3666":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"6:7633:4782":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"1:12050:1638":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"20:1478:3659":{"crate_id":20,"path":["http","uri","port","Port"],"kind":"struct"},"2:48090:7910":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:41256:7606":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:40744:7714":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"2:1692:3559":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"2:46624:7846":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:44414:7797":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:10802:136":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"25:2881:2108":{"crate_id":25,"path":["tokio","io","util","empty","Empty"],"kind":"struct"},"27:5228:4527":{"crate_id":27,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"15:288:20915":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"2:48311:7921":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"17:12445:5961":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"1:10792:7973":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"25:4899:5309":{"crate_id":25,"path":["tokio","runtime","driver","Driver"],"kind":"struct"},"2:46208:7827":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"25:10591:26198":{"crate_id":25,"path":["tokio","time","interval","MissedTickBehavior"],"kind":"enum"},"25:4932:36855":{"crate_id":25,"path":["tokio","runtime","driver","IoHandle"],"kind":"enum"},"1:10968:29623":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"6:5111:4825":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"2:9882:212":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"1:8237:2327":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"25:1137:5260":{"crate_id":25,"path":["tokio","fs","read_dir","DirEntry"],"kind":"struct"},"2:40374:7689":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"20:2144:5490":{"crate_id":20,"path":["http","header","name","Custom"],"kind":"struct"},"5:5:1707":{"crate_id":5,"path":["alloc","vec"],"kind":"macro"},"16:6017:21823":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"25:4955:36852":{"crate_id":25,"path":["tokio","runtime","driver","TimeDriver"],"kind":"enum"},"25:4860:3916":{"crate_id":25,"path":["tokio","runtime","coop","RestoreOnPending"],"kind":"struct"},"17:15311:6509":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"2:2695:77":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"20:2537:1843":{"crate_id":20,"path":["http","request","Request"],"kind":"struct"},"27:9850:5227":{"crate_id":27,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"8:0:2916":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"16:7828:7184":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"25:4416:5273":{"crate_id":25,"path":["tokio","net","unix","split","WriteHalf"],"kind":"struct"},"2:44298:14816":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"25:5767:5309":{"crate_id":25,"path":["tokio","runtime","io","driver","Driver"],"kind":"struct"},"5:4777:717":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"2:40576:9500":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"16:3764:6820":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"1:4742:9559":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"6:527:4231":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"30:441:4183":{"crate_id":30,"path":["socket2","sys","MaybeUninitSlice"],"kind":"struct"},"17:15301:6506":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"11:1887:3500":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"25:3326:36597":{"crate_id":25,"path":["tokio","net","addr","sealed","OneOrMore"],"kind":"enum"},"27:5037:4489":{"crate_id":27,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"6:489:4206":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"17:12103:5923":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"16:3049:20963":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"2:10319:4078":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"25:14214:36761":{"crate_id":25,"path":["tokio","io","util","lines","_","__Origin"],"kind":"struct"},"25:9651:3207":{"crate_id":25,"path":["tokio","sync","mutex","OwnedMutexGuard"],"kind":"struct"},"2:42165:232":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"16:6485:6795":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"17:12972:5997":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"11:1923:7345":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"16:6352:6975":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"25:5587:3925":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","worker","run","AbortOnPanic"],"kind":"struct"},"2:9886:3428":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"16:7544:7167":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"25:14373:5452":{"crate_id":25,"path":["tokio","io","util","buf_stream","BufStream"],"kind":"struct"},"25:7337:5344":{"crate_id":25,"path":["tokio","runtime","task","error","JoinError"],"kind":"struct"},"1:5571:9613":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"25:9988:3993":{"crate_id":25,"path":["tokio","task","local","Shared"],"kind":"struct"},"25:9955:9388":{"crate_id":25,"path":["tokio","task","yield_now","yield_now","YieldNow"],"kind":"struct"},"27:5974:4697":{"crate_id":27,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:22:731":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"25:1399:3900":{"crate_id":25,"path":["tokio","io","poll_evented","PollEvented"],"kind":"struct"},"2:22271:15034":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"25:10609:5423":{"crate_id":25,"path":["tokio","time","interval","Interval"],"kind":"struct"},"17:16123:6734":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"2:46722:7848":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"6:548:4243":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"25:2869:5283":{"crate_id":25,"path":["tokio","io","util","copy_buf","CopyBuf"],"kind":"struct"},"5:5344:4012":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"25:9788:3213":{"crate_id":25,"path":["tokio","sync","semaphore","Semaphore"],"kind":"struct"},"17:11563:5850":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"25:389:94":{"crate_id":25,"path":["tokio","loom","std","atomic_u32","AtomicU32"],"kind":"struct"},"27:5054:4492":{"crate_id":27,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:40716:7713":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2:21227:32814":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"16:5696:21821":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"25:11229:9385":{"crate_id":25,"path":["tokio","io","util","write_int","WriteF32Le"],"kind":"struct"},"17:16109:6730":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"0:168:1294":{"crate_id":0,"path":["hyper","rt"],"kind":"module"},"1:10321:111":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"2:46310:7831":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2:21381:2590":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"2:46934:7865":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"27:5643:4624":{"crate_id":27,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"25:4435:5297":{"crate_id":25,"path":["tokio","net","unix","split_owned","ReuniteError"],"kind":"struct"},"2:43862:7771":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"11:1107:7337":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"1:7843:5259":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:34264:3125":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"6:542:4240":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"17:11294:5819":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"17:15980:6700":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"17:14208:6202":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"18:564:5596":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"25:6254:3935":{"crate_id":25,"path":["tokio","runtime","time","entry","TimerEntry"],"kind":"struct"},"2:40383:7690":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"2:43968:7777":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"5:692:116":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"1:6610:3183":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"1:922:7331":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"25:10722:3988":{"crate_id":25,"path":["tokio","util","idle_notified_set","IdleNotifiedSet"],"kind":"struct"},"17:12345:5949":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"16:6499:6812":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"16:8294:134":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"16:5661:6862":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:39780:2720":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"6:1604:4335":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"27:6085:4716":{"crate_id":27,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"2:44068:7779":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"17:14413:6239":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"17:12356:5950":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"18:766:26028":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"10:36:8419":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"17:14251:6208":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"1:1550:7342":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:33918:3123":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"2:46675:7847":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"25:11523:9379":{"crate_id":25,"path":["tokio","io","util","write_int","WriteU64Le"],"kind":"struct"},"16:2810:6787":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"6:4968:4743":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"2:4266:3221":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"17:12220:5661":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"27:510:4206":{"crate_id":27,"path":["libc","unix","timeval"],"kind":"struct"},"17:1203:5648":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"6:6913:5177":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:44855:213":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"26:357:5239":{"crate_id":26,"path":["mio","sys","unix","waker","eventfd","WakerInternal"],"kind":"struct"},"2:13273:148":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"11:2304:5486":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"1:4703:9570":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"17:15519:6581":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"25:14396:36761":{"crate_id":25,"path":["tokio","io","util","buf_stream","_","__Origin"],"kind":"struct"},"17:15527:6584":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"20:2251:35729":{"crate_id":20,"path":["http","header","name","StandardHeader"],"kind":"enum"},"17:11978:5912":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"6:1496:4273":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"17:16016:6707":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"16:6171:212":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"16:2788:6786":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"17:12600:134":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:40515:7703":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"23:28:26125":{"crate_id":23,"path":["itoa","Integer"],"kind":"trait"},"20:2576:1845":{"crate_id":20,"path":["http","status","StatusCode"],"kind":"struct"},"5:281:2292":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"2:13224:113":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"25:10568:26200":{"crate_id":25,"path":["tokio","time","error","InsertError"],"kind":"enum"},"2:40844:5422":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"18:707:5619":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:2523:201":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"26:678:3625":{"crate_id":26,"path":["mio","event","events","Iter"],"kind":"struct"},"17:10608:5772":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"25:5179:36320":{"crate_id":25,"path":["tokio","runtime","scheduler","inject","synced","Synced"],"kind":"struct"},"20:2823:35790":{"crate_id":20,"path":["http","extensions","IdHasher"],"kind":"struct"},"2:40534:7704":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"6:7645:4784":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:7026:4104":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"16:6456:6984":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"2:23241:188":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"1:2586:3589":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"25:12160:9366":{"crate_id":25,"path":["tokio","io","util","write_int","WriteI8"],"kind":"struct"},"2:9339:84":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"27:6388:4822":{"crate_id":27,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"2:2997:3112":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"1:5971:2078":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"16:7677:216":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"1:1796:7941":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"23:0:3044":{"crate_id":23,"path":["itoa"],"kind":"module"},"18:538:5594":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"16:6944:35703":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"30:732:4189":{"crate_id":30,"path":["socket2","MsgHdrMut"],"kind":"struct"},"2:2993:3065":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"6:4434:4480":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"17:10852:21901":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"2:23303:186":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"2:40425:7694":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"6:6898:5169":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"5:7559:7443":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"17:13254:6020":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"17:10432:35710":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"25:9570:9617":{"crate_id":25,"path":["tokio","sync","mpsc","error","TrySendError"],"kind":"enum"},"0:165:1853":{"crate_id":0,"path":["hyper","ext"],"kind":"module"},"25:13303:9357":{"crate_id":25,"path":["tokio","io","util","read_int","ReadU64Le"],"kind":"struct"},"1:8545:3625":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"25:7453:5370":{"crate_id":25,"path":["tokio","runtime","handle","EnterGuard"],"kind":"struct"},"1:928:9459":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"27:5385:4565":{"crate_id":27,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:11605:29640":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"17:13436:6047":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"27:4998:4482":{"crate_id":27,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"17:11604:5853":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"17:14156:6196":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"17:15589:6606":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"16:4053:6825":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"2:44940:7350":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"1:1819:3710":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"6:4908:4708":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"17:13896:6141":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"12:0:2920":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"2:9526:33768":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:4460:3436":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"1:6811:9641":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"25:7474:26190":{"crate_id":25,"path":["tokio","runtime","runtime","RuntimeFlavor"],"kind":"enum"},"2:22620:7661":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"5:6861:4053":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"5:3343:4043":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"1:2911:4093":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"6:5152:8328":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"25:12560:36761":{"crate_id":25,"path":["tokio","io","util","take","_","__Origin"],"kind":"struct"},"1:8137:2108":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"17:13869:6136":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"17:13083:6010":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"1:8476:8032":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:43904:2011":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"2:42375:93":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"6:4989:4758":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"2:2830:1843":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"2:3130:138":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"5:5388:14790":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"25:7683:3949":{"crate_id":25,"path":["tokio","sync","broadcast","WaitersList"],"kind":"struct"},"16:2907:6791":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"5:2236:35572":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"25:9684:5399":{"crate_id":25,"path":["tokio","sync","notify","AtomicNotification"],"kind":"struct"},"6:5969:4912":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"2:48296:7920":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"16:8239:7135":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"1:12044:798":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:42611:97":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"6:1691:4396":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"16:2339:6762":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"25:9810:3217":{"crate_id":25,"path":["tokio","sync","rwlock","owned_write_guard","OwnedRwLockWriteGuard"],"kind":"struct"},"2:43730:7761":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"11:1728:152":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"25:13107:9361":{"crate_id":25,"path":["tokio","io","util","read_int","ReadI64Le"],"kind":"struct"},"1:10831:30033":{"crate_id":1,"path":["std","sys","unix","kernel_copy","FdHandle"],"kind":"enum"},"25:10684:5426":{"crate_id":25,"path":["tokio","util","rand","rt","RngSeedGenerator"],"kind":"struct"},"26:771:5245":{"crate_id":26,"path":["mio","net","tcp","listener","TcpListener"],"kind":"struct"},"27:2070:4389":{"crate_id":27,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:10665:3625":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"20:2470:3632":{"crate_id":20,"path":["http","method","Inner"],"kind":"enum"},"2:47170:7869":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"25:9281:3221":{"crate_id":25,"path":["tokio","sync","once_cell","OnceCell"],"kind":"struct"},"2:42258:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"2:2942:3061":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"2:12457:14802":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"17:15192:6475":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"2:46085:7822":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"25:409:97":{"crate_id":25,"path":["tokio","loom","std","atomic_usize","AtomicUsize"],"kind":"struct"},"25:4516:3069":{"crate_id":25,"path":["tokio","loom","std","unsafe_cell","UnsafeCell"],"kind":"struct"},"1:1760:7940":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"16:6792:7048":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"27:6359:4802":{"crate_id":27,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"27:6430:8325":{"crate_id":27,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:6483:7596":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"1:9971:4178":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"25:12013:9369":{"crate_id":25,"path":["tokio","io","util","write_int","WriteU64"],"kind":"struct"},"25:3698:5273":{"crate_id":25,"path":["tokio","net","tcp","split","WriteHalf"],"kind":"struct"},"1:11453:4116":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:40776:7718":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"27:7426:4891":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"17:14346:6232":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"17:14041:6158":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"27:7991:5031":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"16:4889:6841":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"27:5860:4672":{"crate_id":27,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"17:0:2924":{"crate_id":17,"path":["object"],"kind":"module"},"2:32438:251":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"11:299:8408":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"2:3112:2600":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:2946:134":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"6:1591:4328":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"27:6106:4722":{"crate_id":27,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"2:21455:7652":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"25:7383:5346":{"crate_id":25,"path":["tokio","runtime","blocking","pool","Spawner"],"kind":"struct"},"1:11290:4114":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"1:8453:3681":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"18:636:5606":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"15:327:20920":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"2:39598:3134":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"1:8796:8039":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"25:4793:36305":{"crate_id":25,"path":["tokio","runtime","context","runtime","EnterRuntime"],"kind":"enum"},"6:1528:4286":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"1:2944:232":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"25:1125:3681":{"crate_id":25,"path":["tokio","fs","read_dir","State"],"kind":"enum"},"1:9109:158":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"20:1847:3625":{"crate_id":20,"path":["http","header","map","Iter"],"kind":"struct"},"28:53:3893":{"crate_id":28,"path":["pin_project_lite","__private","UnsafeOverwriteGuard"],"kind":"struct"},"25:6270:5337":{"crate_id":25,"path":["tokio","runtime","time","source","TimeSource"],"kind":"struct"},"20:2047:5484":{"crate_id":20,"path":["http","header","map","RawLinks"],"kind":"struct"},"2:11987:14805":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"2:22317:9725":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"5:3184:3625":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"1:10532:3598":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"21:0:3043":{"crate_id":21,"path":["fnv"],"kind":"module"},"27:1798:4291":{"crate_id":27,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"22:1098:3500":{"crate_id":22,"path":["bytes","buf","iter","IntoIter"],"kind":"struct"},"1:4491:9571":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2:38933:3133":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"25:7411:2078":{"crate_id":25,"path":["tokio","runtime","blocking","shutdown","Sender"],"kind":"struct"},"6:1507:4278":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:43028:7203":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"6:6169:5001":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"25:9484:3170":{"crate_id":25,"path":["tokio","sync","barrier","BarrierWaitResult"],"kind":"struct"},"16:4862:6840":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"2:44022:7631":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"17:401:5641":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"17:13235:6019":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"2:33545:3118":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"5:1789:4043":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"1:1541:3996":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"25:3616:5245":{"crate_id":25,"path":["tokio","net","tcp","listener","TcpListener"],"kind":"struct"},"27:2163:4413":{"crate_id":27,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"27:5934:4689":{"crate_id":27,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"17:14887:6410":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"11:1603:7341":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"25:14129:2012":{"crate_id":25,"path":["tokio","io","util","read","Read"],"kind":"struct"},"30:286:4179":{"crate_id":30,"path":["socket2","sockref","SockRef"],"kind":"struct"},"25:7800:5468":{"crate_id":25,"path":["tokio","sync","mpsc","block","Values"],"kind":"struct"},"25:11075:3991":{"crate_id":25,"path":["tokio","task","task_local","TaskLocalFuture"],"kind":"struct"},"17:14426:6240":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"5:886:4020":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"16:2722:6783":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:9823:232":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"2:3012:3115":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"2:41022:7601":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"17:11779:5875":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"5:6484:3996":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"26:430:8822":{"crate_id":26,"path":["mio","sys","unix","uds","socketaddr","AsciiEscaped"],"kind":"struct"},"27:8957:5193":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"6:119:15418":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"17:12459:5791":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"17:15961:6016":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"2:40666:7709":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"1:4050:9551":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"27:629:4240":{"crate_id":27,"path":["libc","unix","iovec"],"kind":"struct"},"17:14470:6247":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"16:5939:6745":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"17:11126:5802":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"16:7342:35708":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"27:6266:4767":{"crate_id":27,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"17:14969:6422":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"1:12043:693":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"5:5807:257":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:48334:7922":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"17:12324:5945":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"27:9794:8340":{"crate_id":27,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:3022:3126":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:8245:3628":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"20:2428:2446":{"crate_id":20,"path":["http","header","value","HeaderValue"],"kind":"struct"},"1:640:7934":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:3373:3070":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:8207:2011":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"25:5771:5310":{"crate_id":25,"path":["tokio","runtime","io","driver","Handle"],"kind":"struct"},"17:12746:5979":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"17:13948:6147":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"17:13809:6128":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"26:902:5247":{"crate_id":26,"path":["mio","net","udp","UdpSocket"],"kind":"struct"},"1:2380:9525":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"17:11168:21920":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"5:4182:3559":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"2:39655:218":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:11476:5246":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"25:8133:3958":{"crate_id":25,"path":["tokio","sync","mpsc","list","Rx"],"kind":"struct"},"27:5343:4555":{"crate_id":27,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"13:0:2914":{"crate_id":13,"path":["std_detect"],"kind":"module"},"6:4584:4555":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"17:13395:6037":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"14:187:20903":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"17:11001:5793":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:4998:854":{"crate_id":2,"path":["core","iter"],"kind":"module"},"1:357:7931":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"20:2670:3660":{"crate_id":20,"path":["http","uri","scheme","Scheme"],"kind":"struct"},"2:7879:3046":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"6:4488:4508":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"17:11755:5873":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"1:588:9441":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"6:1718:4407":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"30:818:4192":{"crate_id":30,"path":["socket2","Type"],"kind":"struct"},"1:3670:9538":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"25:2719:26151":{"crate_id":25,"path":["tokio","io","util","async_buf_read_ext","AsyncBufReadExt"],"kind":"trait"},"2:22718:7674":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"25:6075:5329":{"crate_id":25,"path":["tokio","runtime","time","entry","TimerShared"],"kind":"struct"},"2:9030:7619":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:8991:26180":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"1:11170:30031":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"6:4566:4545":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"1:8535:7947":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"11:1910:7343":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"5:7296:3996":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"16:6753:7036":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"2:43750:7763":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"16:5727:6866":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"2:41789:7614":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"1:8220:3577":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"17:15133:6462":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:4514:3437":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:23024:192":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"1:8352:7946":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"17:12999:2332":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"5:6351:3075":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:3345:3142":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"6:7668:8344":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"1:10986:8042":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"16:7792:21832":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"14:40:6013":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"1:836:3625":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"1:9479:4110":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"5:3753:7418":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"20:2013:5480":{"crate_id":20,"path":["http","header","map","HashValue"],"kind":"struct"},"15:0:2922":{"crate_id":15,"path":["addr2line"],"kind":"module"},"26:674:5234":{"crate_id":26,"path":["mio","event","event","Event"],"kind":"struct"},"16:8115:7229":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"5:3230:35241":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:47966:7908":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"27:5420:4569":{"crate_id":27,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"25:10876:6969":{"crate_id":25,"path":["tokio","util","idle_notified_set","List"],"kind":"enum"},"5:1115:35650":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"17:11666:5859":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"16:5322:6849":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2:44492:14817":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"27:7658:4967":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"16:6361:6976":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"17:11307:5820":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"2:41237:3604":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"17:16087:6728":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"2:22569:7656":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"25:11670:9376":{"crate_id":25,"path":["tokio","io","util","write_int","WriteF64"],"kind":"struct"},"2:10511:2590":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"17:16032:6712":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"6:4516:4520":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"25:13842:9346":{"crate_id":25,"path":["tokio","io","util","read_int","ReadU32"],"kind":"struct"},"6:1734:4413":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:40470:14868":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"17:14057:6163":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"25:14328:3589":{"crate_id":25,"path":["tokio","io","util","buf_writer","BufWriter"],"kind":"struct"},"2:21210:32806":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"2:4505:4063":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:40496:14869":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"27:6436:8328":{"crate_id":27,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"2:46753:7849":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"11:844:9459":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"25:7366:8351":{"crate_id":25,"path":["tokio","runtime","task","raw","RawTask"],"kind":"struct"},"6:4595:4560":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"25:11964:9370":{"crate_id":25,"path":["tokio","io","util","write_int","WriteU128"],"kind":"struct"},"17:15432:6565":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"5:40:4010":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"2:3318:3138":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:7855:7973":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"25:1652:3598":{"crate_id":25,"path":["tokio","io","stdin","Stdin"],"kind":"struct"},"17:15367:6521":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"1:10076:7941":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"25:3077:5288":{"crate_id":25,"path":["tokio","io","util","vec_with_initialized","VecWithInitialized"],"kind":"struct"},"5:6604:3500":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"22:0:1864":{"crate_id":22,"path":["bytes"],"kind":"module"},"2:12174:7642":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"17:14633:6259":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"1:7878:136":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"25:1683:3559":{"crate_id":25,"path":["tokio","io","split","Guard"],"kind":"struct"},"6:6711:5078":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:22628:7662":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"6:6222:5016":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:3201:3599":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"17:15212:6482":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"25:12671:5443":{"crate_id":25,"path":["tokio","io","util","read_until","ReadUntil"],"kind":"struct"},"11:2140:5476":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"1:5500:7954":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"16:0:2923":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:43832:7769":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"2:45955:7817":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"27:1758:4283":{"crate_id":27,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"17:12029:5915":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"2:6489:8443":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"6:6819:5115":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"16:6696:7023":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"16:4949:6843":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"17:3460:5659":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"27:5403:4567":{"crate_id":27,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"16:7067:7082":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"17:12659:21871":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"17:12614:21892":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"5:266:4012":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"2:44661:8530":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"25:13058:9362":{"crate_id":25,"path":["tokio","io","util","read_int","ReadI128Le"],"kind":"struct"},"25:14067:2553":{"crate_id":25,"path":["tokio","io","util","read_buf","ReadBuf"],"kind":"struct"},"6:5885:4874":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"17:12202:22014":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"27:5804:4662":{"crate_id":27,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"11:1025:5476":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"16:2380:6769":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"25:3688:5295":{"crate_id":25,"path":["tokio","net","tcp","socket","TcpSocket"],"kind":"struct"},"2:42157:2009":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"17:14934:6418":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"2:44633:8523":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"2:3333:143":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"17:9624:21867":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"25:13450:9354":{"crate_id":25,"path":["tokio","io","util","read_int","ReadF64"],"kind":"struct"},"2:9531:33833":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:4637:5095":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"6:4955:4733":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"3:234:232":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"11:2403:3626":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"2:32437:2676":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"25:9804:3216":{"crate_id":25,"path":["tokio","sync","rwlock","owned_read_guard","OwnedRwLockReadGuard"],"kind":"struct"},"16:8097:7228":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"6:574:4256":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"25:7047:3944":{"crate_id":25,"path":["tokio","runtime","blocking","pool","BlockingPool"],"kind":"struct"},"1:4469:9570":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"25:4787:3909":{"crate_id":25,"path":["tokio","runtime","context","current","SetCurrentGuard"],"kind":"struct"},"5:1505:7329":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"25:8719:3213":{"crate_id":25,"path":["tokio","sync","batch_semaphore","Semaphore"],"kind":"struct"},"2:43261:7746":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"2:33781:3121":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"17:13365:6033":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"2:44928:7813":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"25:4153:5240":{"crate_id":25,"path":["tokio","net","unix","socketaddr","SocketAddr"],"kind":"struct"},"17:13787:6127":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"1:7540:8082":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"6:6889:5166":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"16:7862:7188":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"17:11369:5825":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:10757:7626":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"18:491:5586":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"1:10097:8055":{"crate_id":1,"path":["std","sys","unix","os","EnvStrDebug"],"kind":"struct"},"17:13676:6107":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"2:21171:3404":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"25:2885:3903":{"crate_id":25,"path":["tokio","io","util","mem","DuplexStream"],"kind":"struct"},"2:44349:7795":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"17:15733:6636":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:11052:5774":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"25:10738:36323":{"crate_id":25,"path":["tokio","util","idle_notified_set","ListEntry"],"kind":"struct"},"2:2093:7447":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"2:8919:3383":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"6:4764:4640":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"17:14087:6182":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"25:10012:3980":{"crate_id":25,"path":["tokio","task","local","LocalEnterGuard"],"kind":"struct"},"1:8190:3578":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"11:710:7329":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:7797:3047":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"9:393:20810":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"17:11632:5855":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"25:4878:5306":{"crate_id":25,"path":["tokio","runtime","park","UnparkThread"],"kind":"struct"},"25:13695:9349":{"crate_id":25,"path":["tokio","io","util","read_int","ReadI16"],"kind":"struct"},"2:40697:7711":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"17:14324:6221":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"25:9654:3208":{"crate_id":25,"path":["tokio","sync","mutex","MappedMutexGuard"],"kind":"struct"},"2:7826:127":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:2354:9515":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"27:5366:4560":{"crate_id":27,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"25:5997:3928":{"crate_id":25,"path":["tokio","runtime","io","scheduled_io","ScheduledIo"],"kind":"struct"},"20:2456:1842":{"crate_id":20,"path":["http","method","Method"],"kind":"struct"},"6:4364:4428":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"18:531:5591":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"20:1913:5470":{"crate_id":20,"path":["http","header","map","GetAll"],"kind":"struct"},"16:6818:7049":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"25:7858:2078":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","Sender"],"kind":"struct"},"17:11743:5872":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"17:16134:6736":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"25:6225:3632":{"crate_id":25,"path":["tokio","runtime","time","Inner"],"kind":"struct"},"25:8610:3632":{"crate_id":25,"path":["tokio","sync","oneshot","Inner"],"kind":"struct"},"25:8288:182":{"crate_id":25,"path":["tokio","sync","mutex","Mutex"],"kind":"struct"},"17:14373:6234":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"5:6959:269":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:40368:7576":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"6:4977:4749":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"1:2202:5260":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"6:1596:4330":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"27:683:4251":{"crate_id":27,"path":["libc","unix","linger"],"kind":"struct"},"2:3123:3045":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:44649:8527":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:45911:7815":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:8001:7977":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"6:7371:5204":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:47888:7907":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:41806:9537":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"17:12052:5916":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"17:15680:6627":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"18:582:3404":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"17:11945:5909":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"1:3278:3596":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"25:2809:36303":{"crate_id":25,"path":["tokio","io","util","buf_reader","SeekState"],"kind":"enum"},"15:306:20916":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"27:5899:4683":{"crate_id":27,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"25:11817:9373":{"crate_id":25,"path":["tokio","io","util","write_int","WriteI64"],"kind":"struct"},"1:7901:7945":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"17:13754:6119":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"2:44366:7796":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"25:9223:3220":{"crate_id":25,"path":["tokio","sync","task","atomic_waker","AtomicWaker"],"kind":"struct"},"5:7510:7441":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:10091:153":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"25:6556:3941":{"crate_id":25,"path":["tokio","runtime","task","abort","AbortHandle"],"kind":"struct"},"1:8891:3682":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"6:4710:4612":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"6:495:4209":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"6:4676:4601":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"1:2200:135":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"25:6361:3939":{"crate_id":25,"path":["tokio","runtime","task","core","TaskIdGuard"],"kind":"struct"},"16:6742:7035":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"16:4344:6826":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"17:15108:6457":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"9:486:20808":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"17:15535:6585":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"9:450:20809":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"6:4610:4567":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"2:43822:7768":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"11:2443:3996":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"27:5762:4653":{"crate_id":27,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"27:7817:4998":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"6:4789:4653":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:9884:3427":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"25:8186:5383":{"crate_id":25,"path":["tokio","sync","mpsc","unbounded","WeakUnboundedSender"],"kind":"struct"},"6:4388:4446":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"18:599:35719":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"9:177:20876":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:46502:7841":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"16:5574:6793":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"27:1705:4275":{"crate_id":27,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"6:5910:4879":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"25:6934:3965":{"crate_id":25,"path":["tokio","runtime","task","Notified"],"kind":"struct"},"16:3232:6759":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"27:6352:4799":{"crate_id":27,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"25:709:36741":{"crate_id":25,"path":["tokio","util","markers","SyncNotSend"],"kind":"struct"},"17:14904:6412":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"6:5992:4925":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:3988:9545":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"16:8134:7232":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"27:7362:4878":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:40796:7595":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:11313:8078":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"27:8975:5197":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"11:811:4043":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"27:5570:4611":{"crate_id":27,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"17:14099:6184":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"27:1689:4273":{"crate_id":27,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:46856:7851":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"25:11109:36761":{"crate_id":25,"path":["tokio","task","task_local","_","__Origin"],"kind":"struct"},"11:1582:7340":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"5:7467:7436":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"2:42147:3384":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:10762:8544":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"20:2106:5488":{"crate_id":20,"path":["http","header","name","HdrName"],"kind":"struct"},"17:10172:5635":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"16:4613:6833":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"27:7235:4834":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:2789:134":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"27:7476:4911":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"20:1968:5479":{"crate_id":20,"path":["http","header","map","ValueIterMut"],"kind":"struct"},"2:46456:7840":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:2209:3567":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"25:7864:3954":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","Permit"],"kind":"struct"},"17:11027:5748":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"25:10615:3632":{"crate_id":25,"path":["tokio","time","sleep","Inner"],"kind":"struct"},"11:2562:8417":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"25:8520:3964":{"crate_id":25,"path":["tokio","sync","notify","NotifyWaitersList"],"kind":"struct"},"5:5392:14791":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:39967:28301":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"25:4671:3908":{"crate_id":25,"path":["tokio","runtime","context","blocking","DisallowBlockInPlaceGuard"],"kind":"struct"},"16:6156:6930":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"20:2027:5481":{"crate_id":20,"path":["http","header","map","Bucket"],"kind":"struct"},"17:16004:6705":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"27:544:4211":{"crate_id":27,"path":["libc","unix","rlimit"],"kind":"struct"},"1:3491:28920":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"17:11426:5829":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"25:7545:8352":{"crate_id":25,"path":["tokio","runtime","metrics","mock","HistogramBuilder"],"kind":"struct"},"2:40435:7695":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"16:4719:6835":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"1:12045:795":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"1:6983:8828":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"2:39741:3137":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"25:9926:5407":{"crate_id":25,"path":["tokio","sync","watch","state","StateSnapshot"],"kind":"struct"},"2:2336:15035":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"6:1546:4297":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:42988:8514":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"6:1639:4364":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"25:9816:3218":{"crate_id":25,"path":["tokio","sync","rwlock","owned_write_guard_mapped","OwnedRwLockMappedWriteGuard"],"kind":"struct"},"27:6206:4749":{"crate_id":27,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"5:2703:5310":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"17:15224:6483":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"6:1697:4399":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:11497:5844":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"1:4159:9566":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"30:785:4193":{"crate_id":30,"path":["socket2","sys","CcidEndpoints"],"kind":"struct"},"27:5882:4680":{"crate_id":27,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"27:9408:8338":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:21870:7651":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:12030:401":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"1:557:3942":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"2:21840:2590":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"2:41008:7600":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"17:14921:6413":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"16:7090:7084":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"25:1381:225":{"crate_id":25,"path":["tokio","io","ready","Ready"],"kind":"struct"},"17:14181:6199":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"17:2197:5653":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"16:7651:7172":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"27:5727:4647":{"crate_id":27,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"1:6426:3173":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"6:6804:5110":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:44713:3154":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"25:9689:36294":{"crate_id":25,"path":["tokio","sync","notify","Notification"],"kind":"enum"},"1:8226:2077":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"17:15200:6476":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"5:7346:7434":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"30:690:4183":{"crate_id":30,"path":["socket2","MaybeUninitSlice"],"kind":"struct"},"5:790:4015":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"17:10337:5759":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"6:6741:5100":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"1:4744:9560":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"27:4824:16763":{"crate_id":27,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"1:5639:7955":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"16:6879:7054":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"1:11382:8546":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"27:6282:4769":{"crate_id":27,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"1:9021:8048":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"6:5921:4887":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"5:1151:35651":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"17:14266:6212":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"6:5123:4831":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"2:43308:7755":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"16:7054:7079":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:21181:32802":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"2:46386:7838":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"27:771:4269":{"crate_id":27,"path":["libc","unix","protoent"],"kind":"struct"},"6:4841:4680":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:2529:208":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"17:15747:6639":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"26:670:3074":{"crate_id":26,"path":["mio","waker","Waker"],"kind":"struct"},"27:5785:4659":{"crate_id":27,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:48174:7912":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"27:8442:5054":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:11657:5858":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"2:10948:7631":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"16:6915:6803":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"5:7634:4047":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"25:577:3221":{"crate_id":25,"path":["tokio","util","once_cell","OnceCell"],"kind":"struct"},"27:9816:8345":{"crate_id":27,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"1:939:7332":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"2:44320:7787":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"16:7269:35707":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"6:7639:4783":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"5:3687:4012":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"25:10688:5427":{"crate_id":25,"path":["tokio","util","rand","RngSeed"],"kind":"struct"},"17:11065:5798":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"25:553:3897":{"crate_id":25,"path":["tokio","util","atomic_cell","AtomicCell"],"kind":"struct"},"16:7534:6807":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"16:5995:6750":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"25:1369:5229":{"crate_id":25,"path":["tokio","io","interest","Interest"],"kind":"struct"},"2:39719:222":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"25:12960:9364":{"crate_id":25,"path":["tokio","io","util","read_int","ReadF64Le"],"kind":"struct"},"2:43278:153":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"17:14698:6310":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"2:21553:2590":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"17:14662:6279":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:42018:200":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"17:11727:5870":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"6:4666:4594":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"25:13977:9343":{"crate_id":25,"path":["tokio","io","util","read_int","ReadU8"],"kind":"struct"},"25:12242:5435":{"crate_id":25,"path":["tokio","io","util","write_all_buf","WriteAllBuf"],"kind":"struct"},"26:62:5231":{"crate_id":26,"path":["mio","poll","Registry"],"kind":"struct"},"27:8552:5082":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:44122:7781":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"20:2523:3634":{"crate_id":20,"path":["http","method","extension","AllocatedExtension"],"kind":"struct"},"5:683:256":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:9842:140":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"20:1947:5476":{"crate_id":20,"path":["http","header","map","OccupiedEntry"],"kind":"struct"},"6:5023:4775":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"17:10962:5790":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"6:6059:4967":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"25:4496:226":{"crate_id":25,"path":["tokio","net","unix","pipe","Receiver"],"kind":"struct"},"27:2126:4399":{"crate_id":27,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:3737:3500":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"16:5798:6872":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"6:6107:4992":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:10095:8056":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"1:4964:3373":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"17:12310:5944":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"11:1896:4043":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"25:14014:5450":{"crate_id":25,"path":["tokio","io","util","read_exact","ReadExact"],"kind":"struct"},"17:16049:6714":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"17:12850:5661":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"1:7380:29592":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:22346:9726":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"16:5403:5757":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"1:9147:3151":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"17:12921:5947":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"2:33604:3122":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"25:5009:5310":{"crate_id":25,"path":["tokio","runtime","scheduler","current_thread","Handle"],"kind":"struct"},"17:15235:6487":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:11034:3915":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"2:41978:7615":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"27:1983:4360":{"crate_id":27,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"2:47430:7873":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"2:21383:9647":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"2:3494:70":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"25:8582:2086":{"crate_id":25,"path":["tokio","sync","oneshot"],"kind":"module"},"26:159:7682":{"crate_id":26,"path":["mio","event","source","Source"],"kind":"trait"},"1:6543:3178":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"2:43253:7744":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"10:0:2918":{"crate_id":10,"path":["adler"],"kind":"module"},"6:4351:4419":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:40675:3578":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"2:21442:9646":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"25:9660:3209":{"crate_id":25,"path":["tokio","sync","mutex","OwnedMappedMutexGuard"],"kind":"struct"},"18:644:5587":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"6:4947:4728":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"30:854:4195":{"crate_id":30,"path":["socket2","TcpKeepalive"],"kind":"struct"},"25:5915:3932":{"crate_id":25,"path":["tokio","runtime","io","scheduled_io","Readiness"],"kind":"struct"},"25:932:2051":{"crate_id":25,"path":["tokio","fs","read","read"],"kind":"function"},"5:4381:4034":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"25:14409:3588":{"crate_id":25,"path":["tokio","io","util","buf_reader","BufReader"],"kind":"struct"},"1:1909:704":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"2:40828:7597":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"25:4844:5304":{"crate_id":25,"path":["tokio","runtime","coop","Budget"],"kind":"struct"},"6:1514:4281":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"17:9759:21886":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"5:7481:32612":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:3002:3117":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"5:2256:8435":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2:40819:7720":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"16:4641:6834":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:40726:7584":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"25:11915:9371":{"crate_id":25,"path":["tokio","io","util","write_int","WriteI16"],"kind":"struct"},"17:10716:5774":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"25:9647:183":{"crate_id":25,"path":["tokio","sync","mutex","MutexGuard"],"kind":"struct"},"20:2054:5485":{"crate_id":20,"path":["http","header","map","ExtraValue"],"kind":"struct"},"27:8680:5108":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"27:5505:4594":{"crate_id":27,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"25:13744:9348":{"crate_id":25,"path":["tokio","io","util","read_int","ReadU128"],"kind":"struct"},"18:0:2925":{"crate_id":18,"path":["memchr"],"kind":"module"},"5:1455:3500":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"25:10528:134":{"crate_id":25,"path":["tokio","time","error","Error"],"kind":"struct"},"1:10757:8542":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"2:33663:3120":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"6:4893:4701":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"5:4020:3996":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"11:1883:3625":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:1973:185":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"25:5121:3920":{"crate_id":25,"path":["tokio","runtime","scheduler","inject","pop","Pop"],"kind":"struct"},"2:30706:32600":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"17:12560:5966":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"6:4998:4764":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"1:7915:7976":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:22215:32771":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"11:123:4002":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"11:1676:4008":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"16:6204:6937":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"27:7408:4887":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:43800:7766":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"6:5130:4781":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"1:1040:5486":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:42297:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:12014:29997":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"1:1902:3084":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"25:4469:5258":{"crate_id":25,"path":["tokio","net","unix","pipe","OpenOptions"],"kind":"struct"},"17:9918:21890":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"2:48239:7915":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"2:2659:14873":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"27:1683:15771":{"crate_id":27,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"25:1120:5259":{"crate_id":25,"path":["tokio","fs","read_dir","ReadDir"],"kind":"struct"}},"external_crates":{"31":{"name":"num_cpus","html_root_url":null},"28":{"name":"pin_project_lite","html_root_url":null},"25":{"name":"tokio","html_root_url":null},"22":{"name":"bytes","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"29":{"name":"tokio_macros","html_root_url":null},"26":{"name":"mio","html_root_url":null},"23":{"name":"itoa","html_root_url":"https://docs.rs/itoa/1.0.9/"},"20":{"name":"http","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"30":{"name":"socket2","html_root_url":null},"27":{"name":"libc","html_root_url":null},"24":{"name":"http_body","html_root_url":null},"21":{"name":"fnv","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":28}