{"root":"0:0:1718","crate_version":"1.8.0","includes_private":false,"index":{"0:182:1884":{"id":"0:182:1884","crate_id":0,"name":"find","span":{"filename":"src/lib.rs","begin":[1004,4],"end":[1009,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"1:8873:158","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:3616:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"1:8873:158","args":null}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:23762:2970":{"id":"1:23762:2970","crate_id":1,"name":"SimdPartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:23763:1282","1:23764:1281","1:23765:1279","1:23766:1278"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialEq","id":"1:23174:3070","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:271":{"id":"0:271","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1301,0],"end":[1309,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:10569:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"1:10569:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Display","id":"1:10569:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:274:665"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:65:413":{"id":"0:65:413","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[135,4],"end":[140,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3529:2190":{"id":"1:3529:2190","crate_id":1,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3531:1244"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13761:57252":{"id":"1:13761:57252","crate_id":1,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"str::split":"4:15910:2093","self::pattern":"1:13331:1625","prim@char":"4:15904:2088","`DoubleEndedIterator`":"1:8716:121"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"1:49760:3199","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13356:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:184:1887":{"id":"0:184:1887","crate_id":0,"name":"find_map","span":{"filename":"src/lib.rs","begin":[1011,4],"end":[1016,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:3616:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"1:8873:158","args":null}}}],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"B"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:14075-0:292:1597":{"id":"b:1:14075-0:292:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"1:14056:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoFuture","id":"1:14071:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["1:14077:183","1:14078:151","1:14079:774"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"F"}}},"1:8679:1748":{"id":"1:8679:1748","crate_id":1,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"I"}}},"1:13811:57260":{"id":"1:13811:57260","crate_id":1,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"4:15904:2088","self::pattern":"1:13331:1625"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13356:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:59:1623":{"id":"0:59:1623","crate_id":0,"name":"for_both","span":{"filename":"src/lib.rs","begin":[82,0],"end":[89,1]},"visibility":"public","docs":"Evaluate the provided expression for both [`Either::Left`] and [`Either::Right`].\n\nThis macro is useful in cases where both sides of [`Either`] can be interacted with\nin the same way even though the don't share the same type.\n\nSyntax: `either::for_both!(` *expression* `,` *pattern* `=>` *expression* `)`\n\n# Example\n\n```\nuse either::Either;\n\nfn length(owned_or_borrowed: Either<String, &'static str>) -> usize {\n    either::for_both!(owned_or_borrowed, s => s.len())\n}\n\nfn main() {\n    let borrowed = Either::Right(\"Hello world!\");\n    let owned = Either::Left(\"Hello world!\".to_owned());\n\n    assert_eq!(length(borrowed), 12);\n    assert_eq!(length(owned), 12);\n}\n```","links":{"`Either::Right`":"0:292:1597","`Either::Left`":"0:292:1597","`Either`":"0:292:1597"},"attrs":["#[macro_export]"],"deprecation":null,"kind":"macro","inner":"macro_rules! for_both {\n    ($value:expr, $pattern:pat => $result:expr) => { ... };\n}"},"1:3176:233":{"id":"1:3176:233","crate_id":1,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3178:128","1:3179:1429"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3466:2180":{"id":"1:3466:2180","crate_id":1,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3468:1368"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:4472:1596":{"id":"4:4472:1596","crate_id":4,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:4473:1914","4:4474:2605","4:4476:2606","4:4477:1917","4:4478:1915","4:4479:2607","4:4480:1916","4:4489:2598"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:5524:3431":{"id":"4:5524:3431","crate_id":4,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5525:6421","4:5526:56873","4:5527:4972","4:5528:56874","4:5529:3703","4:5530:3704","4:5531:56875","4:5532:1316","4:5533:56876","4:5534:56877","4:5535:56878","4:5536:56879","4:5537:56880","4:5538:56881","4:5539:56882","4:5540:56883"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:307":{"id":"0:307","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[49,15],"end":[49,24]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialEq","id":"1:2916:185","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialEq","id":"1:2916:185","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"1:2916:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:310:609"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:6163":{"id":"5:6163","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5976:1352","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:6164:59961","5:6165:2299","5:6168:59962","5:6171:59963","5:6183:59964","5:6184:59965","5:6185:2317","5:6186:56714","5:6187:56715"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:10800:143":{"id":"1:10800:143","crate_id":1,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10801:720","1:10803:2547"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:8680:775":{"id":"1:8680:775","crate_id":1,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:123:1834":{"id":"0:123:1834","crate_id":0,"name":"factor_err","span":{"filename":"src/lib.rs","begin":[788,4],"end":[793,5]},"visibility":"public","docs":"Factors out a homogenous type from an `Either` of [`Result`].\n\nHere, the homogeneous type is the `Err` type of the [`Result`].\n\n```\nuse either::*;\nlet left: Either<_, Result<String, u32>> = Left(Ok(vec![0]));\nassert_eq!(left.factor_err(), Ok(Left(vec![0])));\n\nlet right: Either<Result<Vec<u8>, u32>, _> = Right(Ok(String::new()));\nassert_eq!(right.factor_err(), Ok(Right(String::new())));\n```","links":{"`Result`":"1:47904:207"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:47904:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3616:132":{"id":"1:3616:132","crate_id":1,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3618:382"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:3619:133","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:221":{"id":"0:221","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1130,0],"end":[1150,1]},"visibility":"crate","docs":"Requires crate feature `\"use_std\"`","links":{},"attrs":["#[cfg(any(test, feature = \"use_std\"))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"BufRead","id":"4:4497:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"BufRead","id":"4:4497:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["read_line","split","has_data_left","lines","read_until"],"trait":{"name":"BufRead","id":"4:4497:1592","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:224:1907","0:225:1908","0:226:1910","0:227:1912"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:198":{"id":"0:198","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1055,0],"end":[1063,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"1:8741:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"ExactSizeIterator","id":"1:8741:1891","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"L"},"trait":{"name":"","id":"1:8873:158","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["len","is_empty"],"trait":{"name":"ExactSizeIterator","id":"1:8741:1891","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:201:800"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3458:2173":{"id":"1:3458:2173","crate_id":1,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3459:183","1:3460:920"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:235":{"id":"0:235","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1178,0],"end":[1186,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Target","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"1:3164:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Target"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"1:3164:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Target"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"AsRef","id":"1:3164:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Target"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:239:310"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:852:53435":{"id":"5:852:53435","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3446:2171":{"id":"1:3446:2171","crate_id":1,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3448:183","1:3449:563"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:14079:774":{"id":"1:14079:774","crate_id":1,"name":"into_future","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoFuture","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"IntoFuture","id":"1:14071:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13817:59323":{"id":"1:13817:59323","crate_id":1,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"4:15904:2088","self::pattern":"1:13331:1625"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:301":{"id":"0:301","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[49,9],"end":[49,13]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::marker::Copy","id":"1:3373:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::marker::Copy","id":"1:3373:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"1:3373:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:11204:218":{"id":"1:11204:218","crate_id":1,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:11206:183","1:11207:53618","1:11208:53619","1:11209:53620","1:11210:1688","1:11211:759","1:11212:760"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:3368:2206","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:11195:2865","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13715:59305":{"id":"1:13715:59305","crate_id":1,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"4:5436:3477":{"id":"4:5436:3477","crate_id":4,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5437:4506","4:5438:58825"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"4:10436:2865","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13737:17379":{"id":"1:13737:17379","crate_id":1,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"1:50034:3238","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:8678:1749":{"id":"1:8678:1749","crate_id":1,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"1:8873:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"1:13755:2592":{"id":"1:13755:2592","crate_id":1,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"str::rsplit":"4:15910:2093","str::split_whitespace":"4:15910:2093","`DoubleEndedIterator`":"1:8716:121","prim@char":"4:15904:2088","self::pattern":"1:13331:1625"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"1:49742:2297","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:173:1881":{"id":"0:173:1881","crate_id":0,"name":"collect","span":{"filename":"src/lib.rs","begin":[975,4],"end":[980,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"B"},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"iter::FromIterator","id":"1:8668:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"1:8873:158","args":null}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:7607:3592":{"id":"4:7607:3592","crate_id":4,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:7608:56568"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:848-0:292:1597":{"id":"b:5:848-0:292:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2883:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["5:850:3777","5:851:53434","5:852:53435"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:8672:152":{"id":"1:8672:152","crate_id":1,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8673:1749","1:8674:1748","1:8675:775"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:6344:3470":{"id":"4:6344:3470","crate_id":4,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6345:58791","4:6346:58792"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:74:310":{"id":"0:74:310","crate_id":0,"name":"as_ref","span":{"filename":"src/lib.rs","begin":[228,4],"end":[233,5]},"visibility":"public","docs":"Convert `&Either<L, R>` to `Either<&L, &R>`.\n\n```\nuse either::*;\n\nlet left: Either<_, ()> = Left(\"some value\");\nassert_eq!(left.as_ref(), Left(&\"some value\"));\n\nlet right: Either<(), _> = Right(\"some value\");\nassert_eq!(right.as_ref(), Right(&\"some value\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"L"}}}},{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"R"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13751:1890":{"id":"1:13751:1890","crate_id":1,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"prim@char":"4:15904:2088","self::pattern":"1:13331:1625","`None`":"1:47779:178"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13356:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13706:800":{"id":"1:13706:800","crate_id":1,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"4:15904:2088"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:5558:3439":{"id":"4:5558:3439","crate_id":4,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5559:58803","4:5560:58804","4:5561:58805","4:5562:58806"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:1:3363:215-0:292:1597":{"id":"a:1:3363:215-0:292:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:3363:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"1:3363:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"1:3363:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:3462:2176":{"id":"1:3462:2176","crate_id":1,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3464:271"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:1:3375:224-0:292:1597":{"id":"a:1:3375:224-0:292:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:3375:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"1:3375:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"1:3375:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:358:1681":{"id":"0:358:1681","crate_id":0,"name":"as_mut","span":{"filename":"src/lib.rs","begin":[1216,0],"end":[1220,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"::std::ffi::OsStr","id":"4:2654:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:94:1737":{"id":"0:94:1737","crate_id":0,"name":"left_and_then","span":{"filename":"src/lib.rs","begin":[419,4],"end":[427,5]},"visibility":"public","docs":"Apply the function `f` on the value in the `Left` variant if it is present.\n\n```\nuse either::*;\n\nlet left: Either<_, u32> = Left(123);\nassert_eq!(left.left_and_then::<_,()>(|x| Right(x * 2)), Right(246));\n\nlet right: Either<u32, _> = Right(123);\nassert_eq!(right.left_and_then(|x| Right::<(), _>(x * 2)), Right(123));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"S"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:3619:133","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"L"}],"output":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"S"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:2867-0:292:1597":{"id":"b:1:2867-0:292:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:3368:2206","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"1:2861:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["1:2869:53429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:3599:1589":{"id":"1:3599:1589","crate_id":1,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3600:550"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Deref","id":"1:3586:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:363":{"id":"0:363","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1221,0],"end":[1225,1]},"visibility":"crate","docs":"Requires crate feature `use_std`.","links":{},"attrs":["#[cfg(feature = \"use_std\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"AsMut","id":"1:3167:74","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"::std::ffi::CStr","id":"1:46739:101","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"AsMut","id":"1:3167:74","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"::std::ffi::CStr","id":"1:46739:101","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"AsMut","id":"1:3167:74","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"CStr","id":"1:46739:101","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:366:1681"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13716:309":{"id":"1:13716:309","crate_id":1,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"4:15910:2093","`u8`":"4:15921:2102"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13805:59321":{"id":"1:13805:59321","crate_id":1,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"1:13331:1625","prim@char":"4:15904:2088"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13825:3401":{"id":"1:13825:3401","crate_id":1,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3167:74":{"id":"1:3167:74","crate_id":1,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3169:1681"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:3368:2206","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:3271:128":{"id":"1:3271:128","crate_id":1,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3272:1642","1:3274:1921","1:3275:1922","1:3276:2590"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"1:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Display","id":"1:10569:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:844:227":{"id":"5:844:227","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:845:3777","5:846:53434","5:847:53435"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:265":{"id":"0:265","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1281,0],"end":[1299,1]},"visibility":"crate","docs":"`Either` implements `Error` if *both* `L` and `R` implement it.","links":{},"attrs":["#[cfg(any(test, feature = \"use_std\"))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"1:3271:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"1:3271:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["source","cause","type_id","description","provide"],"trait":{"name":"Error","id":"1:3271:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:268:1642","0:269:1921","0:270:1922"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:213:1898":{"id":"0:213:1898","crate_id":0,"name":"read","span":{"filename":"src/lib.rs","begin":[1097,4],"end":[1099,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"4:3801:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:103:1773":{"id":"0:103:1773","crate_id":0,"name":"left_or_else","span":{"filename":"src/lib.rs","begin":[531,4],"end":[539,5]},"visibility":"public","docs":"Returns left value or computes it from a closure\n\n# Examples\n\n```\n# use either::*;\nlet left: Either<String, u32> = Left(\"3\".to_string());\nassert_eq!(left.left_or_else(|_| unreachable!()), \"3\");\n\nlet right: Either<String, u32> = Right(3);\nassert_eq!(right.left_or_else(|x| x.to_string()), \"3\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"generic","inner":"L"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:3619:133","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"R"}],"output":{"kind":"generic","inner":"L"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13788:59313":{"id":"1:13788:59313","crate_id":1,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"prim@char":"4:15904:2088","`DoubleEndedIterator`":"1:8716:121","self::pattern":"1:13331:1625","str::rmatch_indices":"4:15910:2093"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"1:49892:3230","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6183:59964":{"id":"5:6183:59964","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:8459:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8459:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:220:1905":{"id":"0:220:1905","crate_id":0,"name":"seek","span":{"filename":"src/lib.rs","begin":[1123,4],"end":[1125,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["pos",{"kind":"resolved_path","inner":{"name":"SeekFrom","id":"4:10962:1595","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"4:3801:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u64"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:9153:1892":{"id":"1:9153:1892","crate_id":1,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:8873:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3373:107":{"id":"1:3373:107","crate_id":1,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2883:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:5:6500-0:292:1597":{"id":"b:5:6500-0:292:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"1:10569:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:3368:2206","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6498:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["5:6502:1409"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:10579:191":{"id":"1:10579:191","crate_id":1,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10580:665"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:227:1912":{"id":"0:227:1912","crate_id":0,"name":"read_line","span":{"filename":"src/lib.rs","begin":[1147,4],"end":[1149,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"std::string::String","id":"5:8459:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"4:3801:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3278-0:292:1597":{"id":"b:1:3278-0:292:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"1:3271:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"1:3368:2206","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"1:4145:3034","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["1:3280:2590"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"E"}}},"1:3823:229":{"id":"1:3823:229","crate_id":1,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3824:183","1:3825:2199","1:3826:691","1:3827:374"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FromResidual","id":"1:3828:138","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"1:3823:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:8631:2682":{"id":"1:8631:2682","crate_id":1,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8633:2648"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:141:1859":{"id":"0:141:1859","crate_id":0,"name":"into_inner","span":{"filename":"src/lib.rs","begin":[873,4],"end":[875,5]},"visibility":"public","docs":"Extract the value of an either over two equivalent types.\n\n```\nuse either::*;\n\nlet left: Either<_, u32> = Left(123);\nassert_eq!(left.into_inner(), 123);\n\nlet right: Either<u32, _> = Right(123);\nassert_eq!(right.into_inner(), 123);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:145":{"id":"0:145","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[900,0],"end":[907,1]},"visibility":"crate","docs":"Convert from `Result` to `Either` with `Ok => Right` and `Err => Left`.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3173:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"1:47904:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}},{"type":{"kind":"generic","inner":"L"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:148:686"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3247:116":{"id":"1:3247:116","crate_id":1,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3248:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:354:310":{"id":"0:354:310","crate_id":0,"name":"as_ref","span":{"filename":"src/lib.rs","begin":[1216,0],"end":[1220,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"::std::ffi::OsStr","id":"4:2654:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13779:59311":{"id":"1:13779:59311","crate_id":1,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13356:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:71:1653":{"id":"0:71:1653","crate_id":0,"name":"is_right","span":{"filename":"src/lib.rs","begin":[177,4],"end":[179,5]},"visibility":"public","docs":"Return true if the value is the `Right` variant.\n\n```\nuse either::*;\n\nlet values = [Left(1), Right(\"the right value\")];\nassert_eq!(values[0].is_right(), false);\nassert_eq!(values[1].is_right(), true);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:115":{"id":"0:115","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[752,0],"end":[771,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:118:1826"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13832:59326":{"id":"1:13832:59326","crate_id":1,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"4:15904:2088"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"1:50059:3241","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:9160:2680":{"id":"1:9160:2680","crate_id":1,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Step","id":"1:8196:2668","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13808:36539":{"id":"1:13808:36539","crate_id":1,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"4:15904:2088","self::pattern":"1:13331:1625"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13764:59308":{"id":"1:13764:59308","crate_id":1,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"str::split":"4:15910:2093","prim@char":"4:15904:2088","str::rsplit_terminator":"4:15910:2093","self::pattern":"1:13331:1625","`DoubleEndedIterator`":"1:8716:121"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"1:49792:3226","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:351":{"id":"0:351","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1216,0],"end":[1220,1]},"visibility":"crate","docs":"Requires crate feature `use_std`.","links":{},"attrs":["#[cfg(feature = \"use_std\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"1:3164:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"::std::ffi::OsStr","id":"4:2654:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"1:3164:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"::std::ffi::OsStr","id":"4:2654:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"AsRef","id":"1:3164:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"4:2654:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:354:310"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13733:17350":{"id":"1:13733:17350","crate_id":1,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"4:15910:2093"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"1:50016:3236","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13707:2611":{"id":"1:13707:2611","crate_id":1,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3525:2189":{"id":"1:3525:2189","crate_id":1,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3527:362"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13801:59319":{"id":"1:13801:59319","crate_id":1,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:217":{"id":"0:217","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1118,0],"end":[1126,1]},"visibility":"crate","docs":"`Either<L, R>` implements `Seek` if both `L` and `R` do.\n\nRequires crate feature `\"use_std\"`","links":{},"attrs":["#[cfg(any(test, feature = \"use_std\"))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"Seek","id":"4:4490:1594","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Seek","id":"4:4490:1594","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["stream_position","rewind","stream_len"],"trait":{"name":"Seek","id":"4:4490:1594","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:220:1905"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13794:59315":{"id":"1:13794:59315","crate_id":1,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:300:1555":{"id":"0:300:1555","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[54,10],"end":[54,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"R"}},"1:10577:2557":{"id":"1:10577:2557","crate_id":1,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10578:665"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:9155:3474":{"id":"4:9155:3474","crate_id":4,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:9156:59089","4:9157:59090","4:9158:59091","4:9159:59092","4:9160:59093","4:9161:31779","4:9162:59088"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"4:10436:2865","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6165:2299":{"id":"5:6165:2299","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8459:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8459:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2866:2076":{"id":"1:2866:2076","crate_id":1,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:4096-0:292:1597":{"id":"b:1:4096-0:292:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"1:3368:2206","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"1:4094:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["1:4098:1441"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:106:1784":{"id":"0:106:1784","crate_id":0,"name":"right_or_default","span":{"filename":"src/lib.rs","begin":[578,4],"end":[586,5]},"visibility":"public","docs":"Return right or a default\n\n# Examples\n\n```\n# use either::*;\nlet left: Either<String, u32> = Left(\"left\".to_string());\nassert_eq!(left.right_or_default(), u32::default());\n\nlet right: Either<String, u32> = Right(42);\nassert_eq!(right.right_or_default(), 42);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"R"},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"1:3247:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13730:3259":{"id":"1:13730:3259","crate_id":1,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"4:15904:2088"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"1:49712:2794","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:128:1840":{"id":"0:128:1840","crate_id":0,"name":"factor_ok","span":{"filename":"src/lib.rs","begin":[811,4],"end":[816,5]},"visibility":"public","docs":"Factors out a homogenous type from an `Either` of [`Result`].\n\nHere, the homogeneous type is the `Ok` type of the [`Result`].\n\n```\nuse either::*;\nlet left: Either<_, Result<u32, String>> = Left(Err(vec![0]));\nassert_eq!(left.factor_ok(), Err(Left(vec![0])));\n\nlet right: Either<Result<u32, Vec<u8>>, _> = Right(Err(String::new()));\nassert_eq!(right.factor_ok(), Err(Right(String::new())));\n```","links":{"`Result`":"1:47904:207"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:47904:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13828:56718":{"id":"1:13828:56718","crate_id":1,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:178:281":{"id":"0:178:281","crate_id":0,"name":"all","span":{"filename":"src/lib.rs","begin":[990,4],"end":[995,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:3616:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"1:8873:158","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13741:57258":{"id":"1:13741:57258","crate_id":1,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"self::pattern":"1:13331:1625","prim@char":"4:15904:2088"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:239:310":{"id":"0:239:310","crate_id":0,"name":"as_ref","span":{"filename":"src/lib.rs","begin":[1183,4],"end":[1185,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Target"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13831:3469":{"id":"1:13831:3469","crate_id":1,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"4:15904:2088"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"1:50050:3240","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3742:2196":{"id":"1:3742:2196","crate_id":1,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3744:56378","1:3745:56379","1:3746:56380"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:3368:2206","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:338:310":{"id":"0:338:310","crate_id":0,"name":"as_ref","span":{"filename":"src/lib.rs","begin":[1210,0],"end":[1210,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3505:2185":{"id":"1:3505:2185","crate_id":1,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3507:183","1:3508:1243"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:4094:68":{"id":"1:4094:68","crate_id":1,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4095:1441"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"1:9156:2538":{"id":"1:9156:2538","crate_id":1,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:8873:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:318":{"id":"0:318","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[49,30],"end":[49,40]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialOrd","id":"1:2962:186","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialOrd","id":"1:2962:186","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["ge","le","lt","gt"],"trait":{"name":"PartialOrd","id":"1:2962:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:321:1004"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:97:1741":{"id":"0:97:1741","crate_id":0,"name":"right_and_then","span":{"filename":"src/lib.rs","begin":[440,4],"end":[448,5]},"visibility":"public","docs":"Apply the function `f` on the value in the `Right` variant if it is present.\n\n```\nuse either::*;\n\nlet left: Either<_, u32> = Left(123);\nassert_eq!(left.right_and_then(|x| Right(x * 2)), Left(123));\n\nlet right: Either<u32, _> = Right(123);\nassert_eq!(right.right_and_then(|x| Right(x * 2)), Right(246));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:3619:133","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"R"}],"output":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:347":{"id":"0:347","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1211,0],"end":[1215,1]},"visibility":"crate","docs":"Requires crate feature `use_std`.","links":{},"attrs":["#[cfg(feature = \"use_std\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"AsMut","id":"1:3167:74","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"::std::path::Path","id":"4:7253:187","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"AsMut","id":"1:3167:74","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"::std::path::Path","id":"4:7253:187","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"AsMut","id":"1:3167:74","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Path","id":"4:7253:187","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:350:1681"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:2916:185":{"id":"1:2916:185","crate_id":1,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2918:609","1:2919:914"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:3368:2206","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:13800:59318":{"id":"1:13800:59318","crate_id":1,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13735:2593":{"id":"1:13735:2593","crate_id":1,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"1:49996:2298","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:5430:3476":{"id":"4:5430:3476","crate_id":4,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5431:58821","4:5432:3834"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"4:10436:2865","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:187:1021":{"id":"0:187:1021","crate_id":0,"name":"position","span":{"filename":"src/lib.rs","begin":[1018,4],"end":[1023,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:3616:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"1:8873:158","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2952:179":{"id":"1:2952:179","crate_id":1,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2953:420","1:2954:2404","1:2955:2401","1:2956:2540"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"1:2921:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"1:2962:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:214:1900":{"id":"0:214:1900","crate_id":0,"name":"read_exact","span":{"filename":"src/lib.rs","begin":[1101,4],"end":[1103,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"4:3801:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6187:56715":{"id":"5:6187:56715","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"4:15910:2093"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8459:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3215:1428":{"id":"1:3215:1428","crate_id":1,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:47904:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"1:3180:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:6650:3415":{"id":"4:6650:3415","crate_id":4,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6651:56536"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:215:1901":{"id":"0:215:1901","crate_id":0,"name":"read_to_end","span":{"filename":"src/lib.rs","begin":[1105,4],"end":[1107,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"std::vec::Vec","id":"5:7878:239","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"4:3801:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:310:609":{"id":"0:310:609","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[49,15],"end":[49,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:72:1659":{"id":"0:72:1659","crate_id":0,"name":"left","span":{"filename":"src/lib.rs","begin":[192,4],"end":[197,5]},"visibility":"public","docs":"Convert the left side of `Either<L, R>` to an `Option<L>`.\n\n```\nuse either::*;\n\nlet left: Either<_, ()> = Left(\"some value\");\nassert_eq!(left.left(),  Some(\"some value\"));\n\nlet right: Either<(), _> = Right(321);\nassert_eq!(right.left(), None);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:10583:2559":{"id":"1:10583:2559","crate_id":1,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10584:665"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3613:131":{"id":"1:3613:131","crate_id":1,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3615:381"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:3616:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:295:160":{"id":"0:295:160","crate_id":0,"name":"Left","span":{"filename":"src/lib.rs","begin":[52,4],"end":[52,11]},"visibility":"default","docs":"A value of type `L`.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"generic","inner":"L"}]}},"0:171:1878":{"id":"0:171:1878","crate_id":0,"name":"last","span":{"filename":"src/lib.rs","begin":[967,4],"end":[969,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"1:8873:158","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:8741:1891":{"id":"1:8741:1891","crate_id":1,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8742:800","1:8743:2611"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:8873:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3170:150":{"id":"1:3170:150","crate_id":1,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3172:1820"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:4098:1441":{"id":"1:4098:1441","crate_id":1,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"1:46307:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:23101:3052":{"id":"1:23101:3052","crate_id":1,"name":"SimdInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:23102:2968","1:23103:55392","1:23104:1237","1:23105:1238","1:23106:42254","1:23107:55440","1:23108:55441","1:23109:55442","1:23110:55443","1:23111:55444","1:23112:55393","1:23113:55394","1:23114:55395","1:23115:55396","1:23116:55397","1:23117:55398","1:23118:55399"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"1:3373:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"1:23150:2865","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3404:2207":{"id":"1:3404:2207","crate_id":1,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3521:2188":{"id":"1:3521:2188","crate_id":1,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3523:359"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:5502:3436":{"id":"4:5502:3436","crate_id":4,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5503:58655","4:5504:58657","4:5505:58656","4:5506:58658"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:241":{"id":"0:241","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1227,0],"end":[1235,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Target","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"1:3164:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"generic","inner":"Target"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"1:3164:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"generic","inner":"Target"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"AsRef","id":"1:3164:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"generic","inner":"Target"}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:245:310"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:82:1707":{"id":"0:82:1707","crate_id":0,"name":"map_right","span":{"filename":"src/lib.rs","begin":[341,4],"end":[349,5]},"visibility":"public","docs":"Apply the function `f` on the value in the `Right` variant if it is present rewrapping the\nresult in `Right`.\n\n```\nuse either::*;\n\nlet left: Either<_, u32> = Left(123);\nassert_eq!(left.map_right(|x| x * 2), Left(123));\n\nlet right: Either<u32, _> = Right(123);\nassert_eq!(right.map_right(|x| x * 2), Right(246));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"S"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:3619:133","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"R"}],"output":{"kind":"generic","inner":"S"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13341:2792":{"id":"1:13341:2792","crate_id":1,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:13343:2871","1:13344:56304","1:13345:56305","1:13346:56306","1:13347:56308","1:13348:56307","1:13349:56309"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:134":{"id":"0:134","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[840,0],"end":[859,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"L"},{"kind":"generic","inner":"T"}]}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"R"},{"kind":"generic","inner":"T"}]}}],"bindings":[]}}}},"items":["0:138:1855"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:9533:2368":{"id":"1:9533:2368","crate_id":1,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13722:53620":{"id":"1:13722:53620","crate_id":1,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"1:11204:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:11204:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:13361:2873":{"id":"1:13361:2873","crate_id":1,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13356:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:202":{"id":"0:202","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1065,0],"end":[1070,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"iter::FusedIterator","id":"1:9153:1892","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"iter::FusedIterator","id":"1:9153:1892","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"L"},"trait":{"name":"","id":"1:8873:158","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"1:9153:1892","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13724:1688":{"id":"1:13724:1688","crate_id":1,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"1:11204:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:11204:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:124":{"id":"0:124","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[796,0],"end":[817,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"1:47904:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"L"}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"1:47904:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:128:1840"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:6171:59963":{"id":"5:6171:59963","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8459:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8459:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2869:53429":{"id":"1:2869:53429","crate_id":1,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13776:59310":{"id":"1:13776:59310","crate_id":1,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3834:2199":{"id":"1:3834:2199","crate_id":1,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3836:54776"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:153":{"id":"0:153","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[920,0],"end":[931,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"Extend","id":"1:8681:1870","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Extend","id":"1:8681:1870","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["extend_one","extend_reserve"],"trait":{"name":"Extend","id":"1:8681:1870","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"A"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:157:1871"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3209:128":{"id":"1:3209:128","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"1:3180:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"1:13738:56380":{"id":"1:13738:56380","crate_id":1,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"4:15904:2088","self::pattern":"1:13331:1625"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:246":{"id":"0:246","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1237,0],"end":[1245,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Target","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"AsMut","id":"1:3167:74","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Target"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"AsMut","id":"1:3167:74","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Target"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"AsMut","id":"1:3167:74","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Target"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:250:1681"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:201:800":{"id":"0:201:800","crate_id":0,"name":"len","span":{"filename":"src/lib.rs","begin":[1060,4],"end":[1062,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13820:59324":{"id":"1:13820:59324","crate_id":1,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"1:13331:1625","prim@char":"4:15904:2088"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13356:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3517:2187":{"id":"1:3517:2187","crate_id":1,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3519:357"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:138:1855":{"id":"0:138:1855","crate_id":0,"name":"factor_second","span":{"filename":"src/lib.rs","begin":[853,4],"end":[858,5]},"visibility":"public","docs":"Factor out a homogeneous type from an either of pairs.\n\nHere, the homogeneous type is the second element of the pairs.\n\n```\nuse either::*;\nlet left: Either<_, (String, u32)> = Left((vec![0], 123));\nassert_eq!(left.factor_second().1, 123);\n\nlet right: Either<(Vec<u8>, u32), _> = Right((String::new(), 123));\nassert_eq!(right.factor_second().1, 123);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"tuple","inner":[{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},{"kind":"generic","inner":"T"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:1:9533:2368-0:292:1597":{"id":"a:1:9533:2368-0:292:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:9533:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"1:9533:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"1:9533:2368","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:851:53434":{"id":"5:851:53434","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13709:59303":{"id":"1:13709:59303","crate_id":1,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:321:1004":{"id":"0:321:1004","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[49,30],"end":[49,40]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::option::Option","id":"1:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"1:37899:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3619:133":{"id":"1:3619:133","crate_id":1,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3621:183","1:3622:383"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13729:57243":{"id":"1:13729:57243","crate_id":1,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"4:15910:2093"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13727:59306":{"id":"1:13727:59306","crate_id":1,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"4:15910:2093","crate::ops::IndexMut":"1:3675:2194","str::slice_unchecked":"4:15910:2093"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:13802:59320":{"id":"1:13802:59320","crate_id":1,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"4:15904:2088","self::pattern":"1:13331:1625"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"1:13361:2873","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3372:221":{"id":"1:3372:221","crate_id":1,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13356:2872":{"id":"1:13356:2872","crate_id":1,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:13358:1888","1:13359:55644","1:13360:55645"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Searcher","id":"1:13350:2871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:129":{"id":"0:129","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[819,0],"end":[838,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"T"},{"kind":"generic","inner":"L"}]}},{"type":{"kind":"tuple","inner":[{"kind":"generic","inner":"T"},{"kind":"generic","inner":"R"}]}}],"bindings":[]}}}},"items":["0:133:1848"],"negative":false,"synthetic":false,"blanket_impl":null}},"4:5510:3437":{"id":"4:5510:3437","crate_id":4,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5511:4972","4:5512:59070","4:5513:59071"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:8196:2668":{"id":"1:8196:2668","crate_id":1,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8197:54080","1:8198:54081","1:8199:54078","1:8200:54074","1:8201:54082","1:8202:54079","1:8203:54077"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2883:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"1:2962:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:164:1873":{"id":"0:164:1873","crate_id":0,"name":"size_hint","span":{"filename":"src/lib.rs","begin":[945,4],"end":[947,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"1:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:76:1684":{"id":"0:76:1684","crate_id":0,"name":"as_pin_ref","span":{"filename":"src/lib.rs","begin":[262,4],"end":[271,5]},"visibility":"public","docs":"Convert `Pin<&Either<L, R>>` to `Either<Pin<&L>, Pin<&R>>`,\npinned projections of the inner variants.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Pin","id":"1:47896:190","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Pin","id":"1:47896:190","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"L"}}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Pin","id":"1:47896:190","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"R"}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:5572:3441":{"id":"4:5572:3441","crate_id":4,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5573:56747"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"4:10436:2865","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:110:1803":{"id":"0:110:1803","crate_id":0,"name":"unwrap_right","span":{"filename":"src/lib.rs","begin":[660,4],"end":[668,5]},"visibility":"public","docs":"Returns the right value\n\n# Examples\n\n```\n# use either::*;\nlet right: Either<(), _> = Right(3);\nassert_eq!(right.unwrap_right(), 3);\n```\n\n# Panics\n\nWhen `Either` is a `Left` value\n\n```should_panic\n# use either::*;\nlet left: Either<_, ()> = Left(3);\nleft.unwrap_right();\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"R"},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"core::fmt::Debug","id":"1:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:133:1848":{"id":"0:133:1848","crate_id":0,"name":"factor_first","span":{"filename":"src/lib.rs","begin":[832,4],"end":[837,5]},"visibility":"public","docs":"Factor out a homogeneous type from an either of pairs.\n\nHere, the homogeneous type is the first element of the pairs.\n\n```\nuse either::*;\nlet left: Either<_, (u32, String)> = Left((123, vec![0]));\nassert_eq!(left.factor_first().0, 123);\n\nlet right: Either<(u32, Vec<u8>), _> = Right((123, String::new()));\nassert_eq!(right.factor_first().0, 123);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"tuple","inner":[{"kind":"generic","inner":"T"},{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:189":{"id":"0:189","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1026,0],"end":[1053,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"1:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedIterator","id":"1:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"L"},"trait":{"name":"","id":"1:8873:158","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["advance_back_by","try_rfold","rfind","nth_back","rfold"],"trait":{"name":"DoubleEndedIterator","id":"1:8716:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:192:1888","0:193:1889","0:196:1890"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13785:59312":{"id":"1:13785:59312","crate_id":1,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"1:13331:1625","`DoubleEndedIterator`":"1:8716:121","str::matches":"4:15910:2093","prim@char":"4:15904:2088"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"1:49964:3234","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13356:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13747:1884":{"id":"1:13747:1884","crate_id":1,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"prim@char":"4:15904:2088","`None`":"1:47779:178","self::pattern":"1:13331:1625"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:234:1917":{"id":"0:234:1917","crate_id":0,"name":"flush","span":{"filename":"src/lib.rs","begin":[1173,4],"end":[1175,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"4:3801:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13758:16960":{"id":"1:13758:16960","crate_id":1,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"4:15904:2088","self::pattern":"1:13331:1625"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"1:13123:3196","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:6750:3425":{"id":"4:6750:3425","crate_id":4,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6751:56990"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:6472:3431":{"id":"4:6472:3431","crate_id":4,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6473:58747","4:6474:6767","4:6475:6768","4:6476:6770","4:6477:6769","4:6478:6771","4:6479:6772","4:6480:6774","4:6481:5014","4:6482:6777","4:6483:6778","4:6484:6779","4:6485:6780","4:6486:6781","4:6487:6782","4:6488:6775","4:6489:6776"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:8668:137":{"id":"1:8668:137","crate_id":1,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8670:689"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:23767:31378":{"id":"1:23767:31378","crate_id":1,"name":"SimdOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:23768:53827","1:23769:53828","1:23770:53829"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialOrd","id":"1:23762:2970","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3180:232":{"id":"1:3180:232","crate_id":1,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3182:128","1:3183:1428"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6186:56714":{"id":"5:6186:56714","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"4:15910:2093"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8459:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:297:1555":{"id":"0:297:1555","crate_id":0,"name":"0","span":{"filename":"src/lib.rs","begin":[52,9],"end":[52,10]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"L"}},"0:193:1889":{"id":"0:193:1889","crate_id":0,"name":"rfold","span":{"filename":"src/lib.rs","begin":[1040,4],"end":[1045,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["init",{"kind":"generic","inner":"Acc"}],["f",{"kind":"generic","inner":"G"}]],"output":{"kind":"generic","inner":"Acc"},"c_variadic":false},"generics":{"params":[{"name":"Acc","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:3616:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Acc"},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"1:8873:158","args":null}}}],"output":{"kind":"generic","inner":"Acc"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3210:1429":{"id":"1:3210:1429","crate_id":1,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:47904:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"1:3180:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:165:1874":{"id":"0:165:1874","crate_id":0,"name":"fold","span":{"filename":"src/lib.rs","begin":[949,4],"end":[954,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["init",{"kind":"generic","inner":"Acc"}],["f",{"kind":"generic","inner":"G"}]],"output":{"kind":"generic","inner":"Acc"},"c_variadic":false},"generics":{"params":[{"name":"Acc","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:3616:132","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Acc"},{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"1:8873:158","args":null}}}],"output":{"kind":"generic","inner":"Acc"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:10571:2554":{"id":"1:10571:2554","crate_id":1,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10572:665"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:1:9532:2369-0:292:1597":{"id":"a:1:9532:2369-0:292:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:9532:2369","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"1:9532:2369","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"1:9532:2369","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:85:1718":{"id":"0:85:1718","crate_id":0,"name":"either","span":{"filename":"src/lib.rs","begin":[367,4],"end":[376,5]},"visibility":"public","docs":"Apply one of two functions depending on contents, unifying their result. If the value is\n`Left(L)` then the first function `f` is applied; if it is `Right(R)` then the second\nfunction `g` is applied.\n\n```\nuse either::*;\n\nfn square(n: u32) -> i32 { (n * n) as i32 }\nfn negate(n: i32) -> i32 { -n }\n\nlet left: Either<u32, i32> = Left(4);\nassert_eq!(left.either(square, negate), 16);\n\nlet right: Either<u32, i32> = Right(-4);\nassert_eq!(right.either(square, negate), 4);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}],["g",{"kind":"generic","inner":"G"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:3619:133","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"L"}],"output":{"kind":"generic","inner":"T"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:3619:133","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"R"}],"output":{"kind":"generic","inner":"T"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13726:3500":{"id":"1:13726:3500","crate_id":1,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"crate::ops::Index":"1:3671:2193","str::slice_mut_unchecked":"4:15910:2093","`str`":"4:15910:2093"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:77:1687":{"id":"0:77:1687","crate_id":0,"name":"as_pin_mut","span":{"filename":"src/lib.rs","begin":[275,4],"end":[287,5]},"visibility":"public","docs":"Convert `Pin<&mut Either<L, R>>` to `Either<Pin<&mut L>, Pin<&mut R>>`,\npinned projections of the inner variants.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Pin","id":"1:47896:190","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Pin","id":"1:47896:190","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"L"}}}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Pin","id":"1:47896:190","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"R"}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13770:57254":{"id":"1:13770:57254","crate_id":1,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"self::pattern":"1:13331:1625","str::rsplitn":"4:15910:2093","prim@char":"4:15904:2088"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"1:49846:3202","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:10512:1596":{"id":"1:10512:1596","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10513:1546","1:10514:54038","1:10516:1916"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:10575:2556":{"id":"1:10575:2556","crate_id":1,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10576:665"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3371:222":{"id":"1:3371:222","crate_id":1,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:255:1681":{"id":"0:255:1681","crate_id":0,"name":"as_mut","span":{"filename":"src/lib.rs","begin":[1252,4],"end":[1254,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"generic","inner":"Target"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:9532:2369":{"id":"1:9532:2369","crate_id":1,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:168:1877":{"id":"0:168:1877","crate_id":0,"name":"for_each","span":{"filename":"src/lib.rs","begin":[956,4],"end":[961,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:3616:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"1:8873:158","args":null}}}],"output":null}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3280:2590":{"id":"1:3280:2590","crate_id":1,"name":"provide","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["demand",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Demand","id":"1:4160:3038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3363:215":{"id":"1:3363:215","crate_id":1,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:112:1812":{"id":"0:112:1812","crate_id":0,"name":"expect_right","span":{"filename":"src/lib.rs","begin":[718,4],"end":[726,5]},"visibility":"public","docs":"Returns the right value\n\n# Examples\n\n```\n# use either::*;\nlet right: Either<(), _> = Right(3);\nassert_eq!(right.expect_right(\"value was Left\"), 3);\n```\n\n# Panics\n\nWhen `Either` is a `Left` value\n\n```should_panic\n# use either::*;\nlet left: Either<_, ()> = Left(3);\nleft.expect_right(\"value was Right\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["msg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"generic","inner":"R"},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"core::fmt::Debug","id":"1:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:180:299":{"id":"0:180:299","crate_id":0,"name":"any","span":{"filename":"src/lib.rs","begin":[997,4],"end":[1002,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:3616:132","args":{"parenthesized":{"inputs":[{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"1:8873:158","args":null}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:334:665":{"id":"0:334:665","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[49,53],"end":[49,58]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"1:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"1:10511:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:259:226":{"id":"0:259:226","crate_id":0,"name":"Target","span":{"filename":"src/lib.rs","begin":[1262,4],"end":[1262,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"L"},"trait":{"name":"Deref","id":"1:3586:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"1:3375:224":{"id":"1:3375:224","crate_id":1,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:314":{"id":"0:314","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[49,26],"end":[49,28]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::Eq","id":"1:2921:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::Eq","id":"1:2921:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"1:2921:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:8716:121":{"id":"1:8716:121","crate_id":1,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8717:1888","1:8718:2608","1:8719:2609","1:8720:2610","1:8724:1889","1:8727:1890"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:8873:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:66:415":{"id":"0:66:415","crate_id":0,"name":"clone_from","span":{"filename":"src/lib.rs","begin":[142,4],"end":[148,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["source",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:6652:3416":{"id":"4:6652:3416","crate_id":4,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6653:56961"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13718:53618":{"id":"1:13718:53618","crate_id":1,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"1:47779:178"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"1:11204:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:11204:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:73:1664":{"id":"0:73:1664","crate_id":0,"name":"right","span":{"filename":"src/lib.rs","begin":[210,4],"end":[215,5]},"visibility":"public","docs":"Convert the right side of `Either<L, R>` to an `Option<R>`.\n\n```\nuse either::*;\n\nlet left: Either<_, ()> = Left(\"some value\");\nassert_eq!(left.right(),  None);\n\nlet right: Either<(), _> = Right(321);\nassert_eq!(right.right(), Some(321));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:23137:2861":{"id":"1:23137:2861","crate_id":1,"name":"SimdUint","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:23138:55392","1:23139:1237","1:23140:1238","1:23141:55393","1:23142:55394","1:23143:55395","1:23144:55396","1:23145:55397","1:23146:55398","1:23147:55399"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"1:3373:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"1:23150:2865","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:192:1888":{"id":"0:192:1888","crate_id":0,"name":"next_back","span":{"filename":"src/lib.rs","begin":[1031,4],"end":[1033,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"1:8873:158","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:119":{"id":"0:119","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[773,0],"end":[794,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"1:47904:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"1:47904:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:123:1834"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3478:2179":{"id":"1:3478:2179","crate_id":1,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3480:1112"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13767:59309":{"id":"1:13767:59309","crate_id":1,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"str::split":"4:15910:2093","self::pattern":"1:13331:1625","str::split_terminator":"4:15910:2093","prim@char":"4:15904:2088"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"1:49810:3227","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13356:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:12771:3408":{"id":"1:12771:3408","crate_id":1,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:12772:1749","1:12773:53775"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:225:1908":{"id":"0:225:1908","crate_id":0,"name":"consume","span":{"filename":"src/lib.rs","begin":[1139,4],"end":[1141,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["amt",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:78:1693":{"id":"0:78:1693","crate_id":0,"name":"flip","span":{"filename":"src/lib.rs","begin":[300,4],"end":[305,5]},"visibility":"public","docs":"Convert `Either<L, R>` to `Either<R, L>`.\n\n```\nuse either::*;\n\nlet left: Either<_, ()> = Left(123);\nassert_eq!(left.flip(), Right(123));\n\nlet right: Either<(), _> = Right(\"some value\");\nassert_eq!(right.flip(), Left(\"some value\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}},{"type":{"kind":"generic","inner":"L"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2858:97":{"id":"1:2858:97","crate_id":1,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2860:2076"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:3368:2206","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:13728:57242":{"id":"1:13728:57242","crate_id":1,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"4:15910:2093"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:162:1749":{"id":"0:162:1749","crate_id":0,"name":"Item","span":{"filename":"src/lib.rs","begin":[939,4],"end":[939,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"L"},"trait":{"name":"Iterator","id":"1:8873:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"1:13826:56716":{"id":"1:13826:56716","crate_id":1,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3173:136":{"id":"1:3173:136","crate_id":1,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3175:686"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:10810:147":{"id":"1:10810:147","crate_id":1,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10811:657","1:10812:1914","1:10813:55806","1:10814:55807","1:10815:55808","1:10816:55809","1:10817:55810","1:10818:55811","1:10819:55812","1:10820:55813","1:10821:55814","1:10822:55815","1:10823:55816","1:10824:55817","1:10825:55818","1:10826:1546"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:346:310":{"id":"0:346:310","crate_id":0,"name":"as_ref","span":{"filename":"src/lib.rs","begin":[1211,0],"end":[1215,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"::std::path::Path","id":"4:7253:187","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13736:59307":{"id":"1:13736:59307","crate_id":1,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"1:50006:3235","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3436:2175":{"id":"1:3436:2175","crate_id":1,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3438:183","1:3439:1367"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:343":{"id":"0:343","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1211,0],"end":[1215,1]},"visibility":"crate","docs":"Requires crate feature `use_std`.","links":{},"attrs":["#[cfg(feature = \"use_std\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"1:3164:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"::std::path::Path","id":"4:7253:187","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"1:3164:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"::std::path::Path","id":"4:7253:187","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"AsRef","id":"1:3164:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Path","id":"4:7253:187","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:346:310"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:79:1700":{"id":"0:79:1700","crate_id":0,"name":"map_left","span":{"filename":"src/lib.rs","begin":[319,4],"end":[327,5]},"visibility":"public","docs":"Apply the function `f` on the value in the `Left` variant if it is present rewrapping the\nresult in `Left`.\n\n```\nuse either::*;\n\nlet left: Either<_, u32> = Left(123);\nassert_eq!(left.map_left(|x| x * 2), Left(246));\n\nlet right: Either<u32, _> = Right(123);\nassert_eq!(right.map_left(|x| x * 2), Right(123));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"M"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"M","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:3619:133","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"L"}],"output":{"kind":"generic","inner":"M"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5906:3766":{"id":"5:5906:3766","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5908:183","5:5909:437"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:3368:2206","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:10573:2555":{"id":"1:10573:2555","crate_id":1,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10574:665"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:1031:3467":{"id":"4:1031:3467","crate_id":4,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:1032:3777","4:1033:3401","4:1034:56714","4:1035:56715","4:1036:56716","4:1037:56717","4:1038:56718"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:6654:3412":{"id":"4:6654:3412","crate_id":4,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6655:58644"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3534:2191":{"id":"1:3534:2191","crate_id":1,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3536:1247"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:152:1820":{"id":"0:152:1820","crate_id":0,"name":"into","span":{"filename":"src/lib.rs","begin":[912,4],"end":[917,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:47904:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}},{"type":{"kind":"generic","inner":"L"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3164:75":{"id":"1:3164:75","crate_id":1,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3166:310"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:3368:2206","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:366:1681":{"id":"0:366:1681","crate_id":0,"name":"as_mut","span":{"filename":"src/lib.rs","begin":[1221,0],"end":[1225,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"::std::ffi::CStr","id":"1:46739:101","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13798:59317":{"id":"1:13798:59317","crate_id":1,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3196-0:292:1597":{"id":"b:1:3196-0:292:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"1:3173:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3170:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["1:3199:1820"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:3102:2151":{"id":"1:3102:2151","crate_id":1,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:3101:2865","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:105:1780":{"id":"0:105:1780","crate_id":0,"name":"right_or","span":{"filename":"src/lib.rs","begin":[559,4],"end":[564,5]},"visibility":"public","docs":"Return right value or given value\n\nArguments passed to `right_or` are eagerly evaluated; if you are passing\nthe result of a function call, it is recommended to use [`right_or_else`],\nwhich is lazily evaluated.\n\n[`right_or_else`]: #method.right_or_else\n\n# Examples\n\n```\n# use either::*;\nlet right: Either<&str, &str> = Right(\"right\");\nassert_eq!(right.right_or(\"foo\"), \"right\");\n\nlet left: Either<&str, &str> = Left(\"left\");\nassert_eq!(left.right_or(\"right\"), \"right\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"R"}]],"output":{"kind":"generic","inner":"R"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:118:1826":{"id":"0:118:1826","crate_id":0,"name":"factor_none","span":{"filename":"src/lib.rs","begin":[765,4],"end":[770,5]},"visibility":"public","docs":"Factors out `None` from an `Either` of [`Option`].\n\n```\nuse either::*;\nlet left: Either<_, Option<String>> = Left(Some(vec![0]));\nassert_eq!(left.factor_none(), Some(Left(vec![0])));\n\nlet right: Either<Option<Vec<u8>>, _> = Right(Some(String::new()));\nassert_eq!(right.factor_none(), Some(Right(String::new())));\n```","links":{"`Option`":"1:47779:178"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3206-0:292:1597":{"id":"b:1:3206-0:292:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"1:3180:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"1:3176:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["1:3209:128","1:3210:1429"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:13711:59304":{"id":"1:13711:59304","crate_id":1,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"4:15910:2093"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:256":{"id":"0:256","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1257,0],"end":[1267,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"Deref","id":"1:3586:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Deref","id":"1:3586:117","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"L"},"trait":{"name":"","id":"1:3586:117","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"1:3586:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:259:226","0:260:548"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3675:2194":{"id":"1:3675:2194","crate_id":1,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3677:760"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:3368:2206","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Index","id":"1:3671:2193","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:14455:142":{"id":"1:14455:142","crate_id":1,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:14456:282","1:14457:523","1:14458:285","1:14459:1088"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:172:1879":{"id":"0:172:1879","crate_id":0,"name":"nth","span":{"filename":"src/lib.rs","begin":[971,4],"end":[973,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"1:8873:158","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:326":{"id":"0:326","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[49,47],"end":[49,51]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hash","id":"1:10800:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hash","id":"1:10800:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"1:10800:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:329:720"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13708:59302":{"id":"1:13708:59302","crate_id":1,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:139":{"id":"0:139","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[861,0],"end":[897,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}},"items":["0:141:1859","0:142:848"],"negative":false,"synthetic":false,"blanket_impl":null}},"4:4415:1593":{"id":"4:4415:1593","crate_id":4,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:4416:1898","4:4417:2594","4:4419:2595","4:4420:1901","4:4421:1902","4:4422:1900","4:4423:2596","4:4425:2597","4:4426:2598","4:4427:2599","4:4428:2600","4:4430:2601"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:1:2864-0:292:1597":{"id":"b:1:2864-0:292:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:3368:2206","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"1:2858:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["1:2866:2076"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"4:6581:3420":{"id":"4:6581:3420","crate_id":4,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6582:7746"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"4:10436:2865","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:89:1731":{"id":"0:89:1731","crate_id":0,"name":"either_with","span":{"filename":"src/lib.rs","begin":[397,4],"end":[406,5]},"visibility":"public","docs":"Like `either`, but provide some context to whichever of the\nfunctions ends up being called.\n\n```\n// In this example, the context is a mutable reference\nuse either::*;\n\nlet mut result = Vec::new();\n\nlet values = vec![Left(2), Right(2.7)];\n\nfor value in values {\n    value.either_with(&mut result,\n                      |ctx, integer| ctx.push(integer),\n                      |ctx, real| ctx.push(f64::round(real) as i32));\n}\n\nassert_eq!(result, vec![2, 3]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["ctx",{"kind":"generic","inner":"Ctx"}],["f",{"kind":"generic","inner":"F"}],["g",{"kind":"generic","inner":"G"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[{"name":"Ctx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"G","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:3619:133","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Ctx"},{"kind":"generic","inner":"L"}],"output":{"kind":"generic","inner":"T"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"G"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:3619:133","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"Ctx"},{"kind":"generic","inner":"R"}],"output":{"kind":"generic","inner":"T"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:322":{"id":"0:322","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[49,42],"end":[49,45]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::Ord","id":"1:2952:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::Ord","id":"1:2952:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"1:2952:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:325:420"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:304":{"id":"0:304","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[49,15],"end":[49,24]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"1:3371:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:208:183":{"id":"0:208:183","crate_id":0,"name":"Output","span":{"filename":"src/lib.rs","begin":[1078,4],"end":[1078,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"L"},"trait":{"name":"Future","id":"1:14056:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"4:5518:3438":{"id":"4:5518:3438","crate_id":4,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5519:4972","4:5520:7752"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13731:2898":{"id":"1:13731:2898","crate_id":1,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"4:15904:2088"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"1:49718:3222","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3200-0:292:1597":{"id":"b:1:3200-0:292:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"1:3173:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["1:3202:686"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:359":{"id":"0:359","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1221,0],"end":[1225,1]},"visibility":"crate","docs":"Requires crate feature `use_std`.","links":{},"attrs":["#[cfg(feature = \"use_std\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"1:3164:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"::std::ffi::CStr","id":"1:46739:101","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"1:3164:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"::std::ffi::CStr","id":"1:46739:101","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"AsRef","id":"1:3164:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"CStr","id":"1:46739:101","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:362:310"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13734:17388":{"id":"1:13734:17388","crate_id":1,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"4:15910:2093"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"1:50025:3237","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:250:1681":{"id":"0:250:1681","crate_id":0,"name":"as_mut","span":{"filename":"src/lib.rs","begin":[1242,4],"end":[1244,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Target"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3202:686":{"id":"1:3202:686","crate_id":1,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:350:1681":{"id":"0:350:1681","crate_id":0,"name":"as_mut","span":{"filename":"src/lib.rs","begin":[1211,0],"end":[1215,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"::std::path::Path","id":"4:7253:187","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:8676-0:292:1597":{"id":"b:1:8676-0:292:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:8873:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"1:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["1:8678:1749","1:8679:1748","1:8680:775"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"1:13705":{"id":"1:13705","crate_id":1,"name":null,"span":null,"visibility":{"restricted":{"parent":"1:12784:1352","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["1:13706:800","1:13707:2611","1:13708:59302","1:13709:59303","1:13711:59304","1:13714:58825","1:13715:59305","1:13716:309","1:13717:57223","1:13718:53618","1:13720:53619","1:13722:53620","1:13724:1688","1:13726:3500","1:13727:59306","1:13728:57242","1:13729:57243","1:13730:3259","1:13731:2898","1:13732:2599","1:13733:17350","1:13734:17388","1:13735:2593","1:13736:59307","1:13737:17379","1:13738:56380","1:13741:57258","1:13744:57259","1:13747:1884","1:13751:1890","1:13755:2592","1:13758:16960","1:13761:57252","1:13764:59308","1:13767:59309","1:13770:57254","1:13773:57256","1:13776:59310","1:13779:59311","1:13782:2114","1:13785:59312","1:13788:59313","1:13791:59314","1:13794:59315","1:13796:59316","1:13798:59317","1:13800:59318","1:13801:59319","1:13802:59320","1:13805:59321","1:13808:36539","1:13811:57260","1:13814:59322","1:13817:59323","1:13820:59324","1:13823:1953","1:13825:3401","1:13826:56716","1:13827:56717","1:13828:56718","1:13829:59325","1:13831:3469","1:13832:59326"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:362:310":{"id":"0:362:310","crate_id":0,"name":"as_ref","span":{"filename":"src/lib.rs","begin":[1221,0],"end":[1225,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"::std::ffi::CStr","id":"1:46739:101","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3500:2183":{"id":"1:3500:2183","crate_id":1,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3502:183","1:3503:361"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:261":{"id":"0:261","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1269,0],"end":[1277,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"DerefMut","id":"1:3599:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"DerefMut","id":"1:3599:1589","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"L"},"trait":{"name":"","id":"1:3586:117","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"DerefMut","id":"1:3599:1589","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:264:550"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:75:1681":{"id":"0:75:1681","crate_id":0,"name":"as_mut","span":{"filename":"src/lib.rs","begin":[253,4],"end":[258,5]},"visibility":"public","docs":"Convert `&mut Either<L, R>` to `Either<&mut L, &mut R>`.\n\n```\nuse either::*;\n\nfn mutate_left(value: &mut Either<u32, u32>) {\n    if let Some(l) = value.as_mut().left() {\n        *l = 999;\n    }\n}\n\nlet mut left = Left(123);\nlet mut right = Right(123);\nmutate_left(&mut left);\nmutate_left(&mut right);\nassert_eq!(left, Left(999));\nassert_eq!(right, Right(123));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"L"}}}},{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"R"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13270:2797":{"id":"1:13270:2797","crate_id":1,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:13271:127","1:13272:55565"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:274:665":{"id":"0:274:665","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[1306,4],"end":[1308,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"1:10522:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"1:10511:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6164:59961":{"id":"5:6164:59961","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:444:2756","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8204:2755","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:444:2756","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8204:2755","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:107:1788":{"id":"0:107:1788","crate_id":0,"name":"right_or_else","span":{"filename":"src/lib.rs","begin":[600,4],"end":[608,5]},"visibility":"public","docs":"Returns right value or computes it from a closure\n\n# Examples\n\n```\n# use either::*;\nlet left: Either<String, u32> = Left(\"3\".to_string());\nassert_eq!(left.right_or_else(|x| x.parse().unwrap()), 3);\n\nlet right: Either<String, u32> = Right(3);\nassert_eq!(right.right_or_else(|_| unreachable!()), 3);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"generic","inner":"R"},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:3619:133","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"L"}],"output":{"kind":"generic","inner":"R"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:196:1890":{"id":"0:196:1890","crate_id":0,"name":"rfind","span":{"filename":"src/lib.rs","begin":[1047,4],"end":[1052,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["predicate",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"1:8873:158","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:3616:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"1:8873:158","args":null}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:6578:3434":{"id":"4:6578:3434","crate_id":4,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6579:6885","4:6580:56781"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"4:10436:2865","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:10581:2558":{"id":"1:10581:2558","crate_id":1,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10582:665"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13796:59316":{"id":"1:13796:59316","crate_id":1,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:226:1910":{"id":"0:226:1910","crate_id":0,"name":"read_until","span":{"filename":"src/lib.rs","begin":[1143,4],"end":[1145,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["byte",{"kind":"primitive","inner":"u8"}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"std::vec::Vec","id":"5:7878:239","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"4:3801:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:231:1914":{"id":"0:231:1914","crate_id":0,"name":"write","span":{"filename":"src/lib.rs","begin":[1161,4],"end":[1163,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"4:3801:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3199:1820":{"id":"1:3199:1820","crate_id":1,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"1:3173:136"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:6846:3479":{"id":"4:6846:3479","crate_id":4,"name":"TcpStreamExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6847:56755","4:6848:56756"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"4:10436:2865","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3483:2184":{"id":"1:3483:2184","crate_id":1,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3484:183","1:3485:959"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:170:500":{"id":"0:170:500","crate_id":0,"name":"count","span":{"filename":"src/lib.rs","begin":[963,4],"end":[965,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:335":{"id":"0:335","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1210,0],"end":[1210,32]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"1:3164:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"1:3164:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"AsRef","id":"1:3164:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:338:310"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:269:1921":{"id":"0:269:1921","crate_id":0,"name":"description","span":{"filename":"src/lib.rs","begin":[1291,4],"end":[1293,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13720:53619":{"id":"1:13720:53619","crate_id":1,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"1:47779:178"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"1:11204:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"1:11204:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:109:1797":{"id":"0:109:1797","crate_id":0,"name":"unwrap_left","span":{"filename":"src/lib.rs","begin":[629,4],"end":[639,5]},"visibility":"public","docs":"Returns the left value\n\n# Examples\n\n```\n# use either::*;\nlet left: Either<_, ()> = Left(3);\nassert_eq!(left.unwrap_left(), 3);\n```\n\n# Panics\n\nWhen `Either` is a `Right` value\n\n```should_panic\n# use either::*;\nlet right: Either<(), _> = Right(3);\nright.unwrap_left();\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"L"},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"core::fmt::Debug","id":"1:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3368:2206":{"id":"1:3368:2206","crate_id":1,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:339":{"id":"0:339","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1210,0],"end":[1210,32]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"AsMut","id":"1:3167:74","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"AsMut","id":"1:3167:74","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"AsMut","id":"1:3167:74","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:342:1681"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3441:2172":{"id":"1:3441:2172","crate_id":1,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3443:183","1:3444:899"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:14078:151":{"id":"1:14078:151","crate_id":1,"name":"IntoFuture","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"F"}}},"1:3811:2197":{"id":"1:3811:2197","crate_id":1,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:3368:2206","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"RangeBounds","id":"1:3742:2196","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13827:56717":{"id":"1:13827:56717","crate_id":1,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:232:1915":{"id":"0:232:1915","crate_id":0,"name":"write_all","span":{"filename":"src/lib.rs","begin":[1165,4],"end":[1167,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"4:3801:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2921:125":{"id":"1:2921:125","crate_id":1,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"1:2916:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"4:6224:3420":{"id":"4:6224:3420","crate_id":4,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6225:3703","4:6226:3704","4:6227:7745","4:6228:56597","4:6230:56601","4:6232:56598","4:6233:56599","4:6235:56600"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"4:10436:2865","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:157:1871":{"id":"0:157:1871","crate_id":0,"name":"extend","span":{"filename":"src/lib.rs","begin":[925,4],"end":[930,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["iter",{"kind":"generic","inner":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"1:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"A"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3452:2174":{"id":"1:3452:2174","crate_id":1,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3454:183","1:3455:1111"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3490:2181":{"id":"1:3490:2181","crate_id":1,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3492:183","1:3493:356"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6498:228":{"id":"5:6498:228","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6499:1409"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:148:686":{"id":"0:148:686","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[901,4],"end":[906,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["r",{"kind":"resolved_path","inner":{"name":"Result","id":"1:47904:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}},{"type":{"kind":"generic","inner":"L"}}],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13717:57223":{"id":"1:13717:57223","crate_id":1,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"4:15921:2102"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:175:1883":{"id":"0:175:1883","crate_id":0,"name":"partition","span":{"filename":"src/lib.rs","begin":[982,4],"end":[988,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"tuple","inner":[{"kind":"generic","inner":"B"},{"kind":"generic","inner":"B"}]},"c_variadic":false},"generics":{"params":[{"name":"B","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"B"},"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"1:3247:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Extend","id":"1:8681:1870","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"1:8873:158","args":null}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"1:3616:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"1:8873:158","args":null}}}}}],"output":{"kind":"primitive","inner":"bool"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13791:59314":{"id":"1:13791:59314","crate_id":1,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"prim@char":"4:15904:2088","`DoubleEndedIterator`":"1:8716:121","self::pattern":"1:13331:1625","str::match_indices":"4:15910:2093"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"1:49910:3231","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13356:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13823:1953":{"id":"1:13823:1953","crate_id":1,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"`FromStr`":"1:13270:2797","FromStr::Err":"1:13270:2797"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"1:47904:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"1:13270:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"1:13270:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:56":{"id":"0:56","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[40,30],"end":[40,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::Either::Right","name":"Right","id":"0:298:209","glob":false}},"0:209:1020":{"id":"0:209:1020","crate_id":0,"name":"poll","span":{"filename":"src/lib.rs","begin":[1080,4],"end":[1085,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Pin","id":"1:47896:190","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}}}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"core::task::Context","id":"1:14358:1895","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"core::task::Poll","id":"1:50645:192","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"1:14056:139","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:62":{"id":"0:62","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[134,0],"end":[149,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2883:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"1:2883:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"1:2883:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:65:413","0:66:415"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:149":{"id":"0:149","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[911,0],"end":[918,1]},"visibility":"crate","docs":"Convert from `Either` to `Result` with `Right => Ok` and `Left => Err`.","links":{},"attrs":["#[allow(clippy :: from_over_into)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Into","id":"1:3170:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"1:47904:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}},{"type":{"kind":"generic","inner":"L"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:152:1820"],"negative":false,"synthetic":false,"blanket_impl":null}},"4:5580:3443":{"id":"4:5580:3443","crate_id":4,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5581:4972"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:4895:3067":{"id":"1:4895:3067","crate_id":1,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4896:1749","1:4897:53578","1:4898:1873"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:228":{"id":"0:228","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1156,0],"end":[1176,1]},"visibility":"crate","docs":"`Either<L, R>` implements `Write` if both `L` and `R` do.\n\nRequires crate feature `\"use_std\"`","links":{},"attrs":["#[cfg(any(test, feature = \"use_std\"))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"Write","id":"4:4472:1596","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Write","id":"4:4472:1596","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["by_ref","write_vectored","write_all_vectored","write_fmt","is_write_vectored","write_all"],"trait":{"name":"Write","id":"4:4472:1596","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:231:1914","0:232:1915","0:233:1916","0:234:1917"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:331":{"id":"0:331","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[49,53],"end":[49,58]},"visibility":"crate","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"1:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"1:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"1:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:334:665"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:10562:110":{"id":"1:10562:110","crate_id":1,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10563:665"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:329:720":{"id":"0:329:720","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[49,47],"end":[49,51]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"1:10810:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:0:1718":{"id":"0:0:1718","crate_id":0,"name":"either","span":{"filename":"src/lib.rs","begin":[1,0],"end":[1471,1]},"visibility":"public","docs":"The enum [`Either`] with variants `Left` and `Right` is a general purpose\nsum type with two cases.\n\n[`Either`]: enum.Either.html\n\n**Crate features:**\n\n* `\"use_std\"`\nEnabled by default. Disable to make the library `#![no_std]`.\n\n* `\"serde\"`\nDisabled by default. Enable to `#[derive(Serialize, Deserialize)]` for `Either`\n","links":{},"attrs":["#![doc(html_root_url = \"https://docs.rs/either/1/\")]","#![no_std]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:53","0:56","0:292:1597","0:59:1623","0:60:1637","0:61:1640"],"is_stripped":false}},"1:13732:2599":{"id":"1:13732:2599","crate_id":1,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"1:49728:2295","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:216:1902":{"id":"0:216:1902","crate_id":0,"name":"read_to_string","span":{"filename":"src/lib.rs","begin":[1109,4],"end":[1111,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"std::string::String","id":"5:8459:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"4:3801:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:245:310":{"id":"0:245:310","crate_id":0,"name":"as_ref","span":{"filename":"src/lib.rs","begin":[1232,4],"end":[1234,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"generic","inner":"Target"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:268:1642":{"id":"0:268:1642","crate_id":0,"name":"source","span":{"filename":"src/lib.rs","begin":[1286,4],"end":[1288,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"Error","id":"1:3271:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:102:1767":{"id":"0:102:1767","crate_id":0,"name":"left_or_default","span":{"filename":"src/lib.rs","begin":[509,4],"end":[517,5]},"visibility":"public","docs":"Return left or a default\n\n# Examples\n\n```\n# use either::*;\nlet left: Either<String, u32> = Left(\"left\".to_string());\nassert_eq!(left.left_or_default(), \"left\");\n\nlet right: Either<String, u32> = Right(42);\nassert_eq!(right.left_or_default(), String::default());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"L"},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"Default","id":"1:3247:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:113:1819":{"id":"0:113:1819","crate_id":0,"name":"either_into","span":{"filename":"src/lib.rs","begin":[740,4],"end":[749,5]},"visibility":"public","docs":"Convert the contained value into `T`\n\n# Examples\n\n```\n# use either::*;\n// Both u16 and u32 can be converted to u64.\nlet left: Either<u16, u32> = Left(3u16);\nassert_eq!(left.either_into::<u64>(), 3u64);\nlet right: Either<u16, u32> = Right(7u32);\nassert_eq!(right.either_into::<u64>(), 7u64);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3170:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3170:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:4757:3450":{"id":"4:4757:3450","crate_id":4,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:4758:2536","4:4759:57000"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6185:2317":{"id":"5:6185:2317","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8459:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8459:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6168:59962":{"id":"5:6168:59962","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8459:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8459:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:224:1907":{"id":"0:224:1907","crate_id":0,"name":"fill_buf","span":{"filename":"src/lib.rs","begin":[1135,4],"end":[1137,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"4:3801:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:10845:2542":{"id":"1:10845:2542","crate_id":1,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10846:147","1:10847:16751","1:10848:53779"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:292:1597":{"id":"0:292:1597","crate_id":0,"name":"Either","span":{"filename":"src/lib.rs","begin":[50,0],"end":[55,1]},"visibility":"public","docs":"The enum `Either` with variants `Left` and `Right` is a general purpose\nsum type with two cases.\n\nThe `Either` type is symmetric and treats its variants the same way, without\npreference.\n(For representing success or error, use the regular `Result` enum instead.)","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:295:160","0:298:209"],"impls":["0:67","0:115","0:119","0:124","0:129","0:134","0:139","a:1:3404:2207-0:292:1597","a:1:3375:224-0:292:1597","a:1:3363:215-0:292:1597","a:1:9533:2368-0:292:1597","a:1:9532:2369-0:292:1597","b:1:3206-0:292:1597","b:1:14075-0:292:1597","b:1:8676-0:292:1597","b:1:2864-0:292:1597","b:1:4096-0:292:1597","b:1:2867-0:292:1597","b:1:3200-0:292:1597","b:1:3211-0:292:1597","b:1:3278-0:292:1597","b:1:3196-0:292:1597","b:5:6500-0:292:1597","b:5:848-0:292:1597","0:301","0:304","0:307","0:311","0:314","0:318","0:322","0:326","0:331","0:62","0:145","0:149","0:153","0:159","0:189","0:198","0:202","0:205","0:210","0:217","0:221","0:228","0:235","0:335","0:339","0:343","0:347","0:351","0:355","0:359","0:363","0:241","0:246","0:251","0:256","0:261","0:265","0:271"]}},"0:342:1681":{"id":"0:342:1681","crate_id":0,"name":"as_mut","span":{"filename":"src/lib.rs","begin":[1210,0],"end":[1210,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13714:58825":{"id":"1:13714:58825","crate_id":1,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"1:12795:1952"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6184:59965":{"id":"5:6184:59965","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`String`":"5:8459:220","`Box<str>`":"5:444:2756"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:444:2756","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8204:2755","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8459:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:8635:2681":{"id":"1:8635:2681","crate_id":1,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8637:2649"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3586:117":{"id":"1:3586:117","crate_id":1,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3587:226","1:3588:548"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:233:1916":{"id":"0:233:1916","crate_id":0,"name":"write_fmt","span":{"filename":"src/lib.rs","begin":[1169,4],"end":[1171,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["fmt",{"kind":"resolved_path","inner":{"name":"fmt::Arguments","id":"1:48916:73","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"io::Result","id":"4:3801:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13773:57256":{"id":"1:13773:57256","crate_id":1,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"str::splitn":"4:15910:2093","prim@char":"4:15904:2088","self::pattern":"1:13331:1625"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"1:49864:3203","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13356:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:1:3211-0:292:1597":{"id":"b:1:3211-0:292:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"1:3170:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"1:3180:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["1:3214:128","1:3215:1428"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:298:209":{"id":"0:298:209","crate_id":0,"name":"Right","span":{"filename":"src/lib.rs","begin":[54,4],"end":[54,12]},"visibility":"default","docs":"A value of type `R`.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":[{"kind":"generic","inner":"R"}]}},"1:2962:186":{"id":"1:2962:186","crate_id":1,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2964:1004","1:2965:833","1:2966:799","1:2967:718","1:2968:701"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:3368:2206","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"1:2916:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:8873:158":{"id":"1:8873:158","crate_id":1,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8874:1749","1:8875:929","1:8876:2614","1:8879:1873","1:8880:500","1:8882:1878","1:8885:2615","1:8886:1879","1:8887:2616","1:8888:2600","1:8890:2617","1:8892:2618","1:8893:2619","1:8895:848","1:8898:1877","1:8905:2620","1:8907:2621","1:8910:2622","1:8911:2623","1:8912:2624","1:8914:2625","1:8916:2626","1:8919:1320","1:8920:2601","1:8921:2627","1:8925:2628","1:8928:2629","1:8929:2630","1:8930:2631","1:8932:2598","1:8933:1881","1:8935:2632","1:8938:2633","1:8940:1883","1:8950:2634","1:8965:2635","1:8967:2636","1:8971:2637","1:8980:1874","1:8983:2638","1:8985:2639","1:8988:281","1:8995:299","1:9002:1884","1:9009:1887","1:9018:2640","1:9028:1021","1:9035:2641","1:9042:2404","1:9043:2401","1:9044:2406","1:9056:2405","1:9063:2403","1:9075:2402","1:9082:2642","1:9083:2643","1:9088:2644","1:9091:2645","1:9094:2646","1:9095:2647","1:9097:2648","1:9099:2649","1:9101:420","1:9104:2650","1:9107:1004","1:9110:2651","1:9113:609","1:9116:2652","1:9119:914","1:9121:833","1:9123:799","1:9125:718","1:9127:701","1:9129:2653","1:9130:2654","1:9138:2655"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:14071:151":{"id":"1:14071:151","crate_id":1,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:14072:183","1:14073:151","1:14074:774"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3495:2182":{"id":"1:3495:2182","crate_id":1,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3497:183","1:3498:358"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:13829:59325":{"id":"1:13829:59325","crate_id":1,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"4:15904:2088"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"1:50041:3239","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:61:1640":{"id":"0:61:1640","crate_id":0,"name":"try_right","span":{"filename":"src/lib.rs","begin":[125,0],"end":[132,1]},"visibility":"public","docs":"Dual to `try_left!`, see its documentation for more information.","links":{},"attrs":["#[macro_export]"],"deprecation":null,"kind":"macro","inner":"macro_rules! try_right {\n    ($expr:expr) => { ... };\n}"},"1:3671:2193":{"id":"1:3671:2193","crate_id":1,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3673:183","1:3674:759"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:3368:2206","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:3511:2186":{"id":"1:3511:2186","crate_id":1,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3513:183","1:3514:1246"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:8681:1870":{"id":"1:8681:1870","crate_id":1,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:8683:1871","1:8685:2612","1:8686:2613"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:10569:120":{"id":"1:10569:120","crate_id":1,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:10570:665"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:355":{"id":"0:355","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1216,0],"end":[1220,1]},"visibility":"crate","docs":"Requires crate feature `use_std`.","links":{},"attrs":["#[cfg(feature = \"use_std\")]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"AsMut","id":"1:3167:74","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"::std::ffi::OsStr","id":"4:2654:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"AsMut","id":"1:3167:74","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"::std::ffi::OsStr","id":"4:2654:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"AsMut","id":"1:3167:74","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"OsStr","id":"4:2654:181","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:358:1681"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:100:775":{"id":"0:100:775","crate_id":0,"name":"into_iter","span":{"filename":"src/lib.rs","begin":[461,4],"end":[470,5]},"visibility":"public","docs":"Convert the inner value to an iterator.\n\n```\nuse either::*;\n\nlet left: Either<_, Vec<u32>> = Left(vec![1, 2, 3, 4, 5]);\nlet mut right: Either<Vec<u32>, _> = Right(vec![]);\nright.extend(left.into_iter());\nassert_eq!(right, Right(vec![1, 2, 3, 4, 5]));\n```","links":{},"attrs":["#[allow(clippy :: should_implement_trait)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"L"},"trait":{"name":"","id":"1:8672:152","args":null}}}},{"type":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"name":"","id":"1:8672:152","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"1:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"1:8672:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"L"},"trait":{"name":"","id":"1:8672:152","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:251":{"id":"0:251","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1247,0],"end":[1255,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Target","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"AsMut","id":"1:3167:74","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"generic","inner":"Target"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"AsMut","id":"1:3167:74","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"generic","inner":"Target"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"AsMut","id":"1:3167:74","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"generic","inner":"Target"}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:255:1681"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:23174:3070":{"id":"1:23174:3070","crate_id":1,"name":"SimdPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:23175:2968","1:23176:1259","1:23177:1284"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:6246:3423":{"id":"4:6246:3423","crate_id":4,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:6247:58719","4:6248:6845","4:6249:58720","4:6250:58721","4:6251:58722","4:6252:58723"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"4:10436:2865","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:311":{"id":"0:311","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[49,26],"end":[49,28]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"1:3372:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:260:548":{"id":"0:260:548","crate_id":0,"name":"deref","span":{"filename":"src/lib.rs","begin":[1264,4],"end":[1266,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"1:3586:117","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:101:1761":{"id":"0:101:1761","crate_id":0,"name":"left_or","span":{"filename":"src/lib.rs","begin":[490,4],"end":[495,5]},"visibility":"public","docs":"Return left value or given value\n\nArguments passed to `left_or` are eagerly evaluated; if you are passing\nthe result of a function call, it is recommended to use [`left_or_else`],\nwhich is lazily evaluated.\n\n[`left_or_else`]: #method.left_or_else\n\n# Examples\n\n```\n# use either::*;\nlet left: Either<&str, &str> = Left(\"left\");\nassert_eq!(left.left_or(\"foo\"), \"left\");\n\nlet right: Either<&str, &str> = Right(\"right\");\nassert_eq!(right.left_or(\"left\"), \"left\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["other",{"kind":"generic","inner":"L"}]],"output":{"kind":"generic","inner":"L"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:53":{"id":"0:53","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[40,24],"end":[40,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::Either::Left","name":"Left","id":"0:295:160","glob":false}},"a:1:3404:2207-0:292:1597":{"id":"a:1:3404:2207-0:292:1597","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:3404:2207","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"1:3404:2207","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"1:3404:2207","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:270:1922":{"id":"0:270:1922","crate_id":0,"name":"cause","span":{"filename":"src/lib.rs","begin":[1296,4],"end":[1298,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"dyn_trait","inner":{"traits":[{"trait":{"name":"Error","id":"1:3271:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2883:105":{"id":"1:2883:105","crate_id":1,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2884:413","1:2885:415"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:325:420":{"id":"0:325:420","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[49,42],"end":[49,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"1:37899:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:14539:2754":{"id":"1:14539:2754","crate_id":1,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:14540:53846","1:14541:53847","1:14542:53848","1:14543:53849","1:14544:53850","1:14545:53851","1:14546:2598"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:159":{"id":"0:159","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[934,0],"end":[1024,1]},"visibility":"crate","docs":"`Either<L, R>` is an iterator if both `L` and `R` are iterators.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:8873:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"1:8873:158","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"L"},"trait":{"name":"","id":"1:8873:158","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["filter_map","ge","advance_by","count","any","min_by","le","find","all","last","cycle","map","try_find","partition_in_place","eq_by","flat_map","enumerate","step_by","by_ref","min_by_key","is_sorted","nth","array_chunks","size_hint","rposition","is_partitioned","flatten","peekable","zip","max","is_sorted_by","sum","rev","fold","try_fold","fuse","skip_while","position","intersperse","chain","skip","max_by","find_map","is_sorted_by_key","collect","product","unzip","try_for_each","inspect","take_while","lt","intersperse_with","partial_cmp","take","max_by_key","__iterator_get_unchecked","cmp_by","copied","reduce","gt","try_collect","map_while","filter","next_chunk","cmp","min","eq","partition","partial_cmp_by","cloned","for_each","try_reduce","ne","collect_into","scan"],"trait":{"name":"Iterator","id":"1:8873:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:162:1749","0:163:929","0:164:1873","0:165:1874","0:168:1877","0:170:500","0:171:1878","0:172:1879","0:173:1881","0:175:1883","0:178:281","0:180:299","0:182:1884","0:184:1887","0:187:1021"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:850:3777":{"id":"5:850:3777","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"1:24071:2966":{"id":"1:24071:2966","crate_id":1,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:24072:2968"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:24067:2865","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"1:3373:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13350:2871":{"id":"1:13350:2871","crate_id":1,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["1:13352:2891","1:13353:929","1:13354:53746","1:13355:53747"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:4497:1592":{"id":"4:4497:1592","crate_id":4,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:4498:1907","4:4499:1908","4:4500:2591","4:4502:1910","4:4503:1912","4:4505:2592","4:4506:2593"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"4:4415:1593","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:23434:2969":{"id":"1:23434:2969","crate_id":1,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdElement","id":"1:24071:2966","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"1:23425:2865","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:23048:3069":{"id":"1:23048:3069","crate_id":1,"name":"SimdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:23049:2968","1:23050:55392","1:23051:55676","1:23052:55677","1:23053:55678","1:23054:42254","1:23055:55679","1:23056:55680","1:23057:55681","1:23058:55682","1:23059:55683","1:23060:55684","1:23061:55685","1:23062:55686","1:23063:55687","1:23064:55688","1:23065:55444","1:23066:55689","1:23067:53828","1:23068:53827","1:23069:53829","1:23070:55393","1:23071:55394","1:23072:55395","1:23073:55396"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"1:3373:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"1:23150:2865","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:23237:2868":{"id":"1:23237:2868","crate_id":1,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:23227:2865","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:3610:2192":{"id":"1:3610:2192","crate_id":1,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3611:583"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:111:1807":{"id":"0:111:1807","crate_id":0,"name":"expect_left","span":{"filename":"src/lib.rs","begin":[689,4],"end":[697,5]},"visibility":"public","docs":"Returns the left value\n\n# Examples\n\n```\n# use either::*;\nlet left: Either<_, ()> = Left(3);\nassert_eq!(left.expect_left(\"value was Right\"), 3);\n```\n\n# Panics\n\nWhen `Either` is a `Right` value\n\n```should_panic\n# use either::*;\nlet right: Either<(), _> = Right(3);\nright.expect_left(\"value was Right\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["msg",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"generic","inner":"L"},"c_variadic":false},"generics":{"params":[],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"core::fmt::Debug","id":"1:10562:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3906:2203":{"id":"1:3906:2203","crate_id":1,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:264:550":{"id":"0:264:550","crate_id":0,"name":"deref_mut","span":{"filename":"src/lib.rs","begin":[1274,4],"end":[1276,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"1:3586:117","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:14056:139":{"id":"1:14056:139","crate_id":1,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:14057:183","1:14058:1020"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3653:2157":{"id":"1:3653:2157","crate_id":1,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3655:242","1:3656:208","1:3657:53941"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3869:2202":{"id":"1:3869:2202","crate_id":1,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:3368:2206","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:3828:138":{"id":"1:3828:138","crate_id":1,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3830:692"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"1:3823:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:14077:183":{"id":"1:14077:183","crate_id":1,"name":"Output","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"Future","id":"1:14056:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"1:23386:31359":{"id":"1:23386:31359","crate_id":1,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:23387:5923","1:23388:55370","1:23389:55371"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:23379:2865","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:67":{"id":"0:67","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[151,0],"end":[750,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:70:1649","0:71:1653","0:72:1659","0:73:1664","0:74:310","0:75:1681","0:76:1684","0:77:1687","0:78:1693","0:79:1700","0:82:1707","0:85:1718","0:89:1731","0:94:1737","0:97:1741","0:100:775","0:101:1761","0:102:1767","0:103:1773","0:105:1780","0:106:1784","0:107:1788","0:109:1797","0:110:1803","0:111:1807","0:112:1812","0:113:1819"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:13744:57259":{"id":"1:13744:57259","crate_id":1,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"1:13331:1625","prim@char":"4:15904:2088"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13356:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:2861:98":{"id":"1:2861:98","crate_id":1,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2863:53429"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"1:3368:2206","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"1:2858:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:13814:59322":{"id":"1:13814:59322","crate_id":1,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"4:15904:2088","self::pattern":"1:13331:1625"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"1:13356:2872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:70:1649":{"id":"0:70:1649","crate_id":0,"name":"is_left","span":{"filename":"src/lib.rs","begin":[161,4],"end":[166,5]},"visibility":"public","docs":"Return true if the value is the `Left` variant.\n\n```\nuse either::*;\n\nlet values = [Left(1), Right(\"the right value\")];\nassert_eq!(values[0].is_left(), true);\nassert_eq!(values[1].is_left(), false);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:142:848":{"id":"0:142:848","crate_id":0,"name":"map","span":{"filename":"src/lib.rs","begin":[888,4],"end":[896,5]},"visibility":"public","docs":"Map `f` over the contained value and return the result in the\ncorresponding variant.\n\n```\nuse either::*;\n\nlet value: Either<_, i32> = Right(42);\n\nlet other = value.map(|x| x * 2);\nassert_eq!(other, Right(84));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"M"}},{"type":{"kind":"generic","inner":"M"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"M","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"1:3619:133","args":{"parenthesized":{"inputs":[{"kind":"generic","inner":"T"}],"output":{"kind":"generic","inner":"M"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"4:5568:3440":{"id":"4:5568:3440","crate_id":4,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:5569:56873"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:4145:3034":{"id":"1:4145:3034","crate_id":1,"name":"Provider","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4146:2590"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:60:1637":{"id":"0:60:1637","crate_id":0,"name":"try_left","span":{"filename":"src/lib.rs","begin":[114,0],"end":[121,1]},"visibility":"public","docs":"Macro for unwrapping the left side of an `Either`, which fails early\nwith the opposite side. Can only be used in functions that return\n`Either` because of the early return of `Right` that it provides.\n\nSee also `try_right!` for its dual, which applies the same just to the\nright side.\n\n# Example\n\n```\nuse either::{Either, Left, Right};\n\nfn twice(wrapper: Either<u32, &str>) -> Either<u32, &str> {\n    let value = either::try_left!(wrapper);\n    Left(value * 2)\n}\n\nfn main() {\n    assert_eq!(twice(Left(2)), Left(4));\n    assert_eq!(twice(Right(\"ups\")), Right(\"ups\"));\n}\n```","links":{},"attrs":["#[macro_export]"],"deprecation":null,"kind":"macro","inner":"macro_rules! try_left {\n    ($expr:expr) => { ... };\n}"},"0:210":{"id":"0:210","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1092,0],"end":[1112,1]},"visibility":"crate","docs":"`Either<L, R>` implements `Read` if both `L` and `R` do.\n\nRequires crate feature `\"use_std\"`","links":{},"attrs":["#[cfg(any(test, feature = \"use_std\"))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"4:4415:1593","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"4:4415:1593","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["read_to_end","bytes","read_buf","read_to_string","chain","read_buf_exact","read_vectored","read_exact","take","by_ref","is_read_vectored"],"trait":{"name":"Read","id":"4:4415:1593","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:213:1898","0:214:1900","0:215:1901","0:216:1902"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:3431:2170":{"id":"1:3431:2170","crate_id":1,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3433:183","1:3434:270"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"4:4490:1594":{"id":"4:4490:1594","crate_id":4,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["4:4491:1905","4:4492:2602","4:4493:2603","4:4494:2604"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:205":{"id":"0:205","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1073,0],"end":[1086,1]},"visibility":"crate","docs":"`Either<L, R>` is a future if both `L` and `R` are futures.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"L","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"L"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"1:14056:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"1:14056:139","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"L"},"trait":{"name":"","id":"1:14056:139","args":null}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Future","id":"1:14056:139","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Either","id":"0:292:1597","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"L"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:208:183","0:209:1020"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:163:929":{"id":"0:163:929","crate_id":0,"name":"next","span":{"filename":"src/lib.rs","begin":[941,4],"end":[943,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"1:47779:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"1:8873:158","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:3470:2178":{"id":"1:3470:2178","crate_id":1,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3472:900"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3474:2177":{"id":"1:3474:2177","crate_id":1,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:3476:564"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:3214:128":{"id":"1:3214:128","crate_id":1,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"1:39079:2150","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"5:6502:1409":{"id":"5:6502:1409","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8459:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:13782:2114":{"id":"1:13782:2114","crate_id":1,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"prim@char":"4:15904:2088","str::matches":"4:15910:2093","`DoubleEndedIterator`":"1:8716:121","self::pattern":"1:13331:1625"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"1:49946:3233","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"1:13341:2792","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5910:3764":{"id":"5:5910:3764","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5912:183","5:5913:2152"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}}},"paths":{"1:22899:56143":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"4:9545:3676":{"crate_id":4,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"17:12573:5212":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"1:23379:2865":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"12:353:7811":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"6:527:6018":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"1:39079:2150":{"crate_id":1,"path":["core","convert","Infallible"],"kind":"enum"},"17:0:2147":{"crate_id":17,"path":["object"],"kind":"module"},"1:13350:2871":{"crate_id":1,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:47264:2672":{"crate_id":1,"path":["core","iter","sources","once","Once"],"kind":"struct"},"16:6549:4128":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"17:11354:4447":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"16:7659:4212":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"1:56630:241":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:3823:229":{"crate_id":1,"path":["core","ops","try_trait","Try"],"kind":"trait"},"18:611:4571":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"1:3369:2392":{"crate_id":1,"path":["core","marker","Unsize"],"kind":"trait"},"5:5948:4673":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"4:3085:1591":{"crate_id":4,"path":["std","io"],"kind":"module"},"1:2276:2942":{"crate_id":1,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:48539:2555":{"crate_id":1,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:46692:3388":{"crate_id":1,"path":["core","char","ToLowercase"],"kind":"struct"},"1:2285:2943":{"crate_id":1,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:3372:221":{"crate_id":1,"path":["core","marker","StructuralEq"],"kind":"trait"},"12:1183:4016":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"16:6012:4109":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"1:25150:3274":{"crate_id":1,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:7935:2617":{"crate_id":1,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"6:6925:6902":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"11:0:2142":{"crate_id":11,"path":["adler"],"kind":"module"},"4:11276:3693":{"crate_id":4,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"17:13794:5591":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"1:23762:2970":{"crate_id":1,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"4:15360:6992":{"crate_id":4,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"17:10831:4465":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"17:12318:5155":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"1:3368:2206":{"crate_id":1,"path":["core","marker","Sized"],"kind":"trait"},"5:777:7713":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"17:11579:5017":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"16:3521:5655":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"6:5247:6575":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"6:6979:6912":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"17:12716:5236":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"1:3404:2207":{"crate_id":1,"path":["core","marker","Unpin"],"kind":"trait"},"1:49864:3203":{"crate_id":1,"path":["core","str","iter","RSplitN"],"kind":"struct"},"4:7944:3630":{"crate_id":4,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"1:49642:3214":{"crate_id":1,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"17:13529:5505":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"6:571:6046":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"16:5443:4161":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"16:4803:5677":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"1:49607:2683":{"crate_id":1,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:10565:110":{"crate_id":1,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"15:0:2145":{"crate_id":15,"path":["addr2line"],"kind":"module"},"4:2481:2271":{"crate_id":4,"path":["std","error","Report"],"kind":"struct"},"17:10291:4440":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"4:5641:3752":{"crate_id":4,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"4:9530:3675":{"crate_id":4,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"1:4145:3034":{"crate_id":1,"path":["core","any","Provider"],"kind":"trait"},"5:7477:1748":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"16:3177:4377":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"4:11265:3756":{"crate_id":4,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"1:46386:3091":{"crate_id":1,"path":["core","array","TryFromSliceError"],"kind":"struct"},"17:9756:60596":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"5:1760:3841":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"1:25117:166":{"crate_id":1,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"9:1056:3946":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"16:4871:5679":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"1:8873:158":{"crate_id":1,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:14147:189":{"crate_id":1,"path":["core","future","pending","Pending"],"kind":"struct"},"4:4757:3450":{"crate_id":4,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"4:14686:3589":{"crate_id":4,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"1:23386:31359":{"crate_id":1,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"6:3883:6230":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"1:56565:241":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"5:1719:3507":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"1:46905:2693":{"crate_id":1,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"17:10127:4465":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"6:5204:6558":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"16:5460:4162":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"14:189:7708":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"4:5983:3699":{"crate_id":4,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"1:46602:3134":{"crate_id":1,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"12:1784:4662":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"5:853:109":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"4:8458:3709":{"crate_id":4,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"1:2180:583":{"crate_id":1,"path":["core","mem","drop"],"kind":"function"},"4:6246:3423":{"crate_id":4,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"4:8986:7736":{"crate_id":4,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"6:6034:6766":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"18:766:4822":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"17:13428:5475":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"6:1526:6085":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"1:23231:2866":{"crate_id":1,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"4:7441:3581":{"crate_id":4,"path":["std","process","ChildStdin"],"kind":"struct"},"1:46699:3389":{"crate_id":1,"path":["core","char","ToUppercase"],"kind":"struct"},"4:4472:1596":{"crate_id":4,"path":["std","io","Write"],"kind":"trait"},"1:53286:3006":{"crate_id":1,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"4:14668:56533":{"crate_id":4,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"1:24820:172":{"crate_id":1,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"4:14933:6990":{"crate_id":4,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"1:47045:2705":{"crate_id":1,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"16:6141:4183":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"1:3586:117":{"crate_id":1,"path":["core","ops","deref","Deref"],"kind":"trait"},"4:14907:56770":{"crate_id":4,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"7:38:44088":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"4:14419:7818":{"crate_id":4,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"1:24538:3287":{"crate_id":1,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"12:2052:3482":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"4:11964:2536":{"crate_id":4,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"1:53628:7160":{"crate_id":1,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"16:7155:4209":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"1:51483:3003":{"crate_id":1,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"17:13271:5436":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"4:10731:2306":{"crate_id":4,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"17:11742:5051":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"12:466:8020":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:47779:178":{"crate_id":1,"path":["core","option","Option"],"kind":"enum"},"6:6007:6756":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"17:13721:5571":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"2:321:207":{"crate_id":2,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:14419:203":{"crate_id":1,"path":["core","task","ready","Ready"],"kind":"struct"},"17:13233:5429":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"4:11290:3702":{"crate_id":4,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"4:853:3606":{"crate_id":4,"path":["std","thread","scoped","Scope"],"kind":"struct"},"4:3803:128":{"crate_id":4,"path":["std","io","error","Error"],"kind":"struct"},"12:2040:2761":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"1:13341:2792":{"crate_id":1,"path":["core","str","pattern","Pattern"],"kind":"trait"},"4:10458:3611":{"crate_id":4,"path":["std","thread","Builder"],"kind":"struct"},"6:4296:6408":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"1:11384:2536":{"crate_id":1,"path":["core","slice","iter","Iter"],"kind":"struct"},"17:10187:7647":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"6:4127:6370":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"17:10422:7650":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"16:0:2146":{"crate_id":16,"path":["gimli"],"kind":"module"},"16:7131:4207":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"4:11174:3748":{"crate_id":4,"path":["std","net","parser","AddrKind"],"kind":"enum"},"6:4048:6330":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"1:51309:7101":{"crate_id":1,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:8448:2671":{"crate_id":1,"path":["core","iter","sources","once","once"],"kind":"function"},"1:24952:3138":{"crate_id":1,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"9:27:3935":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"5:1673:2537":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"16:5855:4175":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"1:9153:1892":{"crate_id":1,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:51453:3015":{"crate_id":1,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"9:996:3952":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"17:10211:7649":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"1:3811:2197":{"crate_id":1,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"18:739:7623":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"6:4198:6390":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"5:3905:4664":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"17:11002:7678":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"16:5668:4169":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"6:1662:6172":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"4:3060:3648":{"crate_id":4,"path":["std","fs","canonicalize"],"kind":"function"},"4:7739:3629":{"crate_id":4,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"5:8213:1748":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"6:4308:6415":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"1:3271:128":{"crate_id":1,"path":["core","error","Error"],"kind":"trait"},"4:1610:3518":{"crate_id":4,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"1:13356:2872":{"crate_id":1,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"6:1727:6211":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:542:4085":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"4:997:3473":{"crate_id":4,"path":["std","thread","JoinHandle"],"kind":"struct"},"17:10435:4463":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"5:3462:3485":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"4:15927:2108":{"crate_id":4,"path":["std","usize"],"kind":"primitive"},"17:1311:4549":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"4:10668:3448":{"crate_id":4,"path":["std","fs","OpenOptions"],"kind":"struct"},"9:603:44267":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"5:5861:4664":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"1:24422:7007":{"crate_id":1,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"13:0:2138":{"crate_id":13,"path":["std_detect"],"kind":"module"},"16:547:4350":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"4:12145:3555":{"crate_id":4,"path":["std","time","SystemTimeError"],"kind":"struct"},"4:2510:2272":{"crate_id":4,"path":["std","error","Indented"],"kind":"struct"},"16:3129:4385":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"17:9240:4444":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"6:5974:6733":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"17:13557:5512":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"17:10394:4528":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"6:1558:6098":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"6:1621:6140":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"1:49810:3227":{"crate_id":1,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"4:14952:3547":{"crate_id":4,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"17:13369:5461":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"4:5283:3688":{"crate_id":4,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"5:5388:202":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"17:10571:4502":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"6:618:6071":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"1:50526:3311":{"crate_id":1,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"6:4110:6362":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"1:9533:2368":{"crate_id":1,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"16:7379:4134":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"17:13196:5420":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"12:114:8019":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"17:11530:5009":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"5:3948:1939":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"6:3933:6267":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"4:4388:2283":{"crate_id":4,"path":["std","io","Guard"],"kind":"struct"},"1:51353:3014":{"crate_id":1,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"17:11130:7680":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"5:8204:2755":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"4:15274:3688":{"crate_id":4,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"12:2404:60590":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"16:7355:4112":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"1:2055:2283":{"crate_id":1,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"4:11972:3535":{"crate_id":4,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"17:11945:5093":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"1:46095:2158":{"crate_id":1,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"16:7121:4206":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"4:10814:3577":{"crate_id":4,"path":["std","io","error","Custom"],"kind":"struct"},"1:49652:3215":{"crate_id":1,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:24310:7000":{"crate_id":1,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"4:1374:2536":{"crate_id":4,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"9:809:2810":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"1:13559:110":{"crate_id":1,"path":["core","str","lossy","Debug"],"kind":"struct"},"4:6654:3412":{"crate_id":4,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"4:14655:3478":{"crate_id":4,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"17:12687:5233":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"6:6943:6905":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"18:0:2148":{"crate_id":18,"path":["memchr"],"kind":"module"},"16:6490:4192":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"1:3375:224":{"crate_id":1,"path":["core","marker","Sync"],"kind":"trait"},"4:15916:2097":{"crate_id":4,"path":["std","i8"],"kind":"primitive"},"17:13037:5365":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"1:48081:81":{"crate_id":1,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:5268:3149":{"crate_id":1,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"5:1533:3516":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"4:3755:3579":{"crate_id":4,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"1:53572:3013":{"crate_id":1,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"4:8451:3707":{"crate_id":4,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"4:14162:3613":{"crate_id":4,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"1:4997:3140":{"crate_id":1,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"17:4008:7634":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"18:661:4574":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"5:1909:4664":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"1:8741:1891":{"crate_id":1,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"17:9826:4465":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"5:2005:2759":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"17:13323:5451":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"1:50350:3300":{"crate_id":1,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"9:0:2140":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"16:7792:4148":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"5:7207:4677":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"4:15213:3680":{"crate_id":4,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"5:2266:4666":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"1:10850:2543":{"crate_id":1,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"17:13180:5417":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"4:1146:33264":{"crate_id":4,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"17:13281:5437":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"4:11221:3684":{"crate_id":4,"path":["std","net","Shutdown"],"kind":"enum"},"5:1684:1748":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"4:9583:4704":{"crate_id":4,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"14:231:2786":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"5:8266:196":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"1:49550:3208":{"crate_id":1,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"6:6856:6894":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"1:13407:2876":{"crate_id":1,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"6:6896:6895":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"1:8375:2319":{"crate_id":1,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"17:10530:4953":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"4:14424:3448":{"crate_id":4,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"1:48375:92":{"crate_id":1,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"4:2397:7732":{"crate_id":4,"path":["std","env","SplitPaths"],"kind":"struct"},"17:12496:5199":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"16:5217:4361":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"6:4392:6456":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"4:1418:3506":{"crate_id":4,"path":["std","collections","hash","map","Values"],"kind":"struct"},"4:11527:2815":{"crate_id":4,"path":["std","path","Ancestors"],"kind":"struct"},"6:6954:6909":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"1:2390:2159":{"crate_id":1,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"12:1121:3516":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"5:981:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"5:1740:3509":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:51375:3002":{"crate_id":1,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:50016:3236":{"crate_id":1,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"12:183:4023":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"6:601:6063":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"1:24787:175":{"crate_id":1,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"16:3478:4382":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"17:9160:4520":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"4:4036:2322":{"crate_id":4,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"1:49686:2795":{"crate_id":1,"path":["core","str","error","Utf8Error"],"kind":"struct"},"4:1578:3515":{"crate_id":4,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"17:13247:5434":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"16:5273:4900":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"1:51643:2972":{"crate_id":1,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:50327:2886":{"crate_id":1,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"4:8550:3719":{"crate_id":4,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"1:3511:2186":{"crate_id":1,"path":["core","ops","bit","Shr"],"kind":"trait"},"4:11054:3454":{"crate_id":4,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"1:48417:3298":{"crate_id":1,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"18:704:4811":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"16:3029:4375":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"6:5216:6562":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"4:13414:7732":{"crate_id":4,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"1:46158:196":{"crate_id":1,"path":["core","ops","range","Range"],"kind":"struct"},"12:787:3508":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"1:8668:137":{"crate_id":1,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:11588:3199":{"crate_id":1,"path":["core","slice","iter","RSplit"],"kind":"struct"},"4:15191:3459":{"crate_id":4,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"4:10993:2294":{"crate_id":4,"path":["std","io","Take"],"kind":"struct"},"16:3686:5656":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"6:4340:6429":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"9:157:3903":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"6:6908:6897":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"17:1236:7633":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"6:5541:6700":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"4:11932:6985":{"crate_id":4,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"6:4256:6395":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"5:3366:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"1:48333:85":{"crate_id":1,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"17:13908:5625":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:50645:192":{"crate_id":1,"path":["core","task","poll","Poll"],"kind":"enum"},"17:12620:5226":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"16:4840:5678":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"6:5478:6687":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"5:8244:59121":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"16:6433:4190":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"6:5405:6660":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"16:4467:5667":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"5:1072:2536":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"4:1466:3511":{"crate_id":4,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"12:399:4021":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"12:1162:4015":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"6:5447:6679":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"16:7323:4133":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"4:11308:3433":{"crate_id":4,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"1:3529:2190":{"crate_id":1,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"6:4509:6502":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"12:0:2143":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"1:24460:8998":{"crate_id":1,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"6:88:39160":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"1:52022:2977":{"crate_id":1,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"12:2412:5925":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"17:2484:46510":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"1:46646:3386":{"crate_id":1,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"4:10437:3603":{"crate_id":4,"path":["std","thread","local","AccessError"],"kind":"struct"},"16:3221:4379":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"4:14087:2310":{"crate_id":4,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"1:24168:3268":{"crate_id":1,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"16:7110:4205":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"5:7878:239":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"1:3490:2181":{"crate_id":1,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"18:849:4565":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"4:6105:3700":{"crate_id":4,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"6:3877:6229":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"17:10610:7663":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"1:3906:2203":{"crate_id":1,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"4:7544:3586":{"crate_id":4,"path":["std","process","Stdio"],"kind":"struct"},"18:169:8017":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"6:6205:6850":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"17:9636:7635":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"6:4005:6312":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"16:7471:4108":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:3478:2179":{"crate_id":1,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:3613:131":{"crate_id":1,"path":["core","ops","function","Fn"],"kind":"trait"},"1:21:677":{"crate_id":1,"path":["core","format_args"],"kind":"macro"},"4:5764:3761":{"crate_id":4,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"0:61:1640":{"crate_id":0,"path":["either","try_right"],"kind":"macro"},"16:7200:4129":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"1:51399:2994":{"crate_id":1,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"6:5293:6597":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"6:5433:6674":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"4:15044:3494":{"crate_id":4,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"1:48165:82":{"crate_id":1,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"6:4410:6463":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"17:12431:5190":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"6:157:39226":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"1:2921:125":{"crate_id":1,"path":["core","cmp","Eq"],"kind":"trait"},"5:8481:2784":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"4:14883:3587":{"crate_id":4,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"17:2512:4529":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"16:5649:4168":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"4:11538:2816":{"crate_id":4,"path":["std","path","StripPrefixError"],"kind":"struct"},"4:6581:3420":{"crate_id":4,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"1:7158:2709":{"crate_id":1,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:46849:2683":{"crate_id":1,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:5726:3071":{"crate_id":1,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"1:5705:2846":{"crate_id":1,"path":["core","ffi","c_void"],"kind":"enum"},"1:39115:3852":{"crate_id":1,"path":["core","error","private","Internal"],"kind":"struct"},"16:2772:4396":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"17:12455:5193":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"6:4346:6431":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"6:593:6058":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"16:3743:5657":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"4:6728:3417":{"crate_id":4,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"17:10115:4545":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"4:15924:2105":{"crate_id":4,"path":["std","u64"],"kind":"primitive"},"1:6716:2687":{"crate_id":1,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:23434:2969":{"crate_id":1,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"4:14651:7739":{"crate_id":4,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"0:59:1623":{"crate_id":0,"path":["either","for_both"],"kind":"macro"},"6:4061:6335":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"4:2917:1902":{"crate_id":4,"path":["std","fs","read_to_string"],"kind":"function"},"17:13155:5407":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"1:14358:1895":{"crate_id":1,"path":["core","task","wake","Context"],"kind":"struct"},"4:6650:3415":{"crate_id":4,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"4:15905:2089":{"crate_id":4,"path":["std","unit"],"kind":"primitive"},"16:7768:4118":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"4:11986:3538":{"crate_id":4,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"4:15059:3495":{"crate_id":4,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"4:6486:6781":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"6:4148:6379":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:5223:2569":{"crate_id":1,"path":["core","cell","Ref"],"kind":"struct"},"1:3671:2193":{"crate_id":1,"path":["core","ops","index","Index"],"kind":"trait"},"1:32613:3316":{"crate_id":1,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"6:4088:6349":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"17:13377:5463":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"6:6688:6893":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"12:2045:2759":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"17:13306:5446":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"5:8423:2829":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"17:4157:4503":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"4:15917:2098":{"crate_id":4,"path":["std","i16"],"kind":"primitive"},"18:829:4564":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"17:13817:5604":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"4:15908:2091":{"crate_id":4,"path":["std","array"],"kind":"primitive"},"1:8631:2682":{"crate_id":1,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:23290:2968":{"crate_id":1,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"4:15923:2104":{"crate_id":4,"path":["std","u32"],"kind":"primitive"},"1:3391:2395":{"crate_id":1,"path":["core","marker","Freeze"],"kind":"trait"},"17:13573:5515":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"1:5213:3148":{"crate_id":1,"path":["core","cell","BorrowRef"],"kind":"struct"},"4:4497:1592":{"crate_id":4,"path":["std","io","BufRead"],"kind":"trait"},"1:10717:7763":{"crate_id":1,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"1:49846:3202":{"crate_id":1,"path":["core","str","iter","SplitN"],"kind":"struct"},"16:7208:4210":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"1:47904:207":{"crate_id":1,"path":["core","result","Result"],"kind":"enum"},"1:50144:2874":{"crate_id":1,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"17:11754:5054":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"1:4:986":{"crate_id":1,"path":["core","panic"],"kind":"macro"},"4:11874:3587":{"crate_id":4,"path":["std","process","ExitStatus"],"kind":"struct"},"1:53610:2978":{"crate_id":1,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"6:6671:6884":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"6:5274:6595":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:47836:1748":{"crate_id":1,"path":["core","option","IntoIter"],"kind":"struct"},"6:1544:6093":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:4840:2857":{"crate_id":1,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:56617:241":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"16:6050:4179":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"17:9326:4445":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"12:815:3509":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"1:46756:3295":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:47086:2707":{"crate_id":1,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"5:3114:59299":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"4:14449:3640":{"crate_id":4,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"5:4017:2759":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"16:5530:4164":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"10:0:2141":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"17:13887:5619":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"17:12674:5232":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"4:10463:3628":{"crate_id":4,"path":["std","thread","ThreadId"],"kind":"struct"},"6:1634:6147":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"17:13073:5395":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"6:1626:6142":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"17:11068:4454":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"1:9532:2369":{"crate_id":1,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"17:10028:7643":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"1:11553:3198":{"crate_id":1,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"4:11902:3589":{"crate_id":4,"path":["std","process","ExitCode"],"kind":"struct"},"1:49084:7776":{"crate_id":1,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"16:6130:4182":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"4:9446:4702":{"crate_id":4,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"1:3164:75":{"crate_id":1,"path":["core","convert","AsRef"],"kind":"trait"},"5:7947:4683":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"1:10569:120":{"crate_id":1,"path":["core","fmt","Display"],"kind":"trait"},"5:984:3785":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"17:10147:4911":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"6:6016:6757":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"4:14084:2314":{"crate_id":4,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"4:3042:2937":{"crate_id":4,"path":["std","fs","metadata"],"kind":"function"},"4:8872:3716":{"crate_id":4,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"1:46706:3390":{"crate_id":1,"path":["core","char","CaseMappingIter"],"kind":"enum"},"16:3402:4098":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"4:15345:56780":{"crate_id":4,"path":["std","panicking","Hook"],"kind":"enum"},"17:11822:5074":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"1:24331:3113":{"crate_id":1,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"5:3104:3777":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"6:3907:6247":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"4:10685:3449":{"crate_id":4,"path":["std","fs","Permissions"],"kind":"struct"},"1:53694:7166":{"crate_id":1,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"16:7025:4103":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"1:5146:3142":{"crate_id":1,"path":["core","cell","BorrowError"],"kind":"struct"},"1:48842:128":{"crate_id":1,"path":["core","fmt","Error"],"kind":"struct"},"1:51606:2987":{"crate_id":1,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"12:472:8021":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"4:13879:3585":{"crate_id":4,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"4:8200:2810":{"crate_id":4,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"5:383:3815":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"18:621:7622":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"17:12222:5138":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"16:7169:4127":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"4:10570:7739":{"crate_id":4,"path":["std","env","JoinPathsError"],"kind":"struct"},"17:12731:5240":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"6:4218:6392":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"6:6153:6810":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"4:11914:56532":{"crate_id":4,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"11:54:4006":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"16:6717:4197":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"17:11725:5043":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"4:8502:3710":{"crate_id":4,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"6:3966:6291":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"4:15870:58841":{"crate_id":4,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"17:13147:5406":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"17:13215:5421":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"4:5751:3760":{"crate_id":4,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"6:5331:6625":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"6:3960:6290":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"17:10464:4461":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"4:15398:4047":{"crate_id":4,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"1:50493:122":{"crate_id":1,"path":["core","time","Duration"],"kind":"struct"},"17:13440:5481":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"6:4440:6474":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"4:8293:3536":{"crate_id":4,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"1:46685:3239":{"crate_id":1,"path":["core","char","EscapeDebug"],"kind":"struct"},"17:12048:5114":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"12:2066:3484":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"1:3173:136":{"crate_id":1,"path":["core","convert","From"],"kind":"trait"},"1:47955:2537":{"crate_id":1,"path":["core","result","IterMut"],"kind":"struct"},"4:7319:120":{"crate_id":4,"path":["std","path","Display"],"kind":"struct"},"17:9587:60601":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"6:5311:6609":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:14539:2754":{"crate_id":1,"path":["core","alloc","Allocator"],"kind":"trait"},"1:24985:170":{"crate_id":1,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:50059:3241":{"crate_id":1,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"17:2314:4531":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"6:4012:6316":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:2187:6998":{"crate_id":1,"path":["core","mem","Discriminant"],"kind":"struct"},"4:5558:3439":{"crate_id":4,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"17:9033:46421":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"17:13840:5605":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"16:4495:5668":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"1:47066:2294":{"crate_id":1,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"17:13129:5401":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"16:2839:4370":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"17:9396:4903":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"6:4116:6365":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"1:22861:55800":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"6:1537:6090":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"12:2280:3517":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"6:5210:6561":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"16:7063:4201":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"5:8301:1748":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"1:53648:7162":{"crate_id":1,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"16:7868:128":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"1:10511:207":{"crate_id":1,"path":["core","fmt","Result"],"kind":"typedef"},"17:11234:4519":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"18:885:4568":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"5:3960:3837":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"1:12771:3408":{"crate_id":1,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:56604:241":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:46943:7773":{"crate_id":1,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"6:3981:6298":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"4:5735:3757":{"crate_id":4,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"4:4261:2311":{"crate_id":4,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"16:5639:4167":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"12:2036:1748":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"17:12758:5244":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"17:299:7630":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"17:12383:5185":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"5:1276:3843":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"6:5455:6681":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"16:6075:4111":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"1:2962:186":{"crate_id":1,"path":["core","cmp","PartialOrd"],"kind":"trait"},"5:4509:2536":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"1:9156:2538":{"crate_id":1,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:46327:3065":{"crate_id":1,"path":["core","any","tags","Value"],"kind":"struct"},"6:6114:6792":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"4:11006:2297":{"crate_id":4,"path":["std","io","Split"],"kind":"struct"},"5:3106:6914":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"17:13522:5504":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"6:5288:6596":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"6:4315:6416":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"5:4581:3824":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"16:7415:4132":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"4:2654:181":{"crate_id":4,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"4:1387:2537":{"crate_id":4,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"6:3896:6239":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"16:6159:4114":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"4:10547:3519":{"crate_id":4,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"12:1881:146":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"16:5745:4173":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"4:4181:2312":{"crate_id":4,"path":["std","io","stdio","Stdin"],"kind":"struct"},"17:13953:5631":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"5:8536:2759":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"16:4628:5671":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"16:6310:4187":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"4:1261:144":{"crate_id":4,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"4:4834:3551":{"crate_id":4,"path":["std","net","ip","display_buffer","IpDisplayBuffer"],"kind":"struct"},"1:50489:3249":{"crate_id":1,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:5077:2568":{"crate_id":1,"path":["core","cell","Cell"],"kind":"struct"},"17:10407:4527":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"6:5366:6646":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"17:11653:5028":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"16:5362:4156":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"12:928:3507":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"4:10531:33262":{"crate_id":4,"path":["std","backtrace","RawFrame"],"kind":"enum"},"4:13501:3565":{"crate_id":4,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"17:13899:5621":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"1:51930:2988":{"crate_id":1,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"4:14490:56772":{"crate_id":4,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"5:444:2756":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"1:52408:3012":{"crate_id":1,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"5:2284:3781":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"6:4321:6419":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"18:811:4562":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:50457:3247":{"crate_id":1,"path":["core","str","LinesAnyMap"],"kind":"struct"},"16:5516:4348":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"17:13138:5405":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"1:5033:3141":{"crate_id":1,"path":["core","cell","once","OnceCell"],"kind":"struct"},"17:10136:7639":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"1:3441:2172":{"crate_id":1,"path":["core","ops","arith","Mul"],"kind":"trait"},"5:8360:3522":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"1:2861:98":{"crate_id":1,"path":["core","borrow","BorrowMut"],"kind":"trait"},"17:12482:5196":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"1:3452:2174":{"crate_id":1,"path":["core","ops","arith","Rem"],"kind":"trait"},"6:5982:6738":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"16:5902:4176":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"16:4660:5672":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"4:4222:2315":{"crate_id":4,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"1:14182:2160":{"crate_id":1,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"6:5390:6658":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"14:11:7708":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"17:12892:5253":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"1:51421:2982":{"crate_id":1,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"16:4743:5675":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"18:820:4563":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"1:47076:2706":{"crate_id":1,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"17:9131:46424":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"18:782:4811":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"5:1256:8025":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"1:50316:2885":{"crate_id":1,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"4:6482:6777":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"5:6498:228":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"1:8021:2692":{"crate_id":1,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"17:12957:5304":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"6:4230:6393":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"6:6643:6881":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"4:15910:2093":{"crate_id":4,"path":["std","str"],"kind":"primitive"},"1:3176:233":{"crate_id":1,"path":["core","convert","TryInto"],"kind":"trait"},"1:53762:7170":{"crate_id":1,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"17:11689:5038":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"17:10622:4914":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"4:10922:2323":{"crate_id":4,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"4:3044:3643":{"crate_id":4,"path":["std","fs","symlink_metadata"],"kind":"function"},"1:46896:2686":{"crate_id":1,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"15:248:4039":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:3446:2171":{"crate_id":1,"path":["core","ops","arith","Div"],"kind":"trait"},"18:744:60603":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"6:5567:6715":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"6:4270:3701":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"0:295:160":{"crate_id":0,"path":["either","Either","Left"],"kind":"variant"},"6:672:39559":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"4:15919:2100":{"crate_id":4,"path":["std","i64"],"kind":"primitive"},"4:3371:2305":{"crate_id":4,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"1:52174:7114":{"crate_id":1,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:3247:116":{"crate_id":1,"path":["core","default","Default"],"kind":"trait"},"1:49131:7779":{"crate_id":1,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"18:720:4813":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"6:1588:6118":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:49101:147":{"crate_id":1,"path":["core","hash","sip","Hasher"],"kind":"struct"},"4:15911:2094":{"crate_id":4,"path":["std","tuple"],"kind":"primitive"},"16:7295:4117":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"16:7369:4113":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"4:11216:3683":{"crate_id":4,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"1:50627:203":{"crate_id":1,"path":["core","future","ready","Ready"],"kind":"struct"},"1:49742:2297":{"crate_id":1,"path":["core","str","iter","Split"],"kind":"struct"},"1:51754:3004":{"crate_id":1,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"1:3466:2180":{"crate_id":1,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"4:14473:119":{"crate_id":4,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"17:11563:5016":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"6:161:39227":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"17:12469:5195":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"16:6931:4418":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"16:4716:5674":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"17:13938:5630":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"4:5743:3758":{"crate_id":4,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"4:15253:3681":{"crate_id":4,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"5:1626:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"16:6595:4125":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"5:7312:2761":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"16:6656:4409":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"1:24387:3108":{"crate_id":1,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"16:7238:4131":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"1:37899:180":{"crate_id":1,"path":["core","cmp","Ordering"],"kind":"enum"},"1:3462:2176":{"crate_id":1,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"6:5998:6750":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"12:1682:4030":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"6:5149:6519":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"5:5906:3766":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"1:3495:2182":{"crate_id":1,"path":["core","ops","bit","BitOr"],"kind":"trait"},"17:3743:4496":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"6:6243:6869":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"4:2126:2761":{"crate_id":4,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"6:4075:6343":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"5:7358:4664":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"1:14:1914":{"crate_id":1,"path":["core","write"],"kind":"macro"},"17:11797:5070":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"1:32969:3027":{"crate_id":1,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"4:1431:2761":{"crate_id":4,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"16:6331:4035":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"6:4416:6464":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"16:2754:4359":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"16:6858:4415":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"1:10244:3182":{"crate_id":1,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"17:10082:4542":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"4:12087:164":{"crate_id":4,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"17:11985:5101":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"1:46829:2847":{"crate_id":1,"path":["core","ffi","VaList"],"kind":"struct"},"1:48900:2553":{"crate_id":1,"path":["core","fmt","FlagV1"],"kind":"enum"},"4:12018:3540":{"crate_id":4,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"17:10476:4466":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"17:11671:5037":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"17:13549:5511":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"4:15909:2092":{"crate_id":4,"path":["std","slice"],"kind":"primitive"},"16:4942:5681":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"1:48553:2556":{"crate_id":1,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:25519:3121":{"crate_id":1,"path":["core","num","saturating","Saturating"],"kind":"struct"},"16:6190:4185":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"5:8295:1748":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"4:7839:3630":{"crate_id":4,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"17:2543:4459":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"17:11282:46428":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"1:8672:152":{"crate_id":1,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"17:11085:4523":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"1:10033:79":{"crate_id":1,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"17:12196:5134":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"4:10488:3613":{"crate_id":4,"path":["std","thread","Thread"],"kind":"struct"},"4:8875:3571":{"crate_id":4,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"16:3908:5659":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"1:8432:8027":{"crate_id":1,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"17:9873:7639":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"4:11125:3550":{"crate_id":4,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"16:2883:4390":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"16:7782:4119":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"6:6937:6904":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:10571:2554":{"crate_id":1,"path":["core","fmt","Octal"],"kind":"trait"},"4:15920:2101":{"crate_id":4,"path":["std","i128"],"kind":"primitive"},"16:6518:4126":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"1:47820:2536":{"crate_id":1,"path":["core","option","Iter"],"kind":"struct"},"1:46874:2293":{"crate_id":1,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:14071:151":{"crate_id":1,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"9:900:5977":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"17:10455:4462":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"1:50461:3250":{"crate_id":1,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:53747:7169":{"crate_id":1,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:10573:2555":{"crate_id":1,"path":["core","fmt","Binary"],"kind":"trait"},"4:15904:2088":{"crate_id":4,"path":["std","char"],"kind":"primitive"},"5:3838:2537":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"18:651:4570":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"17:10598:7662":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"17:13495:5497":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"16:7247:4145":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"16:4351:5663":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"4:6344:3470":{"crate_id":4,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"17:11514:5005":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"17:10801:4499":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"1:3167:74":{"crate_id":1,"path":["core","convert","AsMut"],"kind":"trait"},"1:3616:132":{"crate_id":1,"path":["core","ops","function","FnMut"],"kind":"trait"},"5:8274:3775":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"16:3297:4434":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"17:9930:60598":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"6:5186:6545":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"4:5713:3755":{"crate_id":4,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"4:14989:3596":{"crate_id":4,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"4:15926:2107":{"crate_id":4,"path":["std","isize"],"kind":"primitive"},"17:9920:7640":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"4:7489:3584":{"crate_id":4,"path":["std","process","Command"],"kind":"struct"},"4:15914:2095":{"crate_id":4,"path":["std","f32"],"kind":"primitive"},"17:9836:60594":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"17:9291:4901":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"5:8219:3787":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"19:0:1001":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"17:13345:5456":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"4:1991:146":{"crate_id":4,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"4:4433:2291":{"crate_id":4,"path":["std","io","IoSliceMut"],"kind":"struct"},"5:1152:4664":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"1:24399:3109":{"crate_id":1,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"6:1712:6202":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:50034:3238":{"crate_id":1,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:24439:9006":{"crate_id":1,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"5:8228:2761":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"18:774:4811":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"1:51952:2991":{"crate_id":1,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"5:8258:1748":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"1:8126:3074":{"crate_id":1,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"16:5869:191":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"4:15903:2087":{"crate_id":4,"path":["std","never"],"kind":"primitive"},"1:52678:2974":{"crate_id":1,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"17:13094:5400":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"4:11361:36282":{"crate_id":4,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"4:7067:7735":{"crate_id":4,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"12:2253:3515":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"1:49560:3209":{"crate_id":1,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"6:5398:6659":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"1:50730:3044":{"crate_id":1,"path":["core","alloc","AllocError"],"kind":"struct"},"4:12097:213":{"crate_id":4,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"1:11695:3204":{"crate_id":1,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"6:4055:6333":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"4:14895:3588":{"crate_id":4,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"17:11701:5041":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"4:14437:7252":{"crate_id":4,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"1:25051:168":{"crate_id":1,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"17:10899:7667":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"1:49700:3056":{"crate_id":1,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"17:13785:5589":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"17:11474:4994":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"4:5430:3476":{"crate_id":4,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"1:47273:2674":{"crate_id":1,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"4:3058:3647":{"crate_id":4,"path":["std","fs","read_link"],"kind":"function"},"1:46966:2699":{"crate_id":1,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"17:11547:5011":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"1:5142:2570":{"crate_id":1,"path":["core","cell","RefCell"],"kind":"struct"},"17:9716:60600":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"1:13012:3225":{"crate_id":1,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"4:10574:3852":{"crate_id":4,"path":["std","error","private","Internal"],"kind":"struct"},"1:3102:2151":{"crate_id":1,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"17:13361:5459":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"6:545:6026":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"1:51784:3008":{"crate_id":1,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"16:5721:4172":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"4:11000:2295":{"crate_id":4,"path":["std","io","Bytes"],"kind":"struct"},"4:7144:188":{"crate_id":4,"path":["std","path","PathBuf"],"kind":"struct"},"4:10723:3660":{"crate_id":4,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"17:10318:4465":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"4:10962:1595":{"crate_id":4,"path":["std","io","SeekFrom"],"kind":"enum"},"1:46565:7764":{"crate_id":1,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"4:12005:3539":{"crate_id":4,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"14:56:4989":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"6:4081:6346":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"5:1296:3844":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"4:2147:3484":{"crate_id":4,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"16:6173:4184":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"1:13049:3228":{"crate_id":1,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:53637:7161":{"crate_id":1,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"17:10166:4913":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"4:1031:3467":{"crate_id":4,"path":["std","ascii","AsciiExt"],"kind":"trait"},"5:1547:3518":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"4:10248:7757":{"crate_id":4,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"5:1701:3505":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"1:14455:142":{"crate_id":1,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"4:12073:3715":{"crate_id":4,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"17:12117:5123":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"14:47:7708":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"6:5301:6602":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"1:52332:3005":{"crate_id":1,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"4:14457:130":{"crate_id":4,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"6:4532:6512":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"1:46957:2698":{"crate_id":1,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"4:8951:3600":{"crate_id":4,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"16:3103:4386":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"4:11108:3458":{"crate_id":4,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"1:49113:2810":{"crate_id":1,"path":["core","hash","sip","State"],"kind":"struct"},"1:22833:2400":{"crate_id":1,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"16:6557:4194":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:50337:2887":{"crate_id":1,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:23227:2865":{"crate_id":1,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"17:11810:5071":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"17:9646:60602":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"1:10249:3183":{"crate_id":1,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:49581:3211":{"crate_id":1,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"17:13565:5514":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"17:11142:4963":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"5:3428:3484":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"6:4538:6515":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"6:6184:6836":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"16:6286:4036":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"1:3436:2175":{"crate_id":1,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:3852:2950":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:10579:191":{"crate_id":1,"path":["core","fmt","Pointer"],"kind":"trait"},"5:6759:3796":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"6:4454:6482":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"1:49532:3206":{"crate_id":1,"path":["core","slice","iter","Windows"],"kind":"struct"},"4:11910:7815":{"crate_id":4,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"4:15886:56535":{"crate_id":4,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"6:4142:6377":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"1:3834:2199":{"crate_id":1,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:23425:2865":{"crate_id":1,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:53824:7172":{"crate_id":1,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:51584:2983":{"crate_id":1,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"5:4694:240":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"12:940:3511":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"1:4864:103":{"crate_id":1,"path":["core","asserting","Capture"],"kind":"struct"},"18:668:4575":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"1:46638:3241":{"crate_id":1,"path":["core","char","EscapeUnicode"],"kind":"struct"},"4:10941:2321":{"crate_id":4,"path":["std","io","util","Sink"],"kind":"struct"},"17:13595:5520":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"16:5698:4171":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"6:1912:40533":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"17:10340:4532":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:51523:7103":{"crate_id":1,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:51661:7105":{"crate_id":1,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"4:12126:3554":{"crate_id":4,"path":["std","time","SystemTime"],"kind":"struct"},"4:2141:3483":{"crate_id":4,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"1:10038:86":{"crate_id":1,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:3381:2393":{"crate_id":1,"path":["core","marker","PhantomData"],"kind":"struct"},"1:23973:55803":{"crate_id":1,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"5:1710:3506":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"4:6472:3431":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"4:14480:2292":{"crate_id":4,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"16:5948:4369":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"6:4208:6391":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"16:6949:4419":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"4:12585:3638":{"crate_id":4,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"17:10586:7661":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"9:1020:3953":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"4:15654:4715":{"crate_id":4,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"12:933:3510":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"4:9673:4705":{"crate_id":4,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"17:11314:4449":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"4:859:3607":{"crate_id":4,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"4:13265:3695":{"crate_id":4,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"17:13472:5489":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"1:13072:3229":{"crate_id":1,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"6:5240:6571":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"17:10266:4437":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"4:2911:3639":{"crate_id":4,"path":["std","fs","DirEntry"],"kind":"struct"},"17:8954:4455":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"1:49327:3399":{"crate_id":1,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"9:927:44192":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"4:7461:3582":{"crate_id":4,"path":["std","process","ChildStdout"],"kind":"struct"},"16:6980:4199":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"16:5303:4153":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"5:3814:161":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"17:12417:5188":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"1:50477:3253":{"crate_id":1,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"6:6214:6853":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"9:234:3911":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"16:3314:4357":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"1:13123:3196":{"crate_id":1,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"5:7740:2766":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"1:24347:7821":{"crate_id":1,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"6:5488:6689":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"17:11457:4989":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"1:10575:2556":{"crate_id":1,"path":["core","fmt","LowerHex"],"kind":"trait"},"4:11980:1748":{"crate_id":4,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"16:4198:5660":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"16:7281:4116":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"12:2392:5922":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"4:4481:57040":{"crate_id":4,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"1:11709:3205":{"crate_id":1,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:32773:53459":{"crate_id":1,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"1:56578:241":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"4:9439:58800":{"crate_id":4,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"16:3007:4374":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"17:11017:128":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"1:46182:197":{"crate_id":1,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"16:5396:4158":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"1:46669:3387":{"crate_id":1,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"4:15074:3496":{"crate_id":4,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"1:52151:7113":{"crate_id":1,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:3431:2170":{"crate_id":1,"path":["core","ops","arith","Add"],"kind":"trait"},"12:1103:3515":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"4:6652:3416":{"crate_id":4,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"4:7744:58602":{"crate_id":4,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"1:48779:67":{"crate_id":1,"path":["core","fmt","Alignment"],"kind":"enum"},"0:60:1637":{"crate_id":0,"path":["either","try_left"],"kind":"macro"},"1:50469:3251":{"crate_id":1,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:49633:3213":{"crate_id":1,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:53732:7168":{"crate_id":1,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"17:12250:5142":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"16:5326:4154":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"1:10522:135":{"crate_id":1,"path":["core","fmt","Formatter"],"kind":"struct"},"1:2916:185":{"crate_id":1,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:47828:2537":{"crate_id":1,"path":["core","option","IterMut"],"kind":"struct"},"6:1600:6126":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"14:216:44773":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"17:9958:60593":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"17:10068:4437":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"1:46626:3392":{"crate_id":1,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:51900:2984":{"crate_id":1,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"18:136:8013":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"4:12107:3547":{"crate_id":4,"path":["std","time","Instant"],"kind":"struct"},"1:22878:56145":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"12:750:2536":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"12:432:4020":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"6:6665:6882":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"1:2858:97":{"crate_id":1,"path":["core","borrow","Borrow"],"kind":"trait"},"4:12587:4710":{"crate_id":4,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"16:5238:44843":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"1:46995:2688":{"crate_id":1,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:46975:2708":{"crate_id":1,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"6:4386:6453":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"1:47023:2703":{"crate_id":1,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"9:41:3936":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"17:12700:5234":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"17:9087:46423":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"17:10198:7648":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"4:15907:2090":{"crate_id":4,"path":["std","pointer"],"kind":"primitive"},"5:8407:3295":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"16:6099:4181":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"1:11667:3202":{"crate_id":1,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:5528:2788":{"crate_id":1,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"4:15875:33265":{"crate_id":4,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"17:10975:7676":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"12:2398:5923":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"17:13602:5522":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"17:12026:5105":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"17:12093:5121":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"17:10445:4861":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"18:712:2400":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"1:32621:53478":{"crate_id":1,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"4:11452:2811":{"crate_id":4,"path":["std","path","PrefixComponent"],"kind":"struct"},"1:23048:3069":{"crate_id":1,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"17:10962:7675":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"6:4434:6473":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"4:8720:2672":{"crate_id":4,"path":["std","sync","once","Once"],"kind":"struct"},"17:11713:5042":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"4:1447:3507":{"crate_id":4,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"1:37923:2400":{"crate_id":1,"path":["core","cmp","Reverse"],"kind":"struct"},"1:39119:3053":{"crate_id":1,"path":["core","error","Source"],"kind":"struct"},"4:6846:3479":{"crate_id":4,"path":["std","os","net","tcp","TcpStreamExt"],"kind":"trait"},"1:3521:2188":{"crate_id":1,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:46202:200":{"crate_id":1,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:47811:1749":{"crate_id":1,"path":["core","option","Item"],"kind":"struct"},"4:4220:2314":{"crate_id":4,"path":["std","io","stdio","Stdout"],"kind":"struct"},"4:15918:2099":{"crate_id":4,"path":["std","i32"],"kind":"primitive"},"1:3742:2196":{"crate_id":1,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"1:53534:2993":{"crate_id":1,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"16:5427:4160":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"1:24363:7002":{"crate_id":1,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"4:8737:3729":{"crate_id":4,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"4:10554:34228":{"crate_id":4,"path":["std","env","VarError"],"kind":"enum"},"9:1075:3954":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"17:10253:4491":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"12:764:2537":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"12:777:1748":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"17:10925:7672":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"6:4242:6394":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"1:6899:53691":{"crate_id":1,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"6:4362:6440":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"16:6089:4180":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"17:12921:5273":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"1:14106:53497":{"crate_id":1,"path":["core","future","join","MaybeDone"],"kind":"enum"},"4:7427:3580":{"crate_id":4,"path":["std","process","Child"],"kind":"struct"},"1:4160:3038":{"crate_id":1,"path":["core","any","Demand"],"kind":"struct"},"5:6739:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"4:9451:58801":{"crate_id":4,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"1:25018:167":{"crate_id":1,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"4:3070:3653":{"crate_id":4,"path":["std","fs","read_dir"],"kind":"function"},"1:11626:3200":{"crate_id":1,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"16:4411:5665":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"16:5685:4170":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"1:11204:218":{"crate_id":1,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"4:5436:3477":{"crate_id":4,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"1:47896:190":{"crate_id":1,"path":["core","pin","Pin"],"kind":"struct"},"6:1576:6109":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:57905:7179":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"6:4332:6425":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"5:5488:2283":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"17:10516:7653":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"1:13088:3232":{"crate_id":1,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:5297:2399":{"crate_id":1,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:2952:179":{"crate_id":1,"path":["core","cmp","Ord"],"kind":"trait"},"5:8453:6915":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"4:15336:6991":{"crate_id":4,"path":["std","alloc","System"],"kind":"struct"},"4:2135:3482":{"crate_id":4,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"4:10715:119":{"crate_id":4,"path":["std","fs","DirBuilder"],"kind":"struct"},"1:47997:84":{"crate_id":1,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"4:15925:2106":{"crate_id":4,"path":["std","u128"],"kind":"primitive"},"5:4372:2537":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"4:7475:3583":{"crate_id":4,"path":["std","process","ChildStderr"],"kind":"struct"},"1:50465:3252":{"crate_id":1,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"4:11925:56588":{"crate_id":4,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"17:13859:5610":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"1:47972:180":{"crate_id":1,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"4:5572:3441":{"crate_id":4,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"1:14368:2729":{"crate_id":1,"path":["core","task","wake","Waker"],"kind":"struct"},"4:7098:7735":{"crate_id":4,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"5:3441:3779":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"6:513:6010":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"4:10809:3576":{"crate_id":4,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"18:896:4569":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"17:13975:5637":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"16:3051:4432":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"6:4098:6356":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"1:3619:133":{"crate_id":1,"path":["core","ops","function","FnOnce"],"kind":"trait"},"16:6643:4408":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"1:52378:3009":{"crate_id":1,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:24476:9007":{"crate_id":1,"path":["core","num","fmt","Part"],"kind":"enum"},"17:10503:4467":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"12:2269:3516":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"1:10577:2557":{"crate_id":1,"path":["core","fmt","UpperHex"],"kind":"trait"},"16:7684:4122":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"1:49481:3201":{"crate_id":1,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"4:11270:3759":{"crate_id":4,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"6:634:6081":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"12:559:144":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"4:5865:3690":{"crate_id":4,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"17:13293:5440":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"16:5605:4166":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"4:11511:2813":{"crate_id":4,"path":["std","path","Components"],"kind":"struct"},"17:9431:4904":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"1:51854:2996":{"crate_id":1,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"17:12442:5191":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"17:10545:7656":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"17:11181:4964":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"1:3828:138":{"crate_id":1,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:49792:3226":{"crate_id":1,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"6:4020:6318":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"4:14981:7753":{"crate_id":4,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"16:5887:4355":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"4:9406:4701":{"crate_id":4,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"16:7051:4200":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"6:6080:6785":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"1:25084:169":{"crate_id":1,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"17:10913:7671":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"17:12746:5241":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"1:3101:2865":{"crate_id":1,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"6:4028:6321":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"1:3500:2183":{"crate_id":1,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:46068:2204":{"crate_id":1,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:48916:73":{"crate_id":1,"path":["core","fmt","Arguments"],"kind":"struct"},"6:6902:6896":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"1:39155:2396":{"crate_id":1,"path":["core","marker","PhantomPinned"],"kind":"struct"},"4:10298:4706":{"crate_id":4,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"6:6057:6784":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"4:13948:4711":{"crate_id":4,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"17:13763:5584":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"4:5524:3431":{"crate_id":4,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"17:12348:5174":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"8:0:2139":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"17:9948:7641":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"12:1238:4018":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"1:49123:7778":{"crate_id":1,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"18:694:4576":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"4:4259:2310":{"crate_id":4,"path":["std","io","stdio","Stderr"],"kind":"struct"},"17:12607:5225":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"4:5159:3681":{"crate_id":4,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"1:46334:3066":{"crate_id":1,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"5:1729:3508":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"1:24067:2865":{"crate_id":1,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"15:230:4038":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"16:4271:5661":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"17:11890:5076":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"17:12237:5141":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"4:3284:2304":{"crate_id":4,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"1:2262:2938":{"crate_id":1,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"4:15409:4047":{"crate_id":4,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"4:10675:3640":{"crate_id":4,"path":["std","fs","FileTimes"],"kind":"struct"},"4:2326:605":{"crate_id":4,"path":["std","env"],"kind":"module"},"16:7826:3065":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"17:12130:5126":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"1:46224:199":{"crate_id":1,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:50238:2882":{"crate_id":1,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"4:2420:7733":{"crate_id":4,"path":["std","env","Args"],"kind":"struct"},"4:7787:4687":{"crate_id":4,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"1:49718:3222":{"crate_id":1,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:53426:3010":{"crate_id":1,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"17:13747:5580":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"5:4036:4664":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"17:12512:5201":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"1:4895:3067":{"crate_id":1,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"16:6504:4193":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"16:2905:4372":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"18:837:2871":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"1:50637:2156":{"crate_id":1,"path":["core","future","ResumeTy"],"kind":"struct"},"1:50680:2727":{"crate_id":1,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:3534:2191":{"crate_id":1,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"17:10223:4458":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"4:4146:3667":{"crate_id":4,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"4:2361:7731":{"crate_id":4,"path":["std","env","VarsOs"],"kind":"struct"},"12:979:3514":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"1:52254:3017":{"crate_id":1,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:23767:31378":{"crate_id":1,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"17:13612:5527":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"17:10093:4543":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"4:10237:4968":{"crate_id":4,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"17:294:7629":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"5:3436:3482":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"4:2152:3485":{"crate_id":4,"path":["std","collections","hash","set","Union"],"kind":"struct"},"1:10845:2542":{"crate_id":1,"path":["core","hash","BuildHasher"],"kind":"trait"},"6:580:6052":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"1:3180:232":{"crate_id":1,"path":["core","convert","TryFrom"],"kind":"trait"},"6:5547:6701":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"4:11379:2800":{"crate_id":4,"path":["std","path","Prefix"],"kind":"enum"},"4:783:4705":{"crate_id":4,"path":["std","thread","local","fast","Key"],"kind":"struct"},"6:1733:3694":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"16:6468:4191":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"6:1680:6184":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"1:23961:2867":{"crate_id":1,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:50159:2877":{"crate_id":1,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"12:1203:4017":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"1:24853:173":{"crate_id":1,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"5:1502:3515":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"16:7264:196":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"16:4975:5682":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:10583:2559":{"crate_id":1,"path":["core","fmt","UpperExp"],"kind":"trait"},"4:12102:214":{"crate_id":4,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"15:269:4043":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"6:5178:6543":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"4:13781:58608":{"crate_id":4,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"4:11258:3452":{"crate_id":4,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"5:3110:59298":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"4:6484:6779":{"crate_id":4,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"4:12578:129":{"crate_id":4,"path":["std","sys","unix","fs","File"],"kind":"struct"},"16:7100:4204":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"17:11102:46427":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"4:5568:3440":{"crate_id":4,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"17:12015:5104":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"17:9004:46420":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"4:8005:4687":{"crate_id":4,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"17:13873:5612":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"17:13452:5482":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"4:1113:33263":{"crate_id":4,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"17:12003:5102":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"17:12360:5176":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"4:1105:7723":{"crate_id":4,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"16:2959:4373":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"1:5752:786":{"crate_id":1,"path":["core","iter"],"kind":"module"},"12:2032:2536":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"16:7637:4211":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"1:13361:2873":{"crate_id":1,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:12227:3218":{"crate_id":1,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"4:1456:3509":{"crate_id":4,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"5:3407:3778":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"4:13803:3586":{"crate_id":4,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"1:53034:3018":{"crate_id":1,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:47887:2657":{"crate_id":1,"path":["core","panicking","AssertKind"],"kind":"enum"},"7:85:44095":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"18:678:143":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"17:10104:4544":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"6:1721:6208":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"16:5998:4130":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"4:5156:3680":{"crate_id":4,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"16:4381:5664":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"17:11784:5066":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"17:9561:4456":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"17:11409:4974":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"17:10775:7664":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"4:2359:7730":{"crate_id":4,"path":["std","env","Vars"],"kind":"struct"},"16:4775:5676":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"16:2792:4097":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"12:379:4022":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:49760:3199":{"crate_id":1,"path":["core","str","iter","RSplit"],"kind":"struct"},"6:521:6015":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"1:46341:2569":{"crate_id":1,"path":["core","any","tags","Ref"],"kind":"struct"},"17:11640:5027":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"1:3517:2187":{"crate_id":1,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:53709:7167":{"crate_id":1,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"5:4765:4669":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:32573:2752":{"crate_id":1,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"4:14915:3554":{"crate_id":4,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"17:12282:5149":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"1:46744:2832":{"crate_id":1,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"17:12770:5251":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"1:22846:55800":{"crate_id":1,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"17:9466:4905":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"4:10436:2865":{"crate_id":4,"path":["std","sealed","Sealed"],"kind":"trait"},"1:28329:3024":{"crate_id":1,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"16:5289:4110":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"1:53785:7171":{"crate_id":1,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:49728:2295":{"crate_id":1,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:52490:2997":{"crate_id":1,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:57926:7180":{"crate_id":1,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"4:10698:130":{"crate_id":4,"path":["std","fs","FileType"],"kind":"struct"},"4:4490:1594":{"crate_id":4,"path":["std","io","Seek"],"kind":"trait"},"5:8470:2783":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"18:790:4560":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:5151:3143":{"crate_id":1,"path":["core","cell","BorrowMutError"],"kind":"struct"},"5:1055:3786":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"1:46142:198":{"crate_id":1,"path":["core","ops","range","RangeFull"],"kind":"struct"},"17:9786:7638":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"1:47947:2536":{"crate_id":1,"path":["core","result","Iter"],"kind":"struct"},"17:8849:4517":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"4:11312:6766":{"crate_id":4,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"6:533:6021":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"4:2914:1898":{"crate_id":4,"path":["std","fs","read"],"kind":"function"},"16:6533:4402":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:49996:2298":{"crate_id":1,"path":["core","str","iter","Lines"],"kind":"struct"},"6:1551:6095":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"4:13627:3594":{"crate_id":4,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"6:1740:6214":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"5:69:2758":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"1:13331:1625":{"crate_id":1,"path":["core","str","pattern"],"kind":"module"},"1:50481:3254":{"crate_id":1,"path":["core","str","IsNotEmpty"],"kind":"struct"},"6:539:6023":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"5:6340:2765":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"1:49541:3207":{"crate_id":1,"path":["core","slice","iter","Chunks"],"kind":"struct"},"16:6035:4150":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"4:2651:182":{"crate_id":4,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"1:47004:2701":{"crate_id":1,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"6:1764:6223":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"4:14800:4712":{"crate_id":4,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"6:6229:6860":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"1:47035:2704":{"crate_id":1,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"12:1147:3517":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"1:50050:3240":{"crate_id":1,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"4:3801:207":{"crate_id":4,"path":["std","io","error","Result"],"kind":"typedef"},"1:51806:3011":{"crate_id":1,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"18:857:4566":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"6:1748:6218":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"4:4415:1593":{"crate_id":4,"path":["std","io","Read"],"kind":"trait"},"17:9539:4518":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"4:2422:7734":{"crate_id":4,"path":["std","env","ArgsOs"],"kind":"struct"},"12:1256:3518":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"4:6224:3420":{"crate_id":4,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"17:11305:5241":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"12:952:3512":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"4:9578:4703":{"crate_id":4,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"5:3395:2536":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"17:9796:60599":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"17:13708:5565":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"5:3105:59300":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"18:637:4811":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:49910:3231":{"crate_id":1,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"1:3371:222":{"crate_id":1,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:47302:2678":{"crate_id":1,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"16:4903:5680":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"5:8553:2760":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"6:612:6068":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"1:49570:3210":{"crate_id":1,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"16:4439:5666":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"1:49323:3398":{"crate_id":1,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"5:4709:4669":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"6:6120:6794":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"16:3576:4828":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"4:10934:2319":{"crate_id":4,"path":["std","io","util","Empty"],"kind":"struct"},"12:1703:4031":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"1:48546:2554":{"crate_id":1,"path":["core","fmt","num","Octal"],"kind":"struct"},"17:9676:60597":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"16:7449:4120":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"17:10643:4916":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"4:15915:2096":{"crate_id":4,"path":["std","f64"],"kind":"primitive"},"1:24414:7006":{"crate_id":1,"path":["core","num","diy_float","Fp"],"kind":"struct"},"16:6630:4407":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"1:46559:3240":{"crate_id":1,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"6:4287:6403":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"17:10788:7666":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"4:1601:3517":{"crate_id":4,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"17:9183:4453":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"17:10874:4950":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"16:7079:4202":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"4:10663:3638":{"crate_id":4,"path":["std","fs","ReadDir"],"kind":"struct"},"1:9654:2792":{"crate_id":1,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"4:14414:7816":{"crate_id":4,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"5:7048:3770":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"16:6277:4186":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"17:13961:5634":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"1:49712:2794":{"crate_id":1,"path":["core","str","iter","Chars"],"kind":"struct"},"17:12543:5206":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"4:7604:3590":{"crate_id":4,"path":["std","process","exit"],"kind":"function"},"16:6482:4404":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"1:53364:2990":{"crate_id":1,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"4:8615:163":{"crate_id":4,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"12:2059:3483":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"4:2123:1748":{"crate_id":4,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"17:12557:5208":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"1:3363:215":{"crate_id":1,"path":["core","marker","Send"],"kind":"trait"},"5:2619:3849":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"4:11888:3588":{"crate_id":4,"path":["std","process","ExitStatusError"],"kind":"struct"},"13:233:5921":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"5:2843:3848":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"16:3077:4433":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"1:48560:2557":{"crate_id":1,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"0:298:209":{"crate_id":0,"path":["either","Either","Right"],"kind":"variant"},"16:6407:4189":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"18:801:4561":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"4:8222:3836":{"crate_id":4,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"17:13463:5486":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"5:6562:2761":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"17:8902:46418":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"17:11937:5091":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"4:12092:3721":{"crate_id":4,"path":["std","sync","once","OnceState"],"kind":"struct"},"1:4488:1748":{"crate_id":1,"path":["core","array","iter","IntoIter"],"kind":"struct"},"17:13584:5519":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"4:5580:3443":{"crate_id":4,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"4:1108:7725":{"crate_id":4,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"1:23150:2865":{"crate_id":1,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"17:12406:5186":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"6:4038:6327":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"1:47845:2365":{"crate_id":1,"path":["core","panic","location","Location"],"kind":"struct"},"5:2396:3845":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"16:7090:4203":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"17:9706:7636":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"1:11476:3196":{"crate_id":1,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"17:9259:4899":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"17:10937:7673":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"1:52828:2998":{"crate_id":1,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"4:15086:3501":{"crate_id":4,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"1:4782:2283":{"crate_id":1,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"17:9988:46472":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"1:24071:2966":{"crate_id":1,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"16:5176:5683":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"6:6914:6898":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"1:46887:2685":{"crate_id":1,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"18:645:4573":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"1:52120:7112":{"crate_id":1,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:46616:3391":{"crate_id":1,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"5:8236:3788":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"16:6691:4196":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"6:5229:6563":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"4:8192:3630":{"crate_id":4,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"17:510:7631":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"6:565:6043":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"4:3459:2307":{"crate_id":4,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"16:6604:4195":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"1:3458:2173":{"crate_id":1,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:12194:3217":{"crate_id":1,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:12327:4719":{"crate_id":1,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"6:4160:6388":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:2501:3068":{"crate_id":1,"path":["core","ptr","unique","Unique"],"kind":"struct"},"16:6060:4151":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"4:10323:4708":{"crate_id":4,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"1:11433:2297":{"crate_id":1,"path":["core","slice","iter","Split"],"kind":"struct"},"5:2328:3846":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"6:4373:6448":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"16:6873:2365":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"6:3920:6257":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"6:6931:6903":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"4:11197:3749":{"crate_id":4,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"4:11042:3453":{"crate_id":4,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"16:3155:4376":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"16:7702:4121":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"17:13539:5508":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"16:3494:4824":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"6:1531:6087":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"1:4852:2858":{"crate_id":1,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"6:4446:6477":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"4:1441:2759":{"crate_id":4,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"5:5962:4675":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"16:3366:4387":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"17:9579:129":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"5:3402:3483":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"17:13917:5627":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"1:46986:2700":{"crate_id":1,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"4:12248:7733":{"crate_id":4,"path":["std","sys","unix","args","Args"],"kind":"struct"},"16:6026:4107":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"17:12646:5228":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"1:3505:2185":{"crate_id":1,"path":["core","ops","bit","Shl"],"kind":"trait"},"4:0:1343":{"crate_id":4,"path":["std"],"kind":"module"},"4:2909:129":{"crate_id":4,"path":["std","fs","File"],"kind":"struct"},"5:844:227":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"17:13735:5577":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"1:48039:91":{"crate_id":1,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"6:1669:6176":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"5:8376:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"5:8459:220":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"17:607:7632":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"4:11862:183":{"crate_id":4,"path":["std","process","Output"],"kind":"struct"},"1:12795:1952":{"crate_id":1,"path":["core","str","converts","from_utf8"],"kind":"function"},"1:46772:3296":{"crate_id":1,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"17:13481:5490":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"1:3483:2184":{"crate_id":1,"path":["core","ops","bit","Not"],"kind":"trait"},"1:46915:2694":{"crate_id":1,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"9:722:3887":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"4:6750:3425":{"crate_id":4,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"16:4599:5670":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"1:51329:7102":{"crate_id":1,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"12:843:3505":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"17:13421:5474":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"17:11031:46426":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"4:1088:2273":{"crate_id":4,"path":["std","backtrace","Backtrace"],"kind":"struct"},"13:121:44739":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"17:10489:7652":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"1:56195:3048":{"crate_id":1,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"4:1489:3514":{"crate_id":4,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"1:3653:2157":{"crate_id":1,"path":["core","ops","generator","Generator"],"kind":"trait"},"17:10048:7645":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"1:50370:2793":{"crate_id":1,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"16:7721:4123":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"1:3599:1589":{"crate_id":1,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"17:11256:4965":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"4:11429:2810":{"crate_id":4,"path":["std","path","State"],"kind":"enum"},"16:6679:4411":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"4:15928:2109":{"crate_id":4,"path":["std","reference"],"kind":"primitive"},"16:5348:4155":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"17:10390:4464":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"6:4356:6437":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"6:5582:6726":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"4:6929:36281":{"crate_id":4,"path":["std","panic","always_abort"],"kind":"function"},"17:12585:5214":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"4:10950:2292":{"crate_id":4,"path":["std","io","IoSlice"],"kind":"struct"},"1:48830:108":{"crate_id":1,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"17:9206:46425":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"1:50514:3310":{"crate_id":1,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"1:46725:3136":{"crate_id":1,"path":["core","char","TryFromCharError"],"kind":"struct"},"4:1405:3505":{"crate_id":4,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"1:8681:1870":{"crate_id":1,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"6:607:6066":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"1:52614:2989":{"crate_id":1,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"4:11521:2536":{"crate_id":4,"path":["std","path","Iter"],"kind":"struct"},"1:56591:241":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:46865:2684":{"crate_id":1,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"4:15929:2110":{"crate_id":4,"path":["std","fn"],"kind":"primitive"},"6:6129:6798":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"1:50302:2884":{"crate_id":1,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"12:869:2761":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"1:32433:3326":{"crate_id":1,"path":["core","num","FpCategory"],"kind":"enum"},"16:6381:4124":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"1:3525:2189":{"crate_id":1,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"17:9064:46422":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"6:3972:6293":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"17:13660:5564":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"4:11013:2298":{"crate_id":4,"path":["std","io","Lines"],"kind":"struct"},"17:13404:5467":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"1:46739:101":{"crate_id":1,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:13270:2797":{"crate_id":1,"path":["core","str","traits","FromStr"],"kind":"trait"},"7:0:1494":{"crate_id":7,"path":["unwind"],"kind":"module"},"17:11433:4988":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"6:3987:6300":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:46819:2848":{"crate_id":1,"path":["core","ffi","VaListImpl"],"kind":"struct"},"16:5923:4177":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"1:56552:241":{"crate_id":1,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:32673:53480":{"crate_id":1,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"17:11494:5004":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"6:3993:6303":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"6:1694:6195":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"14:194:44767":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"1:5277:2571":{"crate_id":1,"path":["core","cell","RefMut"],"kind":"struct"},"1:51708:3016":{"crate_id":1,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"17:13774:5588":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"1:51624:7104":{"crate_id":1,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"17:12209:5136":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"1:3869:2202":{"crate_id":1,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:48797:70":{"crate_id":1,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"6:4474:6489":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"17:12302:5150":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"18:729:60606":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:49076:2545":{"crate_id":1,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"6:5378:6651":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"17:12183:5133":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"1:50265:2883":{"crate_id":1,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"12:1666:4029":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"16:7741:4213":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"17:11628:5026":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"1:11515:3197":{"crate_id":1,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"9:469:44198":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"1:49946:3233":{"crate_id":1,"path":["core","str","iter","Matches"],"kind":"struct"},"17:11603:5021":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"18:754:60604":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"1:10512:1596":{"crate_id":1,"path":["core","fmt","Write"],"kind":"trait"},"0:292:1597":{"crate_id":0,"path":["either","Either"],"kind":"enum"},"16:7184:4420":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"1:48864:71":{"crate_id":1,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"1:2212:1057":{"crate_id":1,"path":["core","ptr"],"kind":"module"},"1:23137:2861":{"crate_id":1,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"6:4179:6389":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"6:1704:6201":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"5:7551:4664":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"17:11956:5096":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"17:10851:4949":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"6:586:6055":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"14:244:7711":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"1:23101:3052":{"crate_id":1,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"4:4356:2320":{"crate_id":4,"path":["std","io","util","Repeat"],"kind":"struct"},"1:48803:134":{"crate_id":1,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"1:49620:3212":{"crate_id":1,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"6:4516:6505":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"1:24526:3288":{"crate_id":1,"path":["core","num","error","ParseIntError"],"kind":"struct"},"14:0:2144":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"16:2733:4360":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"1:3170:150":{"crate_id":1,"path":["core","convert","Into"],"kind":"trait"},"6:6097:6787":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"16:2861:4371":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"1:51998:2976":{"crate_id":1,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"17:9275:4900":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"16:5941:4178":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"6:4379:6451":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"17:12262:5143":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"4:8651:7736":{"crate_id":4,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"4:7607:3592":{"crate_id":4,"path":["std","process","Termination"],"kind":"trait"},"17:10949:7674":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"0:0:1718":{"crate_id":0,"path":["either"],"kind":"module"},"17:10240:4488":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"4:14399:3435":{"crate_id":4,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"17:12157:5130":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"4:10516:33260":{"crate_id":4,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"1:47291:2676":{"crate_id":1,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:49892:3230":{"crate_id":1,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"17:11769:5060":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"6:6250:6872":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"4:1460:3510":{"crate_id":4,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"1:53668:7164":{"crate_id":1,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"16:7141:4208":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"6:5419:6671":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"9:749:3888":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"1:23436:2968":{"crate_id":1,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"16:5784:4174":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"17:13352:5458":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"1:52073:7111":{"crate_id":1,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:11408:2537":{"crate_id":1,"path":["core","slice","iter","IterMut"],"kind":"struct"},"17:10364:4530":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"1:47055:2690":{"crate_id":1,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"16:5374:4157":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"4:696:3602":{"crate_id":4,"path":["std","thread","local","LocalKey"],"kind":"struct"},"5:2376:3865":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"17:12070:5115":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"1:51554:2995":{"crate_id":1,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:3474:2177":{"crate_id":1,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:24239:3271":{"crate_id":1,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"17:13029:5363":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"16:2937:4395":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"16:4316:5662":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"4:10537:3488":{"crate_id":4,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"1:49092:2544":{"crate_id":1,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"18:152:8014":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:48123:88":{"crate_id":1,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:50473:3255":{"crate_id":1,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:48249:83":{"crate_id":1,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"5:6851:2283":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"6:6268:6875":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"17:11922:5086":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"5:5609:3796":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"5:1518:3517":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:24886:174":{"crate_id":1,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"6:1567:6103":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"17:11212:4521":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"17:9883:60595":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"17:13331:5454":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"4:973:3630":{"crate_id":4,"path":["std","thread","Packet"],"kind":"struct"},"6:4277:6396":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"1:10800:143":{"crate_id":1,"path":["core","hash","Hash"],"kind":"trait"},"4:8286:204":{"crate_id":4,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"6:5439:6677":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"1:3373:107":{"crate_id":1,"path":["core","marker","Copy"],"kind":"trait"},"4:2119:2536":{"crate_id":4,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"1:46307:3032":{"crate_id":1,"path":["core","any","TypeId"],"kind":"struct"},"1:2764:584":{"crate_id":1,"path":["core","ptr","drop_in_place"],"kind":"function"},"9:776:3933":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"1:53683:7165":{"crate_id":1,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"4:6578:3434":{"crate_id":4,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"17:11591:5020":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"4:10739:1939":{"crate_id":4,"path":["std","io","cursor","Cursor"],"kind":"struct"},"1:53657:7163":{"crate_id":1,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"6:5426:6673":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"4:15921:2102":{"crate_id":4,"path":["std","u8"],"kind":"primitive"},"6:5260:6584":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"1:23237:2868":{"crate_id":1,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"18:866:4567":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"1:3610:2192":{"crate_id":1,"path":["core","ops","drop","Drop"],"kind":"trait"},"17:12170:5131":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"1:50122:2870":{"crate_id":1,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"4:14822:4714":{"crate_id":4,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"5:3825:2536":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"4:11154:6968":{"crate_id":4,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"16:5498:4163":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"1:24505:7824":{"crate_id":1,"path":["core","num","fmt","Formatted"],"kind":"struct"},"1:47014:2702":{"crate_id":1,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:51976:2973":{"crate_id":1,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:46925:2695":{"crate_id":1,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:49964:3234":{"crate_id":1,"path":["core","str","iter","RMatches"],"kind":"struct"},"4:14816:4713":{"crate_id":4,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"1:46663:3240":{"crate_id":1,"path":["core","char","EscapeDefault"],"kind":"struct"},"17:10988:7677":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"6:4464:6488":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"4:11284:3682":{"crate_id":4,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"4:8300:3537":{"crate_id":4,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"1:50718:3046":{"crate_id":1,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:22901:56146":{"crate_id":1,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"5:4281:2761":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"1:3840:2201":{"crate_id":1,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"17:12634:5227":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"4:12616:7740":{"crate_id":4,"path":["std","sys","unix","fs","TimespecDebugAdapter"],"kind":"struct"},"4:9279:8425":{"crate_id":4,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"16:5959:4102":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"1:24512:3331":{"crate_id":1,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"3:0:2135":{"crate_id":3,"path":["rustc_std_workspace_core"],"kind":"module"},"1:50173:2880":{"crate_id":1,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"4:15902:2086":{"crate_id":4,"path":["std","bool"],"kind":"primitive"},"17:11907:5082":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"17:12143:4921":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"4:9155:3474":{"crate_id":4,"path":["std","std_float","StdFloat"],"kind":"trait"},"17:13167:5412":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"4:11469:2812":{"crate_id":4,"path":["std","path","Component"],"kind":"enum"},"4:8101:3630":{"crate_id":4,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"5:8348:2757":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"16:5566:4165":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"1:48812:67":{"crate_id":1,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"16:2813:4389":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"1:32607:2753":{"crate_id":1,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"4:4143:3666":{"crate_id":4,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"4:13764:3584":{"crate_id":4,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"4:1477:3512":{"crate_id":4,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"4:5518:3438":{"crate_id":4,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"17:10814:4500":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"6:4526:6510":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"1:51505:3007":{"crate_id":1,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2:0:435":{"crate_id":2,"path":["compiler_builtins"],"kind":"module"},"12:2419:2757":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"4:1397:1748":{"crate_id":4,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"17:9517:2295":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"16:3265:4381":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"17:10015:7642":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"17:11615:5024":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"1:50006:3235":{"crate_id":1,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:11195:2865":{"crate_id":1,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:48291:90":{"crate_id":1,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"4:10983:2293":{"crate_id":4,"path":["std","io","Chain"],"kind":"struct"},"17:13755:5583":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"1:2883:105":{"crate_id":1,"path":["core","clone","Clone"],"kind":"trait"},"1:46300:2198":{"crate_id":1,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:5320:2572":{"crate_id":1,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:47257:2670":{"crate_id":1,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"4:1483:3513":{"crate_id":4,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"1:10810:147":{"crate_id":1,"path":["core","hash","Hasher"],"kind":"trait"},"4:11856:3585":{"crate_id":4,"path":["std","process","CommandArgs"],"kind":"struct"},"1:46268:2195":{"crate_id":1,"path":["core","ops","range","Bound"],"kind":"enum"},"4:4183:2313":{"crate_id":4,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"1:52644:2992":{"crate_id":1,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"17:11168:7681":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"12:162:4019":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"4:13433:8026":{"crate_id":4,"path":["std","sys","unix","os","Env"],"kind":"struct"},"9:692:3886":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"17:12660:5229":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:11681:3203":{"crate_id":1,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"5:6775:3809":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"5:1663:2536":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"6:1606:6128":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"5:8436:2830":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"17:9746:7637":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"4:8785:3563":{"crate_id":4,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"1:14252:8130":{"crate_id":1,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"1:46246:201":{"crate_id":1,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"4:11334:3426":{"crate_id":4,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"1:9534:2367":{"crate_id":1,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"5:0:282":{"crate_id":5,"path":["alloc"],"kind":"module"},"1:9160:2680":{"crate_id":1,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:47282:2320":{"crate_id":1,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:10562:110":{"crate_id":1,"path":["core","fmt","Debug"],"kind":"trait"},"1:4094:68":{"crate_id":1,"path":["core","any","Any"],"kind":"trait"},"1:47963:1748":{"crate_id":1,"path":["core","result","IntoIter"],"kind":"struct"},"6:0:805":{"crate_id":6,"path":["libc"],"kind":"module"},"4:4149:3668":{"crate_id":4,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"1:50025:3237":{"crate_id":1,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"4:14081:2312":{"crate_id":4,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"1:8196:2668":{"crate_id":1,"path":["core","iter","range","Step"],"kind":"trait"},"17:10660:46610":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"1:10189:665":{"crate_id":1,"path":["core","fmt"],"kind":"module"},"6:626:6076":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"12:895:4014":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"1:46574:3131":{"crate_id":1,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"16:4689:5673":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"17:11381:4970":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"1:50190:2881":{"crate_id":1,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"17:681:4968":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"16:4573:5669":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"4:1452:3508":{"crate_id":4,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"11:46:5927":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"6:6027:6762":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"1:50485:3248":{"crate_id":1,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:47878:2366":{"crate_id":1,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:0:493":{"crate_id":1,"path":["core"],"kind":"module"},"1:8716:121":{"crate_id":1,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"17:8929:46419":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"16:3199:4378":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"1:50041:3239":{"crate_id":1,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"5:1751:196":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"16:7754:4214":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:13257:5435":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"4:15092:3502":{"crate_id":4,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"4:10819:2308":{"crate_id":4,"path":["std","io","error","ErrorKind"],"kind":"enum"},"17:12527:5205":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"1:50688:2728":{"crate_id":1,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"17:13515:5503":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"16:7309:4115":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"5:4308:4664":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"17:10039:7644":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"5:3554:2759":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"1:24919:171":{"crate_id":1,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:49662:3216":{"crate_id":1,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:10058:4548":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"1:3675:2194":{"crate_id":1,"path":["core","ops","index","IndexMut"],"kind":"trait"},"5:7922:4677":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"5:5910:3764":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"17:11013:7679":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"17:11335:4448":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"17:9361:4902":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"17:13016:5356":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"12:2072:3485":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"4:2130:2759":{"crate_id":4,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"4:10658:3432":{"crate_id":4,"path":["std","fs","Metadata"],"kind":"struct"},"4:15922:2103":{"crate_id":4,"path":["std","u16"],"kind":"primitive"},"6:4425:6467":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"4:7253:187":{"crate_id":4,"path":["std","path","Path"],"kind":"struct"},"1:6639:2697":{"crate_id":1,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"5:7718:2765":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"16:6342:4188":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"17:10558:7659":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"1:14056:139":{"crate_id":1,"path":["core","future","future","Future"],"kind":"trait"},"1:46586:3132":{"crate_id":1,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"5:8393:2831":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"6:6967:6910":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:23174:3070":{"crate_id":1,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"4:11210:3682":{"crate_id":4,"path":["std","net","tcp","Incoming"],"kind":"struct"},"6:4067:6338":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"4:3405:2300":{"crate_id":4,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"1:50701:159":{"crate_id":1,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:10581:2558":{"crate_id":1,"path":["core","fmt","LowerExp"],"kind":"trait"},"16:3770:5658":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"6:4135:6375":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:52568:2985":{"crate_id":1,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:53488:2975":{"crate_id":1,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"4:11091:3457":{"crate_id":4,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"4:11019:3452":{"crate_id":4,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"4:10448:56778":{"crate_id":4,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"17:10304:4443":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"16:5257:4899":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"16:5412:4159":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"14:250:5876":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"1:3470:2178":{"crate_id":1,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"6:4402:6459":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"12:856:3506":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"4:11068:3456":{"crate_id":4,"path":["std","net","ip","IpAddr"],"kind":"enum"},"4:5510:3437":{"crate_id":4,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"4:5502:3436":{"crate_id":4,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"12:971:3513":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"4:12034:3541":{"crate_id":4,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"9:963:3951":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"1:48207:89":{"crate_id":1,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:22880:56141":{"crate_id":1,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"16:2981:4384":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"9:686:3884":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"12:880:2759":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"16:3461:4383":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"4:3381:4685":{"crate_id":4,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"17:13507:5500":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"6:6135:6799":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"6:4493:6497":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"1:46934:2696":{"crate_id":1,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"6:4485:6495":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:8635:2681":{"crate_id":1,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"16:3243:4380":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"4:1592:3516":{"crate_id":4,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"16:6907:4198":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"5:4665:4667":{"crate_id":5,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"16:3340:4358":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"4:12050:3542":{"crate_id":4,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"1:53176:2986":{"crate_id":1,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"17:11968:5098":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"}},"external_crates":{"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":18}