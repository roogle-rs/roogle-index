{"root":"0:0:1698","crate_version":"1.8.3","includes_private":false,"index":{"b:2:2251-0:86:1687":{"id":"b:2:2251-0:86:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Compiler","id":"0:86:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:610":{"id":"0:610","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[413,0],"end":[418,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"primitive":"char"},"items":["0:611:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2741:5045-0:2373:4266":{"id":"a:2:2741:5045-0:2373:4266","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatches","id":"0:2373:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2684:220-0:2473:4303":{"id":"a:2:2684:220-0:2473:4303","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2473:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2684:220-0:2070:1696":{"id":"a:2:2684:220-0:2070:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InstRanges","id":"0:2070:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2741:5045-0:2368:3001":{"id":"a:2:2741:5045-0:2368:3001","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSet","id":"0:2368:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8250:3375-0:2461:4266":{"id":"a:2:8250:3375-0:2461:4266","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatches","id":"0:2461:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2684:220-0:1802:1692":{"id":"a:2:2684:220-0:1802:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InputAt","id":"0:1802:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:544:2888":{"id":"0:544:2888","crate_id":0,"name":"as_bytes","span":{"filename":"src/input.rs","begin":[101,4],"end":[101,32]},"visibility":"default","docs":"Return the given input as a sequence of bytes.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:2538-0:2197:1657":{"id":"b:2:2538-0:2197:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2197:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:871:2891":{"id":"0:871:2891","crate_id":0,"name":"find_at","span":{"filename":"src/re_bytes.rs","begin":[622,4],"end":[631,5]},"visibility":"public","docs":"Returns the same as find, but starts the search at the given\noffset.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["start",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Match","id":"0:2197:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:993:2120":{"id":"0:993:2120","crate_id":0,"name":"Item","span":{"filename":"src/re_bytes.rs","begin":[1205,4],"end":[1205,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Match","id":"0:2197:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}}}}},"0:2456:3001":{"id":"0:2456:3001","crate_id":0,"name":"RegexSet","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"public","docs":"Match multiple (possibly overlapping) regular expressions in a single scan.\n\nA regex set corresponds to the union of two or more regular expressions.\nThat is, a regex set will match text where at least one of its\nconstituent regular expressions matches. A regex set as its formulated here\nprovides a touch more power: it will also report *which* regular\nexpressions in the set match. Indeed, this is the key difference between\nregex sets and a single `Regex` with many alternates, since only one\nalternate can match at a time.\n\nFor example, consider regular expressions to match email addresses and\ndomains: `[a-z]+@[a-z]+\\.(com|org|net)` and `[a-z]+\\.(com|org|net)`. If a\nregex set is constructed from those regexes, then searching the text\n`foo@example.com` will report both regexes as matching. Of course, one\ncould accomplish this by compiling each regex on its own and doing two\nsearches over the text. The key advantage of using a regex set is that it\nwill report the matching regexes using a *single pass through the text*.\nIf one has hundreds or thousands of regexes to match repeatedly (like a URL\nrouter for a complex web application or a user agent matcher), then a regex\nset can realize huge performance gains.\n\n# Example\n\nThis shows how the above two regexes (for matching email addresses and\ndomains) might work:\n\n ```rust\n # use regex::bytes::RegexSet;\n let set = RegexSet::new(&[\n     r\"[a-z]+@[a-z]+\\.(com|org|net)\",\n     r\"[a-z]+\\.(com|org|net)\",\n ]).unwrap();\n\n // Ask whether any regexes in the set match.\n assert!(set.is_match(b\"foo@example.com\"));\n\n // Identify which regexes in the set match.\n let matches: Vec<_> = set.matches(b\"foo@example.com\").into_iter().collect();\n assert_eq!(vec![0, 1], matches);\n\n // Try again, but with text that only matches one of the regexes.\n let matches: Vec<_> = set.matches(b\"example.com\").into_iter().collect();\n assert_eq!(vec![1], matches);\n\n // Try again, but with text that doesn't match any regex in the set.\n let matches: Vec<_> = set.matches(b\"example\").into_iter().collect();\n assert!(matches.is_empty());\n ```\n\nNote that it would be possible to adapt the above example to using `Regex`\nwith an expression like:\n\n```text\n(?P<email>[a-z]+@(?P<email_domain>[a-z]+[.](com|org|net)))|(?P<domain>[a-z]+[.](com|org|net))\n```\n\nAfter a match, one could then inspect the capture groups to figure out\nwhich alternates matched. The problem is that it is hard to make this\napproach scale when there are many regexes since the overlap between each\nalternate isn't always obvious to reason about.\n\n# Limitations\n\nRegex sets are limited to answering the following two questions:\n\n1. Does any regex in the set match?\n2. If so, which regexes in the set match?\n\nAs with the main [`Regex`][crate::Regex] type, it is cheaper to ask (1)\ninstead of (2) since the matching engines can stop after the first match\nis found.\n\nYou cannot directly extract [`Match`][crate::Match] or\n[`Captures`][crate::Captures] objects from a regex set. If you need these\noperations, the recommended approach is to compile each pattern in the set\nindependently and scan the exact same input a second time with those\nindependently compiled patterns:\n\n```rust\nuse regex::{Regex, RegexSet};\n\nlet patterns = [\"foo\", \"bar\"];\n// Both patterns will match different ranges of this string.\nlet text = \"barfoo\";\n\n// Compile a set matching any of our patterns.\nlet set = RegexSet::new(&patterns).unwrap();\n// Compile each pattern independently.\nlet regexes: Vec<_> = set.patterns().iter()\n    .map(|pat| Regex::new(pat).unwrap())\n    .collect();\n\n// Match against the whole set first and identify the individual\n// matching patterns.\nlet matches: Vec<&str> = set.matches(text).into_iter()\n    // Dereference the match index to get the corresponding\n    // compiled pattern.\n    .map(|match_idx| &regexes[match_idx])\n    // To get match locations or any other info, we then have to search\n    // the exact same text again, using our separately-compiled pattern.\n    .map(|pat| pat.find(text).unwrap().as_str())\n    .collect();\n\n// Matches arrive in the order the constituent patterns were declared,\n// not the order they appear in the input.\nassert_eq!(vec![\"foo\", \"bar\"], matches);\n```\n\n# Performance\n\nA `RegexSet` has the same performance characteristics as `Regex`. Namely,\nsearch takes `O(mn)` time, where `m` is proportional to the size of the\nregex set and `n` is proportional to the length of the search text.","links":{"crate::Captures":"0:1235:1655","crate::Regex":"0:2540:1660","crate::Match":"0:2520:1657"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:2404","a:2:2684:220-0:2456:3001","a:2:8249:3376-0:2456:3001","a:2:8250:3375-0:2456:3001","a:2:2701:228-0:2456:3001","a:2:2741:5045-0:2456:3001","b:2:2251-0:2456:3001","b:2:2542-0:2456:3001","b:2:2248-0:2456:3001","b:2:2538-0:2456:3001","b:2:2553-0:2456:3001","b:2:2548-0:2456:3001","b:2:3319-0:2456:3001","b:5:684-0:2456:3001","0:2417","0:2459","0:2452"]}}},"0:1224:2120":{"id":"0:1224:2120","crate_id":0,"name":"Item","span":{"filename":"src/re_unicode.rs","begin":[908,4],"end":[908,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"primitive":"str"}}}}}},"b:2:2251-0:2461:4266":{"id":"b:2:2251-0:2461:4266","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatches","id":"0:2461:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8249:3376-0:1235:1655":{"id":"a:2:8249:3376-0:1235:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Captures","id":"0:1235:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1989:1657":{"id":"0:1989:1657","crate_id":0,"name":"Match","span":{"filename":"src/prog.rs","begin":[280,4],"end":[280,16]},"visibility":"default","docs":"Match indicates that the program has reached a match state.\n\nThe number in the match corresponds to the Nth logical regular\nexpression in this program. This index is always 0 for normal regex\nprograms. Values greater than 0 appear when compiling regex sets, and\neach match instruction gets its own unique value. The value corresponds\nto the Nth regex in the set.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:1991:1606"]},"discriminant":null}}},"b:2:3319-0:1235:1655":{"id":"b:2:3319-0:1235:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Captures","id":"0:1235:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:941:1880":{"id":"0:941:1880","crate_id":0,"name":"get","span":{"filename":"src/re_bytes.rs","begin":[988,4],"end":[990,5]},"visibility":"public","docs":"Returns the start and end positions of the Nth capture group. Returns\n`None` if `i` is not a valid capture group or if the capture group did\nnot match anything. The positions returned are *always* byte indices\nwith respect to the original string matched.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"primitive":"usize"},{"primitive":"usize"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:2611:1662":{"id":"b:2:2251-0:2611:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReplacerRef","id":"0:2611:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:531:1888":{"id":"0:531:1888","crate_id":0,"name":"byte","span":{"filename":"src/input.rs","begin":[40,4],"end":[42,5]},"visibility":"public","docs":"Returns the byte at this position.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1240":{"id":"0:1240","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1032,0],"end":[1104,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Captures","id":"0:1235:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1242:1880","0:1244:917","0:1246:795","0:1248:1674","0:1249:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2284":{"id":"0:2284","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1198,16],"end":[1198,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2275:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2287:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:831:668":{"id":"0:831:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[112,4],"end":[114,5]},"visibility":"default","docs":"Shows the original regular expression.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:2368:3001":{"id":"b:2:2553-0:2368:3001","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSet","id":"0:2368:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:529:3206":{"id":"0:529:3206","crate_id":0,"name":"is_end","span":{"filename":"src/input.rs","begin":[27,4],"end":[29,5]},"visibility":"public","docs":"Returns true iff this position is past the end of the input.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:761:1978":{"id":"0:761:1978","crate_id":0,"name":"needs_dotstar","span":{"filename":"src/prog.rs","begin":[132,4],"end":[134,5]},"visibility":"public","docs":"Returns true if the current configuration demands that an implicit\n`.*?` be prepended to the instruction sequence.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2090:2854":{"id":"0:2090:2854","crate_id":0,"name":"case_insensitive","span":{"filename":"src/re_builder.rs","begin":[9,4],"end":[9,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"0:1322":{"id":"0:1322","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1328,0],"end":[1336,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["by_ref","no_expansion"],"trait":{"name":"Replacer","id":"0:1311:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"items":["0:1324:3910","0:1325:3907"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2555:1663":{"id":"0:2555:1663","crate_id":0,"name":"Split","span":{"filename":"src/re_unicode.rs","begin":[864,0],"end":[867,1]},"visibility":"public","docs":"Yields all substrings delimited by a regular expression match.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the string being split.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:2684:220-0:2555:1663","a:2:8249:3376-0:2555:1663","a:2:8250:3375-0:2555:1663","a:2:2701:228-0:2555:1663","a:2:2741:5045-0:2555:1663","b:2:2251-0:2555:1663","b:2:2542-0:2555:1663","b:2:2248-0:2555:1663","b:2:2538-0:2555:1663","b:2:2553-0:2555:1663","b:2:7206-0:2555:1663","b:2:2548-0:2555:1663","b:2:3319-0:2555:1663","0:2560","0:1218","0:1213"]}}},"2:12101:37733":{"id":"2:12101:37733","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1974:1987":{"id":"0:1974:1987","crate_id":0,"name":"static_captures_len","span":{"filename":"src/prog.rs","begin":[32,4],"end":[32,42]},"visibility":"public","docs":"If the number of capture groups is the same for all possible matches,\nthen this is that number.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}},"0:1983:2076":{"id":"0:1983:2076","crate_id":0,"name":"has_unicode_word_boundary","span":{"filename":"src/prog.rs","begin":[59,4],"end":[59,39]},"visibility":"public","docs":"Whether this program contains a Unicode word boundary instruction.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"0:2202":{"id":"0:2202","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[20,9],"end":[20,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2197:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2684:220-0:2217:1660":{"id":"a:2:2684:220-0:2217:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Regex","id":"0:2217:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2003:1606":{"id":"0:2003:1606","crate_id":0,"name":"0","span":{"filename":"src/prog.rs","begin":[292,9],"end":[292,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"InstChar","id":"0:2063:1905","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"a:2:2741:5045-0:2275:1665":{"id":"a:2:2741:5045-0:2275:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2275:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2552:1478":{"id":"2:2552:1478","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2073":{"id":"0:2073","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[375,9],"end":[375,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InstRanges","id":"0:2070:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2074:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2385:4303":{"id":"0:2385:4303","crate_id":0,"name":"SetMatchesIter","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"public","docs":"A borrowed iterator over the set of matches from a regex set.\n\nThe lifetime `'a` refers to the lifetime of a `SetMatches` value.\n\nThis will always produces matches in ascending order of index, where the\nindex corresponds to the index of the regex that matched with respect to\nits position when initially building the set.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:2684:220-0:2385:4303","a:2:8249:3376-0:2385:4303","a:2:8250:3375-0:2385:4303","a:2:2701:228-0:2385:4303","a:2:2741:5045-0:2385:4303","b:2:2251-0:2385:4303","b:2:2542-0:2385:4303","b:2:2248-0:2385:4303","b:2:2538-0:2385:4303","b:2:2553-0:2385:4303","b:2:7206-0:2385:4303","b:2:2548-0:2385:4303","b:2:3319-0:2385:4303","b:5:684-0:2385:4303","0:2392","0:2360","0:2389","0:2352","0:2357"]}}},"0:1140:668":{"id":"0:1140:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[162,4],"end":[164,5]},"visibility":"default","docs":"Shows the original regular expression.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8250:3375-0:2611:1662":{"id":"a:2:8250:3375-0:2611:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReplacerRef","id":"0:2611:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2701:228-0:2555:1663":{"id":"a:2:2701:228-0:2555:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Split","id":"0:2555:1663","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2538-0:2620:1659":{"id":"b:2:2538-0:2620:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoExpand","id":"0:2620:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12011:811":{"id":"2:12011:811","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:11888:419"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:2593:1653":{"id":"a:2:2684:220-0:2593:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureMatches","id":"0:2593:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8250:3375-0:2142:3607":{"id":"a:2:8250:3375-0:2142:3607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexBuilder","id":"0:2142:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2553-0:2540:1660":{"id":"b:2:2553-0:2540:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Regex","id":"0:2540:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1312:3910":{"id":"0:1312:3910","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1274,4],"end":[1274,72]},"visibility":"default","docs":"Appends text to `dst` to replace the current match.\n\nThe current match is represented by `caps`, which is guaranteed to\nhave a match at capture group `0`.\n\nFor example, a no-op replacement would be\n`dst.push_str(caps.get(0).unwrap().as_str())`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["caps",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Captures","id":"0:1235:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:569:1884":{"id":"0:569:1884","crate_id":0,"name":"is_empty_match","span":{"filename":"src/input.rs","begin":[175,4],"end":[205,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["at",{"resolved_path":{"name":"InputAt","id":"0:1802:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["empty",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"InstEmptyLook","id":"0:2028:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:937":{"id":"0:937","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[933,0],"end":[933,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7588:3693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2258:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2220":{"id":"0:2220","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[107,9],"end":[107,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Regex","id":"0:2217:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2221:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2248-0:1836:1690":{"id":"b:2:2248-0:1836:1690","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2548-0:2297:1659":{"id":"b:2:2548-0:2297:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoExpand","id":"0:2297:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1128:316":{"id":"0:1128:316","crate_id":0,"name":"as_str","span":{"filename":"src/re_unicode.rs","begin":[69,4],"end":[71,5]},"visibility":"public","docs":"Returns the matched text.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:944:1655":{"id":"b:2:2548-0:944:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Captures","id":"0:944:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:830":{"id":"0:830","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[110,0],"end":[115,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9147:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Regex","id":"0:2217:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:831:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:961:668":{"id":"0:961:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[1105,4],"end":[1107,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2330:60":{"id":"0:2330:60","crate_id":0,"name":"default","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1860":{"id":"0:1860","crate_id":0,"name":null,"span":{"filename":"src/literal/imp.rs","begin":[12,9],"end":[12,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LiteralSearcher","id":"0:1855:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1861:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2356:4005":{"id":"0:2356:4005","crate_id":0,"name":"size_hint","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1218":{"id":"0:1218","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[893,0],"end":[893,47]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7588:3693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Split","id":"0:2555:1663","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:602:1900":{"id":"0:602:1900","crate_id":0,"name":"is_word_byte","span":{"filename":"src/input.rs","begin":[386,4],"end":[391,5]},"visibility":"public","docs":"Returns true iff the byte is a word byte.\n\nIf the byte is absent, then false is returned.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1290":{"id":"0:1290","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1211,0],"end":[1211,59]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7588:3693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2580:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1349:3910":{"id":"0:1349:3910","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1408,4],"end":[1410,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["_",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Captures","id":"0:1235:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2701:228-0:1802:1692":{"id":"a:2:2701:228-0:1802:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InputAt","id":"0:1802:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2619:668":{"id":"0:2619:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[1316,9],"end":[1316,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2078:1881":{"id":"0:2078:1881","crate_id":0,"name":"goto","span":{"filename":"src/prog.rs","begin":[426,4],"end":[426,21]},"visibility":"public","docs":"The next location to execute in the program if this instruction\nsucceeds.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:1133":{"id":"0:1133","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[90,0],"end":[94,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"primitive":"str"}}},"items":["0:1135:694"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2152":{"id":"0:2152","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2167:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2153:939","0:2156:2860","0:2157:2854","0:2158:2855","0:2159:2856","0:2160:2857","0:2161:2858","0:2162:1626","0:2163:2853","0:2164:1921","0:2165:2234","0:2166:2859"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2251-0:2555:1663":{"id":"b:2:2251-0:2555:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Split","id":"0:2555:1663","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2553-0:2555:1663":{"id":"b:2:2553-0:2555:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Split","id":"0:2555:1663","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8249:3376-0:1812:1691":{"id":"a:2:8249:3376-0:1812:1691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CharInput","id":"0:1812:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:4-0:2172:1648":{"id":"0:4-0:2172:1648","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[660,0],"end":[660,42]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"crate::re_builder::set_unicode","name":"set_unicode","id":"0:2172:1648","glob":true}}},"0:0:1698":{"id":"0:0:1698","crate_id":0,"name":"regex","span":{"filename":"src/lib.rs","begin":[1,0],"end":[801,1]},"visibility":"public","docs":"This crate provides a library for parsing, compiling, and executing regular\nexpressions. Its syntax is similar to Perl-style regular expressions, but lacks\na few features like look around and backreferences. In exchange, all searches\nexecute in linear time with respect to the size of the regular expression and\nsearch text.\n\nThis crate's documentation provides some simple examples, describes\n[Unicode support](#unicode) and exhaustively lists the\n[supported syntax](#syntax).\n\nFor more specific details on the API for regular expressions, please see the\ndocumentation for the [`Regex`](struct.Regex.html) type.\n\n# Usage\n\nThis crate is [on crates.io](https://crates.io/crates/regex) and can be\nused by adding `regex` to your dependencies in your project's `Cargo.toml`.\n\n```toml\n[dependencies]\nregex = \"1\"\n```\n\n# Example: find a date\n\nGeneral use of regular expressions in this package involves compiling an\nexpression and then using it to search, split or replace text. For example,\nto confirm that some text resembles a date:\n\n```rust\nuse regex::Regex;\nlet re = Regex::new(r\"^\\d{4}-\\d{2}-\\d{2}$\").unwrap();\nassert!(re.is_match(\"2014-01-01\"));\n```\n\nNotice the use of the `^` and `$` anchors. In this crate, every expression\nis executed with an implicit `.*?` at the beginning and end, which allows\nit to match anywhere in the text. Anchors can be used to ensure that the\nfull text matches an expression.\n\nThis example also demonstrates the utility of\n[raw strings](https://doc.rust-lang.org/stable/reference/tokens.html#raw-string-literals)\nin Rust, which\nare just like regular strings except they are prefixed with an `r` and do\nnot process any escape sequences. For example, `\"\\\\d\"` is the same\nexpression as `r\"\\d\"`.\n\n# Example: Avoid compiling the same regex in a loop\n\nIt is an anti-pattern to compile the same regular expression in a loop\nsince compilation is typically expensive. (It takes anywhere from a few\nmicroseconds to a few **milliseconds** depending on the size of the\nregex.) Not only is compilation itself expensive, but this also prevents\noptimizations that reuse allocations internally to the matching engines.\n\nIn Rust, it can sometimes be a pain to pass regular expressions around if\nthey're used from inside a helper function. Instead, we recommend using the\n[`lazy_static`](https://crates.io/crates/lazy_static) crate to ensure that\nregular expressions are compiled exactly once.\n\nFor example:\n\n```rust\nuse lazy_static::lazy_static;\nuse regex::Regex;\n\nfn some_helper_function(text: &str) -> bool {\n    lazy_static! {\n        static ref RE: Regex = Regex::new(\"...\").unwrap();\n    }\n    RE.is_match(text)\n}\n\nfn main() {}\n```\n\nSpecifically, in this example, the regex will be compiled when it is used for\nthe first time. On subsequent uses, it will reuse the previous compilation.\n\n# Example: iterating over capture groups\n\nThis crate provides convenient iterators for matching an expression\nrepeatedly against a search string to find successive non-overlapping\nmatches. For example, to find all dates in a string and be able to access\nthem by their component pieces:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(\\d{4})-(\\d{2})-(\\d{2})\").unwrap();\nlet text = \"2012-03-14, 2013-01-01 and 2014-07-05\";\nfor cap in re.captures_iter(text) {\n    println!(\"Month: {} Day: {} Year: {}\", &cap[2], &cap[3], &cap[1]);\n}\n// Output:\n// Month: 03 Day: 14 Year: 2012\n// Month: 01 Day: 01 Year: 2013\n// Month: 07 Day: 05 Year: 2014\n# }\n```\n\nNotice that the year is in the capture group indexed at `1`. This is\nbecause the *entire match* is stored in the capture group at index `0`.\n\n# Example: replacement with named capture groups\n\nBuilding on the previous example, perhaps we'd like to rearrange the date\nformats. This can be done with text replacement. But to make the code\nclearer, we can *name*  our capture groups and use those names as variables\nin our replacement text:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?P<y>\\d{4})-(?P<m>\\d{2})-(?P<d>\\d{2})\").unwrap();\nlet before = \"2012-03-14, 2013-01-01 and 2014-07-05\";\nlet after = re.replace_all(before, \"$m/$d/$y\");\nassert_eq!(after, \"03/14/2012, 01/01/2013 and 07/05/2014\");\n# }\n```\n\nThe `replace` methods are actually polymorphic in the replacement, which\nprovides more flexibility than is seen here. (See the documentation for\n`Regex::replace` for more details.)\n\nNote that if your regex gets complicated, you can use the `x` flag to\nenable insignificant whitespace mode, which also lets you write comments:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?x)\n  (?P<y>\\d{4}) # the year\n  -\n  (?P<m>\\d{2}) # the month\n  -\n  (?P<d>\\d{2}) # the day\n\").unwrap();\nlet before = \"2012-03-14, 2013-01-01 and 2014-07-05\";\nlet after = re.replace_all(before, \"$m/$d/$y\");\nassert_eq!(after, \"03/14/2012, 01/01/2013 and 07/05/2014\");\n# }\n```\n\nIf you wish to match against whitespace in this mode, you can still use `\\s`,\n`\\n`, `\\t`, etc. For escaping a single space character, you can escape it\ndirectly with `\\ `, use its hex character code `\\x20` or temporarily disable\nthe `x` flag, e.g., `(?-x: )`.\n\n# Example: match multiple regular expressions simultaneously\n\nThis demonstrates how to use a `RegexSet` to match multiple (possibly\noverlapping) regular expressions in a single scan of the search text:\n\n```rust\nuse regex::RegexSet;\n\nlet set = RegexSet::new(&[\n    r\"\\w+\",\n    r\"\\d+\",\n    r\"\\pL+\",\n    r\"foo\",\n    r\"bar\",\n    r\"barfoo\",\n    r\"foobar\",\n]).unwrap();\n\n// Iterate over and collect all of the matches.\nlet matches: Vec<_> = set.matches(\"foobar\").into_iter().collect();\nassert_eq!(matches, vec![0, 2, 3, 4, 6]);\n\n// You can also test whether a particular regex matched:\nlet matches = set.matches(\"foobar\");\nassert!(!matches.matched(5));\nassert!(matches.matched(6));\n```\n\n# Pay for what you use\n\nWith respect to searching text with a regular expression, there are three\nquestions that can be asked:\n\n1. Does the text match this expression?\n2. If so, where does it match?\n3. Where did the capturing groups match?\n\nGenerally speaking, this crate could provide a function to answer only #3,\nwhich would subsume #1 and #2 automatically. However, it can be significantly\nmore expensive to compute the location of capturing group matches, so it's best\nnot to do it if you don't need to.\n\nTherefore, only use what you need. For example, don't use `find` if you\nonly need to test if an expression matches a string. (Use `is_match`\ninstead.)\n\n# Unicode\n\nThis implementation executes regular expressions **only** on valid UTF-8\nwhile exposing match locations as byte indices into the search string. (To\nrelax this restriction, use the [`bytes`](bytes/index.html) sub-module.)\nConceptually, the regex engine works by matching a haystack as if it were a\nsequence of Unicode scalar values.\n\nOnly simple case folding is supported. Namely, when matching\ncase-insensitively, the characters are first mapped using the \"simple\" case\nfolding rules defined by Unicode.\n\nRegular expressions themselves are **only** interpreted as a sequence of\nUnicode scalar values. This means you can use Unicode characters directly\nin your expression:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?i)Δ+\").unwrap();\nlet mat = re.find(\"ΔδΔ\").unwrap();\nassert_eq!((mat.start(), mat.end()), (0, 6));\n# }\n```\n\nMost features of the regular expressions in this crate are Unicode aware. Here\nare some examples:\n\n* `.` will match any valid UTF-8 encoded Unicode scalar value except for `\\n`.\n  (To also match `\\n`, enable the `s` flag, e.g., `(?s:.)`.)\n* `\\w`, `\\d` and `\\s` are Unicode aware. For example, `\\s` will match all forms\n  of whitespace categorized by Unicode.\n* `\\b` matches a Unicode word boundary.\n* Negated character classes like `[^a]` match all Unicode scalar values except\n  for `a`.\n* `^` and `$` are **not** Unicode aware in multi-line mode. Namely, they only\n  recognize `\\n` and not any of the other forms of line terminators defined\n  by Unicode.\n\nUnicode general categories, scripts, script extensions, ages and a smattering\nof boolean properties are available as character classes. For example, you can\nmatch a sequence of numerals, Greek or Cherokee letters:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"[\\pN\\p{Greek}\\p{Cherokee}]+\").unwrap();\nlet mat = re.find(\"abcΔᎠβⅠᏴγδⅡxyz\").unwrap();\nassert_eq!((mat.start(), mat.end()), (3, 23));\n# }\n```\n\nFor a more detailed breakdown of Unicode support with respect to\n[UTS#18](https://unicode.org/reports/tr18/),\nplease see the\n[UNICODE](https://github.com/rust-lang/regex/blob/master/UNICODE.md)\ndocument in the root of the regex repository.\n\n# Opt out of Unicode support\n\nThe `bytes` sub-module provides a `Regex` type that can be used to match\non `&[u8]`. By default, text is interpreted as UTF-8 just like it is with\nthe main `Regex` type. However, this behavior can be disabled by turning\noff the `u` flag, even if doing so could result in matching invalid UTF-8.\nFor example, when the `u` flag is disabled, `.` will match any byte instead\nof any Unicode scalar value.\n\nDisabling the `u` flag is also possible with the standard `&str`-based `Regex`\ntype, but it is only allowed where the UTF-8 invariant is maintained. For\nexample, `(?-u:\\w)` is an ASCII-only `\\w` character class and is legal in an\n`&str`-based `Regex`, but `(?-u:\\xFF)` will attempt to match the raw byte\n`\\xFF`, which is invalid UTF-8 and therefore is illegal in `&str`-based\nregexes.\n\nFinally, since Unicode support requires bundling large Unicode data\ntables, this crate exposes knobs to disable the compilation of those\ndata tables, which can be useful for shrinking binary size and reducing\ncompilation times. For details on how to do that, see the section on [crate\nfeatures](#crate-features).\n\n# Syntax\n\nThe syntax supported in this crate is documented below.\n\nNote that the regular expression parser and abstract syntax are exposed in\na separate crate, [`regex-syntax`](https://docs.rs/regex-syntax).\n\n## Matching one character\n\n<pre class=\"rust\">\n.             any character except new line (includes new line with s flag)\n\\d            digit (\\p{Nd})\n\\D            not digit\n\\pX           Unicode character class identified by a one-letter name\n\\p{Greek}     Unicode character class (general category or script)\n\\PX           Negated Unicode character class identified by a one-letter name\n\\P{Greek}     negated Unicode character class (general category or script)\n</pre>\n\n### Character classes\n\n<pre class=\"rust\">\n[xyz]         A character class matching either x, y or z (union).\n[^xyz]        A character class matching any character except x, y and z.\n[a-z]         A character class matching any character in range a-z.\n[[:alpha:]]   ASCII character class ([A-Za-z])\n[[:^alpha:]]  Negated ASCII character class ([^A-Za-z])\n[x[^xyz]]     Nested/grouping character class (matching any character except y and z)\n[a-y&&xyz]    Intersection (matching x or y)\n[0-9&&[^4]]   Subtraction using intersection and negation (matching 0-9 except 4)\n[0-9--4]      Direct subtraction (matching 0-9 except 4)\n[a-g~~b-h]    Symmetric difference (matching `a` and `h` only)\n[\\[\\]]        Escaping in character classes (matching [ or ])\n</pre>\n\nAny named character class may appear inside a bracketed `[...]` character\nclass. For example, `[\\p{Greek}[:digit:]]` matches any Greek or ASCII\ndigit. `[\\p{Greek}&&\\pL]` matches Greek letters.\n\nPrecedence in character classes, from most binding to least:\n\n1. Ranges: `a-cd` == `[a-c]d`\n2. Union: `ab&&bc` == `[ab]&&[bc]`\n3. Intersection: `^a-z&&b` == `^[a-z&&b]`\n4. Negation\n\n## Composites\n\n<pre class=\"rust\">\nxy    concatenation (x followed by y)\nx|y   alternation (x or y, prefer x)\n</pre>\n\nThis example shows how an alternation works, and what it means to prefer a\nbranch in the alternation over subsequent branches.\n\n```\nuse regex::Regex;\n\nlet haystack = \"samwise\";\n// If 'samwise' comes first in our alternation, then it is\n// preferred as a match, even if the regex engine could\n// technically detect that 'sam' led to a match earlier.\nlet re = Regex::new(r\"samwise|sam\").unwrap();\nassert_eq!(\"samwise\", re.find(haystack).unwrap().as_str());\n// But if 'sam' comes first, then it will match instead.\n// In this case, it is impossible for 'samwise' to match\n// because 'sam' is a prefix of it.\nlet re = Regex::new(r\"sam|samwise\").unwrap();\nassert_eq!(\"sam\", re.find(haystack).unwrap().as_str());\n```\n\n## Repetitions\n\n<pre class=\"rust\">\nx*        zero or more of x (greedy)\nx+        one or more of x (greedy)\nx?        zero or one of x (greedy)\nx*?       zero or more of x (ungreedy/lazy)\nx+?       one or more of x (ungreedy/lazy)\nx??       zero or one of x (ungreedy/lazy)\nx{n,m}    at least n x and at most m x (greedy)\nx{n,}     at least n x (greedy)\nx{n}      exactly n x\nx{n,m}?   at least n x and at most m x (ungreedy/lazy)\nx{n,}?    at least n x (ungreedy/lazy)\nx{n}?     exactly n x\n</pre>\n\n## Empty matches\n\n<pre class=\"rust\">\n^     the beginning of text (or start-of-line with multi-line mode)\n$     the end of text (or end-of-line with multi-line mode)\n\\A    only the beginning of text (even with multi-line mode enabled)\n\\z    only the end of text (even with multi-line mode enabled)\n\\b    a Unicode word boundary (\\w on one side and \\W, \\A, or \\z on other)\n\\B    not a Unicode word boundary\n</pre>\n\nThe empty regex is valid and matches the empty string. For example, the empty\nregex matches `abc` at positions `0`, `1`, `2` and `3`.\n\n## Grouping and flags\n\n<pre class=\"rust\">\n(exp)          numbered capture group (indexed by opening parenthesis)\n(?P&lt;name&gt;exp)  named (also numbered) capture group (names must be alpha-numeric)\n(?&lt;name&gt;exp)   named (also numbered) capture group (names must be alpha-numeric)\n(?:exp)        non-capturing group\n(?flags)       set flags within current group\n(?flags:exp)   set flags for exp (non-capturing)\n</pre>\n\nCapture group names must be any sequence of alpha-numeric Unicode codepoints,\nin addition to `.`, `_`, `[` and `]`. Names must start with either an `_` or\nan alphabetic codepoint. Alphabetic codepoints correspond to the `Alphabetic`\nUnicode property, while numeric codepoints correspond to the union of the\n`Decimal_Number`, `Letter_Number` and `Other_Number` general categories.\n\nFlags are each a single character. For example, `(?x)` sets the flag `x`\nand `(?-x)` clears the flag `x`. Multiple flags can be set or cleared at\nthe same time: `(?xy)` sets both the `x` and `y` flags and `(?x-y)` sets\nthe `x` flag and clears the `y` flag.\n\nAll flags are by default disabled unless stated otherwise. They are:\n\n<pre class=\"rust\">\ni     case-insensitive: letters match both upper and lower case\nm     multi-line mode: ^ and $ match begin/end of line\ns     allow . to match \\n\nU     swap the meaning of x* and x*?\nu     Unicode support (enabled by default)\nx     verbose mode, ignores whitespace and allow line comments (starting with `#`)\n</pre>\n\nNote that in verbose mode, whitespace is ignored everywhere, including within\ncharacter classes. To insert whitespace, use its escaped form or a hex literal.\nFor example, `\\ ` or `\\x20` for an ASCII space.\n\nFlags can be toggled within a pattern. Here's an example that matches\ncase-insensitively for the first part but case-sensitively for the second part:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?i)a+(?-i)b+\").unwrap();\nlet cap = re.captures(\"AaAaAbbBBBb\").unwrap();\nassert_eq!(&cap[0], \"AaAaAbb\");\n# }\n```\n\nNotice that the `a+` matches either `a` or `A`, but the `b+` only matches\n`b`.\n\nMulti-line mode means `^` and `$` no longer match just at the beginning/end of\nthe input, but at the beginning/end of lines:\n\n```\n# use regex::Regex;\nlet re = Regex::new(r\"(?m)^line \\d+\").unwrap();\nlet m = re.find(\"line one\\nline 2\\n\").unwrap();\nassert_eq!(m.as_str(), \"line 2\");\n```\n\nNote that `^` matches after new lines, even at the end of input:\n\n```\n# use regex::Regex;\nlet re = Regex::new(r\"(?m)^\").unwrap();\nlet m = re.find_iter(\"test\\n\").last().unwrap();\nassert_eq!((m.start(), m.end()), (5, 5));\n```\n\nHere is an example that uses an ASCII word boundary instead of a Unicode\nword boundary:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?-u:\\b).+(?-u:\\b)\").unwrap();\nlet cap = re.captures(\"$$abc$$\").unwrap();\nassert_eq!(&cap[0], \"abc\");\n# }\n```\n\n## Escape sequences\n\n<pre class=\"rust\">\n\\*          literal *, works for any punctuation character: \\.+*?()|[]{}^$\n\\a          bell (\\x07)\n\\f          form feed (\\x0C)\n\\t          horizontal tab\n\\n          new line\n\\r          carriage return\n\\v          vertical tab (\\x0B)\n\\123        octal character code (up to three digits) (when enabled)\n\\x7F        hex character code (exactly two digits)\n\\x{10FFFF}  any hex character code corresponding to a Unicode code point\n\\u007F      hex character code (exactly four digits)\n\\u{7F}      any hex character code corresponding to a Unicode code point\n\\U0000007F  hex character code (exactly eight digits)\n\\U{7F}      any hex character code corresponding to a Unicode code point\n</pre>\n\n## Perl character classes (Unicode friendly)\n\nThese classes are based on the definitions provided in\n[UTS#18](https://www.unicode.org/reports/tr18/#Compatibility_Properties):\n\n<pre class=\"rust\">\n\\d     digit (\\p{Nd})\n\\D     not digit\n\\s     whitespace (\\p{White_Space})\n\\S     not whitespace\n\\w     word character (\\p{Alphabetic} + \\p{M} + \\d + \\p{Pc} + \\p{Join_Control})\n\\W     not word character\n</pre>\n\n## ASCII character classes\n\n<pre class=\"rust\">\n[[:alnum:]]    alphanumeric ([0-9A-Za-z])\n[[:alpha:]]    alphabetic ([A-Za-z])\n[[:ascii:]]    ASCII ([\\x00-\\x7F])\n[[:blank:]]    blank ([\\t ])\n[[:cntrl:]]    control ([\\x00-\\x1F\\x7F])\n[[:digit:]]    digits ([0-9])\n[[:graph:]]    graphical ([!-~])\n[[:lower:]]    lower case ([a-z])\n[[:print:]]    printable ([ -~])\n[[:punct:]]    punctuation ([!-/:-@\\[-`{-~])\n[[:space:]]    whitespace ([\\t\\n\\v\\f\\r ])\n[[:upper:]]    upper case ([A-Z])\n[[:word:]]     word characters ([0-9A-Za-z_])\n[[:xdigit:]]   hex digit ([0-9A-Fa-f])\n</pre>\n\n# Crate features\n\nBy default, this crate tries pretty hard to make regex matching both as fast\nas possible and as correct as it can be, within reason. This means that there\nis a lot of code dedicated to performance, the handling of Unicode data and the\nUnicode data itself. Overall, this leads to more dependencies, larger binaries\nand longer compile times.  This trade off may not be appropriate in all cases,\nand indeed, even when all Unicode and performance features are disabled, one\nis still left with a perfectly serviceable regex engine that will work well\nin many cases.\n\nThis crate exposes a number of features for controlling that trade off. Some\nof these features are strictly performance oriented, such that disabling them\nwon't result in a loss of functionality, but may result in worse performance.\nOther features, such as the ones controlling the presence or absence of Unicode\ndata, can result in a loss of functionality. For example, if one disables the\n`unicode-case` feature (described below), then compiling the regex `(?i)a`\nwill fail since Unicode case insensitivity is enabled by default. Instead,\ncallers must use `(?i-u)a` instead to disable Unicode case folding. Stated\ndifferently, enabling or disabling any of the features below can only add or\nsubtract from the total set of valid regular expressions. Enabling or disabling\na feature will never modify the match semantics of a regular expression.\n\nAll features below are enabled by default.\n\n### Ecosystem features\n\n* **std** -\n  When enabled, this will cause `regex` to use the standard library. Currently,\n  disabling this feature will always result in a compilation error. It is\n  intended to add `alloc`-only support to regex in the future.\n\n### Performance features\n\n* **perf** -\n  Enables all performance related features. This feature is enabled by default\n  and will always cover all features that improve performance, even if more\n  are added in the future.\n* **perf-dfa** -\n  Enables the use of a lazy DFA for matching. The lazy DFA is used to compile\n  portions of a regex to a very fast DFA on an as-needed basis. This can\n  result in substantial speedups, usually by an order of magnitude on large\n  haystacks. The lazy DFA does not bring in any new dependencies, but it can\n  make compile times longer.\n* **perf-inline** -\n  Enables the use of aggressive inlining inside match routines. This reduces\n  the overhead of each match. The aggressive inlining, however, increases\n  compile times and binary size.\n* **perf-literal** -\n  Enables the use of literal optimizations for speeding up matches. In some\n  cases, literal optimizations can result in speedups of _several_ orders of\n  magnitude. Disabling this drops the `aho-corasick` and `memchr` dependencies.\n* **perf-cache** -\n  This feature used to enable a faster internal cache at the cost of using\n  additional dependencies, but this is no longer an option. A fast internal\n  cache is now used unconditionally with no additional dependencies. This may\n  change in the future.\n\n### Unicode features\n\n* **unicode** -\n  Enables all Unicode features. This feature is enabled by default, and will\n  always cover all Unicode features, even if more are added in the future.\n* **unicode-age** -\n  Provide the data for the\n  [Unicode `Age` property](https://www.unicode.org/reports/tr44/tr44-24.html#Character_Age).\n  This makes it possible to use classes like `\\p{Age:6.0}` to refer to all\n  codepoints first introduced in Unicode 6.0\n* **unicode-bool** -\n  Provide the data for numerous Unicode boolean properties. The full list\n  is not included here, but contains properties like `Alphabetic`, `Emoji`,\n  `Lowercase`, `Math`, `Uppercase` and `White_Space`.\n* **unicode-case** -\n  Provide the data for case insensitive matching using\n  [Unicode's \"simple loose matches\" specification](https://www.unicode.org/reports/tr18/#Simple_Loose_Matches).\n* **unicode-gencat** -\n  Provide the data for\n  [Unicode general categories](https://www.unicode.org/reports/tr44/tr44-24.html#General_Category_Values).\n  This includes, but is not limited to, `Decimal_Number`, `Letter`,\n  `Math_Symbol`, `Number` and `Punctuation`.\n* **unicode-perl** -\n  Provide the data for supporting the Unicode-aware Perl character classes,\n  corresponding to `\\w`, `\\s` and `\\d`. This is also necessary for using\n  Unicode-aware word boundary assertions. Note that if this feature is\n  disabled, the `\\s` and `\\d` character classes are still available if the\n  `unicode-bool` and `unicode-gencat` features are enabled, respectively.\n* **unicode-script** -\n  Provide the data for\n  [Unicode scripts and script extensions](https://www.unicode.org/reports/tr24/).\n  This includes, but is not limited to, `Arabic`, `Cyrillic`, `Hebrew`,\n  `Latin` and `Thai`.\n* **unicode-segment** -\n  Provide the data necessary to provide the properties used to implement the\n  [Unicode text segmentation algorithms](https://www.unicode.org/reports/tr29/).\n  This enables using classes like `\\p{gcb=Extend}`, `\\p{wb=Katakana}` and\n  `\\p{sb=ATerm}`.\n\n\n# Untrusted input\n\nThis crate can handle both untrusted regular expressions and untrusted\nsearch text.\n\nUntrusted regular expressions are handled by capping the size of a compiled\nregular expression.\n(See [`RegexBuilder::size_limit`](struct.RegexBuilder.html#method.size_limit).)\nWithout this, it would be trivial for an attacker to exhaust your system's\nmemory with expressions like `a{100}{100}{100}`.\n\nUntrusted search text is allowed because the matching engine(s) in this\ncrate have time complexity `O(mn)` (with `m ~ regex` and `n ~ search\ntext`), which means there's no way to cause exponential blow-up like with\nsome other regular expression engines. (We pay for this by disallowing\nfeatures like arbitrary look-ahead and backreferences.)\n\nWhen a DFA is used, pathological cases with exponential state blow-up are\navoided by constructing the DFA lazily or in an \"online\" manner. Therefore,\nat most one new state can be created for each byte of input. This satisfies\nour time complexity guarantees, but can lead to memory growth\nproportional to the size of the input. As a stopgap, the DFA is only\nallowed to store a fixed number of states. When the limit is reached, its\nstates are wiped and continues on, possibly duplicating previous work. If\nthe limit is reached too frequently, it gives up and hands control off to\nanother matching engine with fixed memory requirements.\n(The DFA size limit can also be tweaked. See\n[`RegexBuilder::dfa_size_limit`](struct.RegexBuilder.html#method.dfa_size_limit).)","links":{},"attrs":["#![deny(missing_docs)]","#![warn(missing_debug_implementations)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:23:1667","0:3-0:1650:128","0:8-0:1120:1651","0:9-0:2573:1652","0:10-0:2593:1653","0:11-0:2545:1654","0:12-0:1235:1655","0:14-0:2520:1657","0:15-0:2602:1658","0:16-0:2620:1659","0:17-0:2540:1660","0:18-0:1311:1661","0:19-0:2611:1662","0:20-0:2555:1663","0:21-0:2564:1664","0:22-0:2580:1665","0:4-0:2172:1648","0:5-0:2124:1626","0:6-0:2307:1626"],"is_stripped":false}}},"a:2:2741:5045-0:2380:4304":{"id":"a:2:2741:5045-0:2380:4304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIntoIter","id":"0:2380:4304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2159:2856":{"id":"0:2159:2856","crate_id":0,"name":"dot_matches_new_line","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the value for the any character (`s`) flag, where in `.` matches\nanything when `s` is set and matches anything except for new line when\nit is not set (the default).\n\nN.B. \"matches anything\" means \"any byte\" for `regex::bytes::RegexSet`\nexpressions and means \"any Unicode scalar value\" for `regex::RegexSet`\nexpressions.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2167:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2434:2120":{"id":"0:2434:2120","crate_id":0,"name":"Item","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"usize"}}}},"0:2471":{"id":"0:2471","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIntoIter","id":"0:2468:4304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2472:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8249:3376-0:2555:1663":{"id":"a:2:8249:3376-0:2555:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Split","id":"0:2555:1663","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2620:1659":{"id":"0:2620:1659","crate_id":0,"name":"NoExpand","span":{"filename":"src/re_unicode.rs","begin":[1405,0],"end":[1405,37]},"visibility":"public","docs":"`NoExpand` indicates literal string replacement.\n\nIt can be used with `replace` and `replace_all` to do a literal string\nreplacement without expanding `$name` to their corresponding capture\ngroups. This can be both convenient (to avoid escaping `$`, for example)\nand performant (since capture groups don't need to be found).\n\n`'t` is the lifetime of the literal text.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":["0:2623:1606"]},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:2684:220-0:2620:1659","a:2:8249:3376-0:2620:1659","a:2:8250:3375-0:2620:1659","a:2:2701:228-0:2620:1659","a:2:2741:5045-0:2620:1659","b:2:2251-0:2620:1659","b:2:2542-0:2620:1659","b:2:2248-0:2620:1659","b:2:2538-0:2620:1659","b:2:2553-0:2620:1659","b:2:2548-0:2620:1659","b:2:3319-0:2620:1659","b:5:684-0:2620:1659","0:1347","0:2627","0:2624"]}}},"0:2087:1921":{"id":"0:2087:1921","crate_id":0,"name":"size_limit","span":{"filename":"src/re_builder.rs","begin":[6,4],"end":[6,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:2122":{"id":"0:2122","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexBuilder","id":"0:2119:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2123:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:538:3220":{"id":"0:538:3220","crate_id":0,"name":"next_char","span":{"filename":"src/input.rs","begin":[74,4],"end":[74,45]},"visibility":"default","docs":"Return the Unicode character occurring next to `at`.\n\nIf no such character could be decoded, then `Char` is absent.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["at",{"resolved_path":{"name":"InputAt","id":"0:1802:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:1846":{"id":"0:1846","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[345,28],"end":[345,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1847:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:832":{"id":"0:832","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[117,0],"end":[122,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Regex","id":"0:2217:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:833:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1141":{"id":"0:1141","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[167,0],"end":[172,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Regex","id":"0:2540:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1142:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8250:3375-0:369:1689":{"id":"a:2:8250:3375-0:369:1689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExecBuilder","id":"0:369:1689","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3319-0:1969:1697":{"id":"b:2:3319-0:1969:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Program","id":"0:1969:1697","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:684-0:1969:1697":{"id":"b:5:684-0:1969:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Program","id":"0:1969:1697","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:686:3909","5:687:2668","5:688:5579"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2538-0:2240:1663":{"id":"b:2:2538-0:2240:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Split","id":"0:2240:1663","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3319-0:86:1687":{"id":"b:2:3319-0:86:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Compiler","id":"0:86:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2548-0:2468:4304":{"id":"b:2:2548-0:2468:4304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIntoIter","id":"0:2468:4304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:684-0:2473:4303":{"id":"b:5:684-0:2473:4303","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2473:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["5:686:3909","5:687:2668","5:688:5579"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:554:2888":{"id":"0:554:2888","crate_id":0,"name":"as_bytes","span":{"filename":"src/input.rs","begin":[133,4],"end":[135,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:2545:1654":{"id":"b:2:2248-0:2545:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2545:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2251-0:2564:1664":{"id":"b:2:2251-0:2564:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SplitN","id":"0:2564:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:606:694":{"id":"0:606:694","crate_id":0,"name":"from","span":{"filename":"src/input.rs","begin":[401,4],"end":[403,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["c",{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"char"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5644-0:2217:1660":{"id":"b:5:5644-0:2217:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9147:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5642:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Regex","id":"0:2217:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5646:1455"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2541:2202":{"id":"2:2541:2202","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2515:133"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:2555:1663":{"id":"b:2:2538-0:2555:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Split","id":"0:2555:1663","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1233:811":{"id":"0:1233:811","crate_id":0,"name":"len","span":{"filename":"src/re_unicode.rs","begin":[999,4],"end":[1001,5]},"visibility":"public","docs":"Returns the total number of capture groups (even if they didn't match).\n\nThis is always at least `1` since every regex has at least `1`\ncapturing group that corresponds to the entire match.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2588:423":{"id":"0:2588:423","crate_id":0,"name":"clone","span":{"filename":"src/re_unicode.rs","begin":[1185,9],"end":[1185,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2580:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1970:1916":{"id":"0:1970:1916","crate_id":0,"name":"insts","span":{"filename":"src/prog.rs","begin":[20,4],"end":[20,24]},"visibility":"public","docs":"A sequence of instructions that represents an NFA.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Vec","id":"5:6696:244","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Inst","id":"0:1988:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"a:2:2684:220-0:2564:1664":{"id":"a:2:2684:220-0:2564:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SplitN","id":"0:2564:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2548-0:2167:3687":{"id":"b:2:2548-0:2167:3687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2167:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1308":{"id":"0:1308","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1258,0],"end":[1258,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7588:3693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Matches","id":"0:2602:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2542-0:2555:1663":{"id":"b:2:2542-0:2555:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Split","id":"0:2555:1663","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2251-0:944:1655":{"id":"b:2:2251-0:944:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Captures","id":"0:944:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2553-0:2070:1696":{"id":"b:2:2553-0:2070:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InstRanges","id":"0:2070:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:16-0:2620:1659":{"id":"0:16-0:2620:1659","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[668,31],"end":[668,39]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"crate::re_unicode::NoExpand","name":"NoExpand","id":"0:2620:1659","glob":false}}},"2:12031:37722":{"id":"2:12031:37722","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:11894:1397","str::slice_mut_unchecked":"2:12032:37723","crate::ops::Index":"2:2981:3694"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:2192:3687":{"id":"b:2:2542-0:2192:3687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2192:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:7206-0:2555:1663":{"id":"b:2:7206-0:2555:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Split","id":"0:2555:1663","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:7208:2120","2:7209:3525","2:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"b:2:2538-0:2222:1658":{"id":"b:2:2538-0:2222:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Matches","id":"0:2222:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:465:3011":{"id":"0:465:3011","crate_id":0,"name":"capture_names","span":{"filename":"src/exec.rs","begin":[1356,4],"end":[1358,5]},"visibility":"public","docs":"Return a slice of capture names.\n\nAny capture that isn't named is None.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1156:1980":{"id":"0:1156:1980","crate_id":0,"name":"captures","span":{"filename":"src/re_unicode.rs","begin":[333,4],"end":[335,5]},"visibility":"public","docs":"Returns the capture groups corresponding to the leftmost-first\nmatch in `text`. Capture group `0` always corresponds to the entire\nmatch. If no match is found, then `None` is returned.\n\nYou should only use `captures` if you need access to the location of\ncapturing group matches. Otherwise, `find` is faster for discovering\nthe location of the overall match.\n\n# Examples\n\nSay you have some text with movie names and their release years,\nlike \"'Citizen Kane' (1941)\". It'd be nice if we could search for text\nlooking like that, while also extracting the movie name and its release\nyear separately.\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"'([^']+)'\\s+\\((\\d{4})\\)\").unwrap();\nlet text = \"Not my favorite movie: 'Citizen Kane' (1941).\";\nlet caps = re.captures(text).unwrap();\nassert_eq!(caps.get(1).unwrap().as_str(), \"Citizen Kane\");\nassert_eq!(caps.get(2).unwrap().as_str(), \"1941\");\nassert_eq!(caps.get(0).unwrap().as_str(), \"'Citizen Kane' (1941)\");\n// You can also access the groups by index using the Index notation.\n// Note that this will panic on an invalid index.\nassert_eq!(&caps[1], \"Citizen Kane\");\nassert_eq!(&caps[2], \"1941\");\nassert_eq!(&caps[0], \"'Citizen Kane' (1941)\");\n# }\n```\n\nNote that the full match is at capture group `0`. Each subsequent\ncapture group is indexed by the order of its opening `(`.\n\nWe can make this example a bit clearer by using *named* capture groups:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"'(?P<title>[^']+)'\\s+\\((?P<year>\\d{4})\\)\")\n               .unwrap();\nlet text = \"Not my favorite movie: 'Citizen Kane' (1941).\";\nlet caps = re.captures(text).unwrap();\nassert_eq!(caps.name(\"title\").unwrap().as_str(), \"Citizen Kane\");\nassert_eq!(caps.name(\"year\").unwrap().as_str(), \"1941\");\nassert_eq!(caps.get(0).unwrap().as_str(), \"'Citizen Kane' (1941)\");\n// You can also access the groups by name using the Index notation.\n// Note that this will panic on an invalid group name.\nassert_eq!(&caps[\"title\"], \"Citizen Kane\");\nassert_eq!(&caps[\"year\"], \"1941\");\nassert_eq!(&caps[0], \"'Citizen Kane' (1941)\");\n\n# }\n```\n\nHere we name the capture groups, which we can access with the `name`\nmethod or the `Index` notation with a `&str`. Note that the named\ncapture groups are still accessible with `get` or the `Index` notation\nwith a `usize`.\n\nThe `0`th capture group is always unnamed, so it must always be\naccessed with `get(0)` or `[0]`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Captures","id":"0:1235:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:886:3011":{"id":"0:886:3011","crate_id":0,"name":"capture_names","span":{"filename":"src/re_bytes.rs","begin":[712,4],"end":[714,5]},"visibility":"public","docs":"Returns an iterator over the capture names.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CaptureNames","id":"0:2258:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:944:1655":{"id":"b:2:3319-0:944:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Captures","id":"0:944:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1139":{"id":"0:1139","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[160,0],"end":[165,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9147:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Regex","id":"0:2540:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1140:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12137:2666":{"id":"2:12137:2666","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4536:2666"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:43665:4864","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12020:37721":{"id":"2:12020:37721","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:528:1866":{"id":"0:528:1866","crate_id":0,"name":"is_start","span":{"filename":"src/input.rs","begin":[22,4],"end":[24,5]},"visibility":"public","docs":"Returns true iff this position is at the beginning of the input.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:1969:1697":{"id":"b:2:2548-0:1969:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Program","id":"0:1969:1697","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2264:423":{"id":"0:2264:423","crate_id":0,"name":"clone","span":{"filename":"src/re_bytes.rs","begin":[909,9],"end":[909,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CaptureNames","id":"0:2258:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2300:1606":{"id":"0:2300:1606","crate_id":0,"name":"0","span":{"filename":"src/re_bytes.rs","begin":[1362,24],"end":[1362,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"slice":{"primitive":"u8"}}}}}},"b:2:2548-0:2461:4266":{"id":"b:2:2548-0:2461:4266","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatches","id":"0:2461:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2482:668":{"id":"0:2482:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2190:2234":{"id":"0:2190:2234","crate_id":0,"name":"dfa_size_limit","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the approximate size of the cache used by the DFA.\n\nThis roughly corresponds to the number of bytes that the DFA will\nuse while searching.\n\nNote that this is a *per thread* limit. There is no way to set a global\nlimit. In particular, if a regex is used from multiple threads\nsimultaneously, then each thread may use up to the number of bytes\nspecified here.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["limit",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2192:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:2070:1696":{"id":"b:2:2248-0:2070:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InstRanges","id":"0:2070:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3319-0:2217:1660":{"id":"b:2:3319-0:2217:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Regex","id":"0:2217:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2332:4268":{"id":"0:2332:4268","crate_id":0,"name":"matched_any","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"public","docs":"Whether this set contains any matches.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2560":{"id":"0:2560","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[863,9],"end":[863,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Split","id":"0:2555:1663","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2563:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2542-0:2119:3607":{"id":"b:2:2542-0:2119:3607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexBuilder","id":"0:2119:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12049:30798":{"id":"2:12049:30798","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:1643"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:5016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:389:1667":{"id":"0:389:1667","crate_id":0,"name":"bytes","span":{"filename":"src/exec.rs","begin":[211,4],"end":[214,5]},"visibility":"public","docs":"Compiles byte based programs for use with the NFA matching engines.\n\nBy default, the NFA engines match on Unicode scalar values. They can\nbe made to use byte based programs instead. In general, the byte based\nprograms are slower because of a less efficient encoding of character\nclasses.\n\nNote that this does not impact DFA matching engines, which always\nexecute on bytes.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["yes",{"primitive":"bool"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12106:37736":{"id":"2:12106:37736","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:3-0:1650:128":{"id":"0:3-0:1650:128","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[658,0],"end":[658,28]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"crate::error::Error","name":"Error","id":"0:1650:128","glob":false}}},"0:1023":{"id":"0:1023","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1315,0],"end":[1323,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["by_ref","no_expansion"],"trait":{"name":"Replacer","id":"0:1000:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"items":["0:1025:3910","0:1026:3907"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2251-0:2380:4304":{"id":"b:2:2251-0:2380:4304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIntoIter","id":"0:2380:4304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:332":{"id":"0:332","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[69,0],"end":[89,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:333:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2015:1881":{"id":"0:2015:1881","crate_id":0,"name":"goto","span":{"filename":"src/prog.rs","begin":[316,4],"end":[316,21]},"visibility":"public","docs":"The next location to execute in the program.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:780":{"id":"0:780","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[302,0],"end":[310,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Inst","id":"0:1988:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:781:2339"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1069:2891":{"id":"0:1069:2891","crate_id":0,"name":"find_at","span":{"filename":"src/re_trait.rs","begin":[135,4],"end":[139,32]},"visibility":"default","docs":"Returns the leftmost-first match location if one exists.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Text","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:1062:2743","args":null}}}}}],["start",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"primitive":"usize"},{"primitive":"usize"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:573:811":{"id":"0:573:811","crate_id":0,"name":"len","span":{"filename":"src/input.rs","begin":[215,4],"end":[217,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:2070:1696":{"id":"b:2:2542-0:2070:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InstRanges","id":"0:2070:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2160:2857":{"id":"0:2160:2857","crate_id":0,"name":"swap_greed","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the value for the greedy swap (`U`) flag.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2167:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:684-0:2035:1694":{"id":"b:5:684-0:2035:1694","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EmptyLook","id":"0:2035:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:686:3909","5:687:2668","5:688:5579"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2538-0:2368:3001":{"id":"b:2:2538-0:2368:3001","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSet","id":"0:2368:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3319-0:2373:4266":{"id":"b:2:3319-0:2373:4266","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatches","id":"0:2373:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2612:5937":{"id":"2:2612:5937","crate_id":2,"name":"provide","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["demand",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Demand","id":"2:3382:8619","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:597":{"id":"0:597","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[357,0],"end":[392,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:598:2171","0:599:3232","0:601:3235","0:602:1900"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1662":{"id":"0:1662","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[5,16],"end":[5,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1663:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:7208:2120":{"id":"2:7208:2120","crate_id":2,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"Iterator","id":"2:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"0:1002:3907":{"id":"0:1002:3907","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_bytes.rs","begin":[1240,4],"end":[1242,5]},"visibility":"default","docs":"Return a fixed unchanging replacement byte string.\n\nWhen doing replacements, if access to `Captures` is not needed (e.g.,\nthe replacement byte string does not need `$` expansion), then it can\nbe beneficial to avoid finding sub-captures.\n\nIn general, this is called once for every call to `replacen`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'r","mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2436:4005":{"id":"0:2436:4005","crate_id":0,"name":"size_hint","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:976":{"id":"0:976","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1157,0],"end":[1165,1]},"visibility":"default","docs":"Get a group by index.\n\n`'t` is the lifetime of the matched text.\n\nThe text can't outlive the `Captures` object if this method is\nused, because of how `Index` is defined (normally `a[i]` is part\nof `a` and can't outlive it); to do that, use `get()` instead.\n\n# Panics\n\nIf there is no group at the given index.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"2:2981:3694","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Captures","id":"0:944:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:978:186","0:979:769"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2532":{"id":"0:2532","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[28,22],"end":[28,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2553-0:2373:4266":{"id":"b:2:2553-0:2373:4266","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatches","id":"0:2373:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2459":{"id":"0:2459","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSet","id":"0:2456:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2460:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8249:3376-0:2380:4304":{"id":"a:2:8249:3376-0:2380:4304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIntoIter","id":"0:2380:4304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2741:5045-0:2035:1694":{"id":"a:2:2741:5045-0:2035:1694","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EmptyLook","id":"0:2035:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8249:3376-0:2620:1659":{"id":"a:2:8249:3376-0:2620:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoExpand","id":"0:2620:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:460:2998":{"id":"0:460:2998","crate_id":0,"name":"into_regex","span":{"filename":"src/exec.rs","begin":[1328,4],"end":[1330,5]},"visibility":"public","docs":"Build a Regex from this executor.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"re_unicode::Regex","id":"0:2540:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:2545:1654":{"id":"b:2:2553-0:2545:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2545:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12016:37720":{"id":"2:12016:37720","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12014:37719"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:2249:1664":{"id":"b:2:2542-0:2249:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SplitN","id":"0:2249:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2553-0:2192:3687":{"id":"b:2:2553-0:2192:3687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2192:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2552":{"id":"0:2552","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[833,16],"end":[833,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2545:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["0:2554:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2296:668":{"id":"0:2296:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[1273,9],"end":[1273,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1911:3261":{"id":"0:1911:3261","crate_id":0,"name":"Memmem","span":{"filename":"src/literal/imp.rs","begin":[372,0],"end":[375,1]},"visibility":"public","docs":"A simple wrapper around the memchr crate's memmem implementation.\n\nThe API this exposes mirrors the API of previous substring searchers that\nthis supplanted.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":[]}}},"0:868:3929":{"id":"0:868:3929","crate_id":0,"name":"shortest_match","span":{"filename":"src/re_bytes.rs","begin":[588,4],"end":[590,5]},"visibility":"public","docs":"Returns the end location of a match in the text given.\n\nThis method may have the same performance characteristics as\n`is_match`, except it provides an end location for a match. In\nparticular, the location returned *may be shorter* than the proper end\nof the leftmost-first match that you would find via `Regex::find`.\n\nNote that it is not guaranteed that this routine finds the shortest or\n\"earliest\" possible match. Instead, the main idea of this API is that\nit returns the offset at the point at which the internal regex engine\nhas determined that a match has occurred. This may vary depending on\nwhich internal regex engine is used, and thus, the offset itself may\nchange.\n\n# Example\n\nTypically, `a+` would match the entire first sequence of `a` in some\ntext, but `shortest_match` can give up as soon as it sees the first\n`a`.\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet text = b\"aaaaa\";\nlet pos = Regex::new(r\"a+\").unwrap().shortest_match(text);\nassert_eq!(pos, Some(1));\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:2555:1663":{"id":"b:2:2548-0:2555:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Split","id":"0:2555:1663","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:328":{"id":"0:328","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[39,0],"end":[49,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","cause","description","provide","type_id"],"trait":{"name":"Error","id":"2:2603:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:329:2721"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2161:2858":{"id":"0:2161:2858","crate_id":0,"name":"ignore_whitespace","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the value for the ignore whitespace (`x`) flag.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2167:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2092:2856":{"id":"0:2092:2856","crate_id":0,"name":"dot_matches_new_line","span":{"filename":"src/re_builder.rs","begin":[11,4],"end":[11,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"a:2:8249:3376-0:944:1655":{"id":"a:2:8249:3376-0:944:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Captures","id":"0:944:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:551:1884":{"id":"0:551:1884","crate_id":0,"name":"is_empty_match","span":{"filename":"src/input.rs","begin":[117,4],"end":[119,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["at",{"resolved_path":{"name":"InputAt","id":"0:1802:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["empty",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"InstEmptyLook","id":"0:2028:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:2275:1665":{"id":"b:2:2542-0:2275:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2275:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2540:1660":{"id":"0:2540:1660","crate_id":0,"name":"Regex","span":{"filename":"src/re_unicode.rs","begin":[158,0],"end":[158,23]},"visibility":"public","docs":"A compiled regular expression for matching Unicode strings.\n\nIt is represented as either a sequence of bytecode instructions (dynamic)\nor as a specialized Rust function (native). It can be used to search, split\nor replace text. All searching is done with an implicit `.*?` at the\nbeginning and end of an expression. To force an expression to match the\nwhole string (or a prefix or a suffix), you must use an anchor like `^` or\n`$` (or `\\A` and `\\z`).\n\nWhile this crate will handle Unicode strings (whether in the regular\nexpression or in the search text), all positions returned are **byte\nindices**. Every byte index is guaranteed to be at a Unicode code point\nboundary.\n\nThe lifetimes `'r` and `'t` in this crate correspond to the lifetime of a\ncompiled regular expression and text to search, respectively.\n\nThe only methods that allocate new strings are the string replacement\nmethods. All other methods (searching and splitting) return borrowed\npointers into the string given.\n\n# Examples\n\nFind the location of a US phone number:\n\n```rust\n# use regex::Regex;\nlet re = Regex::new(\"[0-9]{3}-[0-9]{3}-[0-9]{4}\").unwrap();\nlet mat = re.find(\"phone: 111-222-3333\").unwrap();\nassert_eq!((mat.start(), mat.end()), (7, 19));\n```\n\n# Using the `std::str::pattern` methods with `Regex`\n\n> **Note**: This section requires that this crate is compiled with the\n> `pattern` Cargo feature enabled, which **requires nightly Rust**.\n\nSince `Regex` implements `Pattern`, you can use regexes with methods\ndefined on `&str`. For example, `is_match`, `find`, `find_iter`\nand `split` can be replaced with `str::contains`, `str::find`,\n`str::match_indices` and `str::split`.\n\nHere are some examples:\n\n```rust,ignore\n# use regex::Regex;\nlet re = Regex::new(r\"\\d+\").unwrap();\nlet haystack = \"a111b222c\";\n\nassert!(haystack.contains(&re));\nassert_eq!(haystack.find(&re), Some(1));\nassert_eq!(haystack.match_indices(&re).collect::<Vec<_>>(),\n           vec![(1, \"111\"), (5, \"222\")]);\nassert_eq!(haystack.split(&re).collect::<Vec<_>>(), vec![\"a\", \"b\", \"c\"]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:1148","0:1176","0:1193","a:2:2684:220-0:2540:1660","a:2:8249:3376-0:2540:1660","a:2:8250:3375-0:2540:1660","a:2:2701:228-0:2540:1660","a:2:2741:5045-0:2540:1660","b:2:2251-0:2540:1660","b:2:2542-0:2540:1660","b:2:2248-0:2540:1660","b:2:2538-0:2540:1660","b:2:2553-0:2540:1660","b:2:2548-0:2540:1660","b:2:3319-0:2540:1660","b:5:684-0:2540:1660","b:5:5644-0:2540:1660","0:2543","0:1139","0:1145","0:1141"]}}},"b:2:2553-0:2573:1652":{"id":"b:2:2553-0:2573:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureLocations","id":"0:2573:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2182:2854":{"id":"0:2182:2854","crate_id":0,"name":"case_insensitive","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the value for the case insensitive (`i`) flag.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2192:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:2258:1654":{"id":"b:2:2548-0:2258:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2258:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:7206-0:2275:1665":{"id":"b:2:7206-0:2275:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2275:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:7208:2120","2:7209:3525","2:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"a:2:8250:3375-0:2240:1663":{"id":"a:2:8250:3375-0:2240:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Split","id":"0:2240:1663","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1068:2890":{"id":"0:1068:2890","crate_id":0,"name":"is_match_at","span":{"filename":"src/re_trait.rs","begin":[132,4],"end":[132,67]},"visibility":"default","docs":"Returns whether the regex matches the text given.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Text","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:1062:2743","args":null}}}}}],["start",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:1320:3910":{"id":"0:1320:3910","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1320,4],"end":[1322,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["caps",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Captures","id":"0:1235:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:684-0:2258:1654":{"id":"b:5:684-0:2258:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2258:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["5:686:3909","5:687:2668","5:688:5579"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:15-0:2602:1658":{"id":"0:15-0:2602:1658","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[668,22],"end":[668,29]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"crate::re_unicode::Matches","name":"Matches","id":"0:2602:1658","glob":false}}},"0:1668:668":{"id":"0:1668:668","crate_id":0,"name":"fmt","span":{"filename":"src/exec.rs","begin":[34,9],"end":[34,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1973:1919":{"id":"0:1973:1919","crate_id":0,"name":"capture_name_idx","span":{"filename":"src/prog.rs","begin":[29,4],"end":[29,53]},"visibility":"public","docs":"Pointers to all named capture groups into `captures`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Arc","id":"5:5798:70","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"HashMap","id":"1:731:142","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:2030:2055":{"id":"0:2030:2055","crate_id":0,"name":"look","span":{"filename":"src/prog.rs","begin":[340,4],"end":[340,23]},"visibility":"public","docs":"The type of zero-width assertion to check.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"EmptyLook","id":"0:2035:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:2248-0:2222:1658":{"id":"b:2:2248-0:2222:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Matches","id":"0:2222:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:684-0:2368:3001":{"id":"b:5:684-0:2368:3001","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSet","id":"0:2368:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:686:3909","5:687:2668","5:688:5579"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:560:230":{"id":"0:560:230","crate_id":0,"name":"Target","span":{"filename":"src/input.rs","begin":[150,4],"end":[150,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"slice":{"primitive":"u8"}}}}},"0:381:2812":{"id":"0:381:2812","crate_id":0,"name":"new_many","span":{"filename":"src/exec.rs","begin":[147,4],"end":[155,5]},"visibility":"public","docs":"Like new, but compiles the union of the given regular expressions.\n\nNote that when compiling 2 or more regular expressions, capture groups\nare completely unsupported. (This means both `find` and `captures`\nwon't work.)","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["res",{"generic":"I"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2506:75","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"S"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:637:3023":{"id":"0:637:3023","crate_id":0,"name":"complete","span":{"filename":"src/literal/imp.rs","begin":[72,4],"end":[74,5]},"visibility":"public","docs":"Returns true if all matches comprise the entire regular expression.\n\nThis does not necessarily mean that a literal match implies a match\nof the regular expression. For example, the regular expression `^a`\nis comprised of a single complete literal `a`, but the regular\nexpression demands that it only match at the beginning of a string.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:555":{"id":"0:555","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[142,0],"end":[147,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"CharInput","id":"0:1812:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:557:939"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2548-0:2197:1657":{"id":"b:2:2548-0:2197:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2197:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2684:220-0:1855:1693":{"id":"a:2:2684:220-0:1855:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LiteralSearcher","id":"0:1855:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8249:3376-0:2288:1662":{"id":"a:2:8249:3376-0:2288:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReplacerRef","id":"0:2288:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:2293":{"id":"0:2293","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1273,9],"end":[1273,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReplacerRef","id":"0:2288:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:2296:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2741:5045-0:369:1689":{"id":"a:2:2741:5045-0:369:1689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExecBuilder","id":"0:369:1689","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2379:668":{"id":"0:2379:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2065:1885":{"id":"0:2065:1885","crate_id":0,"name":"c","span":{"filename":"src/prog.rs","begin":[371,4],"end":[371,15]},"visibility":"public","docs":"The character to test.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"char"}}},"0:1883:3293":{"id":"0:1883:3293","crate_id":0,"name":"LiteralIter","span":{"filename":"src/literal/imp.rs","begin":[225,0],"end":[231,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:1885:2040","0:1887:1887","0:1890:3294","0:1893:3269","0:1896:3275"],"impls":[]}}},"b:2:2248-0:2197:1657":{"id":"b:2:2248-0:2197:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2197:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:7206-0:2231:1653":{"id":"b:2:7206-0:2231:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureMatches","id":"0:2231:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:7208:2120","2:7209:3525","2:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"a:2:2684:220-0:1969:1697":{"id":"a:2:2684:220-0:1969:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Program","id":"0:1969:1697","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2701:228-0:1855:1693":{"id":"a:2:2701:228-0:1855:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LiteralSearcher","id":"0:1855:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:557:939":{"id":"0:557:939","crate_id":0,"name":"new","span":{"filename":"src/input.rs","begin":[144,4],"end":[146,5]},"visibility":"public","docs":"Return a new character input reader for the given string.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"CharInput","id":"0:1812:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:369:1689":{"id":"b:2:2542-0:369:1689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ExecBuilder","id":"0:369:1689","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:7206-0:2240:1663":{"id":"b:2:7206-0:2240:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Split","id":"0:2240:1663","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:7208:2120","2:7209:3525","2:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"b:2:2248-0:2167:3687":{"id":"b:2:2248-0:2167:3687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2167:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8249:3376-0:2275:1665":{"id":"a:2:8249:3376-0:2275:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2275:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2741:5045-0:86:1687":{"id":"a:2:2741:5045-0:86:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Compiler","id":"0:86:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8249:3376-0:2373:4266":{"id":"a:2:8249:3376-0:2373:4266","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatches","id":"0:2373:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2548-0:2249:1664":{"id":"b:2:2548-0:2249:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SplitN","id":"0:2249:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2553-0:2385:4303":{"id":"b:2:2553-0:2385:4303","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2385:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2538-0:1812:1691":{"id":"b:2:2538-0:1812:1691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CharInput","id":"0:1812:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8249:3376-0:2167:3687":{"id":"a:2:8249:3376-0:2167:3687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2167:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:599:3232":{"id":"0:599:3232","crate_id":0,"name":"len_utf8","span":{"filename":"src/input.rs","begin":[368,4],"end":[370,5]},"visibility":"public","docs":"Returns the length of the character's UTF-8 encoding.\n\nIf the character is absent, then `1` is returned.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:841:2339":{"id":"0:841:2339","crate_id":0,"name":"is_match","span":{"filename":"src/re_bytes.rs","begin":[172,4],"end":[174,5]},"visibility":"public","docs":"Returns true if and only if there is a match for the regex in the\nstring given.\n\nIt is recommended to use this method if all you need to do is test\na match, since the underlying matching engine may be able to do less\nwork.\n\n# Example\n\nTest if some text contains at least one word with exactly 13 ASCII word\nbytes:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet text = b\"I categorically deny having triskaidekaphobia.\";\nassert!(Regex::new(r\"\\b\\w{13}\\b\").unwrap().is_match(text));\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2427:784":{"id":"0:2427:784","crate_id":0,"name":"into_iter","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:7202:152","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2432:784":{"id":"0:2432:784","crate_id":0,"name":"into_iter","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:7202:152","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1127:2165":{"id":"0:1127:2165","crate_id":0,"name":"range","span":{"filename":"src/re_unicode.rs","begin":[63,4],"end":[65,5]},"visibility":"public","docs":"Returns the range over the starting and ending byte offsets of the\nmatch in the haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Range","id":"2:39192:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1208:504":{"id":"0:1208:504","crate_id":0,"name":"count","span":{"filename":"src/re_unicode.rs","begin":[850,4],"end":[852,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1998:1694":{"id":"0:1998:1694","crate_id":0,"name":"EmptyLook","span":{"filename":"src/prog.rs","begin":[289,4],"end":[289,28]},"visibility":"default","docs":"EmptyLook represents a zero-width assertion in a regex program. A\nzero-width assertion does not consume any of the input text.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:2000:1606"]},"discriminant":null}}},"a:2:2701:228-0:2611:1662":{"id":"a:2:2701:228-0:2611:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReplacerRef","id":"0:2611:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2701:228-0:2258:1654":{"id":"a:2:2701:228-0:2258:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2258:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:96":{"id":"0:96","crate_id":0,"name":null,"span":{"filename":"src/compile.rs","begin":[54,0],"end":[905,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Compiler","id":"0:86:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:97:939","0:98:1921","0:99:1667","0:100:1950","0:101:1672","0:102:1960","0:103:1671"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8250:3375-0:2268:1652":{"id":"a:2:8250:3375-0:2268:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureLocations","id":"0:2268:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:633:2850":{"id":"0:633:2850","crate_id":0,"name":"empty","span":{"filename":"src/literal/imp.rs","begin":[41,4],"end":[43,5]},"visibility":"public","docs":"Returns a matcher that never matches and never advances the input.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:2297:1659":{"id":"a:2:2684:220-0:2297:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoExpand","id":"0:2297:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:896:953":{"id":"0:896:953","crate_id":0,"name":"next","span":{"filename":"src/re_bytes.rs","begin":[791,4],"end":[794,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Match","id":"0:2197:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:2368:3001":{"id":"b:2:3319-0:2368:3001","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSet","id":"0:2368:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2684:220-0:2602:1658":{"id":"a:2:2684:220-0:2602:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Matches","id":"0:2602:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1337":{"id":"0:1337","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1368,0],"end":[1376,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["by_ref","no_expansion"],"trait":{"name":"Replacer","id":"0:1311:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}},"items":["0:1339:3910","0:1340:3907"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2447:4310":{"id":"0:2447:4310","crate_id":0,"name":"next_back","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12042:35382":{"id":"2:12042:35382","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:43649:5019","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8249:3376-0:2035:1694":{"id":"a:2:8249:3376-0:2035:1694","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EmptyLook","id":"0:2035:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2251-0:2297:1659":{"id":"b:2:2251-0:2297:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoExpand","id":"0:2297:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2415:1869":{"id":"0:2415:1869","crate_id":0,"name":"is_empty","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"public","docs":"Returns `true` if this set contains no regular expressions.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:2275:1665":{"id":"b:2:2553-0:2275:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2275:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8250:3375-0:2573:1652":{"id":"a:2:8250:3375-0:2573:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureLocations","id":"0:2573:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:21-0:2564:1664":{"id":"0:21-0:2564:1664","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[669,4],"end":[669,10]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"crate::re_unicode::SplitN","name":"SplitN","id":"0:2564:1664","glob":false}}},"0:1167:2547":{"id":"0:1167:2547","crate_id":0,"name":"replace","span":{"filename":"src/re_unicode.rs","begin":[523,4],"end":[529,5]},"visibility":"public","docs":"Replaces the leftmost-first match with the replacement provided.\nThe replacement can be a regular string (where `$N` and `$name` are\nexpanded to match capture groups) or a function that takes the matches'\n`Captures` and returns the replaced string.\n\nIf no match is found, then a copy of the string is returned unchanged.\n\n# Replacement string syntax\n\nAll instances of `$name` in the replacement text is replaced with the\ncorresponding capture group `name`.\n\n`name` may be an integer corresponding to the index of the\ncapture group (counted by order of opening parenthesis where `0` is the\nentire match) or it can be a name (consisting of letters, digits or\nunderscores) corresponding to a named capture group.\n\nIf `name` isn't a valid capture group (whether the name doesn't exist\nor isn't a valid index), then it is replaced with the empty string.\n\nThe longest possible name is used. e.g., `$1a` looks up the capture\ngroup named `1a` and not the capture group at index `1`. To exert more\nprecise control over the name, use braces, e.g., `${1}a`.\n\nTo write a literal `$` use `$$`.\n\n# Examples\n\nNote that this function is polymorphic with respect to the replacement.\nIn typical usage, this can just be a normal string:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(\"[^01]+\").unwrap();\nassert_eq!(re.replace(\"1078910\", \"\"), \"1010\");\n# }\n```\n\nBut anything satisfying the `Replacer` trait will work. For example,\na closure of type `|&Captures| -> String` provides direct access to the\ncaptures corresponding to a match. This allows one to access\ncapturing group matches easily:\n\n```rust\n# use regex::Regex;\n# use regex::Captures; fn main() {\nlet re = Regex::new(r\"([^,\\s]+),\\s+(\\S+)\").unwrap();\nlet result = re.replace(\"Springsteen, Bruce\", |caps: &Captures| {\n    format!(\"{} {}\", &caps[2], &caps[1])\n});\nassert_eq!(result, \"Bruce Springsteen\");\n# }\n```\n\nBut this is a bit cumbersome to use all the time. Instead, a simple\nsyntax is supported that expands `$name` into the corresponding capture\ngroup. Here's the last example, but using this expansion technique\nwith named capture groups:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?P<last>[^,\\s]+),\\s+(?P<first>\\S+)\").unwrap();\nlet result = re.replace(\"Springsteen, Bruce\", \"$first $last\");\nassert_eq!(result, \"Bruce Springsteen\");\n# }\n```\n\nNote that using `$2` instead of `$first` or `$1` instead of `$last`\nwould produce the same result. To write a literal `$` use `$$`.\n\nSometimes the replacement string requires use of curly braces to\ndelineate a capture group replacement and surrounding literal text.\nFor example, if we wanted to join two words together with an\nunderscore:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?P<first>\\w+)\\s+(?P<second>\\w+)\").unwrap();\nlet result = re.replace(\"deep fried\", \"${first}_$second\");\nassert_eq!(result, \"deep_fried\");\n# }\n```\n\nWithout the curly braces, the capture group name `first_` would be\nused, and since it doesn't exist, it would be replaced with the empty\nstring.\n\nFinally, sometimes you just want to replace a literal string with no\nregard for capturing group expansion. This can be done by wrapping a\nbyte string with `NoExpand`:\n\n```rust\n# use regex::Regex;\n# fn main() {\nuse regex::NoExpand;\n\nlet re = Regex::new(r\"(?P<last>[^,\\s]+),\\s+(\\S+)\").unwrap();\nlet result = re.replace(\"Springsteen, Bruce\", NoExpand(\"$2 $last\"));\nassert_eq!(result, \"$2 $last\");\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"primitive":"str"}}}],["rep",{"generic":"R"}]],"output":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'t"},{"type":{"primitive":"str"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Replacer","id":"0:1311:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1991:1606":{"id":"0:1991:1606","crate_id":0,"name":"0","span":{"filename":"src/prog.rs","begin":[280,10],"end":[280,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:1246:795":{"id":"0:1246:795","crate_id":0,"name":"iter","span":{"filename":"src/re_unicode.rs","begin":[1067,4],"end":[1069,5]},"visibility":"public","docs":"An iterator that yields all capturing matches in the order in which\nthey appear in the regex. If a particular capture group didn't\nparticipate in the match, then `None` is yielded for that capture.\n\nThe first match always corresponds to the overall match of the regex.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'c","mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2580:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2072:2048":{"id":"0:2072:2048","crate_id":0,"name":"ranges","span":{"filename":"src/prog.rs","begin":[381,4],"end":[381,35]},"visibility":"public","docs":"The set of Unicode scalar value ranges to test.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Box","id":"5:280:2104","args":{"angle_bracketed":{"args":[{"type":{"slice":{"tuple":[{"primitive":"char"},{"primitive":"char"}]}}}],"bindings":[]}}}}}},"a:2:8250:3375-0:2297:1659":{"id":"a:2:8250:3375-0:2297:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoExpand","id":"0:2297:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12138:37743":{"id":"2:12138:37743","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4533:37743"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:43674:5030","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2250:3456":{"id":"2:2250:3456","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:100:1950":{"id":"0:100:1950","crate_id":0,"name":"only_utf8","span":{"filename":"src/compile.rs","begin":[100,4],"end":[103,5]},"visibility":"public","docs":"When disabled, the program compiled may match arbitrary bytes.\n\nWhen enabled (the default), all compiled programs exclusively match\nvalid UTF-8 bytes.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["yes",{"primitive":"bool"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:684-0:1988:1695":{"id":"b:5:684-0:1988:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Inst","id":"0:1988:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:686:3909","5:687:2668","5:688:5579"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2384:668":{"id":"0:2384:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:2540:1660":{"id":"a:2:2684:220-0:2540:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Regex","id":"0:2540:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2553-0:1802:1692":{"id":"b:2:2553-0:1802:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InputAt","id":"0:1802:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2036:2063":{"id":"0:2036:2063","crate_id":0,"name":"StartLine","span":{"filename":"src/prog.rs","begin":[347,4],"end":[347,13]},"visibility":"default","docs":"Start of line or input.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2301":{"id":"0:2301","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1361,9],"end":[1361,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoExpand","id":"0:2297:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2303:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2684:220-0:2555:1663":{"id":"a:2:2684:220-0:2555:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Split","id":"0:2555:1663","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1216:2120":{"id":"0:1216:2120","crate_id":0,"name":"Item","span":{"filename":"src/re_unicode.rs","begin":[870,4],"end":[870,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"primitive":"str"}}}}}},"0:648:2961":{"id":"0:648:2961","crate_id":0,"name":"lcs","span":{"filename":"src/literal/imp.rs","begin":[136,4],"end":[138,5]},"visibility":"public","docs":"Returns a matcher for the longest common suffix of this matcher.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Memmem","id":"0:1911:3261","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2192:3687":{"id":"0:2192:3687","crate_id":0,"name":"RegexSetBuilder","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"A configurable builder for a set of regular expressions.\n\nA builder can be used to configure how the regexes are built, for example,\nby setting the default flags (which can be overridden in the expression\nitself) or setting various limits.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:2177","a:2:2684:220-0:2192:3687","a:2:8249:3376-0:2192:3687","a:2:8250:3375-0:2192:3687","a:2:2701:228-0:2192:3687","a:2:2741:5045-0:2192:3687","b:2:2251-0:2192:3687","b:2:2542-0:2192:3687","b:2:2248-0:2192:3687","b:2:2538-0:2192:3687","b:2:2553-0:2192:3687","b:2:2548-0:2192:3687","b:2:3319-0:2192:3687","0:2195"]}}},"a:2:2684:220-0:2573:1652":{"id":"a:2:2684:220-0:2573:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureLocations","id":"0:2573:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1329:3907":{"id":"0:1329:3907","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1343,4],"end":[1345,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:1988:1695":{"id":"a:2:2684:220-0:1988:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Inst","id":"0:1988:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12105:37735":{"id":"2:12105:37735","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:1836:1690":{"id":"b:2:2538-0:1836:1690","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8250:3375-0:2249:1664":{"id":"a:2:8250:3375-0:2249:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SplitN","id":"0:2249:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2357":{"id":"0:2357","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["rfold","advance_back_by","try_rfold","rfind","nth_back"],"trait":{"name":"DoubleEndedIterator","id":"2:7240:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2385:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2359:4310"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2248-0:2468:4304":{"id":"b:2:2248-0:2468:4304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIntoIter","id":"0:2468:4304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12133:31143":{"id":"2:12133:31143","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:2288:1662":{"id":"b:2:2553-0:2288:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReplacerRef","id":"0:2288:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2701:228-0:86:1687":{"id":"a:2:2701:228-0:86:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Compiler","id":"0:86:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2431:2120":{"id":"0:2431:2120","crate_id":0,"name":"Item","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"usize"}}}},"b:2:3319-0:1802:1692":{"id":"b:2:3319-0:1802:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InputAt","id":"0:1802:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3319-0:2540:1660":{"id":"b:2:3319-0:2540:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Regex","id":"0:2540:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3319-0:2119:3607":{"id":"b:2:3319-0:2119:3607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexBuilder","id":"0:2119:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2542-0:944:1655":{"id":"b:2:2542-0:944:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Captures","id":"0:944:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2112:2857":{"id":"0:2112:2857","crate_id":0,"name":"swap_greed","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the value for the greedy swap (`U`) flag.\n\nWhen enabled, a pattern like `a*` is lazy (tries to find shortest\nmatch) and `a*?` is greedy (tries to find longest match).\n\nBy default, `a*` is greedy and `a*?` is lazy.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexBuilder","id":"0:2119:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:2167:3687":{"id":"b:2:3319-0:2167:3687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2167:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2365:668":{"id":"0:2365:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2354:2120":{"id":"0:2354:2120","crate_id":0,"name":"Item","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"usize"}}}},"b:2:2538-0:2611:1662":{"id":"b:2:2538-0:2611:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReplacerRef","id":"0:2611:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1843:729":{"id":"0:1843:729","crate_id":0,"name":"hash","span":{"filename":"src/input.rs","begin":[345,22],"end":[345,26]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9370:145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:913:2120":{"id":"0:913:2120","crate_id":0,"name":"Item","span":{"filename":"src/re_bytes.rs","begin":[836,4],"end":[836,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"slice":{"primitive":"u8"}}}}}}},"0:1000:1661":{"id":"0:1000:1661","crate_id":0,"name":"Replacer","span":{"filename":"src/re_bytes.rs","begin":[1223,0],"end":[1268,1]},"visibility":"public","docs":"Replacer describes types that can be used to replace matches in a byte\nstring.\n\nIn general, users of this crate shouldn't need to implement this trait,\nsince implementations are already provided for `&[u8]` along with other\nvariants of bytes types and `FnMut(&Captures) -> Vec<u8>` (or any\n`FnMut(&Captures) -> T` where `T: AsRef<[u8]>`), which covers most use cases.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:1001:3910","0:1002:3907","0:1004:4142"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:1023","0:1020","0:1033","0:1006","0:1012","0:1016","0:1037","0:1027"]}}},"b:2:7206-0:2222:1658":{"id":"b:2:7206-0:2222:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Matches","id":"0:2222:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:7208:2120","2:7209:3525","2:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"0:2520:1657":{"id":"0:2520:1657","crate_id":0,"name":"Match","span":{"filename":"src/re_unicode.rs","begin":[29,0],"end":[33,1]},"visibility":"public","docs":"Match represents a single match of a regex in a haystack.\n\nThe lifetime parameter `'t` refers to the lifetime of the matched text.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:1121","a:2:2684:220-0:2520:1657","a:2:8249:3376-0:2520:1657","a:2:8250:3375-0:2520:1657","a:2:2701:228-0:2520:1657","a:2:2741:5045-0:2520:1657","b:2:2251-0:2520:1657","b:2:2542-0:2520:1657","b:2:2248-0:2520:1657","b:2:2538-0:2520:1657","b:2:2553-0:2520:1657","b:2:2548-0:2520:1657","b:2:3319-0:2520:1657","b:5:684-0:2520:1657","0:2527","0:2537","0:1130","0:2532","0:2525","0:2535","0:1136","0:2530","0:1133"]}}},"0:1841":{"id":"0:1841","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[345,16],"end":[345,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1120:1651":{"id":"0:1120:1651","crate_id":0,"name":"escape","span":{"filename":"src/re_unicode.rs","begin":[21,0],"end":[23,1]},"visibility":"public","docs":"Escapes all regular expression meta characters in `text`.\n\nThe string returned may be safely used as a literal in a regular\nexpression.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1231":{"id":"0:1231","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[984,0],"end":[1013,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"CaptureLocations","id":"0:2573:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1232:1880","0:1233:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2538-0:2288:1662":{"id":"b:2:2538-0:2288:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReplacerRef","id":"0:2288:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2701:228-0:1969:1697":{"id":"a:2:2701:228-0:1969:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Program","id":"0:1969:1697","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2335:795":{"id":"0:2335:795","crate_id":0,"name":"iter","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"public","docs":"Returns an iterator over indexes in the regex that matched.\n\nThis will always produces matches in ascending order of index, where\nthe index corresponds to the index of the regex that matched with\nrespect to its position when initially building the set.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SetMatchesIter","id":"0:2385:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:598:2171":{"id":"0:598:2171","crate_id":0,"name":"is_none","span":{"filename":"src/input.rs","begin":[360,4],"end":[362,5]},"visibility":"public","docs":"Returns true iff the character is absent.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:2456:3001":{"id":"b:2:2248-0:2456:3001","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSet","id":"0:2456:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8249:3376-0:2142:3607":{"id":"a:2:8249:3376-0:2142:3607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexBuilder","id":"0:2142:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1158:3813":{"id":"0:1158:3813","crate_id":0,"name":"captures_iter","span":{"filename":"src/re_unicode.rs","begin":[362,4],"end":[367,5]},"visibility":"public","docs":"Returns an iterator over all the non-overlapping capture groups matched\nin `text`. This is operationally the same as `find_iter`, except it\nyields information about capturing group matches.\n\n# Example\n\nWe can use this to find all movie titles and their release years in\nsome text, where the movie is formatted like \"'Title' (xxxx)\":\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"'(?P<title>[^']+)'\\s+\\((?P<year>\\d{4})\\)\")\n               .unwrap();\nlet text = \"'Citizen Kane' (1941), 'The Wizard of Oz' (1939), 'M' (1931).\";\nfor caps in re.captures_iter(text) {\n    println!(\"Movie: {:?}, Released: {:?}\",\n             &caps[\"title\"], &caps[\"year\"]);\n}\n// Output:\n// Movie: Citizen Kane, Released: 1941\n// Movie: The Wizard of Oz, Released: 1939\n// Movie: M, Released: 1931\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'r","mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"CaptureMatches","id":"0:2593:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1336:3907":{"id":"0:1336:3907","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1363,4],"end":[1365,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1978:1946":{"id":"0:1978:1946","crate_id":0,"name":"is_bytes","span":{"filename":"src/prog.rs","begin":[46,4],"end":[46,22]},"visibility":"public","docs":"When true, this program uses byte range instructions instead of Unicode\nrange instructions.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"a:2:2741:5045-0:2456:3001":{"id":"a:2:2741:5045-0:2456:3001","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSet","id":"0:2456:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2553-0:2217:1660":{"id":"b:2:2553-0:2217:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Regex","id":"0:2217:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2465:423":{"id":"0:2465:423","crate_id":0,"name":"clone","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SetMatches","id":"0:2461:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1274:769":{"id":"0:1274:769","crate_id":0,"name":"index","span":{"filename":"src/re_unicode.rs","begin":[1169,4],"end":[1173,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["name",{"borrowed_ref":{"lifetime":"'i","mutable":false,"type":{"primitive":"str"}}}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1808:423":{"id":"0:1808:423","crate_id":0,"name":"clone","span":{"filename":"src/input.rs","begin":[12,9],"end":[12,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"InputAt","id":"0:1802:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:9-0:2573:1652":{"id":"0:9-0:2573:1652","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[667,12],"end":[667,28]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"crate::re_unicode::CaptureLocations","name":"CaptureLocations","id":"0:2573:1652","glob":false}}},"0:457":{"id":"0:457","crate_id":0,"name":null,"span":{"filename":"src/exec.rs","begin":[1311,0],"end":[1371,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Exec","id":"0:1664:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:458:2994","0:459:2996","0:460:2998","0:461:3000","0:462:3003","0:463:3005","0:464:3008","0:465:3011","0:466:1919","0:467:1987"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:609:613":{"id":"0:609:613","crate_id":0,"name":"eq","span":{"filename":"src/input.rs","begin":[408,4],"end":[410,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"char"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2139:1921":{"id":"0:2139:1921","crate_id":0,"name":"size_limit","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the approximate size limit of the compiled regular expression.\n\nThis roughly corresponds to the number of bytes occupied by a single\ncompiled program. If the program exceeds this number, then a\ncompilation error is returned.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["limit",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexBuilder","id":"0:2142:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:944:1655":{"id":"b:2:2248-0:944:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Captures","id":"0:944:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2251-0:1802:1692":{"id":"b:2:2251-0:1802:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InputAt","id":"0:1802:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8249:3376-0:2545:1654":{"id":"a:2:8249:3376-0:2545:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2545:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2248-0:2258:1654":{"id":"b:2:2248-0:2258:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2258:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2542-0:2456:3001":{"id":"b:2:2542-0:2456:3001","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSet","id":"0:2456:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:684-0:2268:1652":{"id":"b:5:684-0:2268:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureLocations","id":"0:2268:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:686:3909","5:687:2668","5:688:5579"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1293":{"id":"0:1293","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1225,0],"end":[1235,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["find_map","is_partitioned","last","fuse","skip_while","size_hint","chain","skip","gt","cloned","__iterator_get_unchecked","min_by","cmp_by","try_find","try_fold","inspect","take_while","intersperse","rev","collect","min_by_key","partial_cmp_by","rposition","ge","try_for_each","try_collect","map_while","intersperse_with","find","next_chunk","lt","sum","max_by","eq_by","unzip","fold","collect_into","scan","by_ref","for_each","cmp","advance_by","eq","position","enumerate","max_by_key","copied","cycle","reduce","count","peekable","partition","flat_map","min","filter","is_sorted","nth","all","take","zip","ne","partial_cmp","is_sorted_by","array_chunks","try_reduce","partition_in_place","max","flatten","any","filter_map","le","step_by","map","is_sorted_by_key","product"],"trait":{"name":"Iterator","id":"2:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureMatches","id":"0:2593:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1296:2120","0:1297:953"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5390:38394":{"id":"5:5390:38394","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7255:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:5045-0:2119:3607":{"id":"a:2:2741:5045-0:2119:3607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexBuilder","id":"0:2119:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:775":{"id":"0:775","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[246,0],"end":[252,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"Program","id":"0:1969:1697","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"items":["0:777:2120","0:778:3525","0:779:784"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12041:37724":{"id":"2:12041:37724","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:43621:5033","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1130":{"id":"0:1130","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[80,0],"end":[88,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1132:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2551:128":{"id":"2:2551:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:2607":{"id":"0:2607","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1246,9],"end":[1246,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Matches","id":"0:2602:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2610:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2209":{"id":"0:2209","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[20,22],"end":[20,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2197:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:858:2547":{"id":"0:858:2547","crate_id":0,"name":"replace","span":{"filename":"src/re_bytes.rs","begin":[482,4],"end":[488,5]},"visibility":"public","docs":"Replaces the leftmost-first match with the replacement provided. The\nreplacement can be a regular byte string (where `$N` and `$name` are\nexpanded to match capture groups) or a function that takes the matches'\n`Captures` and returns the replaced byte string.\n\nIf no match is found, then a copy of the byte string is returned\nunchanged.\n\n# Replacement string syntax\n\nAll instances of `$name` in the replacement text is replaced with the\ncorresponding capture group `name`.\n\n`name` may be an integer corresponding to the index of the\ncapture group (counted by order of opening parenthesis where `0` is the\nentire match) or it can be a name (consisting of letters, digits or\nunderscores) corresponding to a named capture group.\n\nIf `name` isn't a valid capture group (whether the name doesn't exist\nor isn't a valid index), then it is replaced with the empty string.\n\nThe longest possible name is used. e.g., `$1a` looks up the capture\ngroup named `1a` and not the capture group at index `1`. To exert more\nprecise control over the name, use braces, e.g., `${1}a`.\n\nTo write a literal `$` use `$$`.\n\n# Examples\n\nNote that this function is polymorphic with respect to the replacement.\nIn typical usage, this can just be a normal byte string:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(\"[^01]+\").unwrap();\nassert_eq!(re.replace(b\"1078910\", &b\"\"[..]), &b\"1010\"[..]);\n# }\n```\n\nBut anything satisfying the `Replacer` trait will work. For example, a\nclosure of type `|&Captures| -> Vec<u8>` provides direct access to the\ncaptures corresponding to a match. This allows one to access capturing\ngroup matches easily:\n\n```rust\n# use regex::bytes::Regex;\n# use regex::bytes::Captures; fn main() {\nlet re = Regex::new(r\"([^,\\s]+),\\s+(\\S+)\").unwrap();\nlet result = re.replace(b\"Springsteen, Bruce\", |caps: &Captures| {\n    let mut replacement = caps[2].to_owned();\n    replacement.push(b' ');\n    replacement.extend(&caps[1]);\n    replacement\n});\nassert_eq!(result, &b\"Bruce Springsteen\"[..]);\n# }\n```\n\nBut this is a bit cumbersome to use all the time. Instead, a simple\nsyntax is supported that expands `$name` into the corresponding capture\ngroup. Here's the last example, but using this expansion technique\nwith named capture groups:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?P<last>[^,\\s]+),\\s+(?P<first>\\S+)\").unwrap();\nlet result = re.replace(b\"Springsteen, Bruce\", &b\"$first $last\"[..]);\nassert_eq!(result, &b\"Bruce Springsteen\"[..]);\n# }\n```\n\nNote that using `$2` instead of `$first` or `$1` instead of `$last`\nwould produce the same result. To write a literal `$` use `$$`.\n\nSometimes the replacement string requires use of curly braces to\ndelineate a capture group replacement and surrounding literal text.\nFor example, if we wanted to join two words together with an\nunderscore:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?P<first>\\w+)\\s+(?P<second>\\w+)\").unwrap();\nlet result = re.replace(b\"deep fried\", &b\"${first}_$second\"[..]);\nassert_eq!(result, &b\"deep_fried\"[..]);\n# }\n```\n\nWithout the curly braces, the capture group name `first_` would be\nused, and since it doesn't exist, it would be replaced with the empty\nstring.\n\nFinally, sometimes you just want to replace a literal string with no\nregard for capturing group expansion. This can be done by wrapping a\nbyte string with `NoExpand`:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nuse regex::bytes::NoExpand;\n\nlet re = Regex::new(r\"(?P<last>[^,\\s]+),\\s+(\\S+)\").unwrap();\nlet result = re.replace(b\"Springsteen, Bruce\", NoExpand(b\"$2 $last\"));\nassert_eq!(result, &b\"$2 $last\"[..]);\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["rep",{"generic":"R"}]],"output":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'t"},{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Replacer","id":"0:1000:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:2520:1657":{"id":"b:2:2251-0:2520:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1153:3757":{"id":"0:1153:3757","crate_id":0,"name":"find_iter","span":{"filename":"src/re_unicode.rs","begin":[266,4],"end":[268,5]},"visibility":"public","docs":"Returns an iterator for each successive non-overlapping match in\n`text`, returning the start and end byte indices with respect to\n`text`.\n\n# Example\n\nFind the start and end location of every word with exactly 13 Unicode\nword characters:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet text = \"Retroactively relinquishing remunerations is reprehensible.\";\nfor mat in Regex::new(r\"\\b\\w{13}\\b\").unwrap().find_iter(text) {\n    println!(\"{:?}\", mat);\n}\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'r","mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Matches","id":"0:2602:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1252:668":{"id":"0:1252:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[1107,4],"end":[1109,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:18-0:1311:1661":{"id":"0:18-0:1311:1661","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[668,48],"end":[668,56]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"crate::re_unicode::Replacer","name":"Replacer","id":"0:1311:1661","glob":false}}},"0:840:939":{"id":"0:840:939","crate_id":0,"name":"new","span":{"filename":"src/re_bytes.rs","begin":[149,4],"end":[151,5]},"visibility":"public","docs":"Compiles a regular expression. Once compiled, it can be used repeatedly\nto search, split or replace text in a string.\n\nIf an invalid expression is given, then an error is returned.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["re",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Regex","id":"0:2217:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:5045-0:2258:1654":{"id":"a:2:2741:5045-0:2258:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2258:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1063:2885":{"id":"0:1063:2885","crate_id":0,"name":"Text","span":{"filename":"src/re_trait.rs","begin":[106,4],"end":[106,35]},"visibility":"default","docs":"The type of the haystack.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}}},"0:2197:1657":{"id":"0:2197:1657","crate_id":0,"name":"Match","span":{"filename":"src/re_bytes.rs","begin":[21,0],"end":[25,1]},"visibility":"public","docs":"Match represents a single match of a regex in a haystack.\n\nThe lifetime parameter `'t` refers to the lifetime of the matched text.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:815","a:2:2684:220-0:2197:1657","a:2:8249:3376-0:2197:1657","a:2:8250:3375-0:2197:1657","a:2:2701:228-0:2197:1657","a:2:2741:5045-0:2197:1657","b:2:2251-0:2197:1657","b:2:2542-0:2197:1657","b:2:2248-0:2197:1657","b:2:2538-0:2197:1657","b:2:2553-0:2197:1657","b:2:2548-0:2197:1657","b:2:3319-0:2197:1657","b:5:684-0:2197:1657","0:827","0:2212","0:2204","0:2207","0:824","0:2202","0:2214","0:2209"]}}},"0:1170:3903":{"id":"0:1170:3903","crate_id":0,"name":"replace_all","span":{"filename":"src/re_unicode.rs","begin":[537,4],"end":[543,5]},"visibility":"public","docs":"Replaces all non-overlapping matches in `text` with the replacement\nprovided. This is the same as calling `replacen` with `limit` set to\n`0`.\n\nSee the documentation for `replace` for details on how to access\ncapturing group matches in the replacement string.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"primitive":"str"}}}],["rep",{"generic":"R"}]],"output":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'t"},{"type":{"primitive":"str"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Replacer","id":"0:1311:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2326:811":{"id":"0:2326:811","crate_id":0,"name":"len","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"public","docs":"Returns the total number of regular expressions in this set.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1346:3910":{"id":"0:1346:3910","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1391,4],"end":[1393,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["caps",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Captures","id":"0:1235:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:2540:1660":{"id":"b:2:2251-0:2540:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Regex","id":"0:2540:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1221":{"id":"0:1221","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[907,0],"end":[933,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["find_map","is_partitioned","last","fuse","skip_while","size_hint","chain","skip","gt","cloned","__iterator_get_unchecked","min_by","cmp_by","try_find","try_fold","inspect","take_while","intersperse","rev","collect","min_by_key","partial_cmp_by","rposition","ge","try_for_each","try_collect","map_while","intersperse_with","find","next_chunk","lt","sum","max_by","eq_by","unzip","fold","collect_into","scan","by_ref","for_each","cmp","advance_by","eq","position","enumerate","max_by_key","copied","cycle","reduce","count","peekable","partition","flat_map","min","filter","is_sorted","nth","all","take","zip","ne","partial_cmp","is_sorted_by","array_chunks","try_reduce","partition_in_place","max","flatten","any","filter_map","le","step_by","map","is_sorted_by_key","product"],"trait":{"name":"Iterator","id":"2:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SplitN","id":"0:2564:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1224:2120","0:1225:953","0:1226:4005"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:684-0:2385:4303":{"id":"b:5:684-0:2385:4303","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2385:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["5:686:3909","5:687:2668","5:688:5579"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2063:1905":{"id":"0:2063:1905","crate_id":0,"name":"InstChar","span":{"filename":"src/prog.rs","begin":[366,0],"end":[372,1]},"visibility":"public","docs":"Representation of the Char instruction.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:2064:1881","0:2065:1885"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":[]}}},"b:2:2248-0:1988:1695":{"id":"b:2:2248-0:1988:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Inst","id":"0:1988:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2196:668":{"id":"0:2196:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2273":{"id":"0:2273","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[971,16],"end":[971,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureLocations","id":"0:2268:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2274:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:5644-0:1650:128":{"id":"b:5:5644-0:1650:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9147:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5642:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5646:1455"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1840:423":{"id":"0:1840:423","crate_id":0,"name":"clone","span":{"filename":"src/input.rs","begin":[345,9],"end":[345,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:2119:3607":{"id":"b:2:2548-0:2119:3607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexBuilder","id":"0:2119:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2741:5045-0:2231:1653":{"id":"a:2:2741:5045-0:2231:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureMatches","id":"0:2231:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2538-0:2231:1653":{"id":"b:2:2538-0:2231:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureMatches","id":"0:2231:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:910":{"id":"0:910","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[835,0],"end":[857,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["find_map","is_partitioned","last","fuse","skip_while","size_hint","chain","skip","gt","cloned","__iterator_get_unchecked","min_by","cmp_by","try_find","try_fold","inspect","take_while","intersperse","rev","collect","min_by_key","partial_cmp_by","rposition","ge","try_for_each","try_collect","map_while","intersperse_with","find","next_chunk","lt","sum","max_by","eq_by","unzip","fold","collect_into","scan","by_ref","for_each","cmp","advance_by","eq","position","enumerate","max_by_key","copied","cycle","reduce","count","peekable","partition","flat_map","min","filter","is_sorted","nth","all","take","zip","ne","partial_cmp","is_sorted_by","array_chunks","try_reduce","partition_in_place","max","flatten","any","filter_map","le","step_by","map","is_sorted_by_key","product"],"trait":{"name":"Iterator","id":"2:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Split","id":"0:2240:1663","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:913:2120","0:914:953"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2217:1660":{"id":"0:2217:1660","crate_id":0,"name":"Regex","span":{"filename":"src/re_bytes.rs","begin":[108,0],"end":[108,23]},"visibility":"public","docs":"A compiled regular expression for matching arbitrary bytes.\n\nIt can be used to search, split or replace text. All searching is done with\nan implicit `.*?` at the beginning and end of an expression. To force an\nexpression to match the whole string (or a prefix or a suffix), you must\nuse an anchor like `^` or `$` (or `\\A` and `\\z`).\n\nLike the `Regex` type in the parent module, matches with this regex return\nbyte offsets into the search text. **Unlike** the parent `Regex` type,\nthese byte offsets may not correspond to UTF-8 sequence boundaries since\nthe regexes in this module can match arbitrary bytes.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:839","0:867","0:884","a:2:2684:220-0:2217:1660","a:2:8249:3376-0:2217:1660","a:2:8250:3375-0:2217:1660","a:2:2701:228-0:2217:1660","a:2:2741:5045-0:2217:1660","b:2:2251-0:2217:1660","b:2:2542-0:2217:1660","b:2:2248-0:2217:1660","b:2:2538-0:2217:1660","b:2:2553-0:2217:1660","b:2:2548-0:2217:1660","b:2:3319-0:2217:1660","b:5:684-0:2217:1660","b:5:5644-0:2217:1660","0:836","0:830","0:2220","0:832"]}}},"a:2:8249:3376-0:2456:3001":{"id":"a:2:8249:3376-0:2456:3001","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSet","id":"0:2456:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2741:5045-0:2473:4303":{"id":"a:2:2741:5045-0:2473:4303","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2473:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2542-0:2231:1653":{"id":"b:2:2542-0:2231:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureMatches","id":"0:2231:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:915":{"id":"0:915","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[859,0],"end":[859,47]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7588:3693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Split","id":"0:2240:1663","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1235:1655":{"id":"0:1235:1655","crate_id":0,"name":"Captures","span":{"filename":"src/re_unicode.rs","begin":[1026,0],"end":[1030,1]},"visibility":"public","docs":"Captures represents a group of captured strings for a single match.\n\nThe 0th capture always corresponds to the entire match. Each subsequent\nindex corresponds to the next capture group in the regex. If a capture\ngroup is named, then the matched string is *also* available via the `name`\nmethod. (Note that the 0th capture is always unnamed and so must be\naccessed with the `get` method.)\n\nPositions returned from a capture group are always byte indices.\n\n`'t` is the lifetime of the matched text.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:1240","a:2:2684:220-0:1235:1655","a:2:8249:3376-0:1235:1655","a:2:8250:3375-0:1235:1655","a:2:2701:228-0:1235:1655","a:2:2741:5045-0:1235:1655","b:2:2251-0:1235:1655","b:2:2542-0:1235:1655","b:2:2248-0:1235:1655","b:2:2538-0:1235:1655","b:2:2553-0:1235:1655","b:2:2548-0:1235:1655","b:2:3319-0:1235:1655","0:1270","0:1250","0:1264"]}}},"0:837:127":{"id":"0:837:127","crate_id":0,"name":"Err","span":{"filename":"src/re_bytes.rs","begin":[135,4],"end":[135,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:921:2120":{"id":"0:921:2120","crate_id":0,"name":"Item","span":{"filename":"src/re_bytes.rs","begin":[874,4],"end":[874,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"slice":{"primitive":"u8"}}}}}}},"0:2165:2234":{"id":"0:2165:2234","crate_id":0,"name":"dfa_size_limit","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the approximate size of the cache used by the DFA.\n\nThis roughly corresponds to the number of bytes that the DFA will\nuse while searching.\n\nNote that this is a *per thread* limit. There is no way to set a global\nlimit. In particular, if a regex is used from multiple threads\nsimultaneously, then each thread may use up to the number of bytes\nspecified here.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["limit",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2167:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:2268:1652":{"id":"b:2:2548-0:2268:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureLocations","id":"0:2268:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2684:220-0:2368:3001":{"id":"a:2:2684:220-0:2368:3001","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSet","id":"0:2368:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12023:1880":{"id":"2:12023:1880","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41396:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12132:31142":{"id":"2:12132:31142","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:684-0:1664:1688":{"id":"b:5:684-0:1664:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Exec","id":"0:1664:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:686:3909","5:687:2668","5:688:5579"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2548-0:1664:1688":{"id":"b:2:2548-0:1664:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Exec","id":"0:1664:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:617-0:618:2991":{"id":"0:617-0:618:2991","crate_id":0,"name":null,"span":{"filename":"src/literal/mod.rs","begin":[1,0],"end":[1,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::imp","name":"imp","id":"0:618:2991","glob":true}}},"0:778:3525":{"id":"0:778:3525","crate_id":0,"name":"IntoIter","span":{"filename":"src/prog.rs","begin":[248,4],"end":[248,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Iter","id":"2:9961:3526","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"resolved_path":{"name":"Inst","id":"0:1988:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"0:2050:2073":{"id":"0:2050:2073","crate_id":0,"name":"NotWordBoundaryAscii","span":{"filename":"src/prog.rs","begin":[361,4],"end":[361,24]},"visibility":"default","docs":"Not ASCII word boundary.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2012":{"id":"0:2012","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[271,16],"end":[271,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Inst","id":"0:1988:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2013:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2553-0:1650:128":{"id":"b:2:2553-0:1650:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1887:1887":{"id":"0:1887:1887","crate_id":0,"name":"Bytes","span":{"filename":"src/literal/imp.rs","begin":[227,4],"end":[227,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:1889:1606"]},"discriminant":null}}},"b:2:2251-0:1855:1693":{"id":"b:2:2251-0:1855:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LiteralSearcher","id":"0:1855:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1852:1035":{"id":"0:1852:1035","crate_id":0,"name":"partial_cmp","span":{"filename":"src/input.rs","begin":[345,43],"end":[345,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30836:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1986":{"id":"0:1986","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[17,9],"end":[17,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Program","id":"0:1969:1697","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1987:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2088:2234":{"id":"0:2088:2234","crate_id":0,"name":"dfa_size_limit","span":{"filename":"src/re_builder.rs","begin":[7,4],"end":[7,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:1004:4142":{"id":"0:1004:4142","crate_id":0,"name":"by_ref","span":{"filename":"src/re_bytes.rs","begin":[1265,4],"end":[1267,5]},"visibility":"default","docs":"Return a `Replacer` that borrows and wraps this `Replacer`.\n\nThis is useful when you want to take a generic `Replacer` (which might\nnot be cloneable) and use it without consuming it, so it can be used\nmore than once.\n\n# Example\n\n```\nuse regex::bytes::{Regex, Replacer};\n\nfn replace_all_twice<R: Replacer>(\n    re: Regex,\n    src: &[u8],\n    mut rep: R,\n) -> Vec<u8> {\n    let dst = re.replace_all(src, rep.by_ref());\n    let dst = re.replace_all(&dst, rep.by_ref());\n    dst.into_owned()\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'r","mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ReplacerRef","id":"0:2288:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2423:795":{"id":"0:2423:795","crate_id":0,"name":"iter","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"public","docs":"Returns an iterator over indexes in the regex that matched.\n\nThis will always produces matches in ascending order of index, where\nthe index corresponds to the index of the regex that matched with\nrespect to its position when initially building the set.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SetMatchesIter","id":"0:2473:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:543:1869":{"id":"0:543:1869","crate_id":0,"name":"is_empty","span":{"filename":"src/input.rs","begin":[96,4],"end":[98,5]},"visibility":"default","docs":"Whether the input is empty.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1209":{"id":"0:1209","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[855,0],"end":[855,50]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:7263:4010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2545:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2701:228-0:2167:3687":{"id":"a:2:2701:228-0:2167:3687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2167:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2274:668":{"id":"0:2274:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[971,16],"end":[971,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:567:3222":{"id":"0:567:3222","crate_id":0,"name":"previous_char","span":{"filename":"src/input.rs","begin":[171,4],"end":[173,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["at",{"resolved_path":{"name":"InputAt","id":"0:1802:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:827":{"id":"0:827","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[90,0],"end":[94,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Match","id":"0:2197:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Range","id":"2:39192:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"items":["0:829:694"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2538-0:2473:4303":{"id":"b:2:2538-0:2473:4303","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2473:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2684:220-0:2192:3687":{"id":"a:2:2684:220-0:2192:3687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2192:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1148":{"id":"0:1148","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[191,0],"end":[606,1]},"visibility":"default","docs":"Core regular expression methods.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Regex","id":"0:2540:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1149:939","0:1150:2339","0:1151:2599","0:1153:3757","0:1156:1980","0:1158:3813","0:1161:1992","0:1164:3833","0:1167:2547","0:1170:3903","0:1173:3897"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2553-0:369:1689":{"id":"b:2:2553-0:369:1689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ExecBuilder","id":"0:369:1689","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3319-0:2564:1664":{"id":"b:2:3319-0:2564:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SplitN","id":"0:2564:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2042:2057":{"id":"0:2042:2057","crate_id":0,"name":"EndText","span":{"filename":"src/prog.rs","begin":[353,4],"end":[353,11]},"visibility":"default","docs":"End of input.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:2684:220-0:1235:1655":{"id":"a:2:2684:220-0:1235:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Captures","id":"0:1235:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2602:1658":{"id":"0:2602:1658","crate_id":0,"name":"Matches","span":{"filename":"src/re_unicode.rs","begin":[1247,0],"end":[1247,69]},"visibility":"public","docs":"An iterator over all non-overlapping matches for a particular string.\n\nThe iterator yields a `Match` value. The iterator stops when no more\nmatches can be found.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the matched string.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:2684:220-0:2602:1658","a:2:8249:3376-0:2602:1658","a:2:8250:3375-0:2602:1658","a:2:2701:228-0:2602:1658","a:2:2741:5045-0:2602:1658","b:2:2251-0:2602:1658","b:2:2542-0:2602:1658","b:2:2248-0:2602:1658","b:2:2538-0:2602:1658","b:2:2553-0:2602:1658","b:2:7206-0:2602:1658","b:2:2548-0:2602:1658","b:2:3319-0:2602:1658","0:2607","0:1302","0:1308"]}}},"0:1321:3907":{"id":"0:1321:3907","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1323,4],"end":[1325,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:2620:1659":{"id":"b:2:3319-0:2620:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoExpand","id":"0:2620:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2163:2853":{"id":"0:2163:2853","crate_id":0,"name":"octal","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Whether to support octal syntax or not.\n\nOctal syntax is a little-known way of uttering Unicode codepoints in\na regular expression. For example, `a`, `\\x61`, `\\u0061` and\n`\\141` are all equivalent regular expressions, where the last example\nshows octal syntax.\n\nWhile supporting octal syntax isn't in and of itself a problem, it does\nmake good error messages harder. That is, in PCRE based regex engines,\nsyntax like `\\0` invokes a backreference, which is explicitly\nunsupported in Rust's regex engine. However, many users expect it to\nbe supported. Therefore, when octal support is disabled, the error\nmessage will explicitly mention that backreferences aren't supported.\n\nOctal syntax is disabled by default.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2167:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:2197:1657":{"id":"b:2:3319-0:2197:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2197:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2553-0:86:1687":{"id":"b:2:2553-0:86:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Compiler","id":"0:86:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2251-0:2258:1654":{"id":"b:2:2251-0:2258:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2258:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2251-0:2456:3001":{"id":"b:2:2251-0:2456:3001","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSet","id":"0:2456:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8250:3375-0:1235:1655":{"id":"a:2:8250:3375-0:1235:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Captures","id":"0:1235:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12066:31245":{"id":"2:12066:31245","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:11712:1643","`DoubleEndedIterator`":"2:7240:121","prim@char":"1:11888:419","str::split":"2:12060:1992"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43375:5037","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:5016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12040:11362":{"id":"2:12040:11362","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:43611:5032","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2320:2850":{"id":"0:2320:2850","crate_id":0,"name":"empty","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"public","docs":"Create a new empty regex set.\n\n# Example\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::empty();\nassert!(set.is_empty());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"RegexSet","id":"0:2368:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2549":{"id":"0:2549","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[833,9],"end":[833,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2545:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["0:2551:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1244:917":{"id":"0:1244:917","crate_id":0,"name":"name","span":{"filename":"src/re_unicode.rs","begin":[1058,4],"end":[1060,5]},"visibility":"public","docs":"Returns the match for the capture group named `name`. If `name` isn't a\nvalid capture group or didn't match anything, then `None` is returned.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["name",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:533:1869":{"id":"0:533:1869","crate_id":0,"name":"is_empty","span":{"filename":"src/input.rs","begin":[51,4],"end":[53,5]},"visibility":"public","docs":"Returns whether the UTF-8 width of the character at this position\nis zero.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:2564:1664":{"id":"b:2:2538-0:2564:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SplitN","id":"0:2564:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2684:220-0:2456:3001":{"id":"a:2:2684:220-0:2456:3001","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSet","id":"0:2456:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2248-0:2035:1694":{"id":"b:2:2248-0:2035:1694","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EmptyLook","id":"0:2035:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:684-0:2456:3001":{"id":"b:5:684-0:2456:3001","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSet","id":"0:2456:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:686:3909","5:687:2668","5:688:5579"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1021:3910":{"id":"0:1021:3910","crate_id":0,"name":"replace_append","span":{"filename":"src/re_bytes.rs","begin":[1306,4],"end":[1308,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["caps",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Captures","id":"0:944:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Vec","id":"5:6696:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:103:1671":{"id":"0:103:1671","crate_id":0,"name":"compile","span":{"filename":"src/compile.rs","begin":[129,4],"end":[137,5]},"visibility":"public","docs":"Compile a regular expression given its AST.\n\nThe compiler is guaranteed to succeed unless the program exceeds the\nspecified size limit. If the size limit is exceeded, then compilation\nstops and returns an error.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["exprs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"Hir","id":"20:2994:1898","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"result::Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Program","id":"0:1969:1697","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:1812:1691":{"id":"b:2:2251-0:1812:1691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CharInput","id":"0:1812:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:815":{"id":"0:815","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[27,0],"end":[70,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Match","id":"0:2197:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:817:1383","0:818:609","0:819:1869","0:820:811","0:821:2165","0:822:2888"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2248-0:2275:1665":{"id":"b:2:2248-0:2275:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2275:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1305:2120":{"id":"0:1305:2120","crate_id":0,"name":"Item","span":{"filename":"src/re_unicode.rs","begin":[1250,4],"end":[1250,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}}},"b:2:2542-0:1650:128":{"id":"b:2:2542-0:1650:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1660:423":{"id":"0:1660:423","crate_id":0,"name":"clone","span":{"filename":"src/error.rs","begin":[5,9],"end":[5,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:469:423":{"id":"0:469:423","crate_id":0,"name":"clone","span":{"filename":"src/exec.rs","begin":[1374,4],"end":[1377,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Exec","id":"0:1664:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12087:1827":{"id":"2:12087:1827","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:11712:1643","`DoubleEndedIterator`":"2:7240:121","prim@char":"1:11888:419","str::matches":"2:12087:1827"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43561:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2145":{"id":"0:2145","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexBuilder","id":"0:2142:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2146:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:997":{"id":"0:997","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1214,0],"end":[1214,59]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7588:3693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2275:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2360":{"id":"0:2360","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7588:3693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2385:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2548-0:2520:1657":{"id":"b:2:2548-0:2520:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2538-0:2070:1696":{"id":"b:2:2538-0:2070:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InstRanges","id":"0:2070:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:7206-0:2380:4304":{"id":"b:2:7206-0:2380:4304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIntoIter","id":"0:2380:4304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:7208:2120","2:7209:3525","2:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"2:12035:2116":{"id":"2:12035:2116","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:11888:419"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43327:5025","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:2461:4266":{"id":"b:2:3319-0:2461:4266","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatches","id":"0:2461:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:867":{"id":"0:867","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[559,0],"end":[702,1]},"visibility":"default","docs":"Advanced or \"lower level\" search methods.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Regex","id":"0:2217:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:868:3929","0:869:2889","0:870:2890","0:871:2891","0:874:3797","0:877:3949","0:879:2892"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8249:3376-0:86:1687":{"id":"a:2:8249:3376-0:86:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Compiler","id":"0:86:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3319-0:1836:1690":{"id":"b:2:3319-0:1836:1690","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2440":{"id":"0:2440","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["find_map","is_partitioned","last","fuse","skip_while","size_hint","chain","skip","gt","cloned","__iterator_get_unchecked","min_by","cmp_by","try_find","try_fold","inspect","take_while","intersperse","rev","collect","min_by_key","partial_cmp_by","rposition","ge","try_for_each","try_collect","map_while","intersperse_with","find","next_chunk","lt","sum","max_by","eq_by","unzip","fold","collect_into","scan","by_ref","for_each","cmp","advance_by","eq","position","enumerate","max_by_key","copied","cycle","reduce","count","peekable","partition","flat_map","min","filter","is_sorted","nth","all","take","zip","ne","partial_cmp","is_sorted_by","array_chunks","try_reduce","partition_in_place","max","flatten","any","filter_map","le","step_by","map","is_sorted_by_key","product"],"trait":{"name":"Iterator","id":"2:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2473:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2442:2120","0:2443:953","0:2444:4005"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2573:1652":{"id":"0:2573:1652","crate_id":0,"name":"CaptureLocations","span":{"filename":"src/re_unicode.rs","begin":[974,0],"end":[974,49]},"visibility":"public","docs":"CaptureLocations is a low level representation of the raw offsets of each\nsubmatch.\n\nYou can think of this as a lower level\n[`Captures`](struct.Captures.html), where this type does not support\nnamed capturing groups directly and it does not borrow the text that these\noffsets were matched on.\n\nPrimarily, this type is useful when using the lower level `Regex` APIs\nsuch as `read_captures`, which permits amortizing the allocation in which\ncapture match locations are stored.\n\nIn order to build a value of this type, you'll need to call the\n`capture_locations` method on the `Regex` being used to execute the search.\nThe value returned can then be reused in subsequent searches.\n\n# Example\n\nThis example shows how to create and use `CaptureLocations` in a search.\n\n```\nuse regex::Regex;\n\nlet re = Regex::new(r\"(?<first>\\w+)\\s+(?<last>\\w+)\").unwrap();\nlet mut locs = re.capture_locations();\nlet m = re.captures_read(&mut locs, \"Bruce Springsteen\").unwrap();\nassert_eq!(0..17, m.range());\nassert_eq!(Some((0, 17)), locs.get(0));\nassert_eq!(Some((0, 5)), locs.get(1));\nassert_eq!(Some((6, 17)), locs.get(2));\n\n// Asking for an invalid capture group always returns None.\nassert_eq!(None, locs.get(3));\nassert_eq!(None, locs.get(34973498648));\nassert_eq!(None, locs.get(9944060567225171988));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:1231","a:2:2684:220-0:2573:1652","a:2:8249:3376-0:2573:1652","a:2:8250:3375-0:2573:1652","a:2:2701:228-0:2573:1652","a:2:2741:5045-0:2573:1652","b:2:2251-0:2573:1652","b:2:2542-0:2573:1652","b:2:2248-0:2573:1652","b:2:2538-0:2573:1652","b:2:2553-0:2573:1652","b:2:2548-0:2573:1652","b:2:3319-0:2573:1652","b:5:684-0:2573:1652","0:2578","0:2576"]}}},"b:2:3319-0:2468:4304":{"id":"b:2:3319-0:2468:4304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIntoIter","id":"0:2468:4304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2195":{"id":"0:2195","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2192:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2196:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2548-0:2217:1660":{"id":"b:2:2548-0:2217:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Regex","id":"0:2217:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:535:1872":{"id":"0:535:1872","crate_id":0,"name":"next_pos","span":{"filename":"src/input.rs","begin":[61,4],"end":[63,5]},"visibility":"public","docs":"Returns the byte offset of the next position in the input.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2040:2058":{"id":"0:2040:2058","crate_id":0,"name":"StartText","span":{"filename":"src/prog.rs","begin":[351,4],"end":[351,13]},"visibility":"default","docs":"Start of input.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:5:684-0:2197:1657":{"id":"b:5:684-0:2197:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2197:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["5:686:3909","5:687:2668","5:688:5579"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2553-0:2461:4266":{"id":"b:2:2553-0:2461:4266","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatches","id":"0:2461:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:329:2721":{"id":"0:329:2721","crate_id":0,"name":"description","span":{"filename":"src/error.rs","begin":[42,4],"end":[48,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2569":{"id":"0:2569","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[901,9],"end":[901,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SplitN","id":"0:2564:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2572:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:331:668":{"id":"0:331:668","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[52,4],"end":[62,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1273:186":{"id":"0:1273:186","crate_id":0,"name":"Output","span":{"filename":"src/re_unicode.rs","begin":[1167,4],"end":[1167,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"str"}}}},"0:765":{"id":"0:765","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[165,0],"end":[172,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:2898:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Program","id":"0:1969:1697","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:766:230","0:767:552"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2553-0:2380:4304":{"id":"b:2:2553-0:2380:4304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIntoIter","id":"0:2380:4304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2466":{"id":"0:2466","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatches","id":"0:2461:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2467:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:527":{"id":"0:527","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[20,0],"end":[64,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"InputAt","id":"0:1802:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:528:1866","0:529:3206","0:530:419","0:531:1888","0:532:811","0:533:1869","0:534:1871","0:535:1872"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:887:3961":{"id":"0:887:3961","crate_id":0,"name":"captures_len","span":{"filename":"src/re_bytes.rs","begin":[717,4],"end":[719,5]},"visibility":"public","docs":"Returns the number of captures.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:5045-0:2167:3687":{"id":"a:2:2741:5045-0:2167:3687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2167:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2420:4268":{"id":"0:2420:4268","crate_id":0,"name":"matched_any","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"public","docs":"Whether this set contains any matches.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2240:1663":{"id":"0:2240:1663","crate_id":0,"name":"Split","span":{"filename":"src/re_bytes.rs","begin":[830,0],"end":[833,1]},"visibility":"public","docs":"Yields all substrings delimited by a regular expression match.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the byte string being split.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:2684:220-0:2240:1663","a:2:8249:3376-0:2240:1663","a:2:8250:3375-0:2240:1663","a:2:2701:228-0:2240:1663","a:2:2741:5045-0:2240:1663","b:2:2251-0:2240:1663","b:2:2542-0:2240:1663","b:2:2248-0:2240:1663","b:2:2538-0:2240:1663","b:2:2553-0:2240:1663","b:2:7206-0:2240:1663","b:2:2548-0:2240:1663","b:2:3319-0:2240:1663","0:910","0:915","0:2245"]}}},"a:2:2701:228-0:2368:3001":{"id":"a:2:2701:228-0:2368:3001","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSet","id":"0:2368:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:820:811":{"id":"0:820:811","crate_id":0,"name":"len","span":{"filename":"src/re_bytes.rs","begin":[48,4],"end":[50,5]},"visibility":"public","docs":"Returns the length, in bytes, of this match.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:757":{"id":"0:757","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[80,0],"end":[163,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Program","id":"0:1969:1697","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:758:939","0:759:1366","0:760:3505","0:761:1978","0:762:2049","0:763:1950","0:764:2537"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1142:668":{"id":"0:1142:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[169,4],"end":[171,5]},"visibility":"default","docs":"Shows the original regular expression.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1173:3897":{"id":"0:1173:3897","crate_id":0,"name":"replacen","span":{"filename":"src/re_unicode.rs","begin":[551,4],"end":[605,5]},"visibility":"public","docs":"Replaces at most `limit` non-overlapping matches in `text` with the\nreplacement provided. If `limit` is 0, then all non-overlapping matches\nare replaced.\n\nSee the documentation for `replace` for details on how to access\ncapturing group matches in the replacement string.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"primitive":"str"}}}],["limit",{"primitive":"usize"}],["rep",{"generic":"R"}]],"output":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'t"},{"type":{"primitive":"str"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Replacer","id":"0:1311:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:2468:4304":{"id":"b:2:2538-0:2468:4304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIntoIter","id":"0:2468:4304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2009:1606":{"id":"0:2009:1606","crate_id":0,"name":"0","span":{"filename":"src/prog.rs","begin":[299,10],"end":[299,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"InstBytes","id":"0:2077:1904","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:12135:37742":{"id":"2:12135:37742","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4535:37742"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:43656:5029","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2448":{"id":"0:2448","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7588:3693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2473:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2701:228-0:2275:1665":{"id":"a:2:2701:228-0:2275:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2275:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:97:939":{"id":"0:97:939","crate_id":0,"name":"new","span":{"filename":"src/compile.rs","begin":[58,4],"end":[70,5]},"visibility":"public","docs":"Create a new regular expression compiler.\n\nVarious options can be set before calling `compile` on an expression.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:7206-0:2258:1654":{"id":"b:2:7206-0:2258:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2258:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:7208:2120","2:7209:3525","2:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"a:2:2684:220-0:2275:1665":{"id":"a:2:2684:220-0:2275:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2275:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2701:228-0:2297:1659":{"id":"a:2:2701:228-0:2297:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoExpand","id":"0:2297:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2373:4266":{"id":"0:2373:4266","crate_id":0,"name":"SetMatches","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"public","docs":"A set of matches returned by a regex set.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:2331","a:2:2684:220-0:2373:4266","a:2:8249:3376-0:2373:4266","a:2:8250:3375-0:2373:4266","a:2:2701:228-0:2373:4266","a:2:2741:5045-0:2373:4266","b:2:2251-0:2373:4266","b:2:2542-0:2373:4266","b:2:2248-0:2373:4266","b:2:2538-0:2373:4266","b:2:2553-0:2373:4266","b:2:2548-0:2373:4266","b:2:3319-0:2373:4266","b:5:684-0:2373:4266","0:2340","0:2336","0:2378","0:2376"]}}},"0:2342:3525":{"id":"0:2342:3525","crate_id":0,"name":"IntoIter","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"SetMatchesIter","id":"0:2385:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}},"a:2:2701:228-0:2197:1657":{"id":"a:2:2701:228-0:2197:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2197:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2741:5045-0:1650:128":{"id":"a:2:2741:5045-0:1650:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2022:1883":{"id":"0:2022:1883","crate_id":0,"name":"goto1","span":{"filename":"src/prog.rs","begin":[327,4],"end":[327,22]},"visibility":"public","docs":"The first instruction to try. A match resulting from following goto1\nhas precedence over a match resulting from following goto2.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"a:2:2684:220-0:2167:3687":{"id":"a:2:2684:220-0:2167:3687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2167:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3319-0:2249:1664":{"id":"b:2:3319-0:2249:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SplitN","id":"0:2249:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2542-0:1802:1692":{"id":"b:2:2542-0:1802:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InputAt","id":"0:1802:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2178:939":{"id":"0:2178:939","crate_id":0,"name":"new","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Create a new regular expression builder with the given pattern.\n\nIf the pattern is invalid, then an error will be returned when\n`build` is called.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["patterns",{"generic":"I"}]],"output":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2192:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2506:75","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"S"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1987:423":{"id":"0:1987:423","crate_id":0,"name":"clone","span":{"filename":"src/prog.rs","begin":[17,9],"end":[17,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Program","id":"0:1969:1697","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12093:37730":{"id":"2:12093:37730","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:11712:1643","`DoubleEndedIterator`":"2:7240:121","prim@char":"1:11888:419","str::rmatch_indices":"2:12096:37731"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43507:5034","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:2249:1664":{"id":"b:2:2538-0:2249:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SplitN","id":"0:2249:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2610-0:1650:128":{"id":"b:2:2610-0:1650:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:2603:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:3370:17645","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:5937"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"E"}}}},"0:101:1672":{"id":"0:101:1672","crate_id":0,"name":"dfa","span":{"filename":"src/compile.rs","begin":[112,4],"end":[115,5]},"visibility":"public","docs":"When set, the machine returned is suitable for use in the DFA matching\nengine.\n\nIn particular, this ensures that if the regex is not anchored in the\nbeginning, then a preceding `.*?` is included in the program. (The NFA\nbased engines handle the preceding `.*?` explicitly, which is difficult\nor impossible in the DFA engine.)","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["yes",{"primitive":"bool"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2701:228-0:1235:1655":{"id":"a:2:2701:228-0:1235:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Captures","id":"0:1235:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3319-0:2258:1654":{"id":"b:2:3319-0:2258:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2258:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3319-0:2385:4303":{"id":"b:2:3319-0:2385:4303","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2385:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2307:1626":{"id":"0:2307:1626","crate_id":0,"name":"unicode","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:2368:3001","0:2373:4266","0:2380:4304","0:2385:4303"],"is_stripped":false}}},"a:2:2701:228-0:2468:4304":{"id":"a:2:2701:228-0:2468:4304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIntoIter","id":"0:2468:4304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2185:2857":{"id":"0:2185:2857","crate_id":0,"name":"swap_greed","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the value for the greedy swap (`U`) flag.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2192:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2153:939":{"id":"0:2153:939","crate_id":0,"name":"new","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Create a new regular expression builder with the given pattern.\n\nIf the pattern is invalid, then an error will be returned when\n`build` is called.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["patterns",{"generic":"I"}]],"output":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2167:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2506:75","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"S"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1812:1691":{"id":"0:1812:1691","crate_id":0,"name":"CharInput","span":{"filename":"src/input.rs","begin":[140,0],"end":[140,35]},"visibility":"public","docs":"An input reader over characters.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:555","a:2:2684:220-0:1812:1691","a:2:8249:3376-0:1812:1691","a:2:8250:3375-0:1812:1691","a:2:2701:228-0:1812:1691","a:2:2741:5045-0:1812:1691","b:2:2251-0:1812:1691","b:2:2542-0:1812:1691","b:2:2248-0:1812:1691","b:2:2538-0:1812:1691","b:2:2553-0:1812:1691","b:2:2548-0:1812:1691","b:2:3319-0:1812:1691","b:5:684-0:1812:1691","0:1819","0:1821","0:562","0:1816","0:558"]}}},"b:2:2553-0:1836:1690":{"id":"b:2:2553-0:1836:1690","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2230:668":{"id":"0:2230:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[785,9],"end":[785,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:922:953":{"id":"0:922:953","crate_id":0,"name":"next","span":{"filename":"src/re_bytes.rs","begin":[876,4],"end":[894,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"slice":{"primitive":"u8"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2527":{"id":"0:2527","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[28,15],"end":[28,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2529:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2525":{"id":"0:2525","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[28,9],"end":[28,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2577:423":{"id":"0:2577:423","crate_id":0,"name":"clone","span":{"filename":"src/re_unicode.rs","begin":[973,9],"end":[973,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CaptureLocations","id":"0:2573:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:7206-0:2602:1658":{"id":"b:2:7206-0:2602:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Matches","id":"0:2602:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:7208:2120","2:7209:3525","2:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"0:1150:2339":{"id":"0:1150:2339","crate_id":0,"name":"is_match","span":{"filename":"src/re_unicode.rs","begin":[219,4],"end":[221,5]},"visibility":"public","docs":"Returns true if and only if there is a match for the regex in the\nstring given.\n\nIt is recommended to use this method if all you need to do is test\na match, since the underlying matching engine may be able to do less\nwork.\n\n# Example\n\nTest if some text contains at least one word with exactly 13\nUnicode word characters:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet text = \"I categorically deny having triskaidekaphobia.\";\nassert!(Regex::new(r\"\\b\\w{13}\\b\").unwrap().is_match(text));\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8249:3376-0:2593:1653":{"id":"a:2:8249:3376-0:2593:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureMatches","id":"0:2593:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12107:37737":{"id":"2:12107:37737","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:1643"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11737:5014","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:684-0:1812:1691":{"id":"b:5:684-0:1812:1691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CharInput","id":"0:1812:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["5:686:3909","5:687:2668","5:688:5579"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2114:1626":{"id":"0:2114:1626","crate_id":0,"name":"unicode","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the value for the Unicode (`u`) flag.\n\nEnabled by default. When disabled, character classes such as `\\w` only\nmatch ASCII word characters instead of all Unicode word characters.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexBuilder","id":"0:2119:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2132:2854":{"id":"0:2132:2854","crate_id":0,"name":"case_insensitive","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the value for the case insensitive (`i`) flag.\n\nWhen enabled, letters in the pattern will match both upper case and\nlower case variants.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexBuilder","id":"0:2142:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:86:1687":{"id":"b:2:2548-0:86:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Compiler","id":"0:86:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2352":{"id":"0:2352","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["find_map","is_partitioned","last","fuse","skip_while","size_hint","chain","skip","gt","cloned","__iterator_get_unchecked","min_by","cmp_by","try_find","try_fold","inspect","take_while","intersperse","rev","collect","min_by_key","partial_cmp_by","rposition","ge","try_for_each","try_collect","map_while","intersperse_with","find","next_chunk","lt","sum","max_by","eq_by","unzip","fold","collect_into","scan","by_ref","for_each","cmp","advance_by","eq","position","enumerate","max_by_key","copied","cycle","reduce","count","peekable","partition","flat_map","min","filter","is_sorted","nth","all","take","zip","ne","partial_cmp","is_sorted_by","array_chunks","try_reduce","partition_in_place","max","flatten","any","filter_map","le","step_by","map","is_sorted_by_key","product"],"trait":{"name":"Iterator","id":"2:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2385:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2354:2120","0:2355:953","0:2356:4005"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2214":{"id":"0:2214","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[20,26],"end":[20,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Match","id":"0:2197:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2197:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2216:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2684:220-0:2373:4266":{"id":"a:2:2684:220-0:2373:4266","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatches","id":"0:2373:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:596:668":{"id":"0:596:668","crate_id":0,"name":"fmt","span":{"filename":"src/input.rs","begin":[349,4],"end":[354,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:1988:1695":{"id":"b:2:2548-0:1988:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Inst","id":"0:1988:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2553-0:2222:1658":{"id":"b:2:2553-0:2222:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Matches","id":"0:2222:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8250:3375-0:2197:1657":{"id":"a:2:8250:3375-0:2197:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2197:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8250:3375-0:2275:1665":{"id":"a:2:8250:3375-0:2275:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2275:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2741:5045-0:2468:4304":{"id":"a:2:2741:5045-0:2468:4304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIntoIter","id":"0:2468:4304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2538-0:2580:1665":{"id":"b:2:2538-0:2580:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2580:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2538-0:1802:1692":{"id":"b:2:2538-0:1802:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InputAt","id":"0:1802:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1855:1693":{"id":"0:1855:1693","crate_id":0,"name":"LiteralSearcher","span":{"filename":"src/literal/imp.rs","begin":[13,0],"end":[18,1]},"visibility":"public","docs":"A prefix extracted from a compiled regular expression.\n\nA regex prefix is a set of literal strings that *must* be matched at the\nbeginning of a regex in order for the entire regex to match. Similarly\nfor a regex suffix.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:632","a:2:2684:220-0:1855:1693","a:2:8249:3376-0:1855:1693","a:2:8250:3375-0:1855:1693","a:2:2701:228-0:1855:1693","a:2:2741:5045-0:1855:1693","b:2:2251-0:1855:1693","b:2:2542-0:1855:1693","b:2:2248-0:1855:1693","b:2:2538-0:1855:1693","b:2:2553-0:1855:1693","b:2:2548-0:1855:1693","b:2:3319-0:1855:1693","b:5:684-0:1855:1693","0:1860","0:1862"]}}},"b:2:2542-0:2197:1657":{"id":"b:2:2542-0:2197:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2197:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:25-0:2147:1668":{"id":"0:25-0:2147:1668","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[762,4],"end":[762,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::re_builder::set_bytes","name":"set_bytes","id":"0:2147:1668","glob":true}}},"0:390:1950":{"id":"0:390:1950","crate_id":0,"name":"only_utf8","span":{"filename":"src/exec.rs","begin":[220,4],"end":[223,5]},"visibility":"public","docs":"When disabled, the program compiled may match arbitrary bytes.\n\nWhen enabled (the default), all compiled programs exclusively match\nvalid UTF-8 bytes.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["yes",{"primitive":"bool"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:5045-0:2197:1657":{"id":"a:2:2741:5045-0:2197:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2197:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2359:4310":{"id":"0:2359:4310","crate_id":0,"name":"next_back","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2589":{"id":"0:2589","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1185,16],"end":[1185,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2580:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2592:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1325:3907":{"id":"0:1325:3907","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1333,4],"end":[1335,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8249:3376-0:2258:1654":{"id":"a:2:8249:3376-0:2258:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2258:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1065:3988":{"id":"0:1065:3988","crate_id":0,"name":"locations","span":{"filename":"src/re_trait.rs","begin":[113,4],"end":[115,5]},"visibility":"default","docs":"Allocates fresh space for all capturing groups in this regex.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Locations","id":"0:2483:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2157:2854":{"id":"0:2157:2854","crate_id":0,"name":"case_insensitive","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the value for the case insensitive (`i`) flag.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2167:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8250:3375-0:2373:4266":{"id":"a:2:8250:3375-0:2373:4266","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatches","id":"0:2373:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2538-0:2602:1658":{"id":"b:2:2538-0:2602:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Matches","id":"0:2602:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3319-0:2573:1652":{"id":"b:2:3319-0:2573:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureLocations","id":"0:2573:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8249:3376-0:2070:1696":{"id":"a:2:8249:3376-0:2070:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InstRanges","id":"0:2070:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2741:5045-0:2070:1696":{"id":"a:2:2741:5045-0:2070:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InstRanges","id":"0:2070:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2166:2859":{"id":"0:2166:2859","crate_id":0,"name":"nest_limit","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the nesting limit for this parser.\n\nThe nesting limit controls how deep the abstract syntax tree is allowed\nto be. If the AST exceeds the given limit (e.g., with too many nested\ngroups), then an error is returned by the parser.\n\nThe purpose of this limit is to act as a heuristic to prevent stack\noverflow for consumers that do structural induction on an `Ast` using\nexplicit recursion. While this crate never does this (instead using\nconstant stack space and moving the call stack to the heap), other\ncrates may.\n\nThis limit is not checked until the entire Ast is parsed. Therefore,\nif callers want to put a limit on the amount of heap space used, then\nthey should impose a limit on the length, in bytes, of the concrete\npattern string. In particular, this is viable since this parser\nimplementation will limit itself to heap space proportional to the\nlength of the pattern string.\n\nNote that a nest limit of `0` will return a nest limit error for most\npatterns but not all. For example, a nest limit of `0` permits `a` but\nnot `ab`, since `ab` requires a concatenation, which results in a nest\ndepth of `1`. In general, a nest limit is not something that manifests\nin an obvious way in the concrete syntax, therefore, it should not be\nused in a granular way.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["limit",{"primitive":"u32"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2167:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:2611:1662":{"id":"b:2:3319-0:2611:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReplacerRef","id":"0:2611:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2236":{"id":"0:2236","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[806,9],"end":[806,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureMatches","id":"0:2231:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2239:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2542-0:2611:1662":{"id":"b:2:2542-0:2611:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReplacerRef","id":"0:2611:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2548-0:369:1689":{"id":"b:2:2548-0:369:1689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ExecBuilder","id":"0:369:1689","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2338:2120":{"id":"0:2338:2120","crate_id":0,"name":"Item","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"usize"}}}},"0:634:1868":{"id":"0:634:1868","crate_id":0,"name":"prefixes","span":{"filename":"src/literal/imp.rs","begin":[46,4],"end":[49,5]},"visibility":"public","docs":"Returns a matcher for literal prefixes from the given set.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["lits",{"resolved_path":{"name":"Seq","id":"20:2833:2806","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:2167:3687":{"id":"b:2:2553-0:2167:3687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2167:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2563:668":{"id":"0:2563:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[863,9],"end":[863,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:2288:1662":{"id":"b:2:3319-0:2288:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReplacerRef","id":"0:2288:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3319-0:1664:1688":{"id":"b:2:3319-0:1664:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Exec","id":"0:1664:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2248-0:2573:1652":{"id":"b:2:2248-0:2573:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureLocations","id":"0:2573:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2553-0:2580:1665":{"id":"b:2:2553-0:2580:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2580:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:930:953":{"id":"0:930:953","crate_id":0,"name":"next","span":{"filename":"src/re_bytes.rs","begin":[915,4],"end":[920,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'r","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1896:3275":{"id":"0:1896:3275","crate_id":0,"name":"Packed","span":{"filename":"src/literal/imp.rs","begin":[230,4],"end":[230,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:1898:1606"]},"discriminant":null}}},"0:826:668":{"id":"0:826:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[73,4],"end":[87,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"std::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"std::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1126:811":{"id":"0:1126:811","crate_id":0,"name":"len","span":{"filename":"src/re_unicode.rs","begin":[56,4],"end":[58,5]},"visibility":"public","docs":"Returns the length, in bytes, of this match.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1232:1880":{"id":"0:1232:1880","crate_id":0,"name":"get","span":{"filename":"src/re_unicode.rs","begin":[990,4],"end":[992,5]},"visibility":"public","docs":"Returns the start and end positions of the Nth capture group. Returns\n`None` if `i` is not a valid capture group or if the capture group did\nnot match anything. The positions returned are *always* byte indices\nwith respect to the original string matched.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"primitive":"usize"},{"primitive":"usize"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:2602:1658":{"id":"b:2:2553-0:2602:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Matches","id":"0:2602:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3319-0:1650:128":{"id":"b:2:3319-0:1650:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:6-0:2307:1626":{"id":"0:6-0:2307:1626","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[664,0],"end":[664,34]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"crate::re_set::unicode","name":"unicode","id":"0:2307:1626","glob":true}}},"2:2253:1852":{"id":"2:2253:1852","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:978:186":{"id":"0:978:186","crate_id":0,"name":"Output","span":{"filename":"src/re_bytes.rs","begin":[1158,4],"end":[1158,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"slice":{"primitive":"u8"}}}}},"2:12072:37726":{"id":"2:12072:37726","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:11712:1643","str::split":"2:12060:1992","prim@char":"1:11888:419","str::split_terminator":"2:12069:37725"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43425:5039","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:5016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2116:1921":{"id":"0:2116:1921","crate_id":0,"name":"size_limit","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the approximate size limit of the compiled regular expression.\n\nThis roughly corresponds to the number of bytes occupied by a single\ncompiled program. If the program exceeds this number, then a\ncompilation error is returned.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["limit",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexBuilder","id":"0:2119:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:548:1844":{"id":"0:548:1844","crate_id":0,"name":"at","span":{"filename":"src/input.rs","begin":[105,4],"end":[107,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"InputAt","id":"0:1802:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:2602:1658":{"id":"b:2:2251-0:2602:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Matches","id":"0:2602:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2287:668":{"id":"0:2287:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[1198,16],"end":[1198,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:2580:1665":{"id":"b:2:3319-0:2580:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2580:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:102:1960":{"id":"0:102:1960","crate_id":0,"name":"reverse","span":{"filename":"src/compile.rs","begin":[119,4],"end":[122,5]},"visibility":"public","docs":"When set, the machine returned is suitable for matching text in\nreverse. In particular, all concatenations are flipped.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["yes",{"primitive":"bool"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8249:3376-0:2297:1659":{"id":"a:2:8249:3376-0:2297:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoExpand","id":"0:2297:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1326":{"id":"0:1326","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1338,0],"end":[1346,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["by_ref","no_expansion"],"trait":{"name":"Replacer","id":"0:1311:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"items":["0:1328:3910","0:1329:3907"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1332:3907":{"id":"0:1332:3907","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1353,4],"end":[1355,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1982:1975":{"id":"0:1982:1975","crate_id":0,"name":"is_anchored_end","span":{"filename":"src/prog.rs","begin":[57,4],"end":[57,29]},"visibility":"public","docs":"Whether the regex must match at the end of the input.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"b:5:684-0:2545:1654":{"id":"b:5:684-0:2545:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2545:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["5:686:3909","5:687:2668","5:688:5579"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1242:1880":{"id":"0:1242:1880","crate_id":0,"name":"get","span":{"filename":"src/re_unicode.rs","begin":[1052,4],"end":[1054,5]},"visibility":"public","docs":"Returns the match associated with the capture group at index `i`. If\n`i` does not correspond to a capture group, or if the capture group\ndid not participate in the match, then `None` is returned.\n\n# Examples\n\nGet the text of the match with a default of an empty string if this\ngroup didn't participate in the match:\n\n```rust\n# use regex::Regex;\nlet re = Regex::new(r\"[a-z]+(?:([0-9]+)|([A-Z]+))\").unwrap();\nlet caps = re.captures(\"abc123\").unwrap();\n\nlet text1 = caps.get(1).map_or(\"\", |m| m.as_str());\nlet text2 = caps.get(2).map_or(\"\", |m| m.as_str());\nassert_eq!(text1, \"123\");\nassert_eq!(text2, \"\");\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1842":{"id":"0:1842","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[345,22],"end":[345,26]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9362:141","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1843:729"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:684-0:2275:1665":{"id":"b:5:684-0:2275:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2275:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["5:686:3909","5:687:2668","5:688:5579"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2684:220-0:2240:1663":{"id":"a:2:2684:220-0:2240:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Split","id":"0:2240:1663","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3319-0:2192:3687":{"id":"b:2:3319-0:2192:3687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2192:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2553-0:2231:1653":{"id":"b:2:2553-0:2231:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureMatches","id":"0:2231:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2248-0:2520:1657":{"id":"b:2:2248-0:2520:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2380:4304":{"id":"0:2380:4304","crate_id":0,"name":"SetMatchesIntoIter","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"public","docs":"An owned iterator over the set of matches from a regex set.\n\nThis will always produces matches in ascending order of index, where the\nindex corresponds to the index of the regex that matched with respect to\nits position when initially building the set.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2684:220-0:2380:4304","a:2:8249:3376-0:2380:4304","a:2:8250:3375-0:2380:4304","a:2:2701:228-0:2380:4304","a:2:2741:5045-0:2380:4304","b:2:2251-0:2380:4304","b:2:2542-0:2380:4304","b:2:2248-0:2380:4304","b:2:2538-0:2380:4304","b:2:2553-0:2380:4304","b:2:7206-0:2380:4304","b:2:2548-0:2380:4304","b:2:3319-0:2380:4304","0:2351","0:2383","0:2345","0:2349"]}}},"0:12-0:1235:1655":{"id":"0:12-0:1235:1655","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[667,60],"end":[667,68]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"crate::re_unicode::Captures","name":"Captures","id":"0:1235:1655","glob":false}}},"0:892":{"id":"0:892","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[788,0],"end":[795,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["find_map","is_partitioned","last","fuse","skip_while","size_hint","chain","skip","gt","cloned","__iterator_get_unchecked","min_by","cmp_by","try_find","try_fold","inspect","take_while","intersperse","rev","collect","min_by_key","partial_cmp_by","rposition","ge","try_for_each","try_collect","map_while","intersperse_with","find","next_chunk","lt","sum","max_by","eq_by","unzip","fold","collect_into","scan","by_ref","for_each","cmp","advance_by","eq","position","enumerate","max_by_key","copied","cycle","reduce","count","peekable","partition","flat_map","min","filter","is_sorted","nth","all","take","zip","ne","partial_cmp","is_sorted_by","array_chunks","try_reduce","partition_in_place","max","flatten","any","filter_map","le","step_by","map","is_sorted_by_key","product"],"trait":{"name":"Iterator","id":"2:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Matches","id":"0:2222:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:895:2120","0:896:953"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8250:3375-0:2580:1665":{"id":"a:2:8250:3375-0:2580:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2580:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1311:1661":{"id":"0:1311:1661","crate_id":0,"name":"Replacer","span":{"filename":"src/re_unicode.rs","begin":[1266,0],"end":[1311,1]},"visibility":"public","docs":"Replacer describes types that can be used to replace matches in a string.\n\nIn general, users of this crate shouldn't need to implement this trait,\nsince implementations are already provided for `&str` along with other\nvariants of string types and `FnMut(&Captures) -> String` (or any\n`FnMut(&Captures) -> T` where `T: AsRef<str>`), which covers most use cases.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:1312:3910","0:1313:3907","0:1315:4142"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:1326","0:1330","0:1343","0:1347","0:1337","0:1322","0:1333","0:1317"]}}},"0:2141:2859":{"id":"0:2141:2859","crate_id":0,"name":"nest_limit","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the nesting limit for this parser.\n\nThe nesting limit controls how deep the abstract syntax tree is allowed\nto be. If the AST exceeds the given limit (e.g., with too many nested\ngroups), then an error is returned by the parser.\n\nThe purpose of this limit is to act as a heuristic to prevent stack\noverflow for consumers that do structural induction on an `Ast` using\nexplicit recursion. While this crate never does this (instead using\nconstant stack space and moving the call stack to the heap), other\ncrates may.\n\nThis limit is not checked until the entire Ast is parsed. Therefore,\nif callers want to put a limit on the amount of heap space used, then\nthey should impose a limit on the length, in bytes, of the concrete\npattern string. In particular, this is viable since this parser\nimplementation will limit itself to heap space proportional to the\nlength of the pattern string.\n\nNote that a nest limit of `0` will return a nest limit error for most\npatterns but not all. For example, a nest limit of `0` permits `a` but\nnot `ab`, since `ab` requires a concatenation, which results in a nest\ndepth of `1`. In general, a nest limit is not something that manifests\nin an obvious way in the concrete syntax, therefore, it should not be\nused in a granular way.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["limit",{"primitive":"u32"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexBuilder","id":"0:2142:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2500:1658":{"id":"0:2500:1658","crate_id":0,"name":"Matches","span":{"filename":"src/re_trait.rs","begin":[165,0],"end":[174,1]},"visibility":"public","docs":"An iterator over all non-overlapping successive leftmost-first matches.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RegularExpression","id":"0:1062:2743","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Text","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:1062:2743","args":null}}},"bounds":[{"outlives":"'t"}],"generic_params":[]}}]},"impls":[]}}},"a:2:2741:5045-0:2240:1663":{"id":"a:2:2741:5045-0:2240:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Split","id":"0:2240:1663","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2248-0:1664:1688":{"id":"b:2:2248-0:1664:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Exec","id":"0:1664:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:684-0:2620:1659":{"id":"b:5:684-0:2620:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoExpand","id":"0:2620:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["5:686:3909","5:687:2668","5:688:5579"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2170":{"id":"0:2170","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2167:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2171:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2377:423":{"id":"0:2377:423","crate_id":0,"name":"clone","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SetMatches","id":"0:2373:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:14-0:2520:1657":{"id":"0:14-0:2520:1657","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[668,15],"end":[668,20]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"crate::re_unicode::Match","name":"Match","id":"0:2520:1657","glob":false}}},"0:2624":{"id":"0:2624","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1404,9],"end":[1404,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoExpand","id":"0:2620:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2626:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:888:1987":{"id":"0:888:1987","crate_id":0,"name":"static_captures_len","span":{"filename":"src/re_bytes.rs","begin":[757,4],"end":[759,5]},"visibility":"public","docs":"Returns the total number of capturing groups that appear in every\npossible match.\n\nIf the number of capture groups can vary depending on the match, then\nthis returns `None`. That is, a value is only returned when the number\nof matching groups is invariant or \"static.\"\n\nNote that like [`Regex::captures_len`], this **does** include the\nimplicit capturing group corresponding to the entire match. Therefore,\nwhen a non-None value is returned, it is guaranteed to be at least `1`.\nStated differently, a return value of `Some(0)` is impossible.\n\n# Example\n\nThis shows a few cases where a static number of capture groups is\navailable and a few cases where it is not.\n\n```\nuse regex::bytes::Regex;\n\nlet len = |pattern| {\n    Regex::new(pattern).map(|re| re.static_captures_len())\n};\n\nassert_eq!(Some(1), len(\"a\")?);\nassert_eq!(Some(2), len(\"(a)\")?);\nassert_eq!(Some(2), len(\"(a)|(b)\")?);\nassert_eq!(Some(3), len(\"(a)(b)|(c)(d)\")?);\nassert_eq!(None, len(\"(a)|b\")?);\nassert_eq!(None, len(\"a|(b)\")?);\nassert_eq!(None, len(\"(b)*\")?);\nassert_eq!(Some(2), len(\"(b)+\")?);\n\n# Ok::<(), Box<dyn std::error::Error>>(())\n```","links":{"`Regex::captures_len`":"0:887:3961"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:369:1689":{"id":"b:2:2251-0:369:1689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ExecBuilder","id":"0:369:1689","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2544:694":{"id":"2:2544:694","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:5045-0:1812:1691":{"id":"a:2:2741:5045-0:1812:1691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CharInput","id":"0:1812:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2251-0:1969:1697":{"id":"b:2:2251-0:1969:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Program","id":"0:1969:1697","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2106":{"id":"0:2106","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RegexBuilder","id":"0:2119:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2107:939","0:2108:2860","0:2109:2854","0:2110:2855","0:2111:2856","0:2112:2857","0:2113:2858","0:2114:1626","0:2115:2853","0:2116:1921","0:2117:2234","0:2118:2859"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:934:504":{"id":"0:934:504","crate_id":0,"name":"count","span":{"filename":"src/re_bytes.rs","begin":[926,4],"end":[928,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1194:316":{"id":"0:1194:316","crate_id":0,"name":"as_str","span":{"filename":"src/re_unicode.rs","begin":[757,4],"end":[759,5]},"visibility":"public","docs":"Returns the original string of this regex.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:7210:784":{"id":"2:7210:784","crate_id":2,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1267:769":{"id":"0:1267:769","crate_id":0,"name":"index","span":{"filename":"src/re_unicode.rs","begin":[1147,4],"end":[1151,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8249:3376-0:2611:1662":{"id":"a:2:8249:3376-0:2611:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReplacerRef","id":"0:2611:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2542-0:86:1687":{"id":"b:2:2542-0:86:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Compiler","id":"0:86:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1250":{"id":"0:1250","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1106,0],"end":[1110,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Captures","id":"0:1235:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1252:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8250:3375-0:1855:1693":{"id":"a:2:8250:3375-0:1855:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LiteralSearcher","id":"0:1855:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1019:3907":{"id":"0:1019:3907","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_bytes.rs","begin":[1300,4],"end":[1302,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:613:1035":{"id":"0:613:1035","crate_id":0,"name":"partial_cmp","span":{"filename":"src/input.rs","begin":[422,4],"end":[424,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"char"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Ordering","id":"2:30836:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2626:423":{"id":"0:2626:423","crate_id":0,"name":"clone","span":{"filename":"src/re_unicode.rs","begin":[1404,9],"end":[1404,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NoExpand","id":"0:2620:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:5045-0:2620:1659":{"id":"a:2:2741:5045-0:2620:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoExpand","id":"0:2620:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1340:3907":{"id":"0:1340:3907","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1373,4],"end":[1375,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:2258:1654":{"id":"b:2:2538-0:2258:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2258:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2156:2860":{"id":"0:2156:2860","crate_id":0,"name":"build","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Consume the builder and compile the regular expressions into a set.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RegexSet","id":"0:2456:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:686:3909":{"id":"5:686:3909","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"2:12010":{"id":"2:12010","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12011:811","2:12012:1869","2:12013:37718","2:12014:37719","2:12016:37720","2:12019:2888","2:12020:37721","2:12021:314","2:12022:31212","2:12023:1880","2:12025:11671","2:12027:2477","2:12029:31211","2:12031:37722","2:12032:37723","2:12033:31234","2:12034:31235","2:12035:2116","2:12036:8867","2:12037:1667","2:12038:35383","2:12039:35377","2:12040:11362","2:12041:37724","2:12042:35382","2:12043:1973","2:12046:30796","2:12049:30798","2:12052:2599","2:12056:5534","2:12060:1992","2:12063:31243","2:12066:31245","2:12069:37725","2:12072:37726","2:12075:3833","2:12078:31248","2:12081:37727","2:12084:37728","2:12087:1827","2:12090:37729","2:12093:37730","2:12096:37731","2:12099:37732","2:12101:37733","2:12103:37734","2:12105:37735","2:12106:37736","2:12107:37737","2:12110:37738","2:12113:29686","2:12116:31250","2:12119:37739","2:12122:37740","2:12125:37741","2:12128:2849","2:12130:2051","2:12131:31140","2:12132:31142","2:12133:31143","2:12134:31144","2:12135:37742","2:12137:2666","2:12138:37743"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2701:228-0:2217:1660":{"id":"a:2:2701:228-0:2217:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Regex","id":"0:2217:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2701:228-0:2222:1658":{"id":"a:2:2701:228-0:2222:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Matches","id":"0:2222:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2251-0:2240:1663":{"id":"b:2:2251-0:2240:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Split","id":"0:2240:1663","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2553-0:2240:1663":{"id":"b:2:2553-0:2240:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Split","id":"0:2240:1663","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2115:2853":{"id":"0:2115:2853","crate_id":0,"name":"octal","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Whether to support octal syntax or not.\n\nOctal syntax is a little-known way of uttering Unicode codepoints in\na regular expression. For example, `a`, `\\x61`, `\\u0061` and\n`\\141` are all equivalent regular expressions, where the last example\nshows octal syntax.\n\nWhile supporting octal syntax isn't in and of itself a problem, it does\nmake good error messages harder. That is, in PCRE based regex engines,\nsyntax like `\\0` invokes a backreference, which is explicitly\nunsupported in Rust's regex engine. However, many users expect it to\nbe supported. Therefore, when octal support is disabled, the error\nmessage will explicitly mention that backreferences aren't supported.\n\nOctal syntax is disabled by default.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexBuilder","id":"0:2119:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2701:228-0:2288:1662":{"id":"a:2:2701:228-0:2288:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReplacerRef","id":"0:2288:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2477":{"id":"0:2477","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2473:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2479:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8249:3376-0:2217:1660":{"id":"a:2:8249:3376-0:2217:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Regex","id":"0:2217:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2035:1694":{"id":"0:2035:1694","crate_id":0,"name":"EmptyLook","span":{"filename":"src/prog.rs","begin":[345,0],"end":[362,1]},"visibility":"public","docs":"The set of zero-width match instructions.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:2036:2063","0:2038:2062","0:2040:2058","0:2042:2057","0:2044:2078","0:2046:2080","0:2048:2071","0:2050:2073"],"impls":["a:2:2684:220-0:2035:1694","a:2:8249:3376-0:2035:1694","a:2:8250:3375-0:2035:1694","a:2:2701:228-0:2035:1694","a:2:2741:5045-0:2035:1694","b:2:2251-0:2035:1694","b:2:2542-0:2035:1694","b:2:2248-0:2035:1694","b:2:2538-0:2035:1694","b:2:2553-0:2035:1694","b:2:2548-0:2035:1694","b:2:3319-0:2035:1694","b:5:684-0:2035:1694","0:2061","0:2055","0:2054","0:2052","0:2060","0:2058","0:2057"]}}},"b:2:2248-0:2385:4303":{"id":"b:2:2248-0:2385:4303","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2385:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2061":{"id":"0:2061","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[344,40],"end":[344,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EmptyLook","id":"0:2035:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2251-0:2192:3687":{"id":"b:2:2251-0:2192:3687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2192:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2548-0:2222:1658":{"id":"b:2:2548-0:2222:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Matches","id":"0:2222:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2181:2860":{"id":"0:2181:2860","crate_id":0,"name":"build","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Consume the builder and compile the regular expressions into a set.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RegexSet","id":"0:2368:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2421:1867":{"id":"0:2421:1867","crate_id":0,"name":"matched","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"public","docs":"Whether the regex at the given index matched.\n\nThe index for a regex is determined by its insertion order upon the\ninitial construction of a `RegexSet`, starting at `0`.\n\n# Panics\n\nIf `regex_index` is greater than or equal to `self.len()`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["regex_index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:468":{"id":"0:468","crate_id":0,"name":null,"span":{"filename":"src/exec.rs","begin":[1373,0],"end":[1378,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Exec","id":"0:1664:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:469:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1132:668":{"id":"0:1132:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[81,4],"end":[87,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"std::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"std::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2557:1477":{"id":"2:2557:1477","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:1812:1691":{"id":"b:2:2542-0:1812:1691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CharInput","id":"0:1812:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2741:5045-0:2217:1660":{"id":"a:2:2741:5045-0:2217:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Regex","id":"0:2217:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2251-0:2545:1654":{"id":"b:2:2251-0:2545:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2545:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2542-0:2564:1664":{"id":"b:2:2542-0:2564:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SplitN","id":"0:2564:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8249:3376-0:2580:1665":{"id":"a:2:8249:3376-0:2580:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2580:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:650:811":{"id":"0:650:811","crate_id":0,"name":"len","span":{"filename":"src/literal/imp.rs","begin":[146,4],"end":[155,5]},"visibility":"public","docs":"Returns the number of prefixes in this machine.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:2385:4303":{"id":"b:2:2538-0:2385:4303","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2385:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1270":{"id":"0:1270","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1166,0],"end":[1174,1]},"visibility":"default","docs":"Get a group by name.\n\n`'t` is the lifetime of the matched text and `'i` is the lifetime\nof the group name (the index).\n\nThe text can't outlive the `Captures` object if this method is\nused, because of how `Index` is defined (normally `a[i]` is part\nof `a` and can't outlive it); to do that, use `name` instead.\n\n# Panics\n\nIf there is no group named by the given value.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"'i","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"2:2981:3694","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'i","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Captures","id":"0:1235:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1273:186","0:1274:769"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2438:4310":{"id":"0:2438:4310","crate_id":0,"name":"next_back","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2490:3696":{"id":"0:2490:3696","crate_id":0,"name":"SubCapturesPosIter","span":{"filename":"src/re_trait.rs","begin":[58,0],"end":[61,1]},"visibility":"public","docs":"An iterator over capture group positions for a particular match of a\nregular expression.\n\nPositions are byte indices in terms of the original string matched.\n\n`'c` is the lifetime of the captures.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":[]}}},"0:644:2940":{"id":"0:644:2940","crate_id":0,"name":"find_start","span":{"filename":"src/literal/imp.rs","begin":[94,4],"end":[104,5]},"visibility":"public","docs":"Like find, except matches must start at index `0`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["haystack",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"primitive":"usize"},{"primitive":"usize"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:864:3897":{"id":"0:864:3897","crate_id":0,"name":"replacen","span":{"filename":"src/re_bytes.rs","begin":[510,4],"end":[555,5]},"visibility":"public","docs":"Replaces at most `limit` non-overlapping matches in `text` with the\nreplacement provided. If `limit` is 0, then all non-overlapping matches\nare replaced.\n\nSee the documentation for `replace` for details on how to access\ncapturing group matches in the replacement text.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["limit",{"primitive":"usize"}],["rep",{"generic":"R"}]],"output":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'t"},{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Replacer","id":"0:1000:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5387:3897":{"id":"5:5387:3897","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7255:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:924":{"id":"0:924","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[901,0],"end":[901,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7588:3693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SplitN","id":"0:2249:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2530":{"id":"0:2530","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[28,22],"end":[28,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2695:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1893:3269":{"id":"0:1893:3269","crate_id":0,"name":"AC","span":{"filename":"src/literal/imp.rs","begin":[229,4],"end":[229,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:1895:1606"]},"discriminant":null}}},"0:1161:1992":{"id":"0:1161:1992","crate_id":0,"name":"split","span":{"filename":"src/re_unicode.rs","begin":[387,4],"end":[389,5]},"visibility":"public","docs":"Returns an iterator of substrings of `text` delimited by a match of the\nregular expression. Namely, each element of the iterator corresponds to\ntext that *isn't* matched by the regular expression.\n\nThis method will *not* copy the text given.\n\n# Example\n\nTo split a string delimited by arbitrary amounts of spaces or tabs:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"[ \\t]+\").unwrap();\nlet fields: Vec<&str> = re.split(\"a b \\t  c\\td    e\").collect();\nassert_eq!(fields, vec![\"a\", \"b\", \"c\", \"d\", \"e\"]);\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'r","mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Split","id":"0:2555:1663","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1663:613":{"id":"0:1663:613","crate_id":0,"name":"eq","span":{"filename":"src/error.rs","begin":[5,16],"end":[5,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2076:668":{"id":"0:2076:668","crate_id":0,"name":"fmt","span":{"filename":"src/prog.rs","begin":[375,16],"end":[375,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:2288:1662":{"id":"b:2:2542-0:2288:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReplacerRef","id":"0:2288:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2091:2855":{"id":"0:2091:2855","crate_id":0,"name":"multi_line","span":{"filename":"src/re_builder.rs","begin":[10,4],"end":[10,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"0:549:3220":{"id":"0:549:3220","crate_id":0,"name":"next_char","span":{"filename":"src/input.rs","begin":[109,4],"end":[111,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["at",{"resolved_path":{"name":"InputAt","id":"0:1802:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:2192:3687":{"id":"b:2:2248-0:2192:3687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2192:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:838:3720":{"id":"0:838:3720","crate_id":0,"name":"from_str","span":{"filename":"src/re_bytes.rs","begin":[138,4],"end":[140,5]},"visibility":"default","docs":"Attempts to parse a string into a regular expression","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Regex","id":"0:2217:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:1812:1691":{"id":"b:2:2548-0:1812:1691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CharInput","id":"0:1812:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:842:2599":{"id":"0:842:2599","crate_id":0,"name":"find","span":{"filename":"src/re_bytes.rs","begin":[196,4],"end":[198,5]},"visibility":"public","docs":"Returns the start and end byte range of the leftmost-first match in\n`text`. If no match exists, then `None` is returned.\n\nNote that this should only be used if you want to discover the position\nof the match. Testing the existence of a match is faster if you use\n`is_match`.\n\n# Example\n\nFind the start and end location of the first word with exactly 13\nASCII word bytes:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet text = b\"I categorically deny having triskaidekaphobia.\";\nlet mat = Regex::new(r\"\\b\\w{13}\\b\").unwrap().find(text).unwrap();\nassert_eq!((mat.start(), mat.end()), (2, 15));\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Match","id":"0:2197:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8249:3376-0:2461:4266":{"id":"a:2:8249:3376-0:2461:4266","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatches","id":"0:2461:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2553-0:2520:1657":{"id":"b:2:2553-0:2520:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1199:3939":{"id":"0:1199:3939","crate_id":0,"name":"capture_locations","span":{"filename":"src/re_unicode.rs","begin":[813,4],"end":[815,5]},"visibility":"public","docs":"Returns an empty set of capture locations that can be reused in\nmultiple calls to `captures_read` or `captures_read_at`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CaptureLocations","id":"0:2573:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2473:4303":{"id":"0:2473:4303","crate_id":0,"name":"SetMatchesIter","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"public","docs":"A borrowed iterator over the set of matches from a regex set.\n\nThe lifetime `'a` refers to the lifetime of a `SetMatches` value.\n\nThis will always produces matches in ascending order of index, where the\nindex corresponds to the index of the regex that matched with respect to\nits position when initially building the set.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:2684:220-0:2473:4303","a:2:8249:3376-0:2473:4303","a:2:8250:3375-0:2473:4303","a:2:2701:228-0:2473:4303","a:2:2741:5045-0:2473:4303","b:2:2251-0:2473:4303","b:2:2542-0:2473:4303","b:2:2248-0:2473:4303","b:2:2538-0:2473:4303","b:2:2553-0:2473:4303","b:2:7206-0:2473:4303","b:2:2548-0:2473:4303","b:2:3319-0:2473:4303","b:5:684-0:2473:4303","0:2480","0:2477","0:2448","0:2445","0:2440"]}}},"b:2:3319-0:2268:1652":{"id":"b:2:3319-0:2268:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureLocations","id":"0:2268:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1138:694":{"id":"0:1138:694","crate_id":0,"name":"from","span":{"filename":"src/re_unicode.rs","begin":[97,4],"end":[99,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["m",{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Range","id":"2:39192:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8250:3375-0:2222:1658":{"id":"a:2:8250:3375-0:2222:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Matches","id":"0:2222:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2248-0:2540:1660":{"id":"b:2:2248-0:2540:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Regex","id":"0:2540:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2548-0:2473:4303":{"id":"b:2:2548-0:2473:4303","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2473:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1186:3949":{"id":"0:1186:3949","crate_id":0,"name":"captures_read","span":{"filename":"src/re_unicode.rs","begin":[712,4],"end":[718,5]},"visibility":"public","docs":"This is like `captures`, but uses\n[`CaptureLocations`](struct.CaptureLocations.html)\ninstead of\n[`Captures`](struct.Captures.html) in order to amortize allocations.\n\nTo create a `CaptureLocations` value, use the\n`Regex::capture_locations` method.\n\nThis returns the overall match if this was successful, which is always\nequivalence to the `0`th capture group.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["locs",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"CaptureLocations","id":"0:2573:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["text",{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:2573:1652":{"id":"b:2:2542-0:2573:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureLocations","id":"0:2573:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2616":{"id":"0:2616","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1316,9],"end":[1316,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReplacerRef","id":"0:2611:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:2619:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2548-0:1235:1655":{"id":"b:2:2548-0:1235:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Captures","id":"0:1235:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2086:2819":{"id":"0:2086:2819","crate_id":0,"name":"pats","span":{"filename":"src/re_builder.rs","begin":[5,4],"end":[5,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Vec","id":"5:6696:244","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:2467:668":{"id":"0:2467:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:2275:1665":{"id":"b:2:3319-0:2275:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2275:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2542-0:2258:1654":{"id":"b:2:2542-0:2258:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2258:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2331":{"id":"0:2331","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"SetMatches","id":"0:2373:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2332:4268","0:2333:1867","0:2334:811","0:2335:795"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2538-0:1664:1688":{"id":"b:2:2538-0:1664:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Exec","id":"0:1664:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2251-0:2573:1652":{"id":"b:2:2251-0:2573:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureLocations","id":"0:2573:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2548-0:2573:1652":{"id":"b:2:2548-0:2573:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureLocations","id":"0:2573:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2461:4266":{"id":"0:2461:4266","crate_id":0,"name":"SetMatches","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"public","docs":"A set of matches returned by a regex set.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:2419","a:2:2684:220-0:2461:4266","a:2:8249:3376-0:2461:4266","a:2:8250:3375-0:2461:4266","a:2:2701:228-0:2461:4266","a:2:2741:5045-0:2461:4266","b:2:2251-0:2461:4266","b:2:2542-0:2461:4266","b:2:2248-0:2461:4266","b:2:2538-0:2461:4266","b:2:2553-0:2461:4266","b:2:2548-0:2461:4266","b:2:3319-0:2461:4266","b:5:684-0:2461:4266","0:2424","0:2464","0:2428","0:2466"]}}},"b:2:2538-0:2192:3687":{"id":"b:2:2538-0:2192:3687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2192:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:817:1383":{"id":"0:817:1383","crate_id":0,"name":"start","span":{"filename":"src/re_bytes.rs","begin":[30,4],"end":[32,5]},"visibility":"public","docs":"Returns the starting byte offset of the match in the haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2433":{"id":"0:2433","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["find_map","is_partitioned","last","fuse","skip_while","size_hint","chain","skip","gt","cloned","__iterator_get_unchecked","min_by","cmp_by","try_find","try_fold","inspect","take_while","intersperse","rev","collect","min_by_key","partial_cmp_by","rposition","ge","try_for_each","try_collect","map_while","intersperse_with","find","next_chunk","lt","sum","max_by","eq_by","unzip","fold","collect_into","scan","by_ref","for_each","cmp","advance_by","eq","position","enumerate","max_by_key","copied","cycle","reduce","count","peekable","partition","flat_map","min","filter","is_sorted","nth","all","take","zip","ne","partial_cmp","is_sorted_by","array_chunks","try_reduce","partition_in_place","max","flatten","any","filter_map","le","step_by","map","is_sorted_by_key","product"],"trait":{"name":"Iterator","id":"2:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIntoIter","id":"0:2468:4304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2434:2120","0:2435:953","0:2436:4005"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2548-0:2564:1664":{"id":"b:2:2548-0:2564:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SplitN","id":"0:2564:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1818:423":{"id":"0:1818:423","crate_id":0,"name":"clone","span":{"filename":"src/input.rs","begin":[139,9],"end":[139,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharInput","id":"0:1812:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:836":{"id":"0:836","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[134,0],"end":[141,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:11672:3695","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Regex","id":"0:2217:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:837:127","0:838:3720"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1278":{"id":"0:1278","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1191,0],"end":[1207,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["find_map","is_partitioned","last","fuse","skip_while","size_hint","chain","skip","gt","cloned","__iterator_get_unchecked","min_by","cmp_by","try_find","try_fold","inspect","take_while","intersperse","rev","collect","min_by_key","partial_cmp_by","rposition","ge","try_for_each","try_collect","map_while","intersperse_with","find","next_chunk","lt","sum","max_by","eq_by","unzip","fold","collect_into","scan","by_ref","for_each","cmp","advance_by","eq","position","enumerate","max_by_key","copied","cycle","reduce","count","peekable","partition","flat_map","min","filter","is_sorted","nth","all","take","zip","ne","partial_cmp","is_sorted_by","array_chunks","try_reduce","partition_in_place","max","flatten","any","filter_map","le","step_by","map","is_sorted_by_key","product"],"trait":{"name":"Iterator","id":"2:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2580:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1281:2120","0:1282:953","0:1285:4005","0:1286:504"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:458:2994":{"id":"0:458:2994","crate_id":0,"name":"searcher","span":{"filename":"src/exec.rs","begin":[1314,4],"end":[1319,5]},"visibility":"public","docs":"Get a searcher that isn't Sync.","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ExecNoSync","id":"0:1669:2762","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:2217:1660":{"id":"b:2:2248-0:2217:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Regex","id":"0:2217:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:534:1871":{"id":"0:534:1871","crate_id":0,"name":"pos","span":{"filename":"src/input.rs","begin":[56,4],"end":[58,5]},"visibility":"public","docs":"Returns the byte offset of this position.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:2035:1694":{"id":"b:2:2538-0:2035:1694","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EmptyLook","id":"0:2035:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2053:423":{"id":"0:2053:423","crate_id":0,"name":"clone","span":{"filename":"src/prog.rs","begin":[344,9],"end":[344,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EmptyLook","id":"0:2035:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8250:3375-0:944:1655":{"id":"a:2:8250:3375-0:944:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Captures","id":"0:944:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1010:3907":{"id":"0:1010:3907","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_bytes.rs","begin":[1280,4],"end":[1282,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'r","mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:2456:3001":{"id":"b:2:2538-0:2456:3001","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSet","id":"0:2456:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8249:3376-0:2564:1664":{"id":"a:2:8249:3376-0:2564:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SplitN","id":"0:2564:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1980:1961":{"id":"0:1980:1961","crate_id":0,"name":"is_reverse","span":{"filename":"src/prog.rs","begin":[53,4],"end":[53,24]},"visibility":"public","docs":"When true, the program matches text in reverse (for use only in the\nDFA).","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"0:385:2820":{"id":"0:385:2820","crate_id":0,"name":"new_options","span":{"filename":"src/exec.rs","begin":[158,4],"end":[165,5]},"visibility":"public","docs":"Create a regex execution builder.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["opts",{"resolved_path":{"name":"RegexOptions","id":"0:2085:2742","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1177:3929":{"id":"0:1177:3929","crate_id":0,"name":"shortest_match","span":{"filename":"src/re_unicode.rs","begin":[638,4],"end":[640,5]},"visibility":"public","docs":"Returns the end location of a match in the text given.\n\nThis method may have the same performance characteristics as\n`is_match`, except it provides an end location for a match. In\nparticular, the location returned *may be shorter* than the proper end\nof the leftmost-first match that you would find via `Regex::find`.\n\nNote that it is not guaranteed that this routine finds the shortest or\n\"earliest\" possible match. Instead, the main idea of this API is that\nit returns the offset at the point at which the internal regex engine\nhas determined that a match has occurred. This may vary depending on\nwhich internal regex engine is used, and thus, the offset itself may\nchange.\n\n# Example\n\nTypically, `a+` would match the entire first sequence of `a` in some\ntext, but `shortest_match` can give up as soon as it sees the first\n`a`.\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet text = \"aaaaa\";\nlet pos = Regex::new(r\"a+\").unwrap().shortest_match(text);\nassert_eq!(pos, Some(1));\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:1836:1690":{"id":"a:2:2684:220-0:1836:1690","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:884":{"id":"0:884","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[705,0],"end":[775,1]},"visibility":"default","docs":"Auxiliary methods.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Regex","id":"0:2217:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:885:316","0:886:3011","0:887:3961","0:888:1987","0:890:3939"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2701:228-0:2385:4303":{"id":"a:2:2701:228-0:2385:4303","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2385:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8249:3376-0:2602:1658":{"id":"a:2:8249:3376-0:2602:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Matches","id":"0:2602:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8249:3376-0:369:1689":{"id":"a:2:8249:3376-0:369:1689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExecBuilder","id":"0:369:1689","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2322:2339":{"id":"0:2322:2339","crate_id":0,"name":"is_match","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"public","docs":"Returns true if and only if one of the regexes in this set matches\nthe text given.\n\nThis method should be preferred if you only need to test whether any\nof the regexes in the set should match, but don't care about *which*\nregexes matched. This is because the underlying matching engine will\nquit immediately after seeing the first match instead of continuing to\nfind all matches.\n\nNote that as with searches using `Regex`, the expression is unanchored\nby default. That is, if the regex does not start with `^` or `\\A`, or\nend with `$` or `\\z`, then it is permitted to match anywhere in the\ntext.\n\n# Example\n\nTests whether a set matches some text:\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[r\"\\w+\", r\"\\d+\"]).unwrap();\nassert!(set.is_match(\"foo\"));\nassert!(!set.is_match(\"☃\"));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:7206-0:2473:4303":{"id":"b:2:7206-0:2473:4303","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2473:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:7208:2120","2:7209:3525","2:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"0:819:1869":{"id":"0:819:1869","crate_id":0,"name":"is_empty","span":{"filename":"src/re_bytes.rs","begin":[42,4],"end":[44,5]},"visibility":"public","docs":"Returns true if and only if this match has a length of zero.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:23:1667":{"id":"0:23:1667","crate_id":0,"name":"bytes","span":{"filename":"src/lib.rs","begin":[760,0],"end":[760,13]},"visibility":"public","docs":"Match regular expressions on arbitrary bytes.\n\nThis module provides a nearly identical API to the one found in the\ntop-level of this crate. There are two important differences:\n\n1. Matching is done on `&[u8]` instead of `&str`. Additionally, `Vec<u8>`\nis used where `String` would have been used.\n2. Unicode support can be disabled even when disabling it would result in\nmatching invalid UTF-8 bytes.\n\n# Example: match null terminated string\n\nThis shows how to find all null-terminated strings in a slice of bytes:\n\n```rust\n# use regex::bytes::Regex;\nlet re = Regex::new(r\"(?-u)(?P<cstr>[^\\x00]+)\\x00\").unwrap();\nlet text = b\"foo\\x00bar\\x00baz\\x00\";\n\n// Extract all of the strings without the null terminator from each match.\n// The unwrap is OK here since a match requires the `cstr` capture to match.\nlet cstrs: Vec<&[u8]> =\n    re.captures_iter(text)\n      .map(|c| c.name(\"cstr\").unwrap().as_bytes())\n      .collect();\nassert_eq!(vec![&b\"foo\"[..], &b\"bar\"[..], &b\"baz\"[..]], cstrs);\n```\n\n# Example: selectively enable Unicode support\n\nThis shows how to match an arbitrary byte pattern followed by a UTF-8 encoded\nstring (e.g., to extract a title from a Matroska file):\n\n```rust\n# use std::str;\n# use regex::bytes::Regex;\nlet re = Regex::new(\n    r\"(?-u)\\x7b\\xa9(?:[\\x80-\\xfe]|[\\x40-\\xff].)(?u:(.*))\"\n).unwrap();\nlet text = b\"\\x12\\xd0\\x3b\\x5f\\x7b\\xa9\\x85\\xe2\\x98\\x83\\x80\\x98\\x54\\x76\\x68\\x65\";\nlet caps = re.captures(text).unwrap();\n\n// Notice that despite the `.*` at the end, it will only match valid UTF-8\n// because Unicode mode was enabled with the `u` flag. Without the `u` flag,\n// the `.*` would match the rest of the bytes.\nlet mat = caps.get(1).unwrap();\nassert_eq!((7, 10), (mat.start(), mat.end()));\n\n// If there was a match, Unicode mode guarantees that `title` is valid UTF-8.\nlet title = str::from_utf8(&caps[1]).unwrap();\nassert_eq!(\"☃\", title);\n```\n\nIn general, if the Unicode flag is enabled in a capture group and that capture\nis part of the overall match, then the capture is *guaranteed* to be valid\nUTF-8.\n\n# Syntax\n\nThe supported syntax is pretty much the same as the syntax for Unicode\nregular expressions with a few changes that make sense for matching arbitrary\nbytes:\n\n1. The `u` flag can be disabled even when disabling it might cause the regex to\nmatch invalid UTF-8. When the `u` flag is disabled, the regex is said to be in\n\"ASCII compatible\" mode.\n2. In ASCII compatible mode, neither Unicode scalar values nor Unicode\ncharacter classes are allowed.\n3. In ASCII compatible mode, Perl character classes (`\\w`, `\\d` and `\\s`)\nrevert to their typical ASCII definition. `\\w` maps to `[[:word:]]`, `\\d` maps\nto `[[:digit:]]` and `\\s` maps to `[[:space:]]`.\n4. In ASCII compatible mode, word boundaries use the ASCII compatible `\\w` to\ndetermine whether a byte is a word byte or not.\n5. Hexadecimal notation can be used to specify arbitrary bytes instead of\nUnicode codepoints. For example, in ASCII compatible mode, `\\xFF` matches the\nliteral byte `\\xFF`, while in Unicode mode, `\\xFF` is a Unicode codepoint that\nmatches its UTF-8 encoding of `\\xC3\\xBF`. Similarly for octal notation when\nenabled.\n6. In ASCII compatible mode, `.` matches any *byte* except for `\\n`. When the\n`s` flag is additionally enabled, `.` matches any byte.\n\n# Performance\n\nIn general, one should expect performance on `&[u8]` to be roughly similar to\nperformance on `&str`.","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:24-0:2101:1667","0:25-0:2147:1668","0:26-0:794:1669","0:27-0:2395:1667"],"is_stripped":false}}},"b:2:2542-0:2240:1663":{"id":"b:2:2542-0:2240:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Split","id":"0:2240:1663","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2741:5045-0:1855:1693":{"id":"a:2:2741:5045-0:1855:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LiteralSearcher","id":"0:1855:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:605":{"id":"0:605","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[400,0],"end":[404,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"char"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:606:694"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:955:795":{"id":"0:955:795","crate_id":0,"name":"iter","span":{"filename":"src/re_bytes.rs","begin":[1065,4],"end":[1067,5]},"visibility":"public","docs":"An iterator that yields all capturing matches in the order in which\nthey appear in the regex. If a particular capture group didn't\nparticipate in the match, then `None` is yielded for that capture.\n\nThe first match always corresponds to the overall match of the regex.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'c","mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2275:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2107:939":{"id":"0:2107:939","crate_id":0,"name":"new","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Create a new regular expression builder with the given pattern.\n\nIf the pattern is invalid, then an error will be returned when\n`build` is called.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["pattern",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"RegexBuilder","id":"0:2119:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:764:2537":{"id":"0:764:2537","crate_id":0,"name":"approximate_size","span":{"filename":"src/prog.rs","begin":[151,4],"end":[162,5]},"visibility":"public","docs":"Return the approximate heap usage of this instruction sequence in\nbytes.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1026:3907":{"id":"0:1026:3907","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_bytes.rs","begin":[1320,4],"end":[1322,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8249:3376-0:2473:4303":{"id":"a:2:8249:3376-0:2473:4303","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2473:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8249:3376-0:2540:1660":{"id":"a:2:8249:3376-0:2540:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Regex","id":"0:2540:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8249:3376-0:1988:1695":{"id":"a:2:8249:3376-0:1988:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Inst","id":"0:1988:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2542-0:2368:3001":{"id":"b:2:2542-0:2368:3001","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSet","id":"0:2368:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1985:2234":{"id":"0:1985:2234","crate_id":0,"name":"dfa_size_limit","span":{"filename":"src/prog.rs","begin":[77,4],"end":[77,29]},"visibility":"public","docs":"A limit on the size of the cache that the DFA is allowed to use while\nmatching.\n\nThe cache limit specifies approximately how much space we're willing to\ngive to the state cache. Once the state cache exceeds the size, it is\nwiped and all states must be re-computed.\n\nNote that this value does not impact correctness. It can be set to 0\nand the DFA will run just fine. (It will only ever store exactly one\nstate in the cache, and will likely run very slowly, but it will work.)\n\nAlso note that this limit is *per thread of execution*. That is,\nif the same regex is used to search text across multiple threads\nsimultaneously, then the DFA cache is not shared. Instead, copies are\nmade.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:1992:1878":{"id":"0:1992:1878","crate_id":0,"name":"Save","span":{"filename":"src/prog.rs","begin":[283,4],"end":[283,18]},"visibility":"default","docs":"Save causes the program to save the current location of the input in\nthe slot indicated by InstSave.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:1994:1606"]},"discriminant":null}}},"0:2118:2859":{"id":"0:2118:2859","crate_id":0,"name":"nest_limit","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the nesting limit for this parser.\n\nThe nesting limit controls how deep the abstract syntax tree is allowed\nto be. If the AST exceeds the given limit (e.g., with too many nested\ngroups), then an error is returned by the parser.\n\nThe purpose of this limit is to act as a heuristic to prevent stack\noverflow for consumers that do structural induction on an `Ast` using\nexplicit recursion. While this crate never does this (instead using\nconstant stack space and moving the call stack to the heap), other\ncrates may.\n\nThis limit is not checked until the entire Ast is parsed. Therefore,\nif callers want to put a limit on the amount of heap space used, then\nthey should impose a limit on the length, in bytes, of the concrete\npattern string. In particular, this is viable since this parser\nimplementation will limit itself to heap space proportional to the\nlength of the pattern string.\n\nNote that a nest limit of `0` will return a nest limit error for most\npatterns but not all. For example, a nest limit of `0` permits `a` but\nnot `ab`, since `ab` requires a concatenation, which results in a nest\ndepth of `1`. In general, a nest limit is not something that manifests\nin an obvious way in the concrete syntax, therefore, it should not be\nused in a granular way.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["limit",{"primitive":"u32"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexBuilder","id":"0:2119:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:1836:1690":{"id":"b:2:2542-0:1836:1690","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:26-0:794:1669":{"id":"0:26-0:794:1669","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[763,4],"end":[763,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::re_bytes","name":"re_bytes","id":"0:794:1669","glob":true}}},"a:2:2684:220-0:2231:1653":{"id":"a:2:2684:220-0:2231:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureMatches","id":"0:2231:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2538-0:2593:1653":{"id":"b:2:2538-0:2593:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureMatches","id":"0:2593:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1823:668":{"id":"0:1823:668","crate_id":0,"name":"fmt","span":{"filename":"src/input.rs","begin":[139,22],"end":[139,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:1855:1693":{"id":"b:2:2248-0:1855:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LiteralSearcher","id":"0:1855:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:953:917":{"id":"0:953:917","crate_id":0,"name":"name","span":{"filename":"src/re_bytes.rs","begin":[1056,4],"end":[1058,5]},"visibility":"public","docs":"Returns the match for the capture group named `name`. If `name` isn't a\nvalid capture group or didn't match anything, then `None` is returned.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["name",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Match","id":"0:2197:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8250:3375-0:2288:1662":{"id":"a:2:8250:3375-0:2288:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReplacerRef","id":"0:2288:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2741:5045-0:1836:1690":{"id":"a:2:2741:5045-0:1836:1690","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2080:609":{"id":"0:2080:609","crate_id":0,"name":"end","span":{"filename":"src/prog.rs","begin":[430,4],"end":[430,15]},"visibility":"public","docs":"The end (inclusive) of this byte range.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"a:2:2701:228-0:2119:3607":{"id":"a:2:2701:228-0:2119:3607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexBuilder","id":"0:2119:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2548-0:2456:3001":{"id":"b:2:2548-0:2456:3001","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSet","id":"0:2456:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2248-0:2602:1658":{"id":"b:2:2248-0:2602:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Matches","id":"0:2602:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1343":{"id":"0:1343","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1386,0],"end":[1394,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:2929:2344","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Captures","id":"0:1235:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],"output":{"generic":"T"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2506:75","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["by_ref","no_expansion"],"trait":{"name":"Replacer","id":"0:1311:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"generic":"F"},"items":["0:1346:3910"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2701:228-0:2520:1657":{"id":"a:2:2701:228-0:2520:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:532:811":{"id":"0:532:811","crate_id":0,"name":"len","span":{"filename":"src/input.rs","begin":[45,4],"end":[47,5]},"visibility":"public","docs":"Returns the UTF-8 width of the character at this position.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:638:2599":{"id":"0:638:2599","crate_id":0,"name":"find","span":{"filename":"src/literal/imp.rs","begin":[78,4],"end":[91,5]},"visibility":"public","docs":"Find the position of a literal in `haystack` if it exists.","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["haystack",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"primitive":"usize"},{"primitive":"usize"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:369:1689":{"id":"b:2:2538-0:369:1689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ExecBuilder","id":"0:369:1689","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2000:1606":{"id":"0:2000:1606","crate_id":0,"name":"0","span":{"filename":"src/prog.rs","begin":[289,14],"end":[289,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"InstEmptyLook","id":"0:2028:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:1853":{"id":"0:1853","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[345,55],"end":[345,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clamp","min","max"],"trait":{"name":"Ord","id":"2:2348:182","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1854:430"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2553-0:944:1655":{"id":"b:2:2553-0:944:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Captures","id":"0:944:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:603":{"id":"0:603","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[394,0],"end":[398,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"primitive":"char"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:604:694"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8250:3375-0:86:1687":{"id":"a:2:8250:3375-0:86:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Compiler","id":"0:86:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2349":{"id":"0:2349","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["rfold","advance_back_by","try_rfold","rfind","nth_back"],"trait":{"name":"DoubleEndedIterator","id":"2:7240:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIntoIter","id":"0:2380:4304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2350:4310"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2551:423":{"id":"0:2551:423","crate_id":0,"name":"clone","span":{"filename":"src/re_unicode.rs","begin":[833,9],"end":[833,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CaptureNames","id":"0:2545:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8250:3375-0:2167:3687":{"id":"a:2:8250:3375-0:2167:3687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2167:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2548-0:1650:128":{"id":"b:2:2548-0:1650:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2011:423":{"id":"0:2011:423","crate_id":0,"name":"clone","span":{"filename":"src/prog.rs","begin":[271,9],"end":[271,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Inst","id":"0:1988:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2136:2858":{"id":"0:2136:2858","crate_id":0,"name":"ignore_whitespace","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the value for the ignore whitespace (`x`) flag.\n\nWhen enabled, whitespace such as new lines and spaces will be ignored\nbetween expressions of the pattern, and `#` can be used to start a\ncomment until the next new line.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexBuilder","id":"0:2142:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2327:1869":{"id":"0:2327:1869","crate_id":0,"name":"is_empty","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"public","docs":"Returns `true` if this set contains no regular expressions.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2578":{"id":"0:2578","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[973,16],"end":[973,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureLocations","id":"0:2573:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2579:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1333":{"id":"0:1333","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1358,0],"end":[1366,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["by_ref","no_expansion"],"trait":{"name":"Replacer","id":"0:1311:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"primitive":"str"}}],"bindings":[]}}}},"items":["0:1335:3910","0:1336:3907"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1821":{"id":"0:1821","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[139,22],"end":[139,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CharInput","id":"0:1812:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1823:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2548-0:1836:1690":{"id":"b:2:2548-0:1836:1690","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1979:1957":{"id":"0:1979:1957","crate_id":0,"name":"is_dfa","span":{"filename":"src/prog.rs","begin":[50,4],"end":[50,20]},"visibility":"public","docs":"When true, the program is compiled for DFA matching. For example, this\nimplies `is_bytes` and also inserts a preceding `.*?` for unanchored\nregexes.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"0:1315:4142":{"id":"0:1315:4142","crate_id":0,"name":"by_ref","span":{"filename":"src/re_unicode.rs","begin":[1308,4],"end":[1310,5]},"visibility":"default","docs":"Return a `Replacer` that borrows and wraps this `Replacer`.\n\nThis is useful when you want to take a generic `Replacer` (which might\nnot be cloneable) and use it without consuming it, so it can be used\nmore than once.\n\n# Example\n\n```\nuse regex::{Regex, Replacer};\n\nfn replace_all_twice<R: Replacer>(\n    re: Regex,\n    src: &str,\n    mut rep: R,\n) -> String {\n    let dst = re.replace_all(src, rep.by_ref());\n    let dst = re.replace_all(&dst, rep.by_ref());\n    dst.into_owned()\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'r","mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ReplacerRef","id":"0:2611:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12029:31211":{"id":"2:12029:31211","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:2419":{"id":"0:2419","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"SetMatches","id":"0:2461:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2420:4268","0:2421:1867","0:2422:811","0:2423:795"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2251-0:2593:1653":{"id":"b:2:2251-0:2593:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureMatches","id":"0:2593:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2553-0:2119:3607":{"id":"b:2:2553-0:2119:3607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexBuilder","id":"0:2119:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2109:2854":{"id":"0:2109:2854","crate_id":0,"name":"case_insensitive","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the value for the case insensitive (`i`) flag.\n\nWhen enabled, letters in the pattern will match both upper case and\nlower case variants.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexBuilder","id":"0:2119:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:944:1655":{"id":"0:944:1655","crate_id":0,"name":"Captures","span":{"filename":"src/re_bytes.rs","begin":[1024,0],"end":[1028,1]},"visibility":"public","docs":"Captures represents a group of captured byte strings for a single match.\n\nThe 0th capture always corresponds to the entire match. Each subsequent\nindex corresponds to the next capture group in the regex. If a capture\ngroup is named, then the matched byte string is *also* available via the\n`name` method. (Note that the 0th capture is always unnamed and so must be\naccessed with the `get` method.)\n\nPositions returned from a capture group are always byte indices.\n\n`'t` is the lifetime of the matched text.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:949","a:2:2684:220-0:944:1655","a:2:8249:3376-0:944:1655","a:2:8250:3375-0:944:1655","a:2:2701:228-0:944:1655","a:2:2741:5045-0:944:1655","b:2:2251-0:944:1655","b:2:2542-0:944:1655","b:2:2248-0:944:1655","b:2:2538-0:944:1655","b:2:2553-0:944:1655","b:2:2548-0:944:1655","b:2:3319-0:944:1655","0:982","0:959","0:976"]}}},"b:2:2542-0:1664:1688":{"id":"b:2:2542-0:1664:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Exec","id":"0:1664:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2248-0:2288:1662":{"id":"b:2:2248-0:2288:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReplacerRef","id":"0:2288:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2101:1667":{"id":"0:2101:1667","crate_id":0,"name":"bytes","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:2119:3607"],"is_stripped":false}}},"0:821:2165":{"id":"0:821:2165","crate_id":0,"name":"range","span":{"filename":"src/re_bytes.rs","begin":[55,4],"end":[57,5]},"visibility":"public","docs":"Returns the range over the starting and ending byte offsets of the\nmatch in the haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Range","id":"2:39192:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:762:2049":{"id":"0:762:2049","crate_id":0,"name":"uses_bytes","span":{"filename":"src/prog.rs","begin":[138,4],"end":[140,5]},"visibility":"public","docs":"Returns true if this program uses Byte instructions instead of\nChar/Range instructions.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1036:3910":{"id":"0:1036:3910","crate_id":0,"name":"replace_append","span":{"filename":"src/re_bytes.rs","begin":[1348,4],"end":[1350,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["caps",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Captures","id":"0:944:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Vec","id":"5:6696:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:2119:3607":{"id":"b:2:2538-0:2119:3607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexBuilder","id":"0:2119:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1809":{"id":"0:1809","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[12,16],"end":[12,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InputAt","id":"0:1802:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1807":{"id":"0:1807","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[12,9],"end":[12,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InputAt","id":"0:1802:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1808:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2135:2857":{"id":"0:2135:2857","crate_id":0,"name":"swap_greed","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the value for the greedy swap (`U`) flag.\n\nWhen enabled, a pattern like `a*` is lazy (tries to find shortest\nmatch) and `a*?` is greedy (tries to find longest match).\n\nBy default, `a*` is greedy and `a*?` is lazy.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexBuilder","id":"0:2142:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1331:3910":{"id":"0:1331:3910","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1349,4],"end":[1351,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["caps",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Captures","id":"0:1235:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1286:504":{"id":"0:1286:504","crate_id":0,"name":"count","span":{"filename":"src/re_unicode.rs","begin":[1204,4],"end":[1206,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12022:31212":{"id":"2:12022:31212","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:11905:1499"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2245":{"id":"0:2245","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[829,9],"end":[829,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Split","id":"0:2240:1663","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2248:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2548-0:2620:1659":{"id":"b:2:2548-0:2620:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoExpand","id":"0:2620:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:777:2120":{"id":"0:777:2120","crate_id":0,"name":"Item","span":{"filename":"src/prog.rs","begin":[247,4],"end":[247,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"Inst","id":"0:1988:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}},"2:7209:3525":{"id":"2:7209:3525","crate_id":2,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"I"}}}},"0:2079:1383":{"id":"0:2079:1383","crate_id":0,"name":"start","span":{"filename":"src/prog.rs","begin":[428,4],"end":[428,17]},"visibility":"public","docs":"The start (inclusive) of this byte range.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u8"}}},"0:1164:3833":{"id":"0:1164:3833","crate_id":0,"name":"splitn","span":{"filename":"src/re_unicode.rs","begin":[411,4],"end":[417,5]},"visibility":"public","docs":"Returns an iterator of at most `limit` substrings of `text` delimited\nby a match of the regular expression. (A `limit` of `0` will return no\nsubstrings.) Namely, each element of the iterator corresponds to text\nthat *isn't* matched by the regular expression. The remainder of the\nstring that is not split will be the last element in the iterator.\n\nThis method will *not* copy the text given.\n\n# Example\n\nGet the first two words in some text:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"\\W+\").unwrap();\nlet fields: Vec<&str> = re.splitn(\"Hey! How are you?\", 3).collect();\nassert_eq!(fields, vec!(\"Hey\", \"How\", \"are you?\"));\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'r","mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"primitive":"str"}}}],["limit",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"SplitN","id":"0:2564:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:5045-0:944:1655":{"id":"a:2:2741:5045-0:944:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Captures","id":"0:944:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2542-0:2540:1660":{"id":"b:2:2542-0:2540:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Regex","id":"0:2540:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1988:1695":{"id":"0:1988:1695","crate_id":0,"name":"Inst","span":{"filename":"src/prog.rs","begin":[272,0],"end":[300,1]},"visibility":"public","docs":"Inst is an instruction code in a Regex program.\n\nRegrettably, a regex program either contains Unicode codepoint\ninstructions (Char and Ranges) or it contains byte instructions (Bytes).\nA regex program can never contain both.\n\nIt would be worth investigating splitting this into two distinct types and\nthen figuring out how to make the matching engines polymorphic over those\ntypes without sacrificing performance.\n\nOther than the benefit of moving invariants into the type system, another\nbenefit is the decreased size. If we remove the `Char` and `Ranges`\ninstructions from the `Inst` enum, then its size shrinks from 32 bytes to\n24 bytes. (This is because of the removal of a `Box<[]>` in the `Ranges`\nvariant.) Given that byte based machines are typically much bigger than\ntheir Unicode analogues (because they can decode UTF-8 directly), this ends\nup being a pretty significant savings.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:1989:1657","0:1992:1878","0:1995:1663","0:1998:1694","0:2001:1690","0:2004:1886","0:2007:1887"],"impls":["0:780","a:2:2684:220-0:1988:1695","a:2:8249:3376-0:1988:1695","a:2:8250:3375-0:1988:1695","a:2:2701:228-0:1988:1695","a:2:2741:5045-0:1988:1695","b:2:2251-0:1988:1695","b:2:2542-0:1988:1695","b:2:2248-0:1988:1695","b:2:2538-0:1988:1695","b:2:2553-0:1988:1695","b:2:2548-0:1988:1695","b:2:3319-0:1988:1695","b:5:684-0:1988:1695","0:2010","0:2012"]}}},"0:877:3949":{"id":"0:877:3949","crate_id":0,"name":"captures_read","span":{"filename":"src/re_bytes.rs","begin":[662,4],"end":[668,5]},"visibility":"public","docs":"This is like `captures`, but uses\n[`CaptureLocations`](struct.CaptureLocations.html)\ninstead of\n[`Captures`](struct.Captures.html) in order to amortize allocations.\n\nTo create a `CaptureLocations` value, use the\n`Regex::capture_locations` method.\n\nThis returns the overall match if this was successful, which is always\nequivalence to the `0`th capture group.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["locs",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"CaptureLocations","id":"0:2268:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["text",{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Match","id":"0:2197:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8249:3376-0:2268:1652":{"id":"a:2:8249:3376-0:2268:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureLocations","id":"0:2268:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2684:220-0:2119:3607":{"id":"a:2:2684:220-0:2119:3607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexBuilder","id":"0:2119:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:7206-0:2249:1664":{"id":"b:2:7206-0:2249:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SplitN","id":"0:2249:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:7208:2120","2:7209:3525","2:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"a:2:2741:5045-0:2268:1652":{"id":"a:2:2741:5045-0:2268:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureLocations","id":"0:2268:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8249:3376-0:2368:3001":{"id":"a:2:8249:3376-0:2368:3001","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSet","id":"0:2368:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2542-0:2593:1653":{"id":"b:2:2542-0:2593:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureMatches","id":"0:2593:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2741:5045-0:2249:1664":{"id":"a:2:2741:5045-0:2249:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SplitN","id":"0:2249:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2610:668":{"id":"0:2610:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[1246,9],"end":[1246,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:2035:1694":{"id":"b:2:3319-0:2035:1694","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EmptyLook","id":"0:2035:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2741:5045-0:1664:1688":{"id":"a:2:2741:5045-0:1664:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Exec","id":"0:1664:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2248-0:2240:1663":{"id":"b:2:2248-0:2240:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Split","id":"0:2240:1663","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2701:228-0:2461:4266":{"id":"a:2:2701:228-0:2461:4266","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatches","id":"0:2461:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:3321:1491":{"id":"2:3321:1491","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39341:8690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2029:1881":{"id":"0:2029:1881","crate_id":0,"name":"goto","span":{"filename":"src/prog.rs","begin":[338,4],"end":[338,21]},"visibility":"public","docs":"The next location to execute in the program if this instruction\nsucceeds.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:890:3939":{"id":"0:890:3939","crate_id":0,"name":"capture_locations","span":{"filename":"src/re_bytes.rs","begin":[763,4],"end":[765,5]},"visibility":"public","docs":"Returns an empty set of capture locations that can be reused in\nmultiple calls to `captures_read` or `captures_read_at`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CaptureLocations","id":"0:2268:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2265":{"id":"0:2265","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[909,16],"end":[909,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2258:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["0:2267:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2350:4310":{"id":"0:2350:4310","crate_id":0,"name":"next_back","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:5045-0:2540:1660":{"id":"a:2:2741:5045-0:2540:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Regex","id":"0:2540:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12075:3833":{"id":"2:12075:3833","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:1643","str::rsplitn":"2:12078:31248"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43461:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:1235:1655":{"id":"b:2:2248-0:1235:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Captures","id":"0:1235:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12125:37741":{"id":"2:12125:37741","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:1643"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:5016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:369:1689":{"id":"a:2:2684:220-0:369:1689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExecBuilder","id":"0:369:1689","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2701:228-0:2373:4266":{"id":"a:2:2701:228-0:2373:4266","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatches","id":"0:2373:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2630:2226":{"id":"0:2630:2226","crate_id":0,"name":"SparseSet","span":{"filename":"src/sparse.rs","begin":[16,0],"end":[25,1]},"visibility":"public","docs":"A sparse set used for representing ordered NFA states.\n\nThis supports constant time addition and membership testing. Clearing an\nentire set can also be done in constant time. Iteration yields elements\nin the order in which they were inserted.\n\nThe data structure is based on: https://research.swtch.com/sparse\nNote though that we don't actually use uninitialized memory. We generally\nreuse allocations, so the initial allocation cost is bareable. However,\nits other properties listed above are extremely useful.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":[]}}},"0:1066:2887":{"id":"0:1066:2887","crate_id":0,"name":"next_after_empty","span":{"filename":"src/re_trait.rs","begin":[122,4],"end":[122,69]},"visibility":"default","docs":"Returns the position of the next character after `i`.\n\nFor example, a haystack with type `&[u8]` probably returns `i+1`,\nwhereas a haystack with type `&str` probably returns `i` plus the\nlength of the next UTF-8 sequence.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Text","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:1062:2743","args":null}}}}}],["i",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:2094:2858":{"id":"0:2094:2858","crate_id":0,"name":"ignore_whitespace","span":{"filename":"src/re_builder.rs","begin":[13,4],"end":[13,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"b:2:2548-0:2540:1660":{"id":"b:2:2548-0:2540:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Regex","id":"0:2540:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12025:11671":{"id":"2:12025:11671","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41396:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1151:2599":{"id":"0:1151:2599","crate_id":0,"name":"find","span":{"filename":"src/re_unicode.rs","begin":[244,4],"end":[246,5]},"visibility":"public","docs":"Returns the start and end byte range of the leftmost-first match in\n`text`. If no match exists, then `None` is returned.\n\nNote that this should only be used if you want to discover the position\nof the match. Testing the existence of a match is faster if you use\n`is_match`.\n\n# Example\n\nFind the start and end location of the first word with exactly 13\nUnicode word characters:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet text = \"I categorically deny having triskaidekaphobia.\";\nlet mat = Regex::new(r\"\\b\\w{13}\\b\").unwrap().find(text).unwrap();\nassert_eq!(mat.start(), 2);\nassert_eq!(mat.end(), 15);\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:369:1689":{"id":"b:2:3319-0:369:1689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExecBuilder","id":"0:369:1689","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:561:552":{"id":"0:561:552","crate_id":0,"name":"deref","span":{"filename":"src/input.rs","begin":[152,4],"end":[154,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:564:1844":{"id":"0:564:1844","crate_id":0,"name":"at","span":{"filename":"src/input.rs","begin":[158,4],"end":[165,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"InputAt","id":"0:1802:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:646:795":{"id":"0:646:795","crate_id":0,"name":"iter","span":{"filename":"src/literal/imp.rs","begin":[120,4],"end":[128,5]},"visibility":"public","docs":"Returns an iterator over all literals to be matched.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LiteralIter","id":"0:1883:3293","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:951:1880":{"id":"0:951:1880","crate_id":0,"name":"get","span":{"filename":"src/re_bytes.rs","begin":[1050,4],"end":[1052,5]},"visibility":"public","docs":"Returns the match associated with the capture group at index `i`. If\n`i` does not correspond to a capture group, or if the capture group\ndid not participate in the match, then `None` is returned.\n\n# Examples\n\nGet the text of the match with a default of an empty string if this\ngroup didn't participate in the match:\n\n```rust\n# use regex::bytes::Regex;\nlet re = Regex::new(r\"[a-z]+(?:([0-9]+)|([A-Z]+))\").unwrap();\nlet caps = re.captures(b\"abc123\").unwrap();\n\nlet text1 = caps.get(1).map_or(&b\"\"[..], |m| m.as_bytes());\nlet text2 = caps.get(2).map_or(&b\"\"[..], |m| m.as_bytes());\nassert_eq!(text1, &b\"123\"[..]);\nassert_eq!(text2, &b\"\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Match","id":"0:2197:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1067:2889":{"id":"0:1067:2889","crate_id":0,"name":"shortest_match_at","span":{"filename":"src/re_trait.rs","begin":[125,4],"end":[129,23]},"visibility":"default","docs":"Returns the location of the shortest match.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Text","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:1062:2743","args":null}}}}}],["start",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:2579:668":{"id":"0:2579:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[973,16],"end":[973,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1324:3910":{"id":"0:1324:3910","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1329,4],"end":[1331,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["caps",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Captures","id":"0:1235:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:2611:1662":{"id":"b:2:2553-0:2611:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReplacerRef","id":"0:2611:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12038:35383":{"id":"2:12038:35383","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12039:35377"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:43631:5022","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2117:2234":{"id":"0:2117:2234","crate_id":0,"name":"dfa_size_limit","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the approximate size of the cache used by the DFA.\n\nThis roughly corresponds to the number of bytes that the DFA will\nuse while searching.\n\nNote that this is a *per thread* limit. There is no way to set a global\nlimit. In particular, if a regex is used from multiple threads\nsimultaneously, then each thread may use up to the number of bytes\nspecified here.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["limit",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexBuilder","id":"0:2119:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12128:2849":{"id":"2:12128:2849","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:11673:127","`FromStr`":"2:11672:3695"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:11672:3695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11672:3695","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:844:3757":{"id":"0:844:3757","crate_id":0,"name":"find_iter","span":{"filename":"src/re_bytes.rs","begin":[218,4],"end":[220,5]},"visibility":"public","docs":"Returns an iterator for each successive non-overlapping match in\n`text`, returning the start and end byte indices with respect to\n`text`.\n\n# Example\n\nFind the start and end location of every word with exactly 13 ASCII\nword bytes:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet text = b\"Retroactively relinquishing remunerations is reprehensible.\";\nfor mat in Regex::new(r\"\\b\\w{13}\\b\").unwrap().find_iter(text) {\n    println!(\"{:?}\", mat);\n}\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'r","mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Matches","id":"0:2222:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2206:423":{"id":"0:2206:423","crate_id":0,"name":"clone","span":{"filename":"src/re_bytes.rs","begin":[20,15],"end":[20,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Match","id":"0:2197:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:874:3797":{"id":"0:874:3797","crate_id":0,"name":"captures_at","span":{"filename":"src/re_bytes.rs","begin":[639,4],"end":[650,5]},"visibility":"public","docs":"Returns the same as [`Regex::captures`], but starts the search at the\ngiven offset.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{"`Regex::captures`":"0:847:1980"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["start",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Captures","id":"0:944:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2443:953":{"id":"0:2443:953","crate_id":0,"name":"next","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1201":{"id":"0:1201","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[836,0],"end":[853,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["find_map","is_partitioned","last","fuse","skip_while","size_hint","chain","skip","gt","cloned","__iterator_get_unchecked","min_by","cmp_by","try_find","try_fold","inspect","take_while","intersperse","rev","collect","min_by_key","partial_cmp_by","rposition","ge","try_for_each","try_collect","map_while","intersperse_with","find","next_chunk","lt","sum","max_by","eq_by","unzip","fold","collect_into","scan","by_ref","for_each","cmp","advance_by","eq","position","enumerate","max_by_key","copied","cycle","reduce","count","peekable","partition","flat_map","min","filter","is_sorted","nth","all","take","zip","ne","partial_cmp","is_sorted_by","array_chunks","try_reduce","partition_in_place","max","flatten","any","filter_map","le","step_by","map","is_sorted_by_key","product"],"trait":{"name":"Iterator","id":"2:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2545:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["0:1203:2120","0:1204:953","0:1207:4005","0:1208:504"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2207":{"id":"0:2207","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[20,22],"end":[20,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2695:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2197:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1995:1663":{"id":"0:1995:1663","crate_id":0,"name":"Split","span":{"filename":"src/prog.rs","begin":[286,4],"end":[286,20]},"visibility":"default","docs":"Split causes the program to diverge to one of two paths in the\nprogram, preferring goto1 in InstSplit.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:1997:1606"]},"discriminant":null}}},"0:2028:1906":{"id":"0:2028:1906","crate_id":0,"name":"InstEmptyLook","span":{"filename":"src/prog.rs","begin":[335,0],"end":[341,1]},"visibility":"public","docs":"Representation of the `EmptyLook` instruction.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:2029:1881","0:2030:2055"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":[]}}},"a:2:2701:228-0:2142:3607":{"id":"a:2:2701:228-0:2142:3607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexBuilder","id":"0:2142:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:333:668":{"id":"0:333:668","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[70,4],"end":[88,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1845":{"id":"0:1845","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[345,28],"end":[345,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2694:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2006:1606":{"id":"0:2006:1606","crate_id":0,"name":"0","span":{"filename":"src/prog.rs","begin":[295,11],"end":[295,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"InstRanges","id":"0:2070:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:794:1669":{"id":"0:794:1669","crate_id":0,"name":"re_bytes","span":{"filename":"src/re_bytes.rs","begin":[1,0],"end":[1372,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:2197:1657","0:2217:1660","0:2222:1658","0:2231:1653","0:2240:1663","0:2249:1664","0:2258:1654","0:2268:1652","0:944:1655","0:2275:1665","0:1000:1661","0:2288:1662","0:2297:1659"],"is_stripped":true}}},"2:12084:37728":{"id":"2:12084:37728","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:5016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1895:1606":{"id":"0:1895:1606","crate_id":0,"name":"0","span":{"filename":"src/literal/imp.rs","begin":[229,7],"end":[229,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"resolved_path":{"name":"Literal","id":"20:2843:2042","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}},"0:647:3040":{"id":"0:647:3040","crate_id":0,"name":"lcp","span":{"filename":"src/literal/imp.rs","begin":[131,4],"end":[133,5]},"visibility":"public","docs":"Returns a matcher for the longest common prefix of this matcher.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Memmem","id":"0:1911:3261","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2172:1648":{"id":"0:2172:1648","crate_id":0,"name":"set_unicode","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:2192:3687"],"is_stripped":false}}},"0:869:2889":{"id":"0:869:2889","crate_id":0,"name":"shortest_match_at","span":{"filename":"src/re_bytes.rs","begin":[598,4],"end":[604,5]},"visibility":"public","docs":"Returns the same as shortest_match, but starts the search at the given\noffset.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["start",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:914:953":{"id":"0:914:953","crate_id":0,"name":"next","span":{"filename":"src/re_bytes.rs","begin":[838,4],"end":[856,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"slice":{"primitive":"u8"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2074:423":{"id":"0:2074:423","crate_id":0,"name":"clone","span":{"filename":"src/prog.rs","begin":[375,9],"end":[375,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"InstRanges","id":"0:2070:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1195:3011":{"id":"0:1195:3011","crate_id":0,"name":"capture_names","span":{"filename":"src/re_unicode.rs","begin":[762,4],"end":[764,5]},"visibility":"public","docs":"Returns an iterator over the capture names.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CaptureNames","id":"0:2545:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8250:3375-0:2035:1694":{"id":"a:2:8250:3375-0:2035:1694","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EmptyLook","id":"0:2035:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2368:3001":{"id":"0:2368:3001","crate_id":0,"name":"RegexSet","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"public","docs":"Match multiple (possibly overlapping) regular expressions in a single scan.\n\nA regex set corresponds to the union of two or more regular expressions.\nThat is, a regex set will match text where at least one of its\nconstituent regular expressions matches. A regex set as its formulated here\nprovides a touch more power: it will also report *which* regular\nexpressions in the set match. Indeed, this is the key difference between\nregex sets and a single `Regex` with many alternates, since only one\nalternate can match at a time.\n\nFor example, consider regular expressions to match email addresses and\ndomains: `[a-z]+@[a-z]+\\.(com|org|net)` and `[a-z]+\\.(com|org|net)`. If a\nregex set is constructed from those regexes, then searching the text\n`foo@example.com` will report both regexes as matching. Of course, one\ncould accomplish this by compiling each regex on its own and doing two\nsearches over the text. The key advantage of using a regex set is that it\nwill report the matching regexes using a *single pass through the text*.\nIf one has hundreds or thousands of regexes to match repeatedly (like a URL\nrouter for a complex web application or a user agent matcher), then a regex\nset can realize huge performance gains.\n\n# Example\n\nThis shows how the above two regexes (for matching email addresses and\ndomains) might work:\n\n ```rust\n # use regex::RegexSet;\n let set = RegexSet::new(&[\n     r\"[a-z]+@[a-z]+\\.(com|org|net)\",\n     r\"[a-z]+\\.(com|org|net)\",\n ]).unwrap();\n\n // Ask whether any regexes in the set match.\n assert!(set.is_match(\"foo@example.com\"));\n\n // Identify which regexes in the set match.\n let matches: Vec<_> = set.matches(\"foo@example.com\").into_iter().collect();\n assert_eq!(vec![0, 1], matches);\n\n // Try again, but with text that only matches one of the regexes.\n let matches: Vec<_> = set.matches(\"example.com\").into_iter().collect();\n assert_eq!(vec![1], matches);\n\n // Try again, but with text that doesn't match any regex in the set.\n let matches: Vec<_> = set.matches(\"example\").into_iter().collect();\n assert!(matches.is_empty());\n ```\n\nNote that it would be possible to adapt the above example to using `Regex`\nwith an expression like:\n\n```text\n(?P<email>[a-z]+@(?P<email_domain>[a-z]+[.](com|org|net)))|(?P<domain>[a-z]+[.](com|org|net))\n```\n\nAfter a match, one could then inspect the capture groups to figure out\nwhich alternates matched. The problem is that it is hard to make this\napproach scale when there are many regexes since the overlap between each\nalternate isn't always obvious to reason about.\n\n# Limitations\n\nRegex sets are limited to answering the following two questions:\n\n1. Does any regex in the set match?\n2. If so, which regexes in the set match?\n\nAs with the main [`Regex`][crate::Regex] type, it is cheaper to ask (1)\ninstead of (2) since the matching engines can stop after the first match\nis found.\n\nYou cannot directly extract [`Match`][crate::Match] or\n[`Captures`][crate::Captures] objects from a regex set. If you need these\noperations, the recommended approach is to compile each pattern in the set\nindependently and scan the exact same input a second time with those\nindependently compiled patterns:\n\n```rust\nuse regex::{Regex, RegexSet};\n\nlet patterns = [\"foo\", \"bar\"];\n// Both patterns will match different ranges of this string.\nlet text = \"barfoo\";\n\n// Compile a set matching any of our patterns.\nlet set = RegexSet::new(&patterns).unwrap();\n// Compile each pattern independently.\nlet regexes: Vec<_> = set.patterns().iter()\n    .map(|pat| Regex::new(pat).unwrap())\n    .collect();\n\n// Match against the whole set first and identify the individual\n// matching patterns.\nlet matches: Vec<&str> = set.matches(text).into_iter()\n    // Dereference the match index to get the corresponding\n    // compiled pattern.\n    .map(|match_idx| &regexes[match_idx])\n    // To get match locations or any other info, we then have to search\n    // the exact same text again, using our separately-compiled pattern.\n    .map(|pat| pat.find(text).unwrap().as_str())\n    .collect();\n\n// Matches arrive in the order the constituent patterns were declared,\n// not the order they appear in the input.\nassert_eq!(vec![\"foo\", \"bar\"], matches);\n```\n\n# Performance\n\nA `RegexSet` has the same performance characteristics as `Regex`. Namely,\nsearch takes `O(mn)` time, where `m` is proportional to the size of the\nregex set and `n` is proportional to the length of the search text.","links":{"crate::Captures":"0:1235:1655","crate::Regex":"0:2540:1660","crate::Match":"0:2520:1657"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:2316","a:2:2684:220-0:2368:3001","a:2:8249:3376-0:2368:3001","a:2:8250:3375-0:2368:3001","a:2:2701:228-0:2368:3001","a:2:2741:5045-0:2368:3001","b:2:2251-0:2368:3001","b:2:2542-0:2368:3001","b:2:2248-0:2368:3001","b:2:2538-0:2368:3001","b:2:2553-0:2368:3001","b:2:2548-0:2368:3001","b:2:3319-0:2368:3001","b:5:684-0:2368:3001","0:2371","0:2364","0:2329"]}}},"0:2430:3525":{"id":"0:2430:3525","crate_id":0,"name":"IntoIter","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"SetMatchesIter","id":"0:2473:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}},"0:942:811":{"id":"0:942:811","crate_id":0,"name":"len","span":{"filename":"src/re_bytes.rs","begin":[997,4],"end":[999,5]},"visibility":"public","docs":"Returns the total number of capture groups (even if they didn't match).\n\nThis is always at least `1` since every regex has at least `1`\ncapturing group that corresponds to the entire match.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2271":{"id":"0:2271","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[971,9],"end":[971,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureLocations","id":"0:2268:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2272:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2004:1886":{"id":"0:2004:1886","crate_id":0,"name":"Ranges","span":{"filename":"src/prog.rs","begin":[295,4],"end":[295,22]},"visibility":"default","docs":"Ranges requires the regex program to match the character at the current\nposition in the input with one of the ranges specified in InstRanges.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:2006:1606"]},"discriminant":null}}},"0:2554:668":{"id":"0:2554:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[833,16],"end":[833,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2627":{"id":"0:2627","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1404,16],"end":[1404,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoExpand","id":"0:2620:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2629:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:781:2339":{"id":"0:781:2339","crate_id":0,"name":"is_match","span":{"filename":"src/prog.rs","begin":[304,4],"end":[309,5]},"visibility":"public","docs":"Returns true if and only if this is a match instruction.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2227":{"id":"0:2227","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[785,9],"end":[785,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Matches","id":"0:2222:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2230:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:833:668":{"id":"0:833:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[119,4],"end":[121,5]},"visibility":"default","docs":"Shows the original regular expression.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:2222:1658":{"id":"b:2:2542-0:2222:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Matches","id":"0:2222:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:545":{"id":"0:545","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[104,0],"end":[136,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Input","id":"0:536:148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_empty"],"trait":{"name":"Input","id":"0:536:148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"T"}}},"items":["0:548:1844","0:549:3220","0:550:3222","0:551:1884","0:552:1870","0:553:811","0:554:2888"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2414:811":{"id":"0:2414:811","crate_id":0,"name":"len","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"public","docs":"Returns the total number of regular expressions in this set.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2054":{"id":"0:2054","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[344,16],"end":[344,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EmptyLook","id":"0:2035:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2741:5045-0:2461:4266":{"id":"a:2:2741:5045-0:2461:4266","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatches","id":"0:2461:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:467:1987":{"id":"0:467:1987","crate_id":0,"name":"static_captures_len","span":{"filename":"src/exec.rs","begin":[1368,4],"end":[1370,5]},"visibility":"public","docs":"If the number of capture groups in every match is always the same, then\nreturn that number. Otherwise return `None`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1892:1606":{"id":"0:1892:1606","crate_id":0,"name":"0","span":{"filename":"src/literal/imp.rs","begin":[228,11],"end":[228,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"primitive":"u8"}}}}}},"0:2389":{"id":"0:2389","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2385:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2391:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2542-0:2520:1657":{"id":"b:2:2542-0:2520:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2741:5045-0:1235:1655":{"id":"a:2:2741:5045-0:1235:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Captures","id":"0:1235:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2553-0:2142:3607":{"id":"b:2:2553-0:2142:3607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexBuilder","id":"0:2142:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2251-0:2468:4304":{"id":"b:2:2251-0:2468:4304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIntoIter","id":"0:2468:4304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2592:668":{"id":"0:2592:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[1185,16],"end":[1185,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1281:2120":{"id":"0:1281:2120","crate_id":0,"name":"Item","span":{"filename":"src/re_unicode.rs","begin":[1192,4],"end":[1192,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}}}}},"0:1299":{"id":"0:1299","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1237,0],"end":[1237,56]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7588:3693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureMatches","id":"0:2593:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2701:228-0:944:1655":{"id":"a:2:2701:228-0:944:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Captures","id":"0:944:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2010":{"id":"0:2010","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[271,9],"end":[271,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Inst","id":"0:1988:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2011:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1136":{"id":"0:1136","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[96,0],"end":[100,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Range","id":"2:39192:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"items":["0:1138:694"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12014:37719":{"id":"2:12014:37719","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:566:3220":{"id":"0:566:3220","crate_id":0,"name":"next_char","span":{"filename":"src/input.rs","begin":[167,4],"end":[169,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["at",{"resolved_path":{"name":"InputAt","id":"0:1802:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8249:3376-0:2119:3607":{"id":"a:2:8249:3376-0:2119:3607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexBuilder","id":"0:2119:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2542-0:2580:1665":{"id":"b:2:2542-0:2580:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2580:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2538-0:1969:1697":{"id":"b:2:2538-0:1969:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Program","id":"0:1969:1697","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2183:2855":{"id":"0:2183:2855","crate_id":0,"name":"multi_line","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the value for the multi-line matching (`m`) flag.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2192:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:2142:3607":{"id":"b:2:2538-0:2142:3607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexBuilder","id":"0:2142:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2191:2859":{"id":"0:2191:2859","crate_id":0,"name":"nest_limit","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the nesting limit for this parser.\n\nThe nesting limit controls how deep the abstract syntax tree is allowed\nto be. If the AST exceeds the given limit (e.g., with too many nested\ngroups), then an error is returned by the parser.\n\nThe purpose of this limit is to act as a heuristic to prevent stack\noverflow for consumers that do structural induction on an `Ast` using\nexplicit recursion. While this crate never does this (instead using\nconstant stack space and moving the call stack to the heap), other\ncrates may.\n\nThis limit is not checked until the entire Ast is parsed. Therefore,\nif callers want to put a limit on the amount of heap space used, then\nthey should impose a limit on the length, in bytes, of the concrete\npattern string. In particular, this is viable since this parser\nimplementation will limit itself to heap space proportional to the\nlength of the pattern string.\n\nNote that a nest limit of `0` will return a nest limit error for most\npatterns but not all. For example, a nest limit of `0` permits `a` but\nnot `ab`, since `ab` requires a concatenation, which results in a nest\ndepth of `1`. In general, a nest limit is not something that manifests\nin an obvious way in the concrete syntax, therefore, it should not be\nused in a granular way.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["limit",{"primitive":"u32"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2192:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:2142:3607":{"id":"b:2:2251-0:2142:3607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexBuilder","id":"0:2142:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1072:3813":{"id":"0:1072:3813","crate_id":0,"name":"captures_iter","span":{"filename":"src/re_trait.rs","begin":[158,4],"end":[160,5]},"visibility":"default","docs":"Returns an iterator over all non-overlapping successive leftmost-first\nmatches with captures.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Text","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:1062:2743","args":null}}}}}]],"output":{"resolved_path":{"name":"CaptureMatches","id":"0:2511:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:2611:1662":{"id":"a:2:2684:220-0:2611:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReplacerRef","id":"0:2611:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2129":{"id":"0:2129","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RegexBuilder","id":"0:2142:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2130:939","0:2131:2860","0:2132:2854","0:2133:2855","0:2134:2856","0:2135:2857","0:2136:2858","0:2137:1626","0:2138:2853","0:2139:1921","0:2140:2234","0:2141:2859"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8249:3376-0:1650:128":{"id":"a:2:8249:3376-0:1650:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2060":{"id":"0:2060","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[344,40],"end":[344,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2695:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EmptyLook","id":"0:2035:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1009:3910":{"id":"0:1009:3910","crate_id":0,"name":"replace_append","span":{"filename":"src/re_bytes.rs","begin":[1277,4],"end":[1279,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["caps",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Captures","id":"0:944:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Vec","id":"5:6696:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:2249:1664":{"id":"b:2:2251-0:2249:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SplitN","id":"0:2249:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1196:3961":{"id":"0:1196:3961","crate_id":0,"name":"captures_len","span":{"filename":"src/re_unicode.rs","begin":[767,4],"end":[769,5]},"visibility":"public","docs":"Returns the number of captures.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2701:228-0:2545:1654":{"id":"a:2:2701:228-0:2545:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2545:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2629:668":{"id":"0:2629:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[1404,16],"end":[1404,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:767:552":{"id":"0:767:552","crate_id":0,"name":"deref","span":{"filename":"src/prog.rs","begin":[169,4],"end":[171,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2898:117","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2138:2853":{"id":"0:2138:2853","crate_id":0,"name":"octal","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Whether to support octal syntax or not.\n\nOctal syntax is a little-known way of uttering Unicode codepoints in\na regular expression. For example, `a`, `\\x61`, `\\u0061` and\n`\\141` are all equivalent regular expressions, where the last example\nshows octal syntax.\n\nWhile supporting octal syntax isn't in and of itself a problem, it does\nmake good error messages harder. That is, in PCRE based regex engines,\nsyntax like `\\0` invokes a backreference, which is explicitly\nunsupported in Rust's regex engine. However, many users expect it to\nbe supported. Therefore, when octal support is disabled, the error\nmessage will explicitly mention that backreferences aren't supported.\n\nOctal syntax is disabled by default.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexBuilder","id":"0:2142:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1020":{"id":"0:1020","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1305,0],"end":[1313,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["by_ref","no_expansion"],"trait":{"name":"Replacer","id":"0:1000:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Vec","id":"5:6696:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}},"items":["0:1021:3910","0:1022:3907"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2424":{"id":"0:2424","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatches","id":"0:2461:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2425:3525","0:2426:2120","0:2427:784"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2251-0:2473:4303":{"id":"b:2:2251-0:2473:4303","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2473:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2070:1696":{"id":"0:2070:1696","crate_id":0,"name":"InstRanges","span":{"filename":"src/prog.rs","begin":[376,0],"end":[382,1]},"visibility":"public","docs":"Representation of the Ranges instruction.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:2071:1881","0:2072:2048"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:782","a:2:2684:220-0:2070:1696","a:2:8249:3376-0:2070:1696","a:2:8250:3375-0:2070:1696","a:2:2701:228-0:2070:1696","a:2:2741:5045-0:2070:1696","b:2:2251-0:2070:1696","b:2:2542-0:2070:1696","b:2:2248-0:2070:1696","b:2:2538-0:2070:1696","b:2:2553-0:2070:1696","b:2:2548-0:2070:1696","b:2:3319-0:2070:1696","b:5:684-0:2070:1696","0:2075","0:2073"]}}},"0:2177":{"id":"0:2177","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2192:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2178:939","0:2181:2860","0:2182:2854","0:2183:2855","0:2184:2856","0:2185:2857","0:2186:2858","0:2187:1626","0:2188:2853","0:2189:1921","0:2190:2234","0:2191:2859"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2701:228-0:2035:1694":{"id":"a:2:2701:228-0:2035:1694","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EmptyLook","id":"0:2035:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2701:228-0:2070:1696":{"id":"a:2:2701:228-0:2070:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InstRanges","id":"0:2070:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2257:668":{"id":"0:2257:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[867,9],"end":[867,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1016":{"id":"0:1016","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1295,0],"end":[1303,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["by_ref","no_expansion"],"trait":{"name":"Replacer","id":"0:1000:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"Vec","id":"5:6696:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}},"items":["0:1018:3910","0:1019:3907"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2248-0:2368:3001":{"id":"b:2:2248-0:2368:3001","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSet","id":"0:2368:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3319-0:2380:4304":{"id":"b:2:3319-0:2380:4304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIntoIter","id":"0:2380:4304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1071:3757":{"id":"0:1071:3757","crate_id":0,"name":"find_iter","span":{"filename":"src/re_trait.rs","begin":[152,4],"end":[154,5]},"visibility":"default","docs":"Returns an iterator over all non-overlapping successive leftmost-first\nmatches.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Text","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:1062:2743","args":null}}}}}]],"output":{"resolved_path":{"name":"Matches","id":"0:2500:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2452":{"id":"0:2452","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSet","id":"0:2456:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2453:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1022:3907":{"id":"0:1022:3907","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_bytes.rs","begin":[1310,4],"end":[1312,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:2275:1665":{"id":"b:2:2548-0:2275:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2275:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1062:2743":{"id":"0:1062:2743","crate_id":0,"name":"RegularExpression","span":{"filename":"src/re_trait.rs","begin":[104,0],"end":[161,1]},"visibility":"public","docs":"`RegularExpression` describes types that can implement regex searching.\n\nThis trait is my attempt at reducing code duplication and to standardize\nthe internal API. Specific duplication that is avoided are the `find`\nand `capture` iterators, which are slightly tricky.\n\nIt's not clear whether this trait is worth it, and it also isn't\nclear whether it's useful as a public trait or not. Methods like\n`next_after_empty` reak of bad design, but the rest of the methods seem\nsomewhat reasonable. One particular thing this trait would expose would be\nthe ability to start the search of a regex anywhere in a haystack, which\nisn't possible in the current public API.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:1063:2885","0:1064:2886","0:1065:3988","0:1066:2887","0:1067:2889","0:1068:2890","0:1069:2891","0:1070:2892","0:1071:3757","0:1072:3813"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"a:2:2741:5045-0:2545:1654":{"id":"a:2:2741:5045-0:2545:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2545:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1661":{"id":"0:1661","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[5,16],"end":[5,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2694:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:990":{"id":"0:990","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1204,0],"end":[1212,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["find_map","is_partitioned","last","fuse","skip_while","size_hint","chain","skip","gt","cloned","__iterator_get_unchecked","min_by","cmp_by","try_find","try_fold","inspect","take_while","intersperse","rev","collect","min_by_key","partial_cmp_by","rposition","ge","try_for_each","try_collect","map_while","intersperse_with","find","next_chunk","lt","sum","max_by","eq_by","unzip","fold","collect_into","scan","by_ref","for_each","cmp","advance_by","eq","position","enumerate","max_by_key","copied","cycle","reduce","count","peekable","partition","flat_map","min","filter","is_sorted","nth","all","take","zip","ne","partial_cmp","is_sorted_by","array_chunks","try_reduce","partition_in_place","max","flatten","any","filter_map","le","step_by","map","is_sorted_by_key","product"],"trait":{"name":"Iterator","id":"2:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2275:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:993:2120","0:994:953"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1227":{"id":"0:1227","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[935,0],"end":[935,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7588:3693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SplitN","id":"0:2564:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2538-0:1235:1655":{"id":"b:2:2538-0:1235:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Captures","id":"0:1235:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:601:3235":{"id":"0:601:3235","crate_id":0,"name":"is_word_char","span":{"filename":"src/input.rs","begin":[375,4],"end":[381,5]},"visibility":"public","docs":"Returns true iff the character is a word character.\n\nIf the character is absent, then false is returned.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2059:613":{"id":"0:2059:613","crate_id":0,"name":"eq","span":{"filename":"src/prog.rs","begin":[344,29],"end":[344,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"EmptyLook","id":"0:2035:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:539:3222":{"id":"0:539:3222","crate_id":0,"name":"previous_char","span":{"filename":"src/input.rs","begin":[79,4],"end":[79,49]},"visibility":"default","docs":"Return the Unicode character occurring previous to `at`.\n\nIf no such character could be decoded, then `Char` is absent.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["at",{"resolved_path":{"name":"InputAt","id":"0:1802:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:2064:1881":{"id":"0:2064:1881","crate_id":0,"name":"goto","span":{"filename":"src/prog.rs","begin":[369,4],"end":[369,21]},"visibility":"public","docs":"The next location to execute in the program if this instruction\nsucceeds.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:2085:2742":{"id":"0:2085:2742","crate_id":0,"name":"RegexOptions","span":{"filename":"src/re_builder.rs","begin":[4,0],"end":[16,1]},"visibility":"public","docs":"The set of user configurable options for compiling zero or more regexes.","links":{},"attrs":["#[allow(missing_docs)]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:2086:2819","0:2087:1921","0:2088:2234","0:2089:2859","0:2090:2854","0:2091:2855","0:2092:2856","0:2093:2857","0:2094:2858","0:2095:1626","0:2096:2853"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":[]}}},"a:2:2741:5045-0:2555:1663":{"id":"a:2:2741:5045-0:2555:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Split","id":"0:2555:1663","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2404":{"id":"0:2404","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RegexSet","id":"0:2456:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2405:939","0:2408:2850","0:2410:2339","0:2412:1827","0:2414:811","0:2415:1869","0:2416:3688"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2741:5045-0:2593:1653":{"id":"a:2:2741:5045-0:2593:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureMatches","id":"0:2593:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1969:1697":{"id":"0:1969:1697","crate_id":0,"name":"Program","span":{"filename":"src/prog.rs","begin":[18,0],"end":[78,1]},"visibility":"public","docs":"Program is a sequence of instructions and various facts about thos\ninstructions.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:1970:1916","0:1971:1827","0:1972:1980","0:1973:1919","0:1974:1987","0:1975:1383","0:1976:1925","0:1977:1950","0:1978:1946","0:1979:1957","0:1980:1961","0:1981:1865","0:1982:1975","0:1983:2076","0:1984:1868","0:1985:2234"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:757","a:2:2684:220-0:1969:1697","a:2:8249:3376-0:1969:1697","a:2:8250:3375-0:1969:1697","a:2:2701:228-0:1969:1697","a:2:2741:5045-0:1969:1697","b:2:2251-0:1969:1697","b:2:2542-0:1969:1697","b:2:2248-0:1969:1697","b:2:2538-0:1969:1697","b:2:2553-0:1969:1697","b:2:2548-0:1969:1697","b:2:3319-0:1969:1697","b:5:684-0:1969:1697","0:768","0:1986","0:765","0:775"]}}},"0:994:953":{"id":"0:994:953","crate_id":0,"name":"next","span":{"filename":"src/re_bytes.rs","begin":[1207,4],"end":[1211,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Match","id":"0:2197:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1217:953":{"id":"0:1217:953","crate_id":0,"name":"next","span":{"filename":"src/re_unicode.rs","begin":[872,4],"end":[890,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1001:3910":{"id":"0:1001:3910","crate_id":0,"name":"replace_append","span":{"filename":"src/re_bytes.rs","begin":[1231,4],"end":[1231,73]},"visibility":"default","docs":"Appends text to `dst` to replace the current match.\n\nThe current match is represented by `caps`, which is guaranteed to\nhave a match at capture group `0`.\n\nFor example, a no-op replacement would be\n`dst.extend(&caps[0])`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["caps",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Captures","id":"0:944:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Vec","id":"5:6696:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:2096:2853":{"id":"0:2096:2853","crate_id":0,"name":"octal","span":{"filename":"src/re_builder.rs","begin":[15,4],"end":[15,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"0:2111:2856":{"id":"0:2111:2856","crate_id":0,"name":"dot_matches_new_line","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the value for the any character (`s`) flag, where in `.` matches\nanything when `s` is set and matches anything except for new line when\nit is not set (the default).\n\nN.B. \"matches anything\" means \"any byte\" when Unicode is disabled and\nmeans \"any valid UTF-8 encoding of any Unicode scalar value\" when\nUnicode is enabled.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexBuilder","id":"0:2119:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1994:1606":{"id":"0:1994:1606","crate_id":0,"name":"0","span":{"filename":"src/prog.rs","begin":[283,9],"end":[283,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"InstSave","id":"0:2014:1907","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:12122:37740":{"id":"2:12122:37740","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:1643"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2701:228-0:2240:1663":{"id":"a:2:2701:228-0:2240:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Split","id":"0:2240:1663","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:2:2701:228-0:369:1689":{"id":"a:2:2701:228-0:369:1689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ExecBuilder","id":"0:369:1689","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3319-0:2520:1657":{"id":"b:2:3319-0:2520:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2251-0:2119:3607":{"id":"b:2:2251-0:2119:3607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexBuilder","id":"0:2119:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2216:613":{"id":"0:2216:613","crate_id":0,"name":"eq","span":{"filename":"src/re_bytes.rs","begin":[20,26],"end":[20,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Match","id":"0:2197:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2324:1827":{"id":"0:2324:1827","crate_id":0,"name":"matches","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"public","docs":"Returns the set of regular expressions that match in the given text.\n\nThe set returned contains the index of each regular expression that\nmatches in the given text. The index is in correspondence with the\norder of regular expressions given to `RegexSet`'s constructor.\n\nThe set can also be used to iterate over the matched indices.\n\nNote that as with searches using `Regex`, the expression is unanchored\nby default. That is, if the regex does not start with `^` or `\\A`, or\nend with `$` or `\\z`, then it is permitted to match anywhere in the\ntext.\n\n# Example\n\nTests which regular expressions match the given text:\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[\n    r\"\\w+\",\n    r\"\\d+\",\n    r\"\\pL+\",\n    r\"foo\",\n    r\"bar\",\n    r\"barfoo\",\n    r\"foobar\",\n]).unwrap();\nlet matches: Vec<_> = set.matches(\"foobar\").into_iter().collect();\nassert_eq!(matches, vec![0, 2, 3, 4, 6]);\n\n// You can also test whether a particular regex matched:\nlet matches = set.matches(\"foobar\");\nassert!(!matches.matched(5));\nassert!(matches.matched(6));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"SetMatches","id":"0:2373:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5398:38395":{"id":"5:5398:38395","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7255:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:2035:1694":{"id":"b:2:2553-0:2035:1694","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EmptyLook","id":"0:2035:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2548-0:2231:1653":{"id":"b:2:2548-0:2231:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureMatches","id":"0:2231:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1676:2766":{"id":"0:1676:2766","crate_id":0,"name":"ExecNoSyncStr","span":{"filename":"src/exec.rs","begin":[62,0],"end":[62,45]},"visibility":"public","docs":"`ExecNoSyncStr` is like `ExecNoSync`, but matches on &str instead of &[u8].","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":[]}}},"0:540:1884":{"id":"0:540:1884","crate_id":0,"name":"is_empty_match","span":{"filename":"src/input.rs","begin":[83,4],"end":[83,73]},"visibility":"default","docs":"Return true if the given empty width instruction matches at the\ninput position given.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["at",{"resolved_path":{"name":"InputAt","id":"0:1802:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["empty",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"InstEmptyLook","id":"0:2028:1906","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:3319-0:2231:1653":{"id":"b:2:3319-0:2231:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureMatches","id":"0:2231:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:369:1689":{"id":"0:369:1689","crate_id":0,"name":"ExecBuilder","span":{"filename":"src/exec.rs","begin":[116,0],"end":[121,1]},"visibility":"public","docs":"Facilitates the construction of an executor by exposing various knobs\nto control how a regex is executed and what kinds of resources it's\npermitted to use.","links":{},"attrs":["#[allow(missing_debug_implementations)]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:379","a:2:2684:220-0:369:1689","a:2:8249:3376-0:369:1689","a:2:8250:3375-0:369:1689","a:2:2701:228-0:369:1689","a:2:2741:5045-0:369:1689","b:2:2251-0:369:1689","b:2:2542-0:369:1689","b:2:2248-0:369:1689","b:2:2538-0:369:1689","b:2:2553-0:369:1689","b:2:2548-0:369:1689","b:2:3319-0:369:1689"]}}},"b:2:2251-0:1235:1655":{"id":"b:2:2251-0:1235:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Captures","id":"0:1235:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2464":{"id":"0:2464","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatches","id":"0:2461:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2465:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2701:228-0:2456:3001":{"id":"a:2:2701:228-0:2456:3001","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSet","id":"0:2456:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2537":{"id":"0:2537","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[28,26],"end":[28,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2539:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2251-0:2620:1659":{"id":"b:2:2251-0:2620:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoExpand","id":"0:2620:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:8-0:1120:1651":{"id":"0:8-0:1120:1651","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[667,4],"end":[667,10]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"crate::re_unicode::escape","name":"escape","id":"0:1120:1651","glob":false}}},"b:2:2251-0:2167:3687":{"id":"b:2:2251-0:2167:3687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2167:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2340":{"id":"0:2340","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"SetMatches","id":"0:2373:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"items":["0:2342:3525","0:2343:2120","0:2344:784"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12046:30796":{"id":"2:12046:30796","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:1643"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12131:31140":{"id":"2:12131:31140","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39552:4865","Self::is_ascii":"2:12130:2051"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39552:4865","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:2288:1662":{"id":"b:2:2251-0:2288:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReplacerRef","id":"0:2288:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1667":{"id":"0:1667","crate_id":0,"name":null,"span":{"filename":"src/exec.rs","begin":[34,9],"end":[34,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Exec","id":"0:1664:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1668:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8250:3375-0:2192:3687":{"id":"a:2:8250:3375-0:2192:3687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2192:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1203:2120":{"id":"0:1203:2120","crate_id":0,"name":"Item","span":{"filename":"src/re_unicode.rs","begin":[837,4],"end":[837,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'r","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}}}}},"0:2391:423":{"id":"0:2391:423","crate_id":0,"name":"clone","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SetMatchesIter","id":"0:2385:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2701:228-0:1836:1690":{"id":"a:2:2701:228-0:1836:1690","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:604:694":{"id":"0:604:694","crate_id":0,"name":"from","span":{"filename":"src/input.rs","begin":[395,4],"end":[397,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["c",{"primitive":"char"}]],"output":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5646:1455":{"id":"5:5646:1455","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1006":{"id":"0:1006","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1276,0],"end":[1283,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Replacer","id":"0:1000:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["by_ref","no_expansion"],"trait":{"name":"Replacer","id":"0:1000:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReplacerRef","id":"0:2288:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:1009:3910","0:1010:3907"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1297:953":{"id":"0:1297:953","crate_id":0,"name":"next","span":{"filename":"src/re_unicode.rs","begin":[1228,4],"end":[1234,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Captures","id":"0:1235:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2564:1664":{"id":"0:2564:1664","crate_id":0,"name":"SplitN","span":{"filename":"src/re_unicode.rs","begin":[902,0],"end":[905,1]},"visibility":"public","docs":"Yields at most `N` substrings delimited by a regular expression match.\n\nThe last substring will be whatever remains after splitting.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the string being split.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:2684:220-0:2564:1664","a:2:8249:3376-0:2564:1664","a:2:8250:3375-0:2564:1664","a:2:2701:228-0:2564:1664","a:2:2741:5045-0:2564:1664","b:2:2251-0:2564:1664","b:2:2542-0:2564:1664","b:2:2248-0:2564:1664","b:2:2538-0:2564:1664","b:2:2553-0:2564:1664","b:2:7206-0:2564:1664","b:2:2548-0:2564:1664","b:2:3319-0:2564:1664","0:1227","0:1221","0:2569"]}}},"0:2130:939":{"id":"0:2130:939","crate_id":0,"name":"new","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Create a new regular expression builder with the given pattern.\n\nIf the pattern is invalid, then an error will be returned when\n`build` is called.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["pattern",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"RegexBuilder","id":"0:2142:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2364":{"id":"0:2364","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSet","id":"0:2368:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2365:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:684-0:1650:128":{"id":"b:5:684-0:1650:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:686:3909","5:687:2668","5:688:5579"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:901":{"id":"0:901","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[811,0],"end":[821,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["find_map","is_partitioned","last","fuse","skip_while","size_hint","chain","skip","gt","cloned","__iterator_get_unchecked","min_by","cmp_by","try_find","try_fold","inspect","take_while","intersperse","rev","collect","min_by_key","partial_cmp_by","rposition","ge","try_for_each","try_collect","map_while","intersperse_with","find","next_chunk","lt","sum","max_by","eq_by","unzip","fold","collect_into","scan","by_ref","for_each","cmp","advance_by","eq","position","enumerate","max_by_key","copied","cycle","reduce","count","peekable","partition","flat_map","min","filter","is_sorted","nth","all","take","zip","ne","partial_cmp","is_sorted_by","array_chunks","try_reduce","partition_in_place","max","flatten","any","filter_map","le","step_by","map","is_sorted_by_key","product"],"trait":{"name":"Iterator","id":"2:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureMatches","id":"0:2231:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:904:2120","0:905:953"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3319-0:2070:1696":{"id":"b:2:3319-0:2070:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InstRanges","id":"0:2070:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1015:3907":{"id":"0:1015:3907","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_bytes.rs","begin":[1290,4],"end":[1292,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1811:668":{"id":"0:1811:668","crate_id":0,"name":"fmt","span":{"filename":"src/input.rs","begin":[12,22],"end":[12,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:5045-0:2142:3607":{"id":"a:2:2741:5045-0:2142:3607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexBuilder","id":"0:2142:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:855:3833":{"id":"0:855:3833","crate_id":0,"name":"splitn","span":{"filename":"src/re_bytes.rs","begin":[366,4],"end":[372,5]},"visibility":"public","docs":"Returns an iterator of at most `limit` substrings of `text` delimited\nby a match of the regular expression. (A `limit` of `0` will return no\nsubstrings.) Namely, each element of the iterator corresponds to text\nthat *isn't* matched by the regular expression. The remainder of the\nstring that is not split will be the last element in the iterator.\n\nThis method will *not* copy the text given.\n\n# Example\n\nGet the first two words in some text:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(r\"\\W+\").unwrap();\nlet fields: Vec<&[u8]> = re.splitn(b\"Hey! How are you?\", 3).collect();\nassert_eq!(fields, vec![&b\"Hey\"[..], &b\"How\"[..], &b\"are you?\"[..]]);\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'r","mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["limit",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"SplitN","id":"0:2249:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12036:8867":{"id":"2:12036:8867","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:11888:419"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43333:5024","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1330":{"id":"0:1330","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1348,0],"end":[1356,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["by_ref","no_expansion"],"trait":{"name":"Replacer","id":"0:1311:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1331:3910","0:1332:3907"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2251-0:1988:1695":{"id":"b:2:2251-0:1988:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Inst","id":"0:1988:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2741:5045-0:2602:1658":{"id":"a:2:2741:5045-0:2602:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Matches","id":"0:2602:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8250:3375-0:1988:1695":{"id":"a:2:8250:3375-0:1988:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Inst","id":"0:1988:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12099:37732":{"id":"2:12099:37732","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8250:3375-0:2380:4304":{"id":"a:2:8250:3375-0:2380:4304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIntoIter","id":"0:2380:4304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8249:3376-0:1802:1692":{"id":"a:2:8249:3376-0:1802:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InputAt","id":"0:1802:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2741:5045-0:2222:1658":{"id":"a:2:2741:5045-0:2222:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Matches","id":"0:2222:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2336":{"id":"0:2336","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatches","id":"0:2373:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2337:3525","0:2338:2120","0:2339:784"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3319-0:2222:1658":{"id":"b:2:3319-0:2222:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Matches","id":"0:2222:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2248-0:2611:1662":{"id":"b:2:2248-0:2611:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReplacerRef","id":"0:2611:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2123:668":{"id":"0:2123:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8250:3375-0:2070:1696":{"id":"a:2:8250:3375-0:2070:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InstRanges","id":"0:2070:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2248-0:2564:1664":{"id":"b:2:2248-0:2564:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SplitN","id":"0:2564:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2251-0:2035:1694":{"id":"b:2:2251-0:2035:1694","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EmptyLook","id":"0:2035:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1885:2040":{"id":"0:1885:2040","crate_id":0,"name":"Empty","span":{"filename":"src/literal/imp.rs","begin":[226,4],"end":[226,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2251-0:2580:1665":{"id":"b:2:2251-0:2580:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2580:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2684:220-0:2520:1657":{"id":"a:2:2684:220-0:2520:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2248-0:1969:1697":{"id":"b:2:2248-0:1969:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Program","id":"0:1969:1697","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2110:2855":{"id":"0:2110:2855","crate_id":0,"name":"multi_line","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the value for the multi-line matching (`m`) flag.\n\nWhen enabled, `^` matches the beginning of lines and `$` matches the\nend of lines.\n\nBy default, they match beginning/end of the input.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexBuilder","id":"0:2119:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:958:811":{"id":"0:958:811","crate_id":0,"name":"len","span":{"filename":"src/re_bytes.rs","begin":[1099,4],"end":[1101,5]},"visibility":"public","docs":"Returns the total number of capture groups (even if they didn't match).\n\nThis is always at least `1`, since every regex has at least one capture\ngroup that corresponds to the full match.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:1812:1691":{"id":"a:2:2684:220-0:1812:1691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CharInput","id":"0:1812:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:614":{"id":"0:614","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[427,0],"end":[432,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ge","le","lt","gt"],"trait":{"name":"PartialOrd","id":"2:2354:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"primitive":"char"},"items":["0:615:1035"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2251-0:2197:1657":{"id":"b:2:2251-0:2197:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2197:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2684:220-0:2545:1654":{"id":"a:2:2684:220-0:2545:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2545:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2023:1882":{"id":"0:2023:1882","crate_id":0,"name":"goto2","span":{"filename":"src/prog.rs","begin":[330,4],"end":[330,22]},"visibility":"public","docs":"The second instruction to try. A match resulting from following goto1\nhas precedence over a match resulting from following goto2.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:957:1674":{"id":"0:957:1674","crate_id":0,"name":"expand","span":{"filename":"src/re_bytes.rs","begin":[1090,4],"end":[1092,5]},"visibility":"public","docs":"Expands all instances of `$name` in `replacement` to the corresponding\ncapture group `name`, and writes them to the `dst` buffer given.\n\n`name` may be an integer corresponding to the index of the capture\ngroup (counted by order of opening parenthesis where `0` is the\nentire match) or it can be a name (consisting of letters, digits or\nunderscores) corresponding to a named capture group.\n\nIf `name` isn't a valid capture group (whether the name doesn't exist\nor isn't a valid index), then it is replaced with the empty string.\n\nThe longest possible name consisting of the characters `[_0-9A-Za-z]`\nis used. e.g., `$1a` looks up the capture group named `1a` and not the\ncapture group at index `1`. To exert more precise control over the\nname, or to refer to a capture group name that uses characters outside\nof `[_0-9A-Za-z]`, use braces, e.g., `${1}a` or `${foo[bar].baz}`. When\nusing braces, any sequence of valid UTF-8 bytes is permitted. If the\nsequence does not refer to a capture group name in the corresponding\nregex, then it is replaced with an empty string.\n\nTo write a literal `$` use `$$`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["replacement",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Vec","id":"5:6696:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:2573:1652":{"id":"b:2:2538-0:2573:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureLocations","id":"0:2573:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:684-0:2580:1665":{"id":"b:5:684-0:2580:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2580:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["5:686:3909","5:687:2668","5:688:5579"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5383:38393":{"id":"5:5383:38393","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:280:2104","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7004:5597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:280:2104","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}},{"type":{"resolved_path":{"name":"Global","id":"5:7004:5597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:2268:1652":{"id":"b:2:2538-0:2268:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureLocations","id":"0:2268:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2316":{"id":"0:2316","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"RegexSet","id":"0:2368:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2317:939","0:2320:2850","0:2322:2339","0:2324:1827","0:2326:811","0:2327:1869","0:2328:3688"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2460:423":{"id":"0:2460:423","crate_id":0,"name":"clone","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"RegexSet","id":"0:2456:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:2297:1659":{"id":"b:2:3319-0:2297:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoExpand","id":"0:2297:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1335:3910":{"id":"0:1335:3910","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1359,4],"end":[1361,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["caps",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Captures","id":"0:1235:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2044:2078":{"id":"0:2044:2078","crate_id":0,"name":"WordBoundary","span":{"filename":"src/prog.rs","begin":[355,4],"end":[355,16]},"visibility":"default","docs":"Word character on one side and non-word character on other.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2212":{"id":"0:2212","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[20,26],"end":[20,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2694:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2197:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2479:423":{"id":"0:2479:423","crate_id":0,"name":"clone","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SetMatchesIter","id":"0:2473:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:2380:4304":{"id":"b:2:2248-0:2380:4304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIntoIter","id":"0:2380:4304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:779:784":{"id":"0:779:784","crate_id":0,"name":"into_iter","span":{"filename":"src/prog.rs","begin":[249,4],"end":[251,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:7202:152","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:2593:1653":{"id":"b:2:2553-0:2593:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureMatches","id":"0:2593:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12019:2888":{"id":"2:12019:2888","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11279:2113"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12021:314":{"id":"2:12021:314","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12022:31212","`u8`":"1:11905:1499"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:1988:1695":{"id":"b:2:2542-0:1988:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Inst","id":"0:1988:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2392":{"id":"0:2392","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2385:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2394:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:612":{"id":"0:612","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[420,0],"end":[425,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ge","le","lt","gt"],"trait":{"name":"PartialOrd","id":"2:2354:189","args":{"angle_bracketed":{"args":[{"type":{"primitive":"char"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:613:1035"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2701:228-0:2231:1653":{"id":"a:2:2701:228-0:2231:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureMatches","id":"0:2231:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:2280":{"id":"0:2280","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1198,9],"end":[1198,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2275:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2283:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2741:5045-0:1988:1695":{"id":"a:2:2741:5045-0:1988:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Inst","id":"0:1988:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:861:3903":{"id":"0:861:3903","crate_id":0,"name":"replace_all","span":{"filename":"src/re_bytes.rs","begin":[496,4],"end":[502,5]},"visibility":"public","docs":"Replaces all non-overlapping matches in `text` with the replacement\nprovided. This is the same as calling `replacen` with `limit` set to\n`0`.\n\nSee the documentation for `replace` for details on how to access\ncapturing group matches in the replacement text.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["rep",{"generic":"R"}]],"output":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'t"},{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Replacer","id":"0:1000:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2585":{"id":"0:2585","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1185,9],"end":[1185,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2580:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2588:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2684:220-0:1664:1688":{"id":"a:2:2684:220-0:1664:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Exec","id":"0:1664:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2553-0:2249:1664":{"id":"b:2:2553-0:2249:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SplitN","id":"0:2249:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:760:3505":{"id":"0:760:3505","crate_id":0,"name":"leads_to_match","span":{"filename":"src/prog.rs","begin":[117,4],"end":[128,5]},"visibility":"public","docs":"Return true if and only if an execution engine at instruction `pc` will\nalways lead to a match.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pc",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:949":{"id":"0:949","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1030,0],"end":[1102,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Captures","id":"0:944:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:951:1880","0:953:917","0:955:795","0:957:1674","0:958:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1328:3910":{"id":"0:1328:3910","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1339,4],"end":[1341,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["caps",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Captures","id":"0:1235:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1339:3910":{"id":"0:1339:3910","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1369,4],"end":[1371,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["caps",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Captures","id":"0:1235:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:768":{"id":"0:768","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[174,0],"end":[244,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Program","id":"0:1969:1697","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:769:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2538-0:2380:4304":{"id":"b:2:2538-0:2380:4304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIntoIter","id":"0:2380:4304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1179:2890":{"id":"0:1179:2890","crate_id":0,"name":"is_match_at","span":{"filename":"src/re_unicode.rs","begin":[662,4],"end":[664,5]},"visibility":"public","docs":"Returns the same as is_match, but starts the search at the given\noffset.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["start",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:2620:1659":{"id":"b:2:2553-0:2620:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoExpand","id":"0:2620:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12116:31250":{"id":"2:12116:31250","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:1643"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:5016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8249:3376-0:2468:4304":{"id":"a:2:8249:3376-0:2468:4304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIntoIter","id":"0:2468:4304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5401:32400":{"id":"5:5401:32400","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12133:31143"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:2167:3687":{"id":"b:2:2542-0:2167:3687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2167:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:940":{"id":"0:940","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[982,0],"end":[1011,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"CaptureLocations","id":"0:2268:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:941:1880","0:942:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2378":{"id":"0:2378","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatches","id":"0:2373:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2379:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1193":{"id":"0:1193","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[755,0],"end":[825,1]},"visibility":"default","docs":"Auxiliary methods.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Regex","id":"0:2540:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1194:316","0:1195:3011","0:1196:3961","0:1197:1987","0:1199:3939"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1810":{"id":"0:1810","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[12,22],"end":[12,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InputAt","id":"0:1802:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1811:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12013:37718":{"id":"2:12013:37718","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2529:423":{"id":"0:2529:423","crate_id":0,"name":"clone","span":{"filename":"src/re_unicode.rs","begin":[28,15],"end":[28,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:86:1687":{"id":"0:86:1687","crate_id":0,"name":"Compiler","span":{"filename":"src/compile.rs","begin":[32,0],"end":[52,1]},"visibility":"public","docs":"A compiler translates a regular expression AST to a sequence of\ninstructions. The sequence of instructions represents an NFA.","links":{},"attrs":["#[allow(missing_debug_implementations)]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:96","a:2:2684:220-0:86:1687","a:2:8249:3376-0:86:1687","a:2:8250:3375-0:86:1687","a:2:2701:228-0:86:1687","a:2:2741:5045-0:86:1687","b:2:2251-0:86:1687","b:2:2542-0:86:1687","b:2:2248-0:86:1687","b:2:2538-0:86:1687","b:2:2553-0:86:1687","b:2:2548-0:86:1687","b:2:3319-0:86:1687"]}}},"0:1654:2152":{"id":"0:1654:2152","crate_id":0,"name":"CompiledTooBig","span":{"filename":"src/error.rs","begin":[29,4],"end":[29,25]},"visibility":"default","docs":"The compiled program exceeded the set size\nlimit. The argument is the size limit imposed by\n[`RegexBuilder::size_limit`](crate::RegexBuilder::size_limit). Even\nwhen not configured explicitly, it defaults to a reasonable limit.\n\nIf you're getting this error, it occurred because your regex has been\ncompiled to an intermediate state that is too big. It is important to\nnote that exceeding this limit does _not_ mean the regex is too big to\n_work_, but rather, the regex is big enough that it may wind up being\nsurprisingly slow when used in a search. In other words, this error is\nmeant to be a practical heuristic for avoiding a performance footgun,\nand especially so for the case where the regex pattern is coming from\nan untrusted source.\n\nThere are generally two ways to move forward if you hit this error.\nThe first is to find some way to use a smaller regex. The second is to\nincrease the size limit via `RegexBuilder::size_limit`. However, if\nyour regex pattern is not from a trusted source, then neither of these\napproaches may be appropriate. Instead, you'll have to determine just\nhow big of a regex you want to allow.","links":{"crate::RegexBuilder::size_limit":"0:2139:1921"},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:1656:1606"]},"discriminant":null}}},"0:2137:1626":{"id":"0:2137:1626","crate_id":0,"name":"unicode","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the value for the Unicode (`u`) flag.\n\nEnabled by default. When disabled, character classes such as `\\w` only\nmatch ASCII word characters instead of all Unicode word characters.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexBuilder","id":"0:2142:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2268:1652":{"id":"0:2268:1652","crate_id":0,"name":"CaptureLocations","span":{"filename":"src/re_bytes.rs","begin":[972,0],"end":[972,49]},"visibility":"public","docs":"CaptureLocations is a low level representation of the raw offsets of each\nsubmatch.\n\nYou can think of this as a lower level\n[`Captures`](struct.Captures.html), where this type does not support\nnamed capturing groups directly and it does not borrow the text that these\noffsets were matched on.\n\nPrimarily, this type is useful when using the lower level `Regex` APIs\nsuch as `read_captures`, which permits amortizing the allocation in which\ncapture match locations are stored.\n\nIn order to build a value of this type, you'll need to call the\n`capture_locations` method on the `Regex` being used to execute the search.\nThe value returned can then be reused in subsequent searches.\n\n# Example\n\nThis example shows how to create and use `CaptureLocations` in a search.\n\n```\nuse regex::bytes::Regex;\n\nlet re = Regex::new(r\"(?<first>\\w+)\\s+(?<last>\\w+)\").unwrap();\nlet mut locs = re.capture_locations();\nlet m = re.captures_read(&mut locs, b\"Bruce Springsteen\").unwrap();\nassert_eq!(0..17, m.range());\nassert_eq!(Some((0, 17)), locs.get(0));\nassert_eq!(Some((0, 5)), locs.get(1));\nassert_eq!(Some((6, 17)), locs.get(2));\n\n// Asking for an invalid capture group always returns None.\nassert_eq!(None, locs.get(3));\nassert_eq!(None, locs.get(34973498648));\nassert_eq!(None, locs.get(9944060567225171988));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:940","a:2:2684:220-0:2268:1652","a:2:8249:3376-0:2268:1652","a:2:8250:3375-0:2268:1652","a:2:2701:228-0:2268:1652","a:2:2741:5045-0:2268:1652","b:2:2251-0:2268:1652","b:2:2542-0:2268:1652","b:2:2248-0:2268:1652","b:2:2538-0:2268:1652","b:2:2553-0:2268:1652","b:2:2548-0:2268:1652","b:2:3319-0:2268:1652","b:5:684-0:2268:1652","0:2271","0:2273"]}}},"b:5:684-0:2373:4266":{"id":"b:5:684-0:2373:4266","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatches","id":"0:2373:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:686:3909","5:687:2668","5:688:5579"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1984:1868":{"id":"0:1984:1868","crate_id":0,"name":"prefixes","span":{"filename":"src/prog.rs","begin":[61,4],"end":[61,33]},"visibility":"public","docs":"A possibly empty machine for very quickly matching prefix literals.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"LiteralSearcher","id":"0:1855:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:1121":{"id":"0:1121","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[35,0],"end":[78,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1123:1383","0:1124:609","0:1125:1869","0:1126:811","0:1127:2165","0:1128:316"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1147:3720":{"id":"0:1147:3720","crate_id":0,"name":"from_str","span":{"filename":"src/re_unicode.rs","begin":[185,4],"end":[187,5]},"visibility":"default","docs":"Attempts to parse a string into a regular expression","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Regex","id":"0:2540:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1664:1688":{"id":"0:1664:1688","crate_id":0,"name":"Exec","span":{"filename":"src/exec.rs","begin":[35,0],"end":[47,1]},"visibility":"public","docs":"`Exec` manages the execution of a regular expression.\n\nIn particular, this manages the various compiled forms of a single regular\nexpression and the choice of which matching engine to use to execute a\nregular expression.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:457","a:2:2684:220-0:1664:1688","a:2:8249:3376-0:1664:1688","a:2:8250:3375-0:1664:1688","a:2:2701:228-0:1664:1688","a:2:2741:5045-0:1664:1688","b:2:2251-0:1664:1688","b:2:2542-0:1664:1688","b:2:2248-0:1664:1688","b:2:2538-0:1664:1688","b:2:2553-0:1664:1688","b:2:2548-0:1664:1688","b:2:3319-0:1664:1688","b:5:684-0:1664:1688","0:1667","0:468"]}}},"0:1977:1950":{"id":"0:1977:1950","crate_id":0,"name":"only_utf8","span":{"filename":"src/prog.rs","begin":[43,4],"end":[43,23]},"visibility":"public","docs":"When true, this program can only match valid UTF-8.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"0:459:2996":{"id":"0:459:2996","crate_id":0,"name":"searcher_str","span":{"filename":"src/exec.rs","begin":[1323,4],"end":[1325,5]},"visibility":"public","docs":"Get a searcher that isn't Sync and can match on &str.","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ExecNoSyncStr","id":"0:1676:2766","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2262":{"id":"0:2262","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[909,9],"end":[909,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2258:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["0:2264:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2684:220-0:2461:4266":{"id":"a:2:2684:220-0:2461:4266","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatches","id":"0:2461:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8250:3375-0:2258:1654":{"id":"a:2:8250:3375-0:2258:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2258:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2304":{"id":"0:2304","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1361,16],"end":[1361,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoExpand","id":"0:2297:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2306:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2548-0:2602:1658":{"id":"b:2:2548-0:2602:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Matches","id":"0:2602:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1350:3907":{"id":"0:1350:3907","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1412,4],"end":[1414,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:2620:1659":{"id":"b:2:2542-0:2620:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoExpand","id":"0:2620:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1183:3797":{"id":"0:1183:3797","crate_id":0,"name":"captures_at","span":{"filename":"src/re_unicode.rs","begin":[689,4],"end":[700,5]},"visibility":"public","docs":"Returns the same as [`Regex::captures`], but starts the search at the\ngiven offset.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{"`Regex::captures`":"0:1156:1980"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"primitive":"str"}}}],["start",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Captures","id":"0:1235:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:1855:1693":{"id":"b:2:2553-0:1855:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LiteralSearcher","id":"0:1855:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2007:1887":{"id":"0:2007:1887","crate_id":0,"name":"Bytes","span":{"filename":"src/prog.rs","begin":[299,4],"end":[299,20]},"visibility":"default","docs":"Bytes is like Ranges, except it expresses a single byte range. It is\nused in conjunction with Split instructions to implement multi-byte\ncharacter classes.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:2009:1606"]},"discriminant":null}}},"a:2:8249:3376-0:2222:1658":{"id":"a:2:8249:3376-0:2222:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Matches","id":"0:2222:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:7206-0:2385:4303":{"id":"b:2:7206-0:2385:4303","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2385:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:7208:2120","2:7209:3525","2:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"2:12081:37727":{"id":"2:12081:37727","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:1812:1691":{"id":"b:2:2553-0:1812:1691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CharInput","id":"0:1812:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2538-0:2167:3687":{"id":"b:2:2538-0:2167:3687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2167:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:649:1869":{"id":"0:649:1869","crate_id":0,"name":"is_empty","span":{"filename":"src/literal/imp.rs","begin":[141,4],"end":[143,5]},"visibility":"public","docs":"Returns true iff this prefix is empty.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:898":{"id":"0:898","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[797,0],"end":[797,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7588:3693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Matches","id":"0:2222:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2167:3687":{"id":"0:2167:3687","crate_id":0,"name":"RegexSetBuilder","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"A configurable builder for a set of regular expressions.\n\nA builder can be used to configure how the regexes are built, for example,\nby setting the default flags (which can be overridden in the expression\nitself) or setting various limits.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:2152","a:2:2684:220-0:2167:3687","a:2:8249:3376-0:2167:3687","a:2:8250:3375-0:2167:3687","a:2:2701:228-0:2167:3687","a:2:2741:5045-0:2167:3687","b:2:2251-0:2167:3687","b:2:2542-0:2167:3687","b:2:2248-0:2167:3687","b:2:2538-0:2167:3687","b:2:2553-0:2167:3687","b:2:2548-0:2167:3687","b:2:3319-0:2167:3687","0:2170"]}}},"a:2:2701:228-0:2602:1658":{"id":"a:2:2701:228-0:2602:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Matches","id":"0:2602:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:2394:668":{"id":"0:2394:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:542:811":{"id":"0:542:811","crate_id":0,"name":"len","span":{"filename":"src/input.rs","begin":[93,4],"end":[93,27]},"visibility":"default","docs":"The number of bytes in the input.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:3319-0:1855:1693":{"id":"b:2:3319-0:1855:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LiteralSearcher","id":"0:1855:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8250:3375-0:1836:1690":{"id":"a:2:8250:3375-0:1836:1690","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:935":{"id":"0:935","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[931,0],"end":[931,50]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:7263:4010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2258:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:982":{"id":"0:982","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1179,0],"end":[1187,1]},"visibility":"default","docs":"Get a group by name.\n\n`'t` is the lifetime of the matched text and `'i` is the lifetime\nof the group name (the index).\n\nThe text can't outlive the `Captures` object if this method is\nused, because of how `Index` is defined (normally `a[i]` is part\nof `a` and can't outlive it); to do that, use `name` instead.\n\n# Panics\n\nIf there is no group named by the given value.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"'i","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"2:2981:3694","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'i","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Captures","id":"0:944:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:985:186","0:986:769"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5382":{"id":"5:5382","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5383:38393","5:5384:2547","5:5387:3897","5:5390:38394","5:5398:38395","5:5399:38396","5:5400:2137","5:5401:32400","5:5402:32401"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:645:2942":{"id":"0:645:2942","crate_id":0,"name":"find_end","span":{"filename":"src/literal/imp.rs","begin":[107,4],"end":[117,5]},"visibility":"public","docs":"Like find, except matches must end at index `haystack.len()`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["haystack",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"primitive":"usize"},{"primitive":"usize"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:687:2668":{"id":"5:687:2668","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2131:2860":{"id":"0:2131:2860","crate_id":0,"name":"build","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Consume the builder and compile the regular expression.\n\nNote that calling `as_str` on the resulting `Regex` will produce the\npattern given to `new` verbatim. Notably, it will not incorporate any\nof the flags set on this builder.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Regex","id":"0:2540:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:818:609":{"id":"0:818:609","crate_id":0,"name":"end","span":{"filename":"src/re_bytes.rs","begin":[36,4],"end":[38,5]},"visibility":"public","docs":"Returns the ending byte offset of the match in the haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2204":{"id":"0:2204","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[20,15],"end":[20,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2197:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2206:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:386:2826":{"id":"0:386:2826","crate_id":0,"name":"automatic","span":{"filename":"src/exec.rs","begin":[174,4],"end":[177,5]},"visibility":"public","docs":"Set the matching engine to be automatically determined.\n\nThis is the default state and will apply whatever optimizations are\npossible, such as running a DFA.\n\nThis overrides whatever was previously set via the `nfa` or\n`bounded_backtracking` methods.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2046:2080":{"id":"0:2046:2080","crate_id":0,"name":"NotWordBoundary","span":{"filename":"src/prog.rs","begin":[357,4],"end":[357,19]},"visibility":"default","docs":"Word character on both sides or non-word character on both sides.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2186:2858":{"id":"0:2186:2858","crate_id":0,"name":"ignore_whitespace","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the value for the ignore whitespace (`x`) flag.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2192:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1971:1827":{"id":"0:1971:1827","crate_id":0,"name":"matches","span":{"filename":"src/prog.rs","begin":[24,4],"end":[24,29]},"visibility":"public","docs":"Pointers to each Match instruction in the sequence.\n\nThis is always length 1 unless this program represents a regex set.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Vec","id":"5:6696:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}},"0:2075":{"id":"0:2075","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[375,16],"end":[375,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InstRanges","id":"0:2070:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2076:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2542-0:2217:1660":{"id":"b:2:2542-0:2217:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Regex","id":"0:2217:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1816":{"id":"0:1816","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[139,9],"end":[139,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CharInput","id":"0:1812:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1818:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2248-0:2142:3607":{"id":"b:2:2248-0:2142:3607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexBuilder","id":"0:2142:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1014:3910":{"id":"0:1014:3910","crate_id":0,"name":"replace_append","span":{"filename":"src/re_bytes.rs","begin":[1286,4],"end":[1288,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["caps",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Captures","id":"0:944:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Vec","id":"5:6696:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8249:3376-0:2240:1663":{"id":"a:2:8249:3376-0:2240:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Split","id":"0:2240:1663","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2412:1827":{"id":"0:2412:1827","crate_id":0,"name":"matches","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"public","docs":"Returns the set of regular expressions that match in the given text.\n\nThe set returned contains the index of each regular expression that\nmatches in the given text. The index is in correspondence with the\norder of regular expressions given to `RegexSet`'s constructor.\n\nThe set can also be used to iterate over the matched indices.\n\nNote that as with searches using `Regex`, the expression is unanchored\nby default. That is, if the regex does not start with `^` or `\\A`, or\nend with `$` or `\\z`, then it is permitted to match anywhere in the\ntext.\n\n# Example\n\nTests which regular expressions match the given text:\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[\n    r\"\\w+\",\n    r\"\\d+\",\n    r\"\\pL+\",\n    r\"foo\",\n    r\"bar\",\n    r\"barfoo\",\n    r\"foobar\",\n]).unwrap();\nlet matches: Vec<_> = set.matches(\"foobar\").into_iter().collect();\nassert_eq!(matches, vec![0, 2, 3, 4, 6]);\n\n// You can also test whether a particular regex matched:\nlet matches = set.matches(\"foobar\");\nassert!(!matches.matched(5));\nassert!(matches.matched(6));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"SetMatches","id":"0:2461:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:562":{"id":"0:562","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[157,0],"end":[222,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["is_empty"],"trait":{"name":"Input","id":"0:536:148","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CharInput","id":"0:1812:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:564:1844","0:566:3220","0:567:3222","0:569:1884","0:571:1870","0:573:811","0:574:2888"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2014:1907":{"id":"0:2014:1907","crate_id":0,"name":"InstSave","span":{"filename":"src/prog.rs","begin":[314,0],"end":[320,1]},"visibility":"public","docs":"Representation of the Save instruction.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:2015:1881","0:2016:1846"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":[]}}},"b:2:2251-0:1836:1690":{"id":"b:2:2251-0:1836:1690","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2077:1904":{"id":"0:2077:1904","crate_id":0,"name":"InstBytes","span":{"filename":"src/prog.rs","begin":[423,0],"end":[431,1]},"visibility":"public","docs":"Representation of the Bytes instruction.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:2078:1881","0:2079:1383","0:2080:609"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":[]}}},"0:2425:3525":{"id":"0:2425:3525","crate_id":0,"name":"IntoIter","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"SetMatchesIntoIter","id":"0:2468:4304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1180:2891":{"id":"0:1180:2891","crate_id":0,"name":"find_at","span":{"filename":"src/re_unicode.rs","begin":[672,4],"end":[681,5]},"visibility":"public","docs":"Returns the same as find, but starts the search at the given\noffset.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"primitive":"str"}}}],["start",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1650:128":{"id":"0:1650:128","crate_id":0,"name":"Error","span":{"filename":"src/error.rs","begin":[6,0],"end":[37,1]},"visibility":"public","docs":"An error that occurred during parsing or compiling a regular expression.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":true,"variants":["0:1651:2067","0:1654:2152"],"impls":["a:2:2684:220-0:1650:128","a:2:8249:3376-0:1650:128","a:2:8250:3375-0:1650:128","a:2:2701:228-0:1650:128","a:2:2741:5045-0:1650:128","b:2:2251-0:1650:128","b:2:2542-0:1650:128","b:2:2248-0:1650:128","b:2:2538-0:1650:128","b:2:2553-0:1650:128","b:2:2610-0:1650:128","b:2:2548-0:1650:128","b:2:3319-0:1650:128","b:5:684-0:1650:128","b:5:5644-0:1650:128","0:328","0:1661","0:1659","0:1662","0:330","0:332"]}}},"0:2544:423":{"id":"0:2544:423","crate_id":0,"name":"clone","span":{"filename":"src/re_unicode.rs","begin":[157,9],"end":[157,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Regex","id":"0:2540:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8249:3376-0:1664:1688":{"id":"a:2:8249:3376-0:1664:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Exec","id":"0:1664:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2548-0:2192:3687":{"id":"b:2:2548-0:2192:3687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2192:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8250:3375-0:2545:1654":{"id":"a:2:8250:3375-0:2545:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2545:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2701:228-0:2564:1664":{"id":"a:2:2701:228-0:2564:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SplitN","id":"0:2564:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:2:2741:5045-0:2564:1664":{"id":"a:2:2741:5045-0:2564:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SplitN","id":"0:2564:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2684:220-0:2468:4304":{"id":"a:2:2684:220-0:2468:4304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIntoIter","id":"0:2468:4304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1264":{"id":"0:1264","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1144,0],"end":[1152,1]},"visibility":"default","docs":"Get a group by index.\n\n`'t` is the lifetime of the matched text.\n\nThe text can't outlive the `Captures` object if this method is\nused, because of how `Index` is defined (normally `a[i]` is part\nof `a` and can't outlive it); to do that, use `get()` instead.\n\n# Panics\n\nIf there is no group at the given index.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"2:2981:3694","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Captures","id":"0:1235:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1266:186","0:1267:769"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2542-0:1969:1697":{"id":"b:2:2542-0:1969:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Program","id":"0:1969:1697","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2542-0:2545:1654":{"id":"b:2:2542-0:2545:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2545:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2248-0:2580:1665":{"id":"b:2:2248-0:2580:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2580:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2548-0:2580:1665":{"id":"b:2:2548-0:2580:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2580:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:684-0:2540:1660":{"id":"b:5:684-0:2540:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Regex","id":"0:2540:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:686:3909","5:687:2668","5:688:5579"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2239:668":{"id":"0:2239:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[806,9],"end":[806,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:1812:1691":{"id":"b:2:3319-0:1812:1691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CharInput","id":"0:1812:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2741:5045-0:2573:1652":{"id":"a:2:2741:5045-0:2573:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureLocations","id":"0:2573:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1862":{"id":"0:1862","crate_id":0,"name":null,"span":{"filename":"src/literal/imp.rs","begin":[12,16],"end":[12,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LiteralSearcher","id":"0:1855:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1863:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2684:220-0:2380:4304":{"id":"a:2:2684:220-0:2380:4304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIntoIter","id":"0:2380:4304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2553-0:2564:1664":{"id":"b:2:2553-0:2564:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SplitN","id":"0:2564:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2553-0:1969:1697":{"id":"b:2:2553-0:1969:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Program","id":"0:1969:1697","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:684-0:2461:4266":{"id":"b:5:684-0:2461:4266","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatches","id":"0:2461:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:686:3909","5:687:2668","5:688:5579"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:462:3003":{"id":"0:462:3003","crate_id":0,"name":"into_byte_regex","span":{"filename":"src/exec.rs","begin":[1338,4],"end":[1340,5]},"visibility":"public","docs":"Build a Regex from this executor that can match arbitrary bytes.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"re_bytes::Regex","id":"0:2217:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1033":{"id":"0:1033","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1343,0],"end":[1351,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:2929:2344","args":{"parenthesized":{"inputs":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Captures","id":"0:944:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],"output":{"generic":"T"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2506:75","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["by_ref","no_expansion"],"trait":{"name":"Replacer","id":"0:1000:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"generic":"F"},"items":["0:1036:3910"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2251-0:2070:1696":{"id":"b:2:2251-0:2070:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InstRanges","id":"0:2070:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2548-0:2288:1662":{"id":"b:2:2548-0:2288:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReplacerRef","id":"0:2288:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2055":{"id":"0:2055","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[344,22],"end":[344,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EmptyLook","id":"0:2035:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2056:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2057":{"id":"0:2057","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[344,29],"end":[344,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2694:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EmptyLook","id":"0:2035:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:870:2890":{"id":"0:870:2890","crate_id":0,"name":"is_match_at","span":{"filename":"src/re_bytes.rs","begin":[612,4],"end":[614,5]},"visibility":"public","docs":"Returns the same as is_match, but starts the search at the given\noffset.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["start",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:684-0:2217:1660":{"id":"b:5:684-0:2217:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Regex","id":"0:2217:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:686:3909","5:687:2668","5:688:5579"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2426:2120":{"id":"0:2426:2120","crate_id":0,"name":"Item","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"usize"}}}},"b:2:2542-0:1235:1655":{"id":"b:2:2542-0:1235:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Captures","id":"0:1235:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2701:228-0:2268:1652":{"id":"a:2:2701:228-0:2268:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureLocations","id":"0:2268:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2162:1626":{"id":"0:2162:1626","crate_id":0,"name":"unicode","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the value for the Unicode (`u`) flag.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2167:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2124:1626":{"id":"0:2124:1626","crate_id":0,"name":"unicode","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:2142:3607"],"is_stripped":false}}},"0:2254":{"id":"0:2254","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[867,9],"end":[867,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SplitN","id":"0:2249:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2257:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1889:1606":{"id":"0:1889:1606","crate_id":0,"name":"0","span":{"filename":"src/literal/imp.rs","begin":[227,10],"end":[227,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"primitive":"u8"}}}}}},"0:1037":{"id":"0:1037","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1364,0],"end":[1372,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["by_ref","no_expansion"],"trait":{"name":"Replacer","id":"0:1000:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoExpand","id":"0:2297:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1039:3910","0:1040:3907"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2548-0:2385:4303":{"id":"b:2:2548-0:2385:4303","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2385:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2272:423":{"id":"0:2272:423","crate_id":0,"name":"clone","span":{"filename":"src/re_bytes.rs","begin":[971,9],"end":[971,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CaptureLocations","id":"0:2268:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1296:2120":{"id":"0:1296:2120","crate_id":0,"name":"Item","span":{"filename":"src/re_unicode.rs","begin":[1226,4],"end":[1226,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Captures","id":"0:1235:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}}},"b:2:3319-0:2602:1658":{"id":"b:2:3319-0:2602:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Matches","id":"0:2602:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1836:1690":{"id":"0:1836:1690","crate_id":0,"name":"Char","span":{"filename":"src/input.rs","begin":[346,0],"end":[346,21]},"visibility":"public","docs":"An inline representation of `Option<char>`.\n\nThis eliminates the need to do case analysis on `Option<char>` to determine\nordinality with other characters.\n\n(The `Option<char>` is not related to encoding. Instead, it is used in the\nmatching engines to represent the beginning and ending boundaries of the\nsearch text.)","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:597","a:2:2684:220-0:1836:1690","a:2:8249:3376-0:1836:1690","a:2:8250:3375-0:1836:1690","a:2:2701:228-0:1836:1690","a:2:2741:5045-0:1836:1690","b:2:2251-0:1836:1690","b:2:2542-0:1836:1690","b:2:2248-0:1836:1690","b:2:2538-0:1836:1690","b:2:2553-0:1836:1690","b:2:2548-0:1836:1690","b:2:3319-0:1836:1690","b:5:684-0:1836:1690","0:1842","0:1848","0:1845","0:605","0:1851","0:614","0:1849","0:595","0:603","0:1841","0:1846","0:612","0:608","0:610","0:1853","0:1839"]}}},"0:1848":{"id":"0:1848","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[345,39],"end":[345,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2695:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1656:1606":{"id":"0:1656:1606","crate_id":0,"name":"0","span":{"filename":"src/error.rs","begin":[29,19],"end":[29,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"b:2:2251-0:2268:1652":{"id":"b:2:2251-0:2268:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureLocations","id":"0:2268:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1178:2889":{"id":"0:1178:2889","crate_id":0,"name":"shortest_match_at","span":{"filename":"src/re_unicode.rs","begin":[648,4],"end":[654,5]},"visibility":"public","docs":"Returns the same as `shortest_match`, but starts the search at the\ngiven offset.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only match\nwhen `start == 0`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["start",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1145":{"id":"0:1145","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[181,0],"end":[188,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:11672:3695","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Regex","id":"0:2540:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1146:127","0:1147:3720"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2251-0:2222:1658":{"id":"b:2:2251-0:2222:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Matches","id":"0:2222:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:933:4005":{"id":"0:933:4005","crate_id":0,"name":"size_hint","span":{"filename":"src/re_bytes.rs","begin":[922,4],"end":[924,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:2555:1663":{"id":"b:2:3319-0:2555:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Split","id":"0:2555:1663","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2553-0:1235:1655":{"id":"b:2:2553-0:1235:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Captures","id":"0:1235:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1302":{"id":"0:1302","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1249,0],"end":[1256,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["find_map","is_partitioned","last","fuse","skip_while","size_hint","chain","skip","gt","cloned","__iterator_get_unchecked","min_by","cmp_by","try_find","try_fold","inspect","take_while","intersperse","rev","collect","min_by_key","partial_cmp_by","rposition","ge","try_for_each","try_collect","map_while","intersperse_with","find","next_chunk","lt","sum","max_by","eq_by","unzip","fold","collect_into","scan","by_ref","for_each","cmp","advance_by","eq","position","enumerate","max_by_key","copied","cycle","reduce","count","peekable","partition","flat_map","min","filter","is_sorted","nth","all","take","zip","ne","partial_cmp","is_sorted_by","array_chunks","try_reduce","partition_in_place","max","flatten","any","filter_map","le","step_by","map","is_sorted_by_key","product"],"trait":{"name":"Iterator","id":"2:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Matches","id":"0:2602:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1305:2120","0:1306:953"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2701:228-0:1664:1688":{"id":"a:2:2701:228-0:1664:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Exec","id":"0:1664:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2248-0:2119:3607":{"id":"b:2:2248-0:2119:3607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexBuilder","id":"0:2119:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2548-0:2368:3001":{"id":"b:2:2548-0:2368:3001","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSet","id":"0:2368:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2542-0:2461:4266":{"id":"b:2:2542-0:2461:4266","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatches","id":"0:2461:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:464:3008":{"id":"0:464:3008","crate_id":0,"name":"regex_strings","span":{"filename":"src/exec.rs","begin":[1349,4],"end":[1351,5]},"visibility":"public","docs":"The original regular expressions given by the caller that were\ncompiled.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2283:423":{"id":"0:2283:423","crate_id":0,"name":"clone","span":{"filename":"src/re_bytes.rs","begin":[1198,9],"end":[1198,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2275:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:387:2775":{"id":"0:387:2775","crate_id":0,"name":"nfa","span":{"filename":"src/exec.rs","begin":[184,4],"end":[187,5]},"visibility":"public","docs":"Sets the matching engine to use the NFA algorithm no matter what\noptimizations are possible.\n\nThis overrides whatever was previously set via the `automatic` or\n`bounded_backtracking` methods.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2418:60":{"id":"0:2418:60","crate_id":0,"name":"default","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1285:4005":{"id":"0:1285:4005","crate_id":0,"name":"size_hint","span":{"filename":"src/re_unicode.rs","begin":[1200,4],"end":[1202,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:2611:1662":{"id":"b:2:2548-0:2611:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReplacerRef","id":"0:2611:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2542-0:2468:4304":{"id":"b:2:2542-0:2468:4304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIntoIter","id":"0:2468:4304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2248-0:2620:1659":{"id":"b:2:2248-0:2620:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoExpand","id":"0:2620:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:20-0:2555:1663":{"id":"0:20-0:2555:1663","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[668,71],"end":[668,76]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"crate::re_unicode::Split","name":"Split","id":"0:2555:1663","glob":false}}},"2:12110:37738":{"id":"2:12110:37738","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:1643"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:2385:4303":{"id":"b:2:2251-0:2385:4303","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2385:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:611:613":{"id":"0:611:613","crate_id":0,"name":"eq","span":{"filename":"src/input.rs","begin":[415,4],"end":[417,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:2217:1660":{"id":"b:2:2538-0:2217:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Regex","id":"0:2217:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2556:128":{"id":"2:2556:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32020:9873","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:379":{"id":"0:379","crate_id":0,"name":null,"span":{"filename":"src/exec.rs","begin":[132,0],"end":[433,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ExecBuilder","id":"0:369:1689","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:380:939","0:381:2812","0:385:2820","0:386:2826","0:387:2775","0:388:2838","0:389:1667","0:390:1950","0:391:1626","0:396:2860"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8250:3375-0:2217:1660":{"id":"a:2:8250:3375-0:2217:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Regex","id":"0:2217:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8250:3375-0:2555:1663":{"id":"a:2:8250:3375-0:2555:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Split","id":"0:2555:1663","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2701:228-0:2620:1659":{"id":"a:2:2701:228-0:2620:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoExpand","id":"0:2620:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8250:3375-0:1812:1691":{"id":"a:2:8250:3375-0:1812:1691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CharInput","id":"0:1812:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:979:769":{"id":"0:979:769","crate_id":0,"name":"index","span":{"filename":"src/re_bytes.rs","begin":[1160,4],"end":[1164,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12032:37723":{"id":"2:12032:37723","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:11894:1397","crate::ops::IndexMut":"2:2985:5000","str::slice_unchecked":"2:12031:37722"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:782":{"id":"0:782","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[384,0],"end":[419,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"InstRanges","id":"0:2070:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:783:1827","0:785:3592"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2328:3688":{"id":"0:2328:3688","crate_id":0,"name":"patterns","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"public","docs":"Returns the patterns that this set will match on.\n\nThis function can be used to determine the pattern for a match. The\nslice returned has exactly as many patterns givens to this regex set,\nand the order of the slice is the same as the order of the patterns\nprovided to the set.\n\n# Example\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[\n    r\"\\w+\",\n    r\"\\d+\",\n    r\"\\pL+\",\n    r\"foo\",\n    r\"bar\",\n    r\"barfoo\",\n    r\"foobar\",\n]).unwrap();\nlet matches: Vec<_> = set\n    .matches(\"foobar\")\n    .into_iter()\n    .map(|match_idx| &set.patterns()[match_idx])\n    .collect();\nassert_eq!(matches, vec![r\"\\w+\", r\"\\pL+\", r\"foo\", r\"bar\", r\"foobar\"]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2133:2855":{"id":"0:2133:2855","crate_id":0,"name":"multi_line","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the value for the multi-line matching (`m`) flag.\n\nWhen enabled, `^` matches the beginning of lines and `$` matches the\nend of lines.\n\nBy default, they match beginning/end of the input.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexBuilder","id":"0:2142:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:17-0:2540:1660":{"id":"0:17-0:2540:1660","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[668,41],"end":[668,46]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"crate::re_unicode::Regex","name":"Regex","id":"0:2540:1660","glob":false}}},"0:552:1870":{"id":"0:552:1870","crate_id":0,"name":"prefix_at","span":{"filename":"src/input.rs","begin":[121,4],"end":[127,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["prefixes",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"LiteralSearcher","id":"0:1855:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["at",{"resolved_path":{"name":"InputAt","id":"0:1802:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"InputAt","id":"0:1802:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:595":{"id":"0:595","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[348,0],"end":[355,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:596:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2303:423":{"id":"0:2303:423","crate_id":0,"name":"clone","span":{"filename":"src/re_bytes.rs","begin":[1361,9],"end":[1361,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"NoExpand","id":"0:2297:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2472:668":{"id":"0:2472:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:2545:1654":{"id":"b:2:2548-0:2545:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2545:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2348:4005":{"id":"0:2348:4005","crate_id":0,"name":"size_hint","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:684-0:1855:1693":{"id":"b:5:684-0:1855:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LiteralSearcher","id":"0:1855:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:686:3909","5:687:2668","5:688:5579"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2548-0:2240:1663":{"id":"b:2:2548-0:2240:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Split","id":"0:2240:1663","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2248-0:1812:1691":{"id":"b:2:2248-0:1812:1691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CharInput","id":"0:1812:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2741:5045-0:2288:1662":{"id":"a:2:2741:5045-0:2288:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReplacerRef","id":"0:2288:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2553-0:2456:3001":{"id":"b:2:2553-0:2456:3001","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSet","id":"0:2456:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2306:668":{"id":"0:2306:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[1361,16],"end":[1361,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2453:668":{"id":"0:2453:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:839":{"id":"0:839","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[144,0],"end":[556,1]},"visibility":"default","docs":"Core regular expression methods.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Regex","id":"0:2217:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:840:939","0:841:2339","0:842:2599","0:844:3757","0:847:1980","0:849:3813","0:852:1992","0:855:3833","0:858:2547","0:861:3903","0:864:3897"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2545:1654":{"id":"0:2545:1654","crate_id":0,"name":"CaptureNames","span":{"filename":"src/re_unicode.rs","begin":[834,0],"end":[834,68]},"visibility":"public","docs":"An iterator over the names of all possible captures.\n\n`None` indicates an unnamed capture; the first element (capture 0, the\nwhole matched region) is always unnamed.\n\n`'r` is the lifetime of the compiled regular expression.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:2684:220-0:2545:1654","a:2:8249:3376-0:2545:1654","a:2:8250:3375-0:2545:1654","a:2:2701:228-0:2545:1654","a:2:2741:5045-0:2545:1654","b:2:2251-0:2545:1654","b:2:2542-0:2545:1654","b:2:2248-0:2545:1654","b:2:2538-0:2545:1654","b:2:2553-0:2545:1654","b:2:7206-0:2545:1654","b:2:2548-0:2545:1654","b:2:3319-0:2545:1654","b:5:684-0:2545:1654","0:2549","0:2552","0:1211","0:1201","0:1209"]}}},"0:537:1844":{"id":"0:537:1844","crate_id":0,"name":"at","span":{"filename":"src/input.rs","begin":[69,4],"end":[69,38]},"visibility":"default","docs":"Return an encoding of the position at byte offset `i`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"InputAt","id":"0:1802:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:1027":{"id":"0:1027","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1325,0],"end":[1333,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["by_ref","no_expansion"],"trait":{"name":"Replacer","id":"0:1000:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}}}},"items":["0:1029:3910","0:1030:3907"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2339:784":{"id":"0:2339:784","crate_id":0,"name":"into_iter","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:7202:152","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:5045-0:2385:4303":{"id":"a:2:2741:5045-0:2385:4303","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2385:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2601:668":{"id":"0:2601:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[1220,9],"end":[1220,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2442:2120":{"id":"0:2442:2120","crate_id":0,"name":"Item","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"usize"}}}},"0:2539:613":{"id":"0:2539:613","crate_id":0,"name":"eq","span":{"filename":"src/re_unicode.rs","begin":[28,26],"end":[28,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:2555:1663":{"id":"b:2:2248-0:2555:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Split","id":"0:2555:1663","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:608":{"id":"0:608","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[406,0],"end":[411,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"primitive":"char"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:609:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2741:5045-0:2297:1659":{"id":"a:2:2741:5045-0:2297:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoExpand","id":"0:2297:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2333:1867":{"id":"0:2333:1867","crate_id":0,"name":"matched","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"public","docs":"Whether the regex at the given index matched.\n\nThe index for a regex is determined by its insertion order upon the\ninitial construction of a `RegexSet`, starting at `0`.\n\n# Panics\n\nIf `regex_index` is greater than or equal to `self.len()`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["regex_index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1997:1606":{"id":"0:1997:1606","crate_id":0,"name":"0","span":{"filename":"src/prog.rs","begin":[286,10],"end":[286,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"InstSplit","id":"0:2021:1908","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:2249:1664":{"id":"0:2249:1664","crate_id":0,"name":"SplitN","span":{"filename":"src/re_bytes.rs","begin":[868,0],"end":[871,1]},"visibility":"public","docs":"Yields at most `N` substrings delimited by a regular expression match.\n\nThe last substring will be whatever remains after splitting.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the byte string being split.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:2684:220-0:2249:1664","a:2:8249:3376-0:2249:1664","a:2:8250:3375-0:2249:1664","a:2:2701:228-0:2249:1664","a:2:2741:5045-0:2249:1664","b:2:2251-0:2249:1664","b:2:2542-0:2249:1664","b:2:2248-0:2249:1664","b:2:2538-0:2249:1664","b:2:2553-0:2249:1664","b:2:7206-0:2249:1664","b:2:2548-0:2249:1664","b:2:3319-0:2249:1664","0:2254","0:918","0:924"]}}},"b:2:2538-0:2373:4266":{"id":"b:2:2538-0:2373:4266","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatches","id":"0:2373:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2572:668":{"id":"0:2572:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[901,9],"end":[901,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1207:4005":{"id":"0:1207:4005","crate_id":0,"name":"size_hint","span":{"filename":"src/re_unicode.rs","begin":[846,4],"end":[848,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:1855:1693":{"id":"b:2:2542-0:1855:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LiteralSearcher","id":"0:1855:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8250:3375-0:1650:128":{"id":"a:2:8250:3375-0:1650:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8250:3375-0:1802:1692":{"id":"a:2:8250:3375-0:1802:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InputAt","id":"0:1802:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2164:1921":{"id":"0:2164:1921","crate_id":0,"name":"size_limit","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the approximate size limit of the compiled regular expression.\n\nThis roughly corresponds to the number of bytes occupied by a single\ncompiled program. If the program exceeds this number, then a\ncompilation error is returned.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["limit",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2167:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:5045-0:2192:3687":{"id":"a:2:2741:5045-0:2192:3687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2192:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:849:3813":{"id":"0:849:3813","crate_id":0,"name":"captures_iter","span":{"filename":"src/re_bytes.rs","begin":[315,4],"end":[320,5]},"visibility":"public","docs":"Returns an iterator over all the non-overlapping capture groups matched\nin `text`. This is operationally the same as `find_iter`, except it\nyields information about capturing group matches.\n\n# Example\n\nWe can use this to find all movie titles and their release years in\nsome text, where the movie is formatted like \"'Title' (xxxx)\":\n\n```rust\n# use std::str; use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(r\"'(?P<title>[^']+)'\\s+\\((?P<year>\\d{4})\\)\")\n               .unwrap();\nlet text = b\"'Citizen Kane' (1941), 'The Wizard of Oz' (1939), 'M' (1931).\";\nfor caps in re.captures_iter(text) {\n    let title = str::from_utf8(&caps[\"title\"]).unwrap();\n    let year = str::from_utf8(&caps[\"year\"]).unwrap();\n    println!(\"Movie: {:?}, Released: {:?}\", title, year);\n}\n// Output:\n// Movie: Citizen Kane, Released: 1941\n// Movie: The Wizard of Oz, Released: 1939\n// Movie: M, Released: 1931\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'r","mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"CaptureMatches","id":"0:2231:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1669:2762":{"id":"0:1669:2762","crate_id":0,"name":"ExecNoSync","span":{"filename":"src/exec.rs","begin":[53,0],"end":[58,1]},"visibility":"public","docs":"`ExecNoSync` is like `Exec`, except it embeds a reference to a cache. This\nmeans it is no longer Sync, but we can now avoid the overhead of\nsynchronization to fetch the cache.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":[]}}},"0:330":{"id":"0:330","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[51,0],"end":[63,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9147:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:331:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2538-0:2275:1665":{"id":"b:2:2538-0:2275:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2275:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2337:3525":{"id":"0:2337:3525","crate_id":0,"name":"IntoIter","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"SetMatchesIntoIter","id":"0:2380:4304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:2542-0:2380:4304":{"id":"b:2:2542-0:2380:4304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIntoIter","id":"0:2380:4304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1070:2892":{"id":"0:1070:2892","crate_id":0,"name":"captures_read_at","span":{"filename":"src/re_trait.rs","begin":[143,4],"end":[148,32]},"visibility":"default","docs":"Returns the leftmost-first match location if one exists, and also\nfills in any matching capture slot locations.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["locs",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Locations","id":"0:2483:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Text","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:1062:2743","args":null}}}}}],["start",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"primitive":"usize"},{"primitive":"usize"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:558":{"id":"0:558","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[149,0],"end":[155,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:2898:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CharInput","id":"0:1812:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:560:230","0:561:552"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2701:228-0:1812:1691":{"id":"a:2:2701:228-0:1812:1691","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CharInput","id":"0:1812:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2422:811":{"id":"0:2422:811","crate_id":0,"name":"len","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"public","docs":"The total number of regexes in the set that created these matches.\n\n**WARNING:** This always returns the same value as [`RegexSet::len`].\nIn particular, it does *not* return the number of elements yielded by\n[`SetMatches::iter`]. The only way to determine the total number of\nmatched regexes is to iterate over them.","links":{"`SetMatches::iter`":"0:2423:795","`RegexSet::len`":"0:2414:811"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2119:3607":{"id":"0:2119:3607","crate_id":0,"name":"RegexBuilder","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"A configurable builder for a regular expression.\n\nA builder can be used to configure how the regex is built, for example, by\nsetting the default flags (which can be overridden in the expression\nitself) or setting various limits.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:2106","a:2:2684:220-0:2119:3607","a:2:8249:3376-0:2119:3607","a:2:8250:3375-0:2119:3607","a:2:2701:228-0:2119:3607","a:2:2741:5045-0:2119:3607","b:2:2251-0:2119:3607","b:2:2542-0:2119:3607","b:2:2248-0:2119:3607","b:2:2538-0:2119:3607","b:2:2553-0:2119:3607","b:2:2548-0:2119:3607","b:2:3319-0:2119:3607","0:2122"]}}},"a:2:8249:3376-0:2249:1664":{"id":"a:2:8249:3376-0:2249:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SplitN","id":"0:2249:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2445":{"id":"0:2445","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["rfold","advance_back_by","try_rfold","rfind","nth_back"],"trait":{"name":"DoubleEndedIterator","id":"2:7240:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2473:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2447:4310"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:783:1827":{"id":"0:783:1827","crate_id":0,"name":"matches","span":{"filename":"src/prog.rs","begin":[386,4],"end":[409,5]},"visibility":"public","docs":"Tests whether the given input character matches this instruction.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["c",{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:927":{"id":"0:927","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[912,0],"end":[929,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["find_map","is_partitioned","last","fuse","skip_while","size_hint","chain","skip","gt","cloned","__iterator_get_unchecked","min_by","cmp_by","try_find","try_fold","inspect","take_while","intersperse","rev","collect","min_by_key","partial_cmp_by","rposition","ge","try_for_each","try_collect","map_while","intersperse_with","find","next_chunk","lt","sum","max_by","eq_by","unzip","fold","collect_into","scan","by_ref","for_each","cmp","advance_by","eq","position","enumerate","max_by_key","copied","cycle","reduce","count","peekable","partition","flat_map","min","filter","is_sorted","nth","all","take","zip","ne","partial_cmp","is_sorted_by","array_chunks","try_reduce","partition_in_place","max","flatten","any","filter_map","le","step_by","map","is_sorted_by_key","product"],"trait":{"name":"Iterator","id":"2:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2258:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["0:929:2120","0:930:953","0:933:4005","0:934:504"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2251-0:1664:1688":{"id":"b:2:2251-0:1664:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Exec","id":"0:1664:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2288:1662":{"id":"0:2288:1662","crate_id":0,"name":"ReplacerRef","span":{"filename":"src/re_bytes.rs","begin":[1274,0],"end":[1274,49]},"visibility":"public","docs":"By-reference adaptor for a `Replacer`\n\nReturned by [`Replacer::by_ref`](trait.Replacer.html#method.by_ref).","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:2684:220-0:2288:1662","a:2:8249:3376-0:2288:1662","a:2:8250:3375-0:2288:1662","a:2:2701:228-0:2288:1662","a:2:2741:5045-0:2288:1662","b:2:2251-0:2288:1662","b:2:2542-0:2288:1662","b:2:2248-0:2288:1662","b:2:2538-0:2288:1662","b:2:2553-0:2288:1662","b:2:2548-0:2288:1662","b:2:3319-0:2288:1662","0:2293","0:1006"]}}},"2:12060:1992":{"id":"2:12060:1992","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:11712:1643","`DoubleEndedIterator`":"2:7240:121","prim@char":"1:11888:419","str::split_whitespace":"2:12038:35383","str::rsplit":"2:12066:31245"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43357:1663","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:1650:128":{"id":"a:2:2684:220-0:1650:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5399:38396":{"id":"5:5399:38396","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:280:2104","`String`":"5:7255:224"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:280:2104","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7004:5597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8250:3375-0:2540:1660":{"id":"a:2:8250:3375-0:2540:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Regex","id":"0:2540:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2548-0:1855:1693":{"id":"b:2:2548-0:1855:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LiteralSearcher","id":"0:1855:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2701:228-0:2192:3687":{"id":"a:2:2701:228-0:2192:3687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2192:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:27-0:2395:1667":{"id":"0:27-0:2395:1667","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[764,4],"end":[764,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::re_set::bytes","name":"bytes","id":"0:2395:1667","glob":true}}},"b:2:2248-0:2373:4266":{"id":"b:2:2248-0:2373:4266","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatches","id":"0:2373:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:759:1366":{"id":"0:759:1366","crate_id":0,"name":"skip","span":{"filename":"src/prog.rs","begin":[106,4],"end":[113,5]},"visibility":"public","docs":"If pc is an index to a no-op instruction (like Save), then return the\nnext pc that is not a no-op instruction.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pc",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2344:784":{"id":"0:2344:784","crate_id":0,"name":"into_iter","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:7202:152","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:536:148":{"id":"0:536:148","crate_id":0,"name":"Input","span":{"filename":"src/input.rs","begin":[67,0],"end":[102,1]},"visibility":"public","docs":"An abstraction over input used in the matching engines.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:537:1844","0:538:3220","0:539:3222","0:540:1884","0:541:1870","0:542:811","0:543:1869","0:544:2888"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:545","0:562"]}}},"0:2598":{"id":"0:2598","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1220,9],"end":[1220,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureMatches","id":"0:2593:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2601:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2611:1662":{"id":"0:2611:1662","crate_id":0,"name":"ReplacerRef","span":{"filename":"src/re_unicode.rs","begin":[1317,0],"end":[1317,49]},"visibility":"public","docs":"By-reference adaptor for a `Replacer`\n\nReturned by [`Replacer::by_ref`](trait.Replacer.html#method.by_ref).","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:2684:220-0:2611:1662","a:2:8249:3376-0:2611:1662","a:2:8250:3375-0:2611:1662","a:2:2701:228-0:2611:1662","a:2:2741:5045-0:2611:1662","b:2:2251-0:2611:1662","b:2:2542-0:2611:1662","b:2:2248-0:2611:1662","b:2:2538-0:2611:1662","b:2:2553-0:2611:1662","b:2:2548-0:2611:1662","b:2:3319-0:2611:1662","0:2616","0:1317"]}}},"2:12037:1667":{"id":"2:12037:1667","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43343:1887","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2013:668":{"id":"0:2013:668","crate_id":0,"name":"fmt","span":{"filename":"src/prog.rs","begin":[271,16],"end":[271,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2371":{"id":"0:2371","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSet","id":"0:2368:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2372:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1064:2886":{"id":"0:1064:2886","crate_id":0,"name":"slots_len","span":{"filename":"src/re_trait.rs","begin":[110,4],"end":[110,33]},"visibility":"default","docs":"The number of capture slots in the compiled regular expression. This is\nalways two times the number of capture groups (two slots per group).","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:12134:31144":{"id":"2:12134:31144","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:684-0:1836:1690":{"id":"b:5:684-0:1836:1690","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:686:3909","5:687:2668","5:688:5579"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8250:3375-0:2119:3607":{"id":"a:2:8250:3375-0:2119:3607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexBuilder","id":"0:2119:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3319-0:2456:3001":{"id":"b:2:3319-0:2456:3001","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSet","id":"0:2456:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2437":{"id":"0:2437","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["rfold","advance_back_by","try_rfold","rfind","nth_back"],"trait":{"name":"DoubleEndedIterator","id":"2:7240:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIntoIter","id":"0:2468:4304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2438:4310"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8250:3375-0:2368:3001":{"id":"a:2:8250:3375-0:2368:3001","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSet","id":"0:2368:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2093:2857":{"id":"0:2093:2857","crate_id":0,"name":"swap_greed","span":{"filename":"src/re_builder.rs","begin":[12,4],"end":[12,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"0:885:316":{"id":"0:885:316","crate_id":0,"name":"as_str","span":{"filename":"src/re_bytes.rs","begin":[707,4],"end":[709,5]},"visibility":"public","docs":"Returns the original string of this regex.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1025:3910":{"id":"0:1025:3910","crate_id":0,"name":"replace_append","span":{"filename":"src/re_bytes.rs","begin":[1316,4],"end":[1318,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["caps",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Captures","id":"0:944:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Vec","id":"5:6696:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2345":{"id":"0:2345","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["find_map","is_partitioned","last","fuse","skip_while","size_hint","chain","skip","gt","cloned","__iterator_get_unchecked","min_by","cmp_by","try_find","try_fold","inspect","take_while","intersperse","rev","collect","min_by_key","partial_cmp_by","rposition","ge","try_for_each","try_collect","map_while","intersperse_with","find","next_chunk","lt","sum","max_by","eq_by","unzip","fold","collect_into","scan","by_ref","for_each","cmp","advance_by","eq","position","enumerate","max_by_key","copied","cycle","reduce","count","peekable","partition","flat_map","min","filter","is_sorted","nth","all","take","zip","ne","partial_cmp","is_sorted_by","array_chunks","try_reduce","partition_in_place","max","flatten","any","filter_map","le","step_by","map","is_sorted_by_key","product"],"trait":{"name":"Iterator","id":"2:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIntoIter","id":"0:2380:4304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2346:2120","0:2347:953","0:2348:4005"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1851":{"id":"0:1851","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[345,43],"end":[345,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ge","le","lt","gt"],"trait":{"name":"PartialOrd","id":"2:2354:189","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1852:1035"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2439":{"id":"0:2439","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7588:3693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIntoIter","id":"0:2468:4304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2701:228-0:1650:128":{"id":"a:2:2701:228-0:1650:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1123:1383":{"id":"0:1123:1383","crate_id":0,"name":"start","span":{"filename":"src/re_unicode.rs","begin":[38,4],"end":[40,5]},"visibility":"public","docs":"Returns the starting byte offset of the match in the haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2701:228-0:2473:4303":{"id":"a:2:2701:228-0:2473:4303","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2473:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:904:2120":{"id":"0:904:2120","crate_id":0,"name":"Item","span":{"filename":"src/re_bytes.rs","begin":[812,4],"end":[812,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Captures","id":"0:944:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}}},"a:2:2701:228-0:2540:1660":{"id":"a:2:2701:228-0:2540:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Regex","id":"0:2540:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:7206-0:2545:1654":{"id":"b:2:7206-0:2545:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2545:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:7208:2120","2:7209:3525","2:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"0:2576":{"id":"0:2576","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[973,9],"end":[973,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureLocations","id":"0:2573:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2577:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2251-0:2275:1665":{"id":"b:2:2251-0:2275:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2275:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2701:228-0:2593:1653":{"id":"a:2:2701:228-0:2593:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureMatches","id":"0:2593:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:1306:953":{"id":"0:1306:953","crate_id":0,"name":"next","span":{"filename":"src/re_unicode.rs","begin":[1252,4],"end":[1255,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2248:668":{"id":"0:2248:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[829,9],"end":[829,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:1650:128":{"id":"b:2:2248-0:1650:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2417":{"id":"0:2417","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSet","id":"0:2456:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2418:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1981:1865":{"id":"0:1981:1865","crate_id":0,"name":"is_anchored_start","span":{"filename":"src/prog.rs","begin":[55,4],"end":[55,31]},"visibility":"public","docs":"Whether the regex must match from the start of the input.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"b:5:684-0:2070:1696":{"id":"b:5:684-0:2070:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InstRanges","id":"0:2070:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:686:3909","5:687:2668","5:688:5579"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2741:5045-0:2611:1662":{"id":"a:2:2741:5045-0:2611:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReplacerRef","id":"0:2611:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2351":{"id":"0:2351","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7588:3693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIntoIter","id":"0:2380:4304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:7206-0:2593:1653":{"id":"b:2:7206-0:2593:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureMatches","id":"0:2593:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:7208:2120","2:7209:3525","2:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"0:2444:4005":{"id":"0:2444:4005","crate_id":0,"name":"size_hint","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:618:2991":{"id":"0:618:2991","crate_id":0,"name":"imp","span":{"filename":"src/literal/imp.rs","begin":[1,0],"end":[413,1]},"visibility":{"restricted":{"parent":"0:616:831","path":"::literal"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"perf-literal\")]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:1855:1693","0:1883:3293","0:1911:3261"],"is_stripped":true}}},"0:2134:2856":{"id":"0:2134:2856","crate_id":0,"name":"dot_matches_new_line","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the value for the any character (`s`) flag, where in `.` matches\nanything when `s` is set and matches anything except for new line when\nit is not set (the default).\n\nN.B. \"matches anything\" means \"any byte\" when Unicode is disabled and\nmeans \"any valid UTF-8 encoding of any Unicode scalar value\" when\nUnicode is enabled.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexBuilder","id":"0:2142:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1226:4005":{"id":"0:1226:4005","crate_id":0,"name":"size_hint","span":{"filename":"src/re_unicode.rs","begin":[930,4],"end":[932,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12034:31235":{"id":"2:12034:31235","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12033:31234"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8249:3376-0:2573:1652":{"id":"a:2:8249:3376-0:2573:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureLocations","id":"0:2573:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:895:2120":{"id":"0:895:2120","crate_id":0,"name":"Item","span":{"filename":"src/re_bytes.rs","begin":[789,4],"end":[789,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Match","id":"0:2197:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}}},"a:2:8249:3376-0:1836:1690":{"id":"a:2:8249:3376-0:1836:1690","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:763:1950":{"id":"0:763:1950","crate_id":0,"name":"only_utf8","span":{"filename":"src/prog.rs","begin":[145,4],"end":[147,5]},"visibility":"public","docs":"Returns true if this program exclusively matches valid UTF-8 bytes.\n\nThat is, if an invalid UTF-8 byte is seen, then no match is possible.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:923:4005":{"id":"0:923:4005","crate_id":0,"name":"size_hint","span":{"filename":"src/re_bytes.rs","begin":[896,4],"end":[898,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"tuple":[{"primitive":"usize"},{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1847:613":{"id":"0:1847:613","crate_id":0,"name":"eq","span":{"filename":"src/input.rs","begin":[345,28],"end":[345,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8250:3375-0:2231:1653":{"id":"a:2:8250:3375-0:2231:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureMatches","id":"0:2231:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1282:953":{"id":"0:1282:953","crate_id":0,"name":"next","span":{"filename":"src/re_unicode.rs","begin":[1194,4],"end":[1198,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2317:939":{"id":"0:2317:939","crate_id":0,"name":"new","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"public","docs":"Create a new regex set with the given regular expressions.\n\nThis takes an iterator of `S`, where `S` is something that can produce\na `&str`. If any of the strings in the iterator are not valid regular\nexpressions, then an error is returned.\n\n# Example\n\nCreate a new regex set from an iterator of strings:\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[r\"\\w+\", r\"\\d+\"]).unwrap();\nassert!(set.is_match(\"foo\"));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["exprs",{"generic":"I"}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RegexSet","id":"0:2368:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2506:75","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"S"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12096:37731":{"id":"2:12096:37731","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:11712:1643","`DoubleEndedIterator`":"2:7240:121","prim@char":"1:11888:419","str::match_indices":"2:12093:37730"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43525:5035","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:5016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:550:3222":{"id":"0:550:3222","crate_id":0,"name":"previous_char","span":{"filename":"src/input.rs","begin":[113,4],"end":[115,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["at",{"resolved_path":{"name":"InputAt","id":"0:1802:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2580:1665":{"id":"0:2580:1665","crate_id":0,"name":"SubCaptureMatches","span":{"filename":"src/re_unicode.rs","begin":[1186,0],"end":[1189,1]},"visibility":"public","docs":"An iterator that yields all capturing matches in the order in which they\nappear in the regex.\n\nIf a particular capture group didn't participate in the match, then `None`\nis yielded for that capture. The first match always corresponds to the\noverall match of the regex.\n\nThe lifetime `'c` corresponds to the lifetime of the `Captures` value, and\nthe lifetime `'t` corresponds to the originally matched text.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:2684:220-0:2580:1665","a:2:8249:3376-0:2580:1665","a:2:8250:3375-0:2580:1665","a:2:2701:228-0:2580:1665","a:2:2741:5045-0:2580:1665","b:2:2251-0:2580:1665","b:2:2542-0:2580:1665","b:2:2248-0:2580:1665","b:2:2538-0:2580:1665","b:2:2553-0:2580:1665","b:2:7206-0:2580:1665","b:2:2548-0:2580:1665","b:2:3319-0:2580:1665","b:5:684-0:2580:1665","0:1287","0:2589","0:1278","0:1290","0:2585"]}}},"0:1347":{"id":"0:1347","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1407,0],"end":[1415,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["by_ref","no_expansion"],"trait":{"name":"Replacer","id":"0:1311:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoExpand","id":"0:2620:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1349:3910","0:1350:3907"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2258:1654":{"id":"0:2258:1654","crate_id":0,"name":"CaptureNames","span":{"filename":"src/re_bytes.rs","begin":[910,0],"end":[910,68]},"visibility":"public","docs":"An iterator over the names of all possible captures.\n\n`None` indicates an unnamed capture; the first element (capture 0, the\nwhole matched region) is always unnamed.\n\n`'r` is the lifetime of the compiled regular expression.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:2684:220-0:2258:1654","a:2:8249:3376-0:2258:1654","a:2:8250:3375-0:2258:1654","a:2:2701:228-0:2258:1654","a:2:2741:5045-0:2258:1654","b:2:2251-0:2258:1654","b:2:2542-0:2258:1654","b:2:2248-0:2258:1654","b:2:2538-0:2258:1654","b:2:2553-0:2258:1654","b:2:7206-0:2258:1654","b:2:2548-0:2258:1654","b:2:3319-0:2258:1654","b:5:684-0:2258:1654","0:937","0:2265","0:935","0:2262","0:927"]}}},"a:2:8250:3375-0:1664:1688":{"id":"a:2:8250:3375-0:1664:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Exec","id":"0:1664:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2251-0:2373:4266":{"id":"b:2:2251-0:2373:4266","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatches","id":"0:2373:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2553-0:2268:1652":{"id":"b:2:2553-0:2268:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureLocations","id":"0:2268:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1890:3294":{"id":"0:1890:3294","crate_id":0,"name":"Single","span":{"filename":"src/literal/imp.rs","begin":[228,4],"end":[228,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:1892:1606"]},"discriminant":null}}},"0:652:2537":{"id":"0:652:2537","crate_id":0,"name":"approximate_size","span":{"filename":"src/literal/imp.rs","begin":[158,4],"end":[167,5]},"visibility":"public","docs":"Return the approximate heap usage of literals in bytes.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:1988:1695":{"id":"b:2:2538-0:1988:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Inst","id":"0:1988:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1898:1606":{"id":"0:1898:1606","crate_id":0,"name":"0","span":{"filename":"src/literal/imp.rs","begin":[230,11],"end":[230,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"resolved_path":{"name":"Literal","id":"20:2843:2042","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}},"b:2:2542-0:2385:4303":{"id":"b:2:2542-0:2385:4303","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2385:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2297:1659":{"id":"0:2297:1659","crate_id":0,"name":"NoExpand","span":{"filename":"src/re_bytes.rs","begin":[1362,0],"end":[1362,38]},"visibility":"public","docs":"`NoExpand` indicates literal byte string replacement.\n\nIt can be used with `replace` and `replace_all` to do a literal byte string\nreplacement without expanding `$name` to their corresponding capture\ngroups. This can be both convenient (to avoid escaping `$`, for example)\nand performant (since capture groups don't need to be found).\n\n`'t` is the lifetime of the literal text.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":["0:2300:1606"]},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:2684:220-0:2297:1659","a:2:8249:3376-0:2297:1659","a:2:8250:3375-0:2297:1659","a:2:2701:228-0:2297:1659","a:2:2741:5045-0:2297:1659","b:2:2251-0:2297:1659","b:2:2542-0:2297:1659","b:2:2248-0:2297:1659","b:2:2538-0:2297:1659","b:2:2553-0:2297:1659","b:2:2548-0:2297:1659","b:2:3319-0:2297:1659","b:5:684-0:2297:1659","0:2304","0:2301","0:1037"]}}},"b:2:2248-0:2249:1664":{"id":"b:2:2248-0:2249:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SplitN","id":"0:2249:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:574:2888":{"id":"0:574:2888","crate_id":0,"name":"as_bytes","span":{"filename":"src/input.rs","begin":[219,4],"end":[221,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:905:953":{"id":"0:905:953","crate_id":0,"name":"next","span":{"filename":"src/re_bytes.rs","begin":[814,4],"end":[820,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Captures","id":"0:944:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:985:186":{"id":"0:985:186","crate_id":0,"name":"Output","span":{"filename":"src/re_bytes.rs","begin":[1180,4],"end":[1180,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"slice":{"primitive":"u8"}}}}},"b:5:684-0:2297:1659":{"id":"b:5:684-0:2297:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoExpand","id":"0:2297:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["5:686:3909","5:687:2668","5:688:5579"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1863:668":{"id":"0:1863:668","crate_id":0,"name":"fmt","span":{"filename":"src/literal/imp.rs","begin":[12,16],"end":[12,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2355:953":{"id":"0:2355:953","crate_id":0,"name":"next","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1149:939":{"id":"0:1149:939","crate_id":0,"name":"new","span":{"filename":"src/re_unicode.rs","begin":[196,4],"end":[198,5]},"visibility":"public","docs":"Compiles a regular expression. Once compiled, it can be used repeatedly\nto search, split or replace text in a string.\n\nIf an invalid expression is given, then an error is returned.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["re",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Regex","id":"0:2540:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1211":{"id":"0:1211","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[857,0],"end":[857,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7588:3693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2545:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1204:953":{"id":"0:1204:953","crate_id":0,"name":"next","span":{"filename":"src/re_unicode.rs","begin":[839,4],"end":[844,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'r","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8250:3375-0:2385:4303":{"id":"a:2:8250:3375-0:2385:4303","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2385:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2334:811":{"id":"0:2334:811","crate_id":0,"name":"len","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"public","docs":"The total number of regexes in the set that created these matches.\n\n**WARNING:** This always returns the same value as [`RegexSet::len`].\nIn particular, it does *not* return the number of elements yielded by\n[`SetMatches::iter`]. The only way to determine the total number of\nmatched regexes is to iterate over them.","links":{"`SetMatches::iter`":"0:2335:795","`RegexSet::len`":"0:2326:811"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1213":{"id":"0:1213","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[869,0],"end":[891,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["find_map","is_partitioned","last","fuse","skip_while","size_hint","chain","skip","gt","cloned","__iterator_get_unchecked","min_by","cmp_by","try_find","try_fold","inspect","take_while","intersperse","rev","collect","min_by_key","partial_cmp_by","rposition","ge","try_for_each","try_collect","map_while","intersperse_with","find","next_chunk","lt","sum","max_by","eq_by","unzip","fold","collect_into","scan","by_ref","for_each","cmp","advance_by","eq","position","enumerate","max_by_key","copied","cycle","reduce","count","peekable","partition","flat_map","min","filter","is_sorted","nth","all","take","zip","ne","partial_cmp","is_sorted_by","array_chunks","try_reduce","partition_in_place","max","flatten","any","filter_map","le","step_by","map","is_sorted_by_key","product"],"trait":{"name":"Iterator","id":"2:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Split","id":"0:2555:1663","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1216:2120","0:1217:953"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1040:3907":{"id":"0:1040:3907","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_bytes.rs","begin":[1369,4],"end":[1371,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:2035:1694":{"id":"a:2:2684:220-0:2035:1694","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EmptyLook","id":"0:2035:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1317":{"id":"0:1317","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1319,0],"end":[1326,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Replacer","id":"0:1311:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["by_ref","no_expansion"],"trait":{"name":"Replacer","id":"0:1311:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReplacerRef","id":"0:2611:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":["0:1320:3910","0:1321:3907"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2548-0:2593:1653":{"id":"b:2:2548-0:2593:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureMatches","id":"0:2593:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8250:3375-0:2520:1657":{"id":"a:2:8250:3375-0:2520:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:19-0:2611:1662":{"id":"0:19-0:2611:1662","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[668,58],"end":[668,69]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"crate::re_unicode::ReplacerRef","name":"ReplacerRef","id":"0:2611:1662","glob":false}}},"2:12052:2599":{"id":"2:12052:2599","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41396:179","prim@char":"1:11888:419","self::pattern":"2:11712:1643"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2140:2234":{"id":"0:2140:2234","crate_id":0,"name":"dfa_size_limit","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the approximate size of the cache used by the DFA.\n\nThis roughly corresponds to the number of bytes that the DFA will\nuse while searching.\n\nNote that this is a *per thread* limit. There is no way to set a global\nlimit. In particular, if a regex is used from multiple threads\nsimultaneously, then each thread may use up to the number of bytes\nspecified here.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["limit",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexBuilder","id":"0:2142:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12113:29686":{"id":"2:12113:29686","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:1643"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:2070:1696":{"id":"b:2:2548-0:2070:1696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InstRanges","id":"0:2070:1696","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1802:1692":{"id":"0:1802:1692","crate_id":0,"name":"InputAt","span":{"filename":"src/input.rs","begin":[13,0],"end":[18,1]},"visibility":"public","docs":"Represents a location in the input.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:527","a:2:2684:220-0:1802:1692","a:2:8249:3376-0:1802:1692","a:2:8250:3375-0:1802:1692","a:2:2701:228-0:1802:1692","a:2:2741:5045-0:1802:1692","b:2:2251-0:1802:1692","b:2:2542-0:1802:1692","b:2:2248-0:1802:1692","b:2:2538-0:1802:1692","b:2:2553-0:1802:1692","b:2:2548-0:1802:1692","b:2:3319-0:1802:1692","b:5:684-0:1802:1692","0:1807","0:1809","0:1810"]}}},"a:2:8250:3375-0:2468:4304":{"id":"a:2:8250:3375-0:2468:4304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIntoIter","id":"0:2468:4304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1030:3907":{"id":"0:1030:3907","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_bytes.rs","begin":[1330,4],"end":[1332,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:2297:1659":{"id":"b:2:2553-0:2297:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoExpand","id":"0:2297:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2329":{"id":"0:2329","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:2589:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSet","id":"0:2368:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2330:60"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1653:1606":{"id":"0:1653:1606","crate_id":0,"name":"0","span":{"filename":"src/error.rs","begin":[8,11],"end":[8,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:2275:1665":{"id":"0:2275:1665","crate_id":0,"name":"SubCaptureMatches","span":{"filename":"src/re_bytes.rs","begin":[1199,0],"end":[1202,1]},"visibility":"public","docs":"An iterator that yields all capturing matches in the order in which they\nappear in the regex.\n\nIf a particular capture group didn't participate in the match, then `None`\nis yielded for that capture. The first match always corresponds to the\noverall match of the regex.\n\nThe lifetime `'c` corresponds to the lifetime of the `Captures` value, and\nthe lifetime `'t` corresponds to the originally matched text.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:2684:220-0:2275:1665","a:2:8249:3376-0:2275:1665","a:2:8250:3375-0:2275:1665","a:2:2701:228-0:2275:1665","a:2:2741:5045-0:2275:1665","b:2:2251-0:2275:1665","b:2:2542-0:2275:1665","b:2:2248-0:2275:1665","b:2:2538-0:2275:1665","b:2:2553-0:2275:1665","b:2:7206-0:2275:1665","b:2:2548-0:2275:1665","b:2:3319-0:2275:1665","b:5:684-0:2275:1665","0:2284","0:997","0:990","0:2280"]}}},"a:2:8250:3375-0:2456:3001":{"id":"a:2:8250:3375-0:2456:3001","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSet","id":"0:2456:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:380:939":{"id":"0:380:939","crate_id":0,"name":"new","span":{"filename":"src/exec.rs","begin":[138,4],"end":[140,5]},"visibility":"public","docs":"Create a regex execution builder.\n\nThis uses default settings for everything except the regex itself,\nwhich must be provided. Further knobs can be set by calling methods,\nand then finally, `build` to actually create the executor.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["re",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:1855:1693":{"id":"b:2:2538-0:1855:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"LiteralSearcher","id":"0:1855:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:615:1035":{"id":"0:615:1035","crate_id":0,"name":"partial_cmp","span":{"filename":"src/input.rs","begin":[429,4],"end":[431,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Ordering","id":"2:30836:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1972:1980":{"id":"0:1972:1980","crate_id":0,"name":"captures","span":{"filename":"src/prog.rs","begin":[27,4],"end":[27,37]},"visibility":"public","docs":"The ordered sequence of all capture groups extracted from the AST.\nUnnamed groups are `None`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Vec","id":"5:6696:244","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"a:2:2684:220-0:2222:1658":{"id":"a:2:2684:220-0:2222:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Matches","id":"0:2222:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2684:220-0:2258:1654":{"id":"a:2:2684:220-0:2258:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2258:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2684:220-0:2268:1652":{"id":"a:2:2684:220-0:2268:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureLocations","id":"0:2268:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2684:220-0:2288:1662":{"id":"a:2:2684:220-0:2288:1662","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReplacerRef","id":"0:2288:1662","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2395:1667":{"id":"0:2395:1667","crate_id":0,"name":"bytes","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:2456:3001","0:2461:4266","0:2468:4304","0:2473:4303"],"is_stripped":false}}},"b:5:684-0:2520:1657":{"id":"b:5:684-0:2520:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["5:686:3909","5:687:2668","5:688:5579"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:635:2787":{"id":"0:635:2787","crate_id":0,"name":"suffixes","span":{"filename":"src/literal/imp.rs","begin":[52,4],"end":[55,5]},"visibility":"public","docs":"Returns a matcher for literal suffixes from the given set.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["lits",{"resolved_path":{"name":"Seq","id":"20:2833:2806","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2623:1606":{"id":"0:2623:1606","crate_id":0,"name":"0","span":{"filename":"src/re_unicode.rs","begin":[1405,24],"end":[1405,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"primitive":"str"}}}}},"a:2:2684:220-0:2620:1659":{"id":"a:2:2684:220-0:2620:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoExpand","id":"0:2620:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:388:2838":{"id":"0:388:2838","crate_id":0,"name":"bounded_backtracking","span":{"filename":"src/exec.rs","begin":[197,4],"end":[200,5]},"visibility":"public","docs":"Sets the matching engine to use a bounded backtracking engine no\nmatter what optimizations are possible.\n\nOne must use this with care, since the bounded backtracking engine\nuses memory proportion to `len(regex) * len(text)`.\n\nThis overrides whatever was previously set via the `automatic` or\n`nfa` methods.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:2197:1657":{"id":"a:2:2684:220-0:2197:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2197:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:24-0:2101:1667":{"id":"0:24-0:2101:1667","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[761,4],"end":[761,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::re_builder::bytes","name":"bytes","id":"0:2101:1667","glob":true}}},"0:1029:3910":{"id":"0:1029:3910","crate_id":0,"name":"replace_append","span":{"filename":"src/re_bytes.rs","begin":[1326,4],"end":[1328,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["caps",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Captures","id":"0:944:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Vec","id":"5:6696:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:2268:1652":{"id":"b:2:2542-0:2268:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureLocations","id":"0:2268:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2553-0:2473:4303":{"id":"b:2:2553-0:2473:4303","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2473:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:391:1626":{"id":"0:391:1626","crate_id":0,"name":"unicode","span":{"filename":"src/exec.rs","begin":[226,4],"end":[229,5]},"visibility":"public","docs":"Set the Unicode flag.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["yes",{"primitive":"bool"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2222:1658":{"id":"0:2222:1658","crate_id":0,"name":"Matches","span":{"filename":"src/re_bytes.rs","begin":[786,0],"end":[786,66]},"visibility":"public","docs":"An iterator over all non-overlapping matches for a particular string.\n\nThe iterator yields a tuple of integers corresponding to the start and end\nof the match. The indices are byte offsets. The iterator stops when no more\nmatches can be found.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the matched byte string.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:2684:220-0:2222:1658","a:2:8249:3376-0:2222:1658","a:2:8250:3375-0:2222:1658","a:2:2701:228-0:2222:1658","a:2:2741:5045-0:2222:1658","b:2:2251-0:2222:1658","b:2:2542-0:2222:1658","b:2:2248-0:2222:1658","b:2:2538-0:2222:1658","b:2:2553-0:2222:1658","b:2:7206-0:2222:1658","b:2:2548-0:2222:1658","b:2:3319-0:2222:1658","0:898","0:2227","0:892"]}}},"0:1819":{"id":"0:1819","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[139,16],"end":[139,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2696:109","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CharInput","id":"0:1812:1691","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2095:1626":{"id":"0:2095:1626","crate_id":0,"name":"unicode","span":{"filename":"src/re_builder.rs","begin":[14,4],"end":[14,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"bool"}}},"b:2:2538-0:2297:1659":{"id":"b:2:2538-0:2297:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoExpand","id":"0:2297:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2538-0:2461:4266":{"id":"b:2:2538-0:2461:4266","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatches","id":"0:2461:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8249:3376-0:2520:1657":{"id":"a:2:8249:3376-0:2520:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1225:953":{"id":"0:1225:953","crate_id":0,"name":"next","span":{"filename":"src/re_unicode.rs","begin":[910,4],"end":[928,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2701:228-0:2580:1665":{"id":"a:2:2701:228-0:2580:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2580:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:918":{"id":"0:918","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[873,0],"end":[899,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["find_map","is_partitioned","last","fuse","skip_while","size_hint","chain","skip","gt","cloned","__iterator_get_unchecked","min_by","cmp_by","try_find","try_fold","inspect","take_while","intersperse","rev","collect","min_by_key","partial_cmp_by","rposition","ge","try_for_each","try_collect","map_while","intersperse_with","find","next_chunk","lt","sum","max_by","eq_by","unzip","fold","collect_into","scan","by_ref","for_each","cmp","advance_by","eq","position","enumerate","max_by_key","copied","cycle","reduce","count","peekable","partition","flat_map","min","filter","is_sorted","nth","all","take","zip","ne","partial_cmp","is_sorted_by","array_chunks","try_reduce","partition_in_place","max","flatten","any","filter_map","le","step_by","map","is_sorted_by_key","product"],"trait":{"name":"Iterator","id":"2:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SplitN","id":"0:2249:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:921:2120","0:922:953","0:923:4005"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1266:186":{"id":"0:1266:186","crate_id":0,"name":"Output","span":{"filename":"src/re_unicode.rs","begin":[1145,4],"end":[1145,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"str"}}}},"b:2:2542-0:2602:1658":{"id":"b:2:2542-0:2602:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Matches","id":"0:2602:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12033:31234":{"id":"2:12033:31234","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:12034:31235"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8249:3376-0:2197:1657":{"id":"a:2:8249:3376-0:2197:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2197:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5384:2547":{"id":"5:5384:2547","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7255:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3319-0:2240:1663":{"id":"b:2:3319-0:2240:1663","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Split","id":"0:2240:1663","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2383":{"id":"0:2383","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIntoIter","id":"0:2380:4304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2384:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1135:694":{"id":"0:1135:694","crate_id":0,"name":"from","span":{"filename":"src/re_unicode.rs","begin":[91,4],"end":[93,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["m",{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8249:3376-0:1969:1697":{"id":"a:2:8249:3376-0:1969:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Program","id":"0:1969:1697","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1125:1869":{"id":"0:1125:1869","crate_id":0,"name":"is_empty","span":{"filename":"src/re_unicode.rs","begin":[50,4],"end":[52,5]},"visibility":"public","docs":"Returns true if and only if this match has a length of zero.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:684-0:2573:1652":{"id":"b:5:684-0:2573:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureLocations","id":"0:2573:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:686:3909","5:687:2668","5:688:5579"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2480":{"id":"0:2480","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2473:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2482:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1651:2067":{"id":"0:1651:2067","crate_id":0,"name":"Syntax","span":{"filename":"src/error.rs","begin":[8,4],"end":[8,18]},"visibility":"default","docs":"A syntax error.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:1653:1606"]},"discriminant":null}}},"b:2:2248-0:1802:1692":{"id":"b:2:2248-0:1802:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InputAt","id":"0:1802:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:530:419":{"id":"0:530:419","crate_id":0,"name":"char","span":{"filename":"src/input.rs","begin":[35,4],"end":[37,5]},"visibility":"public","docs":"Returns the character at this position.\n\nIf this position is just before or after the input, then an absent\ncharacter is returned.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:541:1870":{"id":"0:541:1870","crate_id":0,"name":"prefix_at","span":{"filename":"src/input.rs","begin":[86,4],"end":[90,25]},"visibility":"default","docs":"Scan the input for a matching prefix.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["prefixes",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"LiteralSearcher","id":"0:1855:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["at",{"resolved_path":{"name":"InputAt","id":"0:1802:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"InputAt","id":"0:1802:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:2052":{"id":"0:2052","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[344,9],"end":[344,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"EmptyLook","id":"0:2035:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2053:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:758:939":{"id":"0:758:939","crate_id":0,"name":"new","span":{"filename":"src/prog.rs","begin":[83,4],"end":[102,5]},"visibility":"public","docs":"Creates an empty instruction sequence. Fields are given default\nvalues.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2187:1626":{"id":"0:2187:1626","crate_id":0,"name":"unicode","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the value for the Unicode (`u`) flag.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2192:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:824":{"id":"0:824","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[72,0],"end":[88,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2197:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:826:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:852:1992":{"id":"0:852:1992","crate_id":0,"name":"split","span":{"filename":"src/re_bytes.rs","begin":[342,4],"end":[344,5]},"visibility":"public","docs":"Returns an iterator of substrings of `text` delimited by a match of the\nregular expression. Namely, each element of the iterator corresponds to\ntext that *isn't* matched by the regular expression.\n\nThis method will *not* copy the text given.\n\n# Example\n\nTo split a string delimited by arbitrary amounts of spaces or tabs:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(r\"[ \\t]+\").unwrap();\nlet fields: Vec<&[u8]> = re.split(b\"a b \\t  c\\td    e\").collect();\nassert_eq!(fields, vec![\n    &b\"a\"[..], &b\"b\"[..], &b\"c\"[..], &b\"d\"[..], &b\"e\"[..],\n]);\n# }\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'r","mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Split","id":"0:2240:1663","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:2268:1652":{"id":"b:2:2248-0:2268:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureLocations","id":"0:2268:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2405:939":{"id":"0:2405:939","crate_id":0,"name":"new","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"public","docs":"Create a new regex set with the given regular expressions.\n\nThis takes an iterator of `S`, where `S` is something that can produce\na `&str`. If any of the strings in the iterator are not valid regular\nexpressions, then an error is returned.\n\n# Example\n\nCreate a new regex set from an iterator of strings:\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[r\"\\w+\", r\"\\d+\"]).unwrap();\nassert!(set.is_match(\"foo\"));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["exprs",{"generic":"I"}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RegexSet","id":"0:2456:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2506:75","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"S"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1861:423":{"id":"0:1861:423","crate_id":0,"name":"clone","span":{"filename":"src/literal/imp.rs","begin":[12,9],"end":[12,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LiteralSearcher","id":"0:1855:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1176":{"id":"0:1176","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[609,0],"end":[752,1]},"visibility":"default","docs":"Advanced or \"lower level\" search methods.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Regex","id":"0:2540:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1177:3929","0:1178:2889","0:1179:2890","0:1180:2891","0:1183:3797","0:1186:3949","0:1188:2892"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12090:37729":{"id":"2:12090:37729","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:11712:1643","`DoubleEndedIterator`":"2:7240:121","prim@char":"1:11888:419","str::matches":"2:12087:1827"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43579:5036","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:5016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1839":{"id":"0:1839","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[345,9],"end":[345,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1840:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1854:430":{"id":"0:1854:430","crate_id":0,"name":"cmp","span":{"filename":"src/input.rs","begin":[345,55],"end":[345,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:30836:183","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:2297:1659":{"id":"b:2:2248-0:2297:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoExpand","id":"0:2297:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2542-0:2373:4266":{"id":"b:2:2542-0:2373:4266","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatches","id":"0:2373:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3319-0:2142:3607":{"id":"b:2:3319-0:2142:3607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexBuilder","id":"0:2142:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1248:1674":{"id":"0:1248:1674","crate_id":0,"name":"expand","span":{"filename":"src/re_unicode.rs","begin":[1092,4],"end":[1094,5]},"visibility":"public","docs":"Expands all instances of `$name` in `replacement` to the corresponding\ncapture group `name`, and writes them to the `dst` buffer given.\n\n`name` may be an integer corresponding to the index of the capture\ngroup (counted by order of opening parenthesis where `0` is the\nentire match) or it can be a name (consisting of letters, digits or\nunderscores) corresponding to a named capture group.\n\nIf `name` isn't a valid capture group (whether the name doesn't exist\nor isn't a valid index), then it is replaced with the empty string.\n\nThe longest possible name consisting of the characters `[_0-9A-Za-z]`\nis used. e.g., `$1a` looks up the capture group named `1a` and not the\ncapture group at index `1`. To exert more precise control over the\nname, or to refer to a capture group name that uses characters outside\nof `[_0-9A-Za-z]`, use braces, e.g., `${1}a` or `${foo[bar].baz}`. When\nusing braces, any sequence of characters is permitted. If the sequence\ndoes not refer to a capture group name in the corresponding regex, then\nit is replaced with an empty string.\n\nTo write a literal `$` use `$$`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["replacement",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:2231:1653":{"id":"b:2:2251-0:2231:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureMatches","id":"0:2231:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2548-0:1802:1692":{"id":"b:2:2548-0:1802:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"InputAt","id":"0:1802:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1849":{"id":"0:1849","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[345,39],"end":[345,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2317:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Char","id":"0:1836:1690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2113:2858":{"id":"0:2113:2858","crate_id":0,"name":"ignore_whitespace","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the value for the ignore whitespace (`x`) flag.\n\nWhen enabled, whitespace such as new lines and spaces will be ignored\nbetween expressions of the pattern, and `#` can be used to start a\ncomment until the next new line.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexBuilder","id":"0:2119:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:2520:1657":{"id":"b:2:2538-0:2520:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:766:230":{"id":"0:766:230","crate_id":0,"name":"Target","span":{"filename":"src/prog.rs","begin":[166,4],"end":[166,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"slice":{"resolved_path":{"name":"Inst","id":"0:1988:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"0:2071:1881":{"id":"0:2071:1881","crate_id":0,"name":"goto","span":{"filename":"src/prog.rs","begin":[379,4],"end":[379,21]},"visibility":"public","docs":"The next location to execute in the program if this instruction\nsucceeds.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"a:2:8250:3375-0:2564:1664":{"id":"a:2:8250:3375-0:2564:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SplitN","id":"0:2564:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2146:668":{"id":"0:2146:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:369:1689":{"id":"b:2:2248-0:369:1689","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ExecBuilder","id":"0:369:1689","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2553-0:2197:1657":{"id":"b:2:2553-0:2197:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2197:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:7206-0:2468:4304":{"id":"b:2:7206-0:2468:4304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIntoIter","id":"0:2468:4304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:7208:2120","2:7209:3525","2:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"0:1012":{"id":"0:1012","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1285,0],"end":[1293,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["by_ref","no_expansion"],"trait":{"name":"Replacer","id":"0:1000:1661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"primitive":"u8"}}}},"items":["0:1014:3910","0:1015:3907"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2511:1653":{"id":"0:2511:1653","crate_id":0,"name":"CaptureMatches","span":{"filename":"src/re_trait.rs","begin":[235,0],"end":[238,16]},"visibility":"public","docs":"An iterator over all non-overlapping successive leftmost-first matches with\ncaptures.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RegularExpression","id":"0:1062:2743","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Text","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"R"},"trait":{"name":"","id":"0:1062:2743","args":null}}},"bounds":[{"outlives":"'t"}],"generic_params":[]}}]},"impls":[]}}},"a:2:8250:3375-0:1969:1697":{"id":"a:2:8250:3375-0:1969:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Program","id":"0:1969:1697","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2048:2071":{"id":"0:2048:2071","crate_id":0,"name":"WordBoundaryAscii","span":{"filename":"src/prog.rs","begin":[359,4],"end":[359,21]},"visibility":"default","docs":"ASCII word boundary.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:2171:668":{"id":"0:2171:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2267:668":{"id":"0:2267:668","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[909,16],"end":[909,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:2258:1654":{"id":"b:2:2553-0:2258:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2258:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1659":{"id":"0:1659","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[5,9],"end":[5,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1660:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2542-0:2035:1694":{"id":"b:2:2542-0:2035:1694","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EmptyLook","id":"0:2035:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2089:2859":{"id":"0:2089:2859","crate_id":0,"name":"nest_limit","span":{"filename":"src/re_builder.rs","begin":[8,4],"end":[8,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u32"}}},"0:2016:1846":{"id":"0:2016:1846","crate_id":0,"name":"slot","span":{"filename":"src/prog.rs","begin":[319,4],"end":[319,19]},"visibility":"public","docs":"The capture slot (there are two slots for every capture in a regex,\nincluding the zeroth capture for the entire match).","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"0:879:2892":{"id":"0:879:2892","crate_id":0,"name":"captures_read_at","span":{"filename":"src/re_bytes.rs","begin":[676,4],"end":[686,5]},"visibility":"public","docs":"Returns the same as `captures_read`, but starts the search at the given\noffset and populates the capture locations given.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["locs",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"CaptureLocations","id":"0:2268:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["text",{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["start",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Match","id":"0:2197:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:944:1655":{"id":"a:2:2684:220-0:944:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Captures","id":"0:944:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:847:1980":{"id":"0:847:1980","crate_id":0,"name":"captures","span":{"filename":"src/re_bytes.rs","begin":[285,4],"end":[287,5]},"visibility":"public","docs":"Returns the capture groups corresponding to the leftmost-first\nmatch in `text`. Capture group `0` always corresponds to the entire\nmatch. If no match is found, then `None` is returned.\n\nYou should only use `captures` if you need access to the location of\ncapturing group matches. Otherwise, `find` is faster for discovering\nthe location of the overall match.\n\n# Examples\n\nSay you have some text with movie names and their release years,\nlike \"'Citizen Kane' (1941)\". It'd be nice if we could search for text\nlooking like that, while also extracting the movie name and its release\nyear separately.\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(r\"'([^']+)'\\s+\\((\\d{4})\\)\").unwrap();\nlet text = b\"Not my favorite movie: 'Citizen Kane' (1941).\";\nlet caps = re.captures(text).unwrap();\nassert_eq!(caps.get(1).unwrap().as_bytes(), &b\"Citizen Kane\"[..]);\nassert_eq!(caps.get(2).unwrap().as_bytes(), &b\"1941\"[..]);\nassert_eq!(caps.get(0).unwrap().as_bytes(), &b\"'Citizen Kane' (1941)\"[..]);\n// You can also access the groups by index using the Index notation.\n// Note that this will panic on an invalid index.\nassert_eq!(&caps[1], b\"Citizen Kane\");\nassert_eq!(&caps[2], b\"1941\");\nassert_eq!(&caps[0], b\"'Citizen Kane' (1941)\");\n# }\n```\n\nNote that the full match is at capture group `0`. Each subsequent\ncapture group is indexed by the order of its opening `(`.\n\nWe can make this example a bit clearer by using *named* capture groups:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(r\"'(?P<title>[^']+)'\\s+\\((?P<year>\\d{4})\\)\")\n               .unwrap();\nlet text = b\"Not my favorite movie: 'Citizen Kane' (1941).\";\nlet caps = re.captures(text).unwrap();\nassert_eq!(caps.name(\"title\").unwrap().as_bytes(), b\"Citizen Kane\");\nassert_eq!(caps.name(\"year\").unwrap().as_bytes(), b\"1941\");\nassert_eq!(caps.get(0).unwrap().as_bytes(), &b\"'Citizen Kane' (1941)\"[..]);\n// You can also access the groups by name using the Index notation.\n// Note that this will panic on an invalid group name.\nassert_eq!(&caps[\"title\"], b\"Citizen Kane\");\nassert_eq!(&caps[\"year\"], b\"1941\");\nassert_eq!(&caps[0], b\"'Citizen Kane' (1941)\");\n\n# }\n```\n\nHere we name the capture groups, which we can access with the `name`\nmethod or the `Index` notation with a `&str`. Note that the named\ncapture groups are still accessible with `get` or the `Index` notation\nwith a `usize`.\n\nThe `0`th capture group is always unnamed, so it must always be\naccessed with `get(0)` or `[0]`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Captures","id":"0:944:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:2373:4266":{"id":"b:2:2548-0:2373:4266","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatches","id":"0:2373:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:959":{"id":"0:959","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1104,0],"end":[1108,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9142:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Captures","id":"0:944:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:961:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2435:953":{"id":"0:2435:953","crate_id":0,"name":"next","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:632":{"id":"0:632","crate_id":0,"name":null,"span":{"filename":"src/literal/imp.rs","begin":[39,0],"end":[168,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"LiteralSearcher","id":"0:1855:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:633:2850","0:634:1868","0:635:2787","0:637:3023","0:638:2599","0:644:2940","0:645:2942","0:646:795","0:647:3040","0:648:2961","0:649:1869","0:650:811","0:652:2537"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2542-0:2142:3607":{"id":"b:2:2542-0:2142:3607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexBuilder","id":"0:2142:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2058":{"id":"0:2058","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[344,29],"end":[344,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2312:188","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"EmptyLook","id":"0:2035:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EmptyLook","id":"0:2035:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2059:613"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:684-0:1802:1692":{"id":"b:5:684-0:1802:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:680:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InputAt","id":"0:1802:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:686:3909","5:687:2668","5:688:5579"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1976:1925":{"id":"0:1976:1925","crate_id":0,"name":"byte_classes","span":{"filename":"src/prog.rs","begin":[41,4],"end":[41,29]},"visibility":"public","docs":"A set of equivalence classes for discriminating bytes in the compiled\nprogram.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Vec","id":"5:6696:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}},"a:2:8249:3376-0:2192:3687":{"id":"a:2:8249:3376-0:2192:3687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2192:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2543":{"id":"0:2543","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[157,9],"end":[157,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Regex","id":"0:2540:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2544:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2741:5045-0:2580:1665":{"id":"a:2:2741:5045-0:2580:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2580:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2248-0:2473:4303":{"id":"b:2:2248-0:2473:4303","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2473:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2221:423":{"id":"0:2221:423","crate_id":0,"name":"clone","span":{"filename":"src/re_bytes.rs","begin":[107,9],"end":[107,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Regex","id":"0:2217:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:944:1655":{"id":"b:2:2538-0:944:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Captures","id":"0:944:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2553-0:1664:1688":{"id":"b:2:2553-0:1664:1688","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Exec","id":"0:1664:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3319-0:2545:1654":{"id":"b:2:3319-0:2545:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2545:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:10-0:2593:1653":{"id":"0:10-0:2593:1653","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[667,30],"end":[667,44]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"crate::re_unicode::CaptureMatches","name":"CaptureMatches","id":"0:2593:1653","glob":false}}},"2:12027:2477":{"id":"2:12027:2477","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9813:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:2343:2120":{"id":"0:2343:2120","crate_id":0,"name":"Item","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"usize"}}}},"0:99:1667":{"id":"0:99:1667","crate_id":0,"name":"bytes","span":{"filename":"src/compile.rs","begin":[91,4],"end":[94,5]},"visibility":"public","docs":"If bytes is true, then the program is compiled as a byte based\nautomaton, which incorporates UTF-8 decoding into the machine. If it's\nfalse, then the automaton is Unicode scalar value based, e.g., an\nengine utilizing such an automaton is responsible for UTF-8 decoding.\n\nThe specific invariant is that when returning a byte based machine,\nthe neither the `Char` nor `Ranges` instructions are produced.\nConversely, when producing a Unicode scalar value machine, the `Bytes`\ninstruction is never produced.\n\nNote that `dfa(true)` implies `bytes(true)`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["yes",{"primitive":"bool"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1197:1987":{"id":"0:1197:1987","crate_id":0,"name":"static_captures_len","span":{"filename":"src/re_unicode.rs","begin":[807,4],"end":[809,5]},"visibility":"public","docs":"Returns the total number of capturing groups that appear in every\npossible match.\n\nIf the number of capture groups can vary depending on the match, then\nthis returns `None`. That is, a value is only returned when the number\nof matching groups is invariant or \"static.\"\n\nNote that like [`Regex::captures_len`], this **does** include the\nimplicit capturing group corresponding to the entire match. Therefore,\nwhen a non-None value is returned, it is guaranteed to be at least `1`.\nStated differently, a return value of `Some(0)` is impossible.\n\n# Example\n\nThis shows a few cases where a static number of capture groups is\navailable and a few cases where it is not.\n\n```\nuse regex::Regex;\n\nlet len = |pattern| {\n    Regex::new(pattern).map(|re| re.static_captures_len())\n};\n\nassert_eq!(Some(1), len(\"a\")?);\nassert_eq!(Some(2), len(\"(a)\")?);\nassert_eq!(Some(2), len(\"(a)|(b)\")?);\nassert_eq!(Some(3), len(\"(a)(b)|(c)(d)\")?);\nassert_eq!(None, len(\"(a)|b\")?);\nassert_eq!(None, len(\"a|(b)\")?);\nassert_eq!(None, len(\"(b)*\")?);\nassert_eq!(Some(2), len(\"(b)+\")?);\n\n# Ok::<(), Box<dyn std::error::Error>>(())\n```","links":{"`Regex::captures_len`":"0:1196:3961"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:929:2120":{"id":"0:929:2120","crate_id":0,"name":"Item","span":{"filename":"src/re_bytes.rs","begin":[913,4],"end":[913,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'r","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}}}}},"b:2:2553-0:2468:4304":{"id":"b:2:2553-0:2468:4304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIntoIter","id":"0:2468:4304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2346:2120":{"id":"0:2346:2120","crate_id":0,"name":"Item","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"usize"}}}},"0:2184:2856":{"id":"0:2184:2856","crate_id":0,"name":"dot_matches_new_line","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the value for the any character (`s`) flag, where in `.` matches\nanything when `s` is set and matches anything except for new line when\nit is not set (the default).\n\nN.B. \"matches anything\" means \"any byte\" for `regex::bytes::RegexSet`\nexpressions and means \"any Unicode scalar value\" for `regex::RegexSet`\nexpressions.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2192:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:2249:1664":{"id":"a:2:2684:220-0:2249:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SplitN","id":"0:2249:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2248-0:86:1687":{"id":"b:2:2248-0:86:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Compiler","id":"0:86:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2538-0:2545:1654":{"id":"b:2:2538-0:2545:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureNames","id":"0:2545:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:7206-0:2564:1664":{"id":"b:2:7206-0:2564:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SplitN","id":"0:2564:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:7208:2120","2:7209:3525","2:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"a:2:8249:3376-0:2231:1653":{"id":"a:2:8249:3376-0:2231:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureMatches","id":"0:2231:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1287":{"id":"0:1287","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1209,0],"end":[1209,63]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["is_empty","len"],"trait":{"name":"ExactSizeIterator","id":"2:7263:4010","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2580:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8250:3375-0:2593:1653":{"id":"a:2:8250:3375-0:2593:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureMatches","id":"0:2593:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12039:35377":{"id":"2:12039:35377","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12038:35383"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:43640:5020","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1018:3910":{"id":"0:1018:3910","crate_id":0,"name":"replace_append","span":{"filename":"src/re_bytes.rs","begin":[1296,4],"end":[1298,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["caps",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Captures","id":"0:944:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Vec","id":"5:6696:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12043:1973":{"id":"2:12043:1973","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:1643"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12069:37725":{"id":"2:12069:37725","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:11712:1643","str::split":"2:12060:1992","prim@char":"1:11888:419","`DoubleEndedIterator`":"2:7240:121","str::rsplit_terminator":"2:12072:37726"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43407:5040","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:907":{"id":"0:907","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[823,0],"end":[823,56]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7588:3693","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureMatches","id":"0:2231:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:2231:1653":{"id":"0:2231:1653","crate_id":0,"name":"CaptureMatches","span":{"filename":"src/re_bytes.rs","begin":[807,0],"end":[809,2]},"visibility":"public","docs":"An iterator that yields all non-overlapping capture groups matching a\nparticular regular expression.\n\nThe iterator stops when no more matches can be found.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the matched byte string.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:2684:220-0:2231:1653","a:2:8249:3376-0:2231:1653","a:2:8250:3375-0:2231:1653","a:2:2701:228-0:2231:1653","a:2:2741:5045-0:2231:1653","b:2:2251-0:2231:1653","b:2:2542-0:2231:1653","b:2:2248-0:2231:1653","b:2:2538-0:2231:1653","b:2:2553-0:2231:1653","b:2:7206-0:2231:1653","b:2:2548-0:2231:1653","b:2:3319-0:2231:1653","0:2236","0:907","0:901"]}}},"a:2:8249:3376-0:2385:4303":{"id":"a:2:8249:3376-0:2385:4303","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2385:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12078:31248":{"id":"2:12078:31248","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:11888:419","str::splitn":"2:12075:3833","self::pattern":"2:11712:1643"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43479:5038","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:5016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:553:811":{"id":"0:553:811","crate_id":0,"name":"len","span":{"filename":"src/input.rs","begin":[129,4],"end":[131,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:2593:1653":{"id":"b:2:2248-0:2593:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureMatches","id":"0:2593:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2428":{"id":"0:2428","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"SetMatches","id":"0:2461:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"items":["0:2430:3525","0:2431:2120","0:2432:784"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12103:37734":{"id":"2:12103:37734","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:86:1687":{"id":"a:2:2684:220-0:86:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Compiler","id":"0:86:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:769:668":{"id":"0:769:668","crate_id":0,"name":"fmt","span":{"filename":"src/prog.rs","begin":[175,4],"end":[243,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12130:2051":{"id":"2:12130:2051","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_is_ascii\", issue = \"111090\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:5045-0:2520:1657":{"id":"a:2:2741:5045-0:2520:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2535":{"id":"0:2535","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[28,26],"end":[28,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2694:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5400:2137":{"id":"5:5400:2137","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7255:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1039:3910":{"id":"0:1039:3910","crate_id":0,"name":"replace_append","span":{"filename":"src/re_bytes.rs","begin":[1365,4],"end":[1367,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["_",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Captures","id":"0:944:1655","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Vec","id":"5:6696:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2001:1690":{"id":"0:2001:1690","crate_id":0,"name":"Char","span":{"filename":"src/prog.rs","begin":[292,4],"end":[292,18]},"visibility":"default","docs":"Char requires the regex program to match the character in InstChar at\nthe current position in the input.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:2003:1606"]},"discriminant":null}}},"a:2:2684:220-0:2580:1665":{"id":"a:2:2684:220-0:2580:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2580:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2248-0:2231:1653":{"id":"b:2:2248-0:2231:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureMatches","id":"0:2231:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:466:1919":{"id":"0:466:1919","crate_id":0,"name":"capture_name_idx","span":{"filename":"src/exec.rs","begin":[1362,4],"end":[1364,5]},"visibility":"public","docs":"Return a reference to named groups mapping (from group name to\ngroup position).","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Arc","id":"5:5798:70","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"HashMap","id":"1:731:142","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:822:2888":{"id":"0:822:2888","crate_id":0,"name":"as_bytes","span":{"filename":"src/re_bytes.rs","begin":[61,4],"end":[63,5]},"visibility":"public","docs":"Returns the matched text.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2701:228-0:2380:4304":{"id":"a:2:2701:228-0:2380:4304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIntoIter","id":"0:2380:4304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2538-0:1650:128":{"id":"b:2:2538-0:1650:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12119:37739":{"id":"2:12119:37739","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:1643"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:5016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:571:1870":{"id":"0:571:1870","crate_id":0,"name":"prefix_at","span":{"filename":"src/input.rs","begin":[207,4],"end":[213,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["prefixes",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"LiteralSearcher","id":"0:1855:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["at",{"resolved_path":{"name":"InputAt","id":"0:1802:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"InputAt","id":"0:1802:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2038:2062":{"id":"0:2038:2062","crate_id":0,"name":"EndLine","span":{"filename":"src/prog.rs","begin":[349,4],"end":[349,11]},"visibility":"default","docs":"End of line or input.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:785:3592":{"id":"0:785:3592","crate_id":0,"name":"num_chars","span":{"filename":"src/prog.rs","begin":[413,4],"end":[418,5]},"visibility":"public","docs":"Return the number of distinct characters represented by all of the\nranges.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2189:1921":{"id":"0:2189:1921","crate_id":0,"name":"size_limit","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the approximate size limit of the compiled regular expression.\n\nThis roughly corresponds to the number of bytes occupied by a single\ncompiled program. If the program exceeds this number, then a\ncompilation error is returned.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["limit",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2192:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2701:228-0:2249:1664":{"id":"a:2:2701:228-0:2249:1664","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SplitN","id":"0:2249:1664","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:1313:3907":{"id":"0:1313:3907","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1283,4],"end":[1285,5]},"visibility":"default","docs":"Return a fixed unchanging replacement string.\n\nWhen doing replacements, if access to `Captures` is not needed (e.g.,\nthe replacement byte string does not need `$` expansion), then it can\nbe beneficial to avoid finding sub-captures.\n\nIn general, this is called once for every call to `replacen`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'r","mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Cow","id":"5:689:111","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"type":{"primitive":"str"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8250:3375-0:2473:4303":{"id":"a:2:8250:3375-0:2473:4303","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2473:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1146:127":{"id":"0:1146:127","crate_id":0,"name":"Err","span":{"filename":"src/re_unicode.rs","begin":[182,4],"end":[182,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:2251-0:2217:1660":{"id":"b:2:2251-0:2217:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Regex","id":"0:2217:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2251-0:1650:128":{"id":"b:2:2251-0:1650:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3319-0:1988:1695":{"id":"b:2:3319-0:1988:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Inst","id":"0:1988:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2684:220-0:2142:3607":{"id":"a:2:2684:220-0:2142:3607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexBuilder","id":"0:2142:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:461:3000":{"id":"0:461:3000","crate_id":0,"name":"into_regex_set","span":{"filename":"src/exec.rs","begin":[1333,4],"end":[1335,5]},"visibility":"public","docs":"Build a RegexSet from this executor.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"re_set::unicode::RegexSet","id":"0:2368:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2056:668":{"id":"0:2056:668","crate_id":0,"name":"fmt","span":{"filename":"src/prog.rs","begin":[344,22],"end":[344,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9117:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9106:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2372:423":{"id":"0:2372:423","crate_id":0,"name":"clone","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"RegexSet","id":"0:2368:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5402:32401":{"id":"5:5402:32401","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12134:31144"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:829:694":{"id":"0:829:694","crate_id":0,"name":"from","span":{"filename":"src/re_bytes.rs","begin":[91,4],"end":[93,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["m",{"resolved_path":{"name":"Match","id":"0:2197:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Range","id":"2:39192:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2147:1668":{"id":"0:2147:1668","crate_id":0,"name":"set_bytes","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:2167:3687"],"is_stripped":false}}},"b:2:3319-0:2593:1653":{"id":"b:2:3319-0:2593:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureMatches","id":"0:2593:1653","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2701:228-0:2573:1652":{"id":"a:2:2701:228-0:2573:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"CaptureLocations","id":"0:2573:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2416:3688":{"id":"0:2416:3688","crate_id":0,"name":"patterns","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"public","docs":"Returns the patterns that this set will match on.\n\nThis function can be used to determine the pattern for a match. The\nslice returned has exactly as many patterns givens to this regex set,\nand the order of the slice is the same as the order of the patterns\nprovided to the set.\n\n# Example\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[\n    r\"\\w+\",\n    r\"\\d+\",\n    r\"\\pL+\",\n    r\"foo\",\n    r\"bar\",\n    r\"barfoo\",\n    r\"foobar\",\n]).unwrap();\nlet matches: Vec<_> = set\n    .matches(\"foobar\")\n    .into_iter()\n    .map(|match_idx| &set.patterns()[match_idx])\n    .collect();\nassert_eq!(matches, vec![r\"\\w+\", r\"\\pL+\", r\"foo\", r\"bar\", r\"foobar\"]);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2701:228-0:1988:1695":{"id":"a:2:2701:228-0:1988:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Inst","id":"0:1988:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2158:2855":{"id":"0:2158:2855","crate_id":0,"name":"multi_line","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the value for the multi-line matching (`m`) flag.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2167:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:396:2860":{"id":"0:396:2860","crate_id":0,"name":"build","span":{"filename":"src/exec.rs","begin":[351,4],"end":[408,5]},"visibility":"public","docs":"Build an executor that can run a regular expression.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Exec","id":"0:1664:1688","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:5045-0:1969:1697":{"id":"a:2:2741:5045-0:1969:1697","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Program","id":"0:1969:1697","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:5-0:2124:1626":{"id":"0:5-0:2124:1626","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[662,0],"end":[662,38]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"crate::re_builder::unicode","name":"unicode","id":"0:2124:1626","glob":true}}},"b:2:2538-0:2540:1660":{"id":"b:2:2538-0:2540:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Regex","id":"0:2540:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:688:5579":{"id":"5:688:5579","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:2461:4266":{"id":"b:2:2248-0:2461:4266","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatches","id":"0:2461:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:3456"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:463:3005":{"id":"0:463:3005","crate_id":0,"name":"into_byte_regex_set","span":{"filename":"src/exec.rs","begin":[1343,4],"end":[1345,5]},"visibility":"public","docs":"Build a RegexSet from this executor that can match arbitrary bytes.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"re_set::bytes::RegexSet","id":"0:2456:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1124:609":{"id":"0:1124:609","crate_id":0,"name":"end","span":{"filename":"src/re_unicode.rs","begin":[44,4],"end":[46,5]},"visibility":"public","docs":"Returns the ending byte offset of the match in the haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5644-0:2540:1660":{"id":"b:5:5644-0:2540:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9147:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5642:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Regex","id":"0:2540:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5646:1455"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2108:2860":{"id":"0:2108:2860","crate_id":0,"name":"build","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Consume the builder and compile the regular expression.\n\nNote that calling `as_str` on the resulting `Regex` will produce the\npattern given to `new` verbatim. Notably, it will not incorporate any\nof the flags set on this builder.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41538:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Regex","id":"0:2217:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Error","id":"0:1650:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:98:1921":{"id":"0:98:1921","crate_id":0,"name":"size_limit","span":{"filename":"src/compile.rs","begin":[75,4],"end":[78,5]},"visibility":"public","docs":"The size of the resulting program is limited by size_limit. If\nthe program approximately exceeds the given size (in bytes), then\ncompilation will stop and return an error.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["size_limit",{"primitive":"usize"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:2297:1659":{"id":"b:2:2542-0:2297:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoExpand","id":"0:2297:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2347:953":{"id":"0:2347:953","crate_id":0,"name":"next","span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:2385:4303":{"id":"a:2:2684:220-0:2385:4303","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2385:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:2468:4304":{"id":"0:2468:4304","crate_id":0,"name":"SetMatchesIntoIter","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"public","docs":"An owned iterator over the set of matches from a regex set.\n\nThis will always produces matches in ascending order of index, where the\nindex corresponds to the index of the regex that matched with respect to\nits position when initially building the set.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2684:220-0:2468:4304","a:2:8249:3376-0:2468:4304","a:2:8250:3375-0:2468:4304","a:2:2701:228-0:2468:4304","a:2:2741:5045-0:2468:4304","b:2:2251-0:2468:4304","b:2:2542-0:2468:4304","b:2:2248-0:2468:4304","b:2:2538-0:2468:4304","b:2:2553-0:2468:4304","b:2:7206-0:2468:4304","b:2:2548-0:2468:4304","b:2:3319-0:2468:4304","0:2433","0:2437","0:2471","0:2439"]}}},"b:2:2542-0:2473:4303":{"id":"b:2:2542-0:2473:4303","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2473:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2544:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12056:5534":{"id":"2:12056:5534","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41396:179","prim@char":"1:11888:419","self::pattern":"2:11712:1643"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11732:5016","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12063:31243":{"id":"2:12063:31243","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:11888:419","self::pattern":"2:11712:1643"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:11535:5021","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11717:5015","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2142:3607":{"id":"0:2142:3607","crate_id":0,"name":"RegexBuilder","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"A configurable builder for a regular expression.\n\nA builder can be used to configure how the regex is built, for example, by\nsetting the default flags (which can be overridden in the expression\nitself) or setting various limits.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:2129","a:2:2684:220-0:2142:3607","a:2:8249:3376-0:2142:3607","a:2:8250:3375-0:2142:3607","a:2:2701:228-0:2142:3607","a:2:2741:5045-0:2142:3607","b:2:2251-0:2142:3607","b:2:2542-0:2142:3607","b:2:2248-0:2142:3607","b:2:2538-0:2142:3607","b:2:2553-0:2142:3607","b:2:2548-0:2142:3607","b:2:3319-0:2142:3607","0:2145"]}}},"b:2:7206-0:2580:1665":{"id":"b:2:7206-0:2580:1665","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7318:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7202:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SubCaptureMatches","id":"0:2580:1665","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:7208:2120","2:7209:3525","2:7210:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"I"}}}},"0:2593:1653":{"id":"0:2593:1653","crate_id":0,"name":"CaptureMatches","span":{"filename":"src/re_unicode.rs","begin":[1221,0],"end":[1223,2]},"visibility":"public","docs":"An iterator that yields all non-overlapping capture groups matching a\nparticular regular expression.\n\nThe iterator stops when no more matches can be found.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the matched string.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:2684:220-0:2593:1653","a:2:8249:3376-0:2593:1653","a:2:8250:3375-0:2593:1653","a:2:2701:228-0:2593:1653","a:2:2741:5045-0:2593:1653","b:2:2251-0:2593:1653","b:2:2542-0:2593:1653","b:2:2248-0:2593:1653","b:2:2538-0:2593:1653","b:2:2553-0:2593:1653","b:2:7206-0:2593:1653","b:2:2548-0:2593:1653","b:2:3319-0:2593:1653","0:2598","0:1293","0:1299"]}}},"0:2021:1908":{"id":"0:2021:1908","crate_id":0,"name":"InstSplit","span":{"filename":"src/prog.rs","begin":[324,0],"end":[331,1]},"visibility":"public","docs":"Representation of the Split instruction.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:2022:1883","0:2023:1882"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":[]}}},"0:2188:2853":{"id":"0:2188:2853","crate_id":0,"name":"octal","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Whether to support octal syntax or not.\n\nOctal syntax is a little-known way of uttering Unicode codepoints in\na regular expression. For example, `a`, `\\x61`, `\\u0061` and\n`\\141` are all equivalent regular expressions, where the last example\nshows octal syntax.\n\nWhile supporting octal syntax isn't in and of itself a problem, it does\nmake good error messages harder. That is, in PCRE based regex engines,\nsyntax like `\\0` invokes a backreference, which is explicitly\nunsupported in Rust's regex engine. However, many users expect it to\nbe supported. Therefore, when octal support is disabled, the error\nmessage will explicitly mention that backreferences aren't supported.\n\nOctal syntax is disabled by default.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["yes",{"primitive":"bool"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"RegexSetBuilder","id":"0:2192:3687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:2380:4304":{"id":"b:2:2548-0:2380:4304","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIntoIter","id":"0:2380:4304","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2548-0:2035:1694":{"id":"b:2:2548-0:2035:1694","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"EmptyLook","id":"0:2035:1694","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:986:769":{"id":"0:986:769","crate_id":0,"name":"index","span":{"filename":"src/re_bytes.rs","begin":[1182,4],"end":[1186,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["name",{"borrowed_ref":{"lifetime":"'i","mutable":false,"type":{"primitive":"str"}}}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:1988:1695":{"id":"b:2:2553-0:1988:1695","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Inst","id":"0:1988:1695","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1477"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8249:3376-0:1855:1693":{"id":"a:2:8249:3376-0:1855:1693","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8249:3376","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"LiteralSearcher","id":"0:1855:1693","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2548-0:2142:3607":{"id":"b:2:2548-0:2142:3607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexBuilder","id":"0:2142:3607","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1478"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1975:1383":{"id":"0:1975:1383","crate_id":0,"name":"start","span":{"filename":"src/prog.rs","begin":[38,4],"end":[38,22]},"visibility":"public","docs":"A pointer to the start instruction. This can vary depending on how\nthe program was compiled. For example, programs for use with the DFA\nengine have a `.*?` inserted at the beginning of unanchored regular\nexpressions. The actual starting point of the program is after the\n`.*?`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"usize"}}},"b:2:3319-0:2473:4303":{"id":"b:2:3319-0:2473:4303","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3317:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatchesIter","id":"0:2473:4303","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3321:1491"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8250:3375-0:2620:1659":{"id":"a:2:8250:3375-0:2620:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoExpand","id":"0:2620:1659","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:22-0:2580:1665":{"id":"0:22-0:2580:1665","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[669,12],"end":[669,29]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"crate::re_unicode::SubCaptureMatches","name":"SubCaptureMatches","id":"0:2580:1665","glob":false}}},"b:2:2538-0:86:1687":{"id":"b:2:2538-0:86:1687","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Compiler","id":"0:86:1687","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:2202"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:2376":{"id":"0:2376","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[462,0],"end":[489,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2264:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SetMatches","id":"0:2373:4266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2377:423"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1188:2892":{"id":"0:1188:2892","crate_id":0,"name":"captures_read_at","span":{"filename":"src/re_unicode.rs","begin":[726,4],"end":[736,5]},"visibility":"public","docs":"Returns the same as captures, but starts the search at the given\noffset and populates the capture locations given.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["locs",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"CaptureLocations","id":"0:2573:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["text",{"borrowed_ref":{"lifetime":"'t","mutable":false,"type":{"primitive":"str"}}}],["start",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41394:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Match","id":"0:2520:1657","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:5045-0:1802:1692":{"id":"a:2:2741:5045-0:1802:1692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:5045","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"InputAt","id":"0:1802:1692","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1249:811":{"id":"0:1249:811","crate_id":0,"name":"len","span":{"filename":"src/re_unicode.rs","begin":[1101,4],"end":[1103,5]},"visibility":"public","docs":"Returns the total number of capture groups (even if they didn't match).\n\nThis is always at least `1`, since every regex has at least one capture\ngroup that corresponds to the full match.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:2408:2850":{"id":"0:2408:2850","crate_id":0,"name":"empty","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"public","docs":"Create a new empty regex set.\n\n# Example\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::empty();\nassert!(set.is_empty());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"RegexSet","id":"0:2456:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:11-0:2545:1654":{"id":"0:11-0:2545:1654","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[667,46],"end":[667,58]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"crate::re_unicode::CaptureNames","name":"CaptureNames","id":"0:2545:1654","glob":false}}},"0:2410:2339":{"id":"0:2410:2339","crate_id":0,"name":"is_match","span":{"filename":"src/re_set.rs","begin":[491,0],"end":[518,1]},"visibility":"public","docs":"Returns true if and only if one of the regexes in this set matches\nthe text given.\n\nThis method should be preferred if you only need to test whether any\nof the regexes in the set should match, but don't care about *which*\nregexes matched. This is because the underlying matching engine will\nquit immediately after seeing the first match instead of continuing to\nfind all matches.\n\nNote that as with searches using `Regex`, the expression is unanchored\nby default. That is, if the regex does not start with `^` or `\\A`, or\nend with `$` or `\\z`, then it is permitted to match anywhere in the\ntext.\n\n# Example\n\nTests whether a set matches some text:\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[r\"\\w+\", r\"\\d+\"]).unwrap();\nassert!(set.is_match(\"foo\"));\nassert!(!set.is_match(\"☃\"));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["text",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8250:3375-0:2602:1658":{"id":"a:2:8250:3375-0:2602:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8250:3375","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Matches","id":"0:2602:1658","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2251-0:2368:3001":{"id":"b:2:2251-0:2368:3001","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"RegexSet","id":"0:2368:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12012:1869":{"id":"2:12012:1869","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"20:2865:2361":{"crate_id":20,"path":["regex_syntax","hir","literal","State"],"kind":"struct"},"6:4991:10427":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:4737:6476":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"1:10209:9049":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"2:9107:5510":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"16:7837:8360":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:32147:5493":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2:2470:17662":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"14:7:8492":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"1:9098:5457":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"2:22425:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"2:42476:128":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"2:40459:4851":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:3911:12418":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"2:40196:6448":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"6:6151:10678":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"20:1849:4760":{"crate_id":20,"path":["regex_syntax","ast","parse","Parser"],"kind":"struct"},"11:2076:8509":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"1:7821:130":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"17:13453:7786":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"17:13082:7694":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"2:43255:6061":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"17:12902:7632":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:2929:2344":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"17:10660:7180":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"6:4751:10304":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"11:821:8503":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"17:10635:7177":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"1:11003:9158":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:42449:71":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"6:6002:10625":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"1:2362:12368":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:20594:37144":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"5:1454:198":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"21:974:6618":{"crate_id":21,"path":["aho_corasick","util","debug","DebugByte"],"kind":"struct"},"1:8147:1663":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"17:9946:7088":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"17:11011:7208":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"17:13506:7797":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"11:1852:5599":{"crate_id":11,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"17:11355:7270":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"17:10316:7144":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"20:2201:28261":{"crate_id":20,"path":["regex_syntax","ast","HexLiteralKind"],"kind":"enum"},"1:4328:9034":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"22:114:4930":{"crate_id":22,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:44131:122":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"1:3925:12419":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"22:81:4928":{"crate_id":22,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:40376:4833":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:40473:4852":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:6409:4749":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"2:4332:3108":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"5:1413:8502":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"16:5630:8036":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"17:10104:7106":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"1:5563:6478":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"6:5959:10609":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"1:867:3525":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:2589:116":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"2:46682:8942":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"17:13461:7787":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"17:13015:7675":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:10053:5021":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"2:2348:182":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"17:10270:7141":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"18:590:6578":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"20:2500:6391":{"crate_id":20,"path":["regex_syntax","ast","Assertion"],"kind":"struct"},"11:1144:8514":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"3:229:210":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"2:40076:5977":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"16:6351:24348":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"2:3931:6426":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"11:840:8506":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"16:5402:7014":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:9803:12378":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"6:1752:10101":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"9:421:23350":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:47747:8990":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"2:41631:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"2:21839:35990":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:2208:9014":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"20:2812:3077":{"crate_id":20,"path":["regex_syntax","hir","literal","Extractor"],"kind":"struct"},"17:9734:7065":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"2:30041:12414":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"1:3465:12395":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"6:1539:9972":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"6:653:18408":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"6:5995:10624":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"17:10580:7171":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"6:6016:10630":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:7862:8589":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"17:11891:7385":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"1:6865:11468":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"18:609:3084":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"1:3933:12420":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"20:1918:6750":{"crate_id":20,"path":["regex_syntax","ast","print","Printer"],"kind":"struct"},"6:5065:10462":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"20:2405:28248":{"crate_id":20,"path":["regex_syntax","ast","ClassSetItem"],"kind":"enum"},"2:44389:8890":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"17:13812:7900":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"20:3050:2044":{"crate_id":20,"path":["regex_syntax","hir","Class"],"kind":"enum"},"17:13803:7896":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"1:10692:130":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"2:44283:211":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"16:4757:8016":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"6:6700:10748":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:1821:4886":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2:41831:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"17:11902:7386":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"2:43649:5019":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"2:2763:4979":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"17:12496:7500":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"6:506:9903":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"6:7555:10862":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"1:8960:9170":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"6:1614:10019":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:7460:6902":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"6:5880:10560":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:1846:9011":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"6:4288:10107":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"5:7058:3525":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"6:1736:10096":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"1:8748:9158":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"2:8251:2735":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"17:10589:7172":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"1:7942:4770":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"1:11893:1367":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"5:35:5598":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"5:7195:8606":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"9:325:9877":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"1:8103:12377":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"22:655:6036":{"crate_id":22,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:4019:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"20:3298:4760":{"crate_id":20,"path":["regex_syntax","parser","Parser"],"kind":"struct"},"2:9106:210":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"2:7211:4825":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"20:2513:28253":{"crate_id":20,"path":["regex_syntax","ast","AssertionKind"],"kind":"enum"},"11:1688:144":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"16:5616:8032":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"6:1908:19397":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"1:8825:9163":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"17:13744:7881":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"1:11891:1049":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"2:41581:3526":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"16:5976:7929":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"20:1841:2738":{"crate_id":20,"path":["regex_syntax","ast","parse","ParserBuilder"],"kind":"struct"},"1:10682:9081":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"2:10092:6057":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:8479:3526":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:40083:5978":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"2:1667:1087":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"16:7065:8255":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"17:8718:6890":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"5:0:286":{"crate_id":5,"path":["alloc"],"kind":"module"},"5:2908:10868":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"16:6460:7973":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"6:4719:10292":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"17:8360:24406":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"16:8109:8403":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"1:7571:12378":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"1:1982:185":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"20:266:38866":{"crate_id":20,"path":["regex_syntax","ast","visitor","ClassFrame"],"kind":"enum"},"17:9907:7083":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"6:5022:10437":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"17:12293:7463":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"6:4294:10108":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:11265:8646":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"2:21718:8655":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"6:4681:10272":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"1:8762:9159":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"17:9453:24427":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"5:5642:232":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"5:880:3526":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"1:11015:9159":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:8249:3376":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"16:2786:7964":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"11:1091:8512":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"2:32020:9873":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:46652:8941":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:45681:8905":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:9410:5724":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"16:7244:38829":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"21:1395:3312":{"crate_id":21,"path":["aho_corasick","ahocorasick","AhoCorasickKind"],"kind":"enum"},"2:7318:159":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:11243:10973":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"6:6024:10632":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"2:47675:8984":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"17:8909:1887":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"5:7269:8612":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"21:1842:6664":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddySlim4Mask256"],"kind":"struct"},"17:8490:24410":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"21:2039:6691":{"crate_id":21,"path":["aho_corasick","util","prefilter","MemmemBuilder"],"kind":"struct"},"17:13233:7729":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:41597:3525":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"17:12085:7414":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"2:7030:2137":{"crate_id":2,"path":["core","iter","sources","repeat","repeat"],"kind":"function"},"2:7198:134":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"1:8893:4740":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:45844:8914":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"17:13857:7906":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"1:4574:10729":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"17:10039:7099":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"11:1879:6731":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"21:1860:6670":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","Mask128"],"kind":"struct"},"1:7471:9200":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"21:2093:6703":{"crate_id":21,"path":["aho_corasick","util","prefilter","RareBytesThree"],"kind":"struct"},"2:2774:4981":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:41711:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:4377:4876":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"16:6361:8153":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"10:36:9876":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"1:5926:206":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"5:5239:5018":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"1:5686:4737":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"17:13865:7909":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"5:5798:70":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2:41203:155":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"20:3210:2097":{"crate_id":20,"path":["regex_syntax","hir","Dot"],"kind":"enum"},"6:4698:10280":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"17:13240:7731":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"21:2053:6692":{"crate_id":21,"path":["aho_corasick","util","prefilter","RareBytesBuilder"],"kind":"struct"},"2:43327:5025":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"2:22524:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"2:9157:194":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:44376:5635":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:43265:6062":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"2:2691:4145":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"20:1790:4787":{"crate_id":20,"path":["regex_syntax","utf8","ScalarRange"],"kind":"struct"},"2:4251:207":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"17:10516:7160":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"17:10478:7157":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"20:2564:28250":{"crate_id":20,"path":["regex_syntax","ast","RepetitionKind"],"kind":"enum"},"1:5067:191":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"16:7588:8342":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"6:4404:10180":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:46014:8919":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"18:660:4908":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:5385:9049":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:1733:17705":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:2477:9015":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"21:1413:6625":{"crate_id":21,"path":["aho_corasick","automaton","OverlappingState"],"kind":"struct"},"2:39998:5979":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:7781:6965":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"20:3400:1901":{"crate_id":20,"path":["regex_syntax","utf8","Utf8Range"],"kind":"struct"},"6:4947:10407":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"17:11800:7370":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"20:2888:6863":{"crate_id":20,"path":["regex_syntax","hir","translate","TranslatorBuilder"],"kind":"struct"},"2:39358:8306":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"1:8234:9131":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"14:165:23431":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"6:1564:9986":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"18:636:6588":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"16:6321:8147":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"1:5439:9050":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"20:1901:6747":{"crate_id":20,"path":["regex_syntax","ast","parse","NestLimiter"],"kind":"struct"},"1:7616:5442":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"1:4436:12444":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"5:4818:204":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:9149:5511":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"2:32056:8683":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"1:5179:190":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"17:10068:7103":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"2:43665:4864":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:41243:8638":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"21:2424:148":{"crate_id":21,"path":["aho_corasick","util","search","Input"],"kind":"struct"},"22:546:6032":{"crate_id":22,"path":["memchr","cow","CowBytes"],"kind":"struct"},"17:12358:7470":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"2:11726:3276":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"2:45699:8906":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:8870:12492":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"20:2536:2089":{"crate_id":20,"path":["regex_syntax","ast","Repetition"],"kind":"struct"},"1:3383:9134":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"6:4546:10251":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"16:6474:7990":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"5:1716:5599":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"16:5346:8029":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:40268:4830":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"5:2169:38469":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"17:9853:7074":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"1:8134:4851":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"1:10865:9160":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"17:8667:7014":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"20:561:831":{"crate_id":20,"path":["regex_syntax","hir","literal"],"kind":"module"},"6:1594:10005":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:46292:8926":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"2:30836:183":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"17:9108:38844":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"17:10491:7158":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:20841:12509":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"2:40708:4817":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"2:42167:5513":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"2:2833:4993":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"2:10771:6058":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"17:8823:6893":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"6:1514:9962":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"1:8982:28677":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"17:2933:6913":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"1:3355:6426":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"1:11225:9068":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"2:3182:37218":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"17:9380:24425":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"2:39365:8691":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"20:2971:4770":{"crate_id":20,"path":["regex_syntax","hir","ErrorKind"],"kind":"enum"},"5:7028:5601":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"2:40022:5982":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"16:2879:7968":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"16:6254:8142":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"2:2922:3444":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"16:5032:8025":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"17:12178:7425":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"11:2219:4722":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"17:11069:24419":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"2:2741:5045":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"17:10705:7185":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"2:9592:6457":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"6:4307:10117":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:5528:4842":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"2:2851:4997":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"16:7029:8250":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:45543:8899":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2:1467:2092":{"crate_id":2,"path":["core","mem"],"kind":"module"},"1:480:6469":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"6:4821:10337":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:47721:8988":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:3249:9024":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"2:6674:4837":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"17:11520:7298":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"6:4459:10207":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:47214:8975":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"21:2448:4915":{"crate_id":21,"path":["aho_corasick","util","search","Anchored"],"kind":"enum"},"2:11484:5658":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:39192:198":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"16:8072:8399":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"5:2916:37323":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"1:1561:3526":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:4322:4875":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:39216:199":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"6:4331:10135":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"6:4920:10389":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"16:7652:198":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"16:2404:7948":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"2:9159:5515":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"16:5386:7013":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:8838:35884":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:42683:145":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"6:5809:10524":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"1:6369:4741":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"17:9617:7054":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"21:2298:6714":{"crate_id":21,"path":["aho_corasick","util","primitives","PatternIDIter"],"kind":"struct"},"1:6296:166":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"14:187:23438":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"6:4609:10266":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"2:40424:4849":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"21:1776:6655":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddySlim1Mask256"],"kind":"struct"},"16:6535:6396":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"14:215:8496":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"11:1873:6831":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"1:11913:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"5:2116:10867":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"16:2764:7963":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"4:0:4592":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"16:6904:8230":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"17:12419:7480":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"1:7677:12337":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"16:6696:24350":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:10722:29789":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"2:45413:8894":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"20:3283:4778":{"crate_id":20,"path":["regex_syntax","hir","LookSetIter"],"kind":"struct"},"5:7044:37515":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"17:9488:7043":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"1:7572:5454":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"1:8485:9155":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"16:6218:8130":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"5:4137:6426":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"16:6132:8104":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"17:562:6902":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"2:12357:192":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"2:22590:8680":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"21:2102:6705":{"crate_id":21,"path":["aho_corasick","util","prefilter","StartBytesBuilder"],"kind":"struct"},"22:807:6027":{"crate_id":22,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:9526:6455":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"16:5847:8061":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"18:681:3323":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"2:45968:8917":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"17:12433:7482":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"14:221:8497":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"16:7519:8338":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"2:46111:8922":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"20:1922:6751":{"crate_id":20,"path":["regex_syntax","ast","print","Writer"],"kind":"struct"},"6:5988:10622":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"5:4366:6426":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"16:5594:7976":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"21:1350:2736":{"crate_id":21,"path":["aho_corasick","ahocorasick","AhoCorasick"],"kind":"struct"},"5:1042:11372":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"16:4568:8011":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"1:10931:6495":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"17:13516:7802":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"1:11072:10971":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"5:1422:8515":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"17:10936:7205":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"16:5811:8054":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"17:13066:7691":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"2:9624:6462":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"17:10681:7183":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"17:9748:7026":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"18:624:38845":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"1:4125:11378":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"6:488:9895":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"5:6740:6437":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"16:5071:8026":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"17:8573:24413":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"5:1228:8509":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"1:5764:4748":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"17:13689:7865":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"17:13659:7858":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"16:6201:8124":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"2:10286:6065":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"21:1520:2361":{"crate_id":21,"path":["aho_corasick","nfa","contiguous","State"],"kind":"struct"},"2:41226:8636":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"1:6621:9057":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"20:3305:128":{"crate_id":20,"path":["regex_syntax","unicode","Error"],"kind":"enum"},"1:4576:10731":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"2:21966:8676":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"2:4110:4887":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"21:647:1012":{"crate_id":21,"path":["aho_corasick","packed"],"kind":"module"},"20:2454:6826":{"crate_id":20,"path":["regex_syntax","ast","ClassSetUnion"],"kind":"struct"},"21:2415:6721":{"crate_id":21,"path":["aho_corasick","util","remapper","Remapper"],"kind":"struct"},"17:10626:7176":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"16:3030:7992":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"17:13376:7764":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"17:13367:7761":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"17:13667:7859":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"2:9985:5622":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"16:5708:8045":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"17:11641:7331":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"6:595:9958":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"5:3775:6405":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"17:10142:24495":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"5:5712:5601":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"20:2108:2087":{"crate_id":20,"path":["regex_syntax","ast","Alternation"],"kind":"struct"},"1:10847:29791":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"6:62:17996":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"1:731:142":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"1:9028:167":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"1:11912:1126":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"16:2720:7961":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:44088:5651":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"17:10283:7142":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"22:232:3256":{"crate_id":22,"path":["memchr","memmem"],"kind":"module"},"16:7293:8286":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"17:11109:7218":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"21:1576:1687":{"crate_id":21,"path":["aho_corasick","nfa","noncontiguous","Compiler"],"kind":"struct"},"2:40042:4864":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:8469:9036":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"22:816:6028":{"crate_id":22,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"17:13249:7732":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"16:7335:38831":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"1:5370:9048":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"20:3270:4777":{"crate_id":20,"path":["regex_syntax","hir","LookSet"],"kind":"struct"},"6:4773:10315":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"11:665:3525":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:40448:4835":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:42674:5725":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:11895:1481":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"1:9038:219":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"17:13385:7765":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"22:638:6031":{"crate_id":22,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"2:46036:8920":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"5:680:231":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:22458:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"20:3077:4772":{"crate_id":20,"path":["regex_syntax","hir","ClassUnicodeIter"],"kind":"struct"},"6:4732:10296":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"21:1365:4909":{"crate_id":21,"path":["aho_corasick","ahocorasick","FindOverlappingIter"],"kind":"struct"},"9:52:11095":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"6:4472:10212":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"11:119:6397":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"22:853:6024":{"crate_id":22,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"5:7352:5600":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2:11461:5661":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"16:8214:8306":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"16:2546:7954":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"1:5334:9046":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"11:731:8501":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"2:43343:1887":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"2:42160:5511":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"5:7335:5599":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"2:45892:8915":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"5:211:5636":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"17:10416:7152":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"17:13309:7747":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"2:12512:6467":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:21952:8675":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"2:43184:6044":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"6:7485:10846":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:2738:5488":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"2:39955:4864":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"22:707:6578":{"crate_id":22,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"18:481:6032":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"1:8171:12411":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"1:4639:12470":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"17:9721:7064":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"6:4726:10293":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"6:4757:10306":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"6:6685:10743":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"17:11585:7314":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"20:1912:6748":{"crate_id":20,"path":["regex_syntax","ast","print","PrinterBuilder"],"kind":"struct"},"2:40438:4850":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"2:41530:193":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"6:4398:10177":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:530:5437":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"20:3039:2042":{"crate_id":20,"path":["regex_syntax","hir","Literal"],"kind":"struct"},"1:5354:9047":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"2:2696:109":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"11:1009:8509":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2:11279:2113":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"5:280:2104":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"6:4707:10285":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"1:9374:129":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"17:10505:7159":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:43969:5041":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"17:11502:7297":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"1:8792:9162":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"17:8953:7015":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"2:40296:4309":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"6:4790:10326":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"1:5693:4738":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"2:7591:4823":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:11372:9029":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"2:46370:8936":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"1:8410:9151":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:43479:5038":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"2:42705:8850":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"11:2192:6392":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"1:11237:10972":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"17:12483:7499":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"1:6133:9056":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"2:2932:4999":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"16:7016:8248":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"14:31:8492":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:2509:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:4260:4870":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"18:521:6031":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"18:0:1620":{"crate_id":18,"path":["memchr"],"kind":"module"},"1:11145:6498":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"2:6721:11374":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"16:2616:7957":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:20879:17694":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"21:2032:3275":{"crate_id":21,"path":["aho_corasick","util","prefilter","Packed"],"kind":"struct"},"1:8166:9133":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"16:4596:8012":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"2:2161:17694":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"20:2765:128":{"crate_id":20,"path":["regex_syntax","error","Error"],"kind":"enum"},"2:21945:10884":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"21:2305:6715":{"crate_id":21,"path":["aho_corasick","util","primitives","WithPatternIDIter"],"kind":"struct"},"1:3208:9021":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"20:2782:132":{"crate_id":20,"path":["regex_syntax","error","Formatter"],"kind":"struct"},"6:1692:10078":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:2805:4991":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:41589:5622":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"1:936:12318":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"2:22293:176":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"17:11372:7272":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"6:6821:10820":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"2:43611:5032":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"21:1868:6671":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","Mask256"],"kind":"struct"},"21:1903:1926":{"crate_id":21,"path":["aho_corasick","util","alphabet","ByteClassSet"],"kind":"struct"},"5:2636:10875":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"1:5320:9042":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"16:8025:8396":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:41445:2120":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"1:4564:12421":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"1:11854:1830":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"2:40286:4839":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"5:3276:5599":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"17:11993:7400":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"17:11319:7265":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"16:7529:7986":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"9:445:23348":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"1:7854:9085":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"17:9512:7045":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"6:5779:10514":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:45459:8896":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"5:1404:8501":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"17:9138:7024":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"1:11892:312":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"17:9545:7008":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"17:12646:7524":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"2:40324:8822":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"2:44096:5653":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"2:9153:5513":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"22:624:6572":{"crate_id":22,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"17:247:6896":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:32060:8684":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"2:39114:5009":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"1:10000:11381":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"1:1931:653":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"17:12388:7475":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"5:7162:4723":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"2:44334:8886":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"6:547:9932":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"6:5862:10548":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"16:6793:8221":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"2:43561:1658":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"16:7437:8325":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"2:20729:12505":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"20:2957:128":{"crate_id":20,"path":["regex_syntax","hir","Error"],"kind":"struct"},"6:5071:10464":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"15:198:11361":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"5:1314:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"16:7572:38834":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"1:10138:11520":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"16:6293:8145":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"1:6482:4745":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"17:12019:7113":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"6:1682:10072":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"1:6188:6478":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"20:2016:4779":{"crate_id":20,"path":["regex_syntax","ast","Span"],"kind":"struct"},"17:11721:7336":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"1:7509:6489":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"17:9577:7051":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"1:888:8502":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:7838:119":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"2:9609:6458":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"6:6800:10808":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"13:0:4591":{"crate_id":13,"path":["std_detect"],"kind":"module"},"5:5834:9340":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"16:2502:7952":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"17:12113:7419":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"1:11195:9065":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"21:1701:1687":{"crate_id":21,"path":["aho_corasick","packed","teddy","compile","Compiler"],"kind":"struct"},"6:5058:10459":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"6:1588:10003":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"17:12449:7486":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"16:6767:8220":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"1:2869:128":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"1:857:5622":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"17:12194:7430":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"5:1463:8588":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"2:22326:177":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"16:4818:8018":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"16:4480:8008":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"16:4037:8004":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"17:13265:7736":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:20536:4937":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"16:2808:7965":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"17:12331:7468":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"17:10670:7182":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"1:3210:9022":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"2:4:1014":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"16:6717:8207":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"20:2028:6735":{"crate_id":20,"path":["regex_syntax","ast","Position"],"kind":"struct"},"6:6047:10638":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:9295:8644":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"1:3677:9028":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"16:6990:8247":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"5:7066:198":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"2:40246:4829":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"17:11844:7379":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"17:12006:7403":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"17:13777:7887":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"22:777:4908":{"crate_id":22,"path":["memchr","memmem","FindIter"],"kind":"struct"},"2:22491:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"17:10989:6917":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"16:5000:8024":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"6:6651:10737":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"6:4509:10232":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"5:3534:3526":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"1:8260:9141":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"1:2344:10880":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"17:13469:7789":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"2:9370:145":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"2:43507:5034":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"20:2440:6825":{"crate_id":20,"path":["regex_syntax","ast","ClassSetRange"],"kind":"struct"},"2:2522:237":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"1:4414:12443":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"2:41332:8838":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"21:2132:6709":{"crate_id":21,"path":["aho_corasick","util","primitives","SmallIndex"],"kind":"struct"},"2:40347:4844":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"2:42421:110":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"1:4679:12432":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"18:548:141":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"5:6696:244":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"16:6400:8157":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:21771:8656":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:7590:5443":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"14:160:8492":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"16:5963:8076":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"1:4256:9033":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"21:1650:4908":{"crate_id":21,"path":["aho_corasick","packed","api","FindIter"],"kind":"struct"},"2:44112:10960":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"2:41260:12412":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"16:4510:8009":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"17:9933:7086":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"2:41454:3526":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"2:40315:4841":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:47464:8978":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"17:9876:6964":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"16:7743:7977":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"7:0:1543":{"crate_id":7,"path":["unwind"],"kind":"module"},"17:9038:38843":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"5:7074:8605":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"17:12799:7546":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"1:953:8507":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"2:39552:4865":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"16:4445:8007":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"1:8730:9157":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"17:12622:7180":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"1:3132:30265":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:40389:4846":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"1:11911:1553":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"2:43163:6054":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"20:2322:4771":{"crate_id":20,"path":["regex_syntax","ast","ClassUnicode"],"kind":"struct"},"17:10428:7153":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"6:4857:10352":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"2:21114:12504":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"21:2022:5443":{"crate_id":21,"path":["aho_corasick","util","prefilter","Builder"],"kind":"struct"},"2:44080:5650":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"11:305:9870":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"6:4439:10198":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:11299:7255":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"6:4377:10169":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"17:11391:7277":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"17:11653:7334":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"2:41751:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"2:39075:5010":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"17:11785:7365":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"1:7798:9081":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"17:10354:7146":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"16:6890:7981":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:47324:8976":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"21:1456:6629":{"crate_id":21,"path":["aho_corasick","automaton","StreamChunkIter"],"kind":"struct"},"2:21900:35092":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"2:73:1497":{"crate_id":2,"path":["core","u32"],"kind":"module"},"2:40367:4845":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"17:13842:7905":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"1:361:5453":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"1:8286:9035":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"18:538:6036":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"17:10000:7092":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"6:6706:10749":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"19:0:1031":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"5:3124:6830":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:43425:5039":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"17:1978:6912":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"20:3114:4774":{"crate_id":20,"path":["regex_syntax","hir","ClassBytesIter"],"kind":"struct"},"2:42913:10959":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:9362:141":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"5:3158:6829":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"21:2002:6031":{"crate_id":21,"path":["aho_corasick","util","prefilter","Prefilter"],"kind":"struct"},"2:3157:135":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:7528:6491":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"17:10402:7148":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"6:5051:10456":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"17:10092:7105":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"17:10555:7162":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"17:11544:7302":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"5:7255:224":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"17:8858:6894":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"6:4492:10222":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:39280:203":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"21:1942:6678":{"crate_id":21,"path":["aho_corasick","util","buffer","Buffer"],"kind":"struct"},"1:3995:12426":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"3:0:443":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:11535:5021":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"21:1876:6616":{"crate_id":21,"path":["aho_corasick","util","alphabet","ByteClasses"],"kind":"struct"},"1:11904:740":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"17:8979:38835":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"16:7488:8336":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"17:9566:7027":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:41871:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"17:1034:6904":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"1:5502:12486":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"5:3163:37514":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:2898:117":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"2:21916:35103":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:49668:12514":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"20:2895:6864":{"crate_id":20,"path":["regex_syntax","hir","translate","Translator"],"kind":"struct"},"2:40677:8631":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"17:8443:24409":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"17:12592:7510":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"1:3325:4815":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"17:9312:7028":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"21:1694:5443":{"crate_id":21,"path":["aho_corasick","packed","teddy","compile","Builder"],"kind":"struct"},"17:9322:38837":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"1:4074:11375":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:21332:12501":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"17:9178:7025":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"17:11446:7285":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"20:1878:28267":{"crate_id":20,"path":["regex_syntax","ast","parse","GroupState"],"kind":"enum"},"1:11909:1495":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"1:8736:186":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"2:41309:35989":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"20:1942:4770":{"crate_id":20,"path":["regex_syntax","ast","ErrorKind"],"kind":"enum"},"1:643:12313":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:40408:4848":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2:3152:234":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:10647:10967":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"1:11461:30669":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"1:2211:6444":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:2515:133":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:46606:8940":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"6:500:9900":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"2:7161:4827":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:47610:8981":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:11899:643":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"20:1865:6743":{"crate_id":20,"path":["regex_syntax","ast","parse","ParserI"],"kind":"struct"},"2:42898:8852":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"9:234:2361":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"22:836:6023":{"crate_id":22,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"6:7578:10865":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:875:8501":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"6:5717:10471":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"1:11910:789":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"16:2668:7959":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"21:1925:6617":{"crate_id":21,"path":["aho_corasick","util","alphabet","BitSet"],"kind":"struct"},"17:10545:6917":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"1:930:8503":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"16:3782:8000":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"2:20909:12510":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"11:2157:23420":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"22:222:3254":{"crate_id":22,"path":["memchr","memchr","memchr2"],"kind":"function"},"2:12330:34865":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"17:9228:38842":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"1:4681:12434":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"1:638:9003":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:44326:8884":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"16:4327:8005":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:39341:8690":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"1:8220:12442":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"6:4932:10398":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"6:5974:10611":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"6:1650:10049":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"21:1968:4911":{"crate_id":21,"path":["aho_corasick","util","error","MatchError"],"kind":"struct"},"16:4400:8006":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"2:2792:4985":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"16:6442:8160":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"17:13433:7780":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"2:10130:6067":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"22:691:6572":{"crate_id":22,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"10:0:4595":{"crate_id":10,"path":["adler"],"kind":"module"},"2:21879:35097":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"2:21978:12415":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"6:4371:10168":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"20:2218:2044":{"crate_id":20,"path":["regex_syntax","ast","Class"],"kind":"enum"},"17:13477:7790":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"16:2830:7966":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"16:7711:8346":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"18:707:3276":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"6:4875:10363":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"1:11308:6500":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:9151:5512":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"20:3330:28274":{"crate_id":20,"path":["regex_syntax","unicode","ClassQuery"],"kind":"enum"},"16:6431:8159":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"17:10465:7156":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"1:1071:8510":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"17:13344:7756":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"6:5785:10515":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"22:761:6572":{"crate_id":22,"path":["memchr","memmem","x86","avx","std","Forward"],"kind":"struct"},"2:2985:5000":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"11:359:6400":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"2:21559:12378":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"17:11220:7237":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"17:8195:24393":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"21:1884:6672":{"crate_id":21,"path":["aho_corasick","util","alphabet","ByteClassIter"],"kind":"struct"},"21:2385:6718":{"crate_id":21,"path":["aho_corasick","util","primitives","StateIDError"],"kind":"struct"},"5:6294:6405":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"20:410:2437":{"crate_id":20,"path":["regex_syntax","debug","Byte"],"kind":"struct"},"2:9155:5514":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"2:5468:6426":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"9:388:23349":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"1:635:9002":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"16:2378:7947":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"17:13564:7839":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"17:11339:7266":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"5:1432:8499":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"11:768:5599":{"crate_id":11,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"17:8788:6892":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:618:5935":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"1:11837:9203":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"20:3234:4775":{"crate_id":20,"path":["regex_syntax","hir","Properties"],"kind":"struct"},"6:526:9920":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"16:6236:8140":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"17:10691:24521":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"1:6085:6467":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"17:1787:6905":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"5:3753:5599":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"21:1685:6644":{"crate_id":21,"path":["aho_corasick","packed","rabinkarp","RabinKarp"],"kind":"struct"},"2:7165:4826":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:9381:9079":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"2:12542:140":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"2:2753:4977":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"18:719:6023":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"16:55:8387":{"crate_id":16,"path":["gimli","endianity","Endianity"],"kind":"trait"},"17:13181:7712":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2:4255:4869":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"6:0:816":{"crate_id":6,"path":["libc"],"kind":"module"},"2:39236:202":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"17:9596:7052":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"1:11468:10975":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"17:12138:7421":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:40670:4812":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:7791:9080":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"18:113:4930":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"16:6876:7980":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"5:6116:1565":{"crate_id":5,"path":["alloc","vec"],"kind":"module"},"5:4167:6426":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"6:6545:10685":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"6:4845:10347":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:45561:8900":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"16:3585:7998":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"17:9866:7075":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"17:13024:7679":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"2:45822:8913":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:901:5601":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"6:1532:9970":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:5380:6426":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"2:42713:8851":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"17:12372:7473":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"16:6164:8109":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"16:6575:24349":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"2:21:681":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"17:10761:24415":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"17:13698:7867":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"22:769:6572":{"crate_id":22,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"17:1919:24454":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"2:39258:201":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:20579:37139":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"18:766:6025":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"20:2793:4781":{"crate_id":20,"path":["regex_syntax","hir","interval","IntervalSet"],"kind":"struct"},"1:1433:144":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"21:1631:3276":{"crate_id":21,"path":["aho_corasick","packed","api","Searcher"],"kind":"struct"},"1:4578:10733":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"2:45662:8904":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"11:326:6398":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"1:2215:12360":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"2:3317:69":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"6:4486:10219":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"17:13041:7681":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"1:6757:12494":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"17:13499:7795":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"11:757:5601":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"21:1671:6651":{"crate_id":21,"path":["aho_corasick","packed","pattern","PatternIter"],"kind":"struct"},"2:21116:6613":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"17:11234:7238":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"1:1048:8256":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:2822:4990":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"17:0:4601":{"crate_id":17,"path":["object"],"kind":"module"},"18:727:6029":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"17:10026:7097":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"1:9184:6115":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"1:11901:742":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"5:4399:6428":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"22:883:6025":{"crate_id":22,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"17:11924:7393":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:44364:8889":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"6:541:9929":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"1:7846:9084":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:47770:8991":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"9:352:23363":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"17:8632:24392":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"2:2817:4989":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:12308:151":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"16:7596:24354":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"6:4629:10268":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"20:2679:6843":{"crate_id":20,"path":["regex_syntax","ast","FlagsItem"],"kind":"struct"},"17:11163:7225":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"6:6110:10652":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"17:9478:7040":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"16:5797:8053":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"21:1422:4908":{"crate_id":21,"path":["aho_corasick","automaton","FindIter"],"kind":"struct"},"6:5032:10442":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"1:11500:9069":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:11783:17635":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"1:11331:9028":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"6:6724:10759":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"17:8521:24411":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"2:2963:5008":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"1:11898:642":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"17:9886:7077":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"6:4952:10409":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"20:2903:28273":{"crate_id":20,"path":["regex_syntax","hir","translate","HirFrame"],"kind":"enum"},"2:41368:8639":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"6:1728:10092":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:21004:6613":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"20:2148:28252":{"crate_id":20,"path":["regex_syntax","ast","LiteralKind"],"kind":"enum"},"11:2087:8510":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"11:0:4596":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"16:6558:8172":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:43631:5022":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:10314:9157":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"17:12259:7460":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"17:13879:7912":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"20:2388:28262":{"crate_id":20,"path":["regex_syntax","ast","ClassSet"],"kind":"enum"},"17:9557:7026":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"20:2653:6842":{"crate_id":20,"path":["regex_syntax","ast","SetFlags"],"kind":"struct"},"6:4882:1001":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"11:399:11368":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"2:20596:37141":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:5719:4739":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"6:4898:10373":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"2:23037:6170":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"17:8598:24414":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"6:4527:10241":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"17:13324:7749":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"17:10840:7199":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"1:917:8515":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:47823:8994":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"2:10804:6059":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"5:6765:6443":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"5:2407:10872":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"2:2312:188":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"6:1668:10061":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:30266:4805":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"20:1815:28266":{"crate_id":20,"path":["regex_syntax","ast","parse","Primitive"],"kind":"enum"},"5:6367:3525":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"22:0:1620":{"crate_id":22,"path":["memchr"],"kind":"module"},"2:21862:8663":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"17:10615:7175":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"16:5367:23459":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"20:3344:38864":{"crate_id":20,"path":["regex_syntax","unicode","CanonicalClassQuery"],"kind":"enum"},"2:43153:6056":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1:3247:9023":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"21:1809:6660":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddySlim3Mask128"],"kind":"struct"},"6:4688:10273":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:10272:6066":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:8337:3079":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"11:1126:8513":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"21:1561:2361":{"crate_id":21,"path":["aho_corasick","nfa","noncontiguous","State"],"kind":"struct"},"2:43921:8871":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"16:7767:24355":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"22:97:4929":{"crate_id":22,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"16:2524:7953":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"17:9534:7048":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"2:22260:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"16:2742:7962":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"20:2121:2083":{"crate_id":20,"path":["regex_syntax","ast","Concat"],"kind":"struct"},"1:355:5452":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"21:2517:6726":{"crate_id":21,"path":["aho_corasick","util","special","Special"],"kind":"struct"},"17:12563:7507":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"16:8129:8404":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"1:9003:10963":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"21:2124:6708":{"crate_id":21,"path":["aho_corasick","util","prefilter","StartBytesThree"],"kind":"struct"},"17:8283:24404":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"6:4999:10429":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"7:32:23334":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"17:12607:7514":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"16:4845:8019":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"17:11556:7303":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"1:8948:6735":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"1:9981:9010":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"6:4803:10331":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:30864:4937":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"17:12059:7411":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"21:218:12378":{"crate_id":21,"path":["aho_corasick","automaton","private","Sealed"],"kind":"trait"},"20:2843:2042":{"crate_id":20,"path":["regex_syntax","hir","literal","Literal"],"kind":"struct"},"1:8075:2040":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"17:9959:7089":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"2:2512:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:2746:106":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"2:40487:4853":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"17:11193:7229":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"1:11905:1499":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"21:1851:6665":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddyFat4Mask256"],"kind":"struct"},"2:1756:8615":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"17:10721:7187":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"21:1795:6658":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddySlim2Mask256"],"kind":"struct"},"21:1528:28290":{"crate_id":21,"path":["aho_corasick","nfa","contiguous","StateTrans"],"kind":"enum"},"2:43135:6053":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"5:7004:5597":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"2:43741:17641":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"17:12835:7577":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"1:6332:9057":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"16:6061:23460":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"1:11907:1497":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"16:7557:8339":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"1:11889:1515":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"1:413:165":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"5:2189:10871":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"6:4521:10238":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"5:6446:6405":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"16:5693:8042":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"17:3142:6915":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"17:11410:7278":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"5:1443:8500":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"21:1888:6673":{"crate_id":21,"path":["aho_corasick","util","alphabet","ByteClassElements"],"kind":"struct"},"5:863:1912":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"6:4911:10383":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"21:225:28275":{"crate_id":21,"path":["aho_corasick","automaton","Automaton"],"kind":"trait"},"5:7225:8609":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"6:1546:9975":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:11879:7383":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"1:7693:9078":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"2:43236:6060":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"2:40684:4741":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"6:6008:10628":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"6:1555:9980":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"16:5779:8049":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"16:6544:7978":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"17:10440:7154":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"2:2796:4984":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"17:8256:24391":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"1:7786:9079":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"1:8925:29690":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"16:7669:7988":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:42153:5512":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:46060:8921":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:1577:6829":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"1:8319:4896":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"5:1078:11373":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"1:1583:6830":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"6:6848:10826":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:43245:6063":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"2:40693:4814":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"5:5908:6426":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"16:3225:7995":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"6:1576:9995":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"20:2692:28254":{"crate_id":20,"path":["regex_syntax","ast","FlagsItemKind"],"kind":"enum"},"5:3117:3526":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"17:9628:7055":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:45491:8897":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"17:13612:7840":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"5:815:6411":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"20:2882:6751":{"crate_id":20,"path":["regex_syntax","hir","print","Writer"],"kind":"struct"},"2:40133:35991":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:11434:7282":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2:2843:4995":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:6977:4730":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"17:9973:7090":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"16:3640:6928":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"2:1630:588":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"1:11894:1397":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"2:10165:5037":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:8496:9156":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"11:783:6402":{"crate_id":11,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"2:9147:120":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"2:8670:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"17:10857:24417":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"16:6935:8233":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:2518:238":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"1:8215:10961":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"0:0:1698":{"crate_id":0,"path":["regex"],"kind":"module"},"17:9028:7022":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"5:6180:6437":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"2:2242:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"17:10598:7206":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"5:7238:8611":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:9161:5516":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:11903:744":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"6:1700:10079":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"6:5900:10576":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"2:2695:225":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"1:3170:9020":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"5:7013:3525":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"17:8971:129":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"6:4980:10421":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"17:10303:7143":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"6:4865:10357":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"1:10942:6496":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"2:4183:4868":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"9:0:4594":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"2:22392:5445":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"2:21854:8662":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2:2694:226":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"11:867:8508":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"2:25847:6171":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"20:2336:28258":{"crate_id":20,"path":["regex_syntax","ast","ClassUnicodeKind"],"kind":"enum"},"2:41538:210":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2:21561:12499":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"17:13135:7706":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"2:43210:4828":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"17:9340:7029":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"16:4789:8017":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"1:3680:9029":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"1:6101:6484":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"1:11162:9062":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"16:5677:24344":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"20:2708:6845":{"crate_id":20,"path":["regex_syntax","ast","Flag"],"kind":"enum"},"2:43956:8876":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"6:1519:9964":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"16:2357:7946":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:20577:37143":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"21:2285:4914":{"crate_id":21,"path":["aho_corasick","util","primitives","PatternIDError"],"kind":"struct"},"6:4423:10193":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:8784:3526":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"6:1622:10024":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"5:963:6405":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2:40012:5981":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:11500:5660":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"2:30288:68":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2:41394:181":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"6:7526:10855":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"17:11060:7180":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"5:1981:8589":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"11:675:8499":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"16:3446:7997":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"5:6598:5606":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"1:10357:6494":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"2:1747:10878":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"2:43935:17642":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"16:7543:7987":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"16:6728:8208":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"17:13194:7718":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"21:1374:4906":{"crate_id":21,"path":["aho_corasick","ahocorasick","StreamFindIter"],"kind":"struct"},"6:5947:10602":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"21:1910:6676":{"crate_id":21,"path":["aho_corasick","util","alphabet","ByteSet"],"kind":"struct"},"2:11732:5016":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:45746:8907":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"22:872:6030":{"crate_id":22,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:30232:4804":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2:2856:4998":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"18:652:6572":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"16:6943:24351":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"2:2911:4884":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"5:7178:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"5:7095:3525":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"5:689:111":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"16:6022:24347":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"20:416:1887":{"crate_id":20,"path":["regex_syntax","debug","Bytes"],"kind":"struct"},"5:3184:6731":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:40102:5974":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:947:8506":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"16:6868:8228":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"6:7568:10863":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"20:3416:1903":{"crate_id":20,"path":["regex_syntax","utf8","Utf8Sequences"],"kind":"struct"},"17:11459:7287":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"21:1568:5443":{"crate_id":21,"path":["aho_corasick","nfa","noncontiguous","Builder"],"kind":"struct"},"6:7275:10844":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"17:10823:6985":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"2:47800:8993":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"5:5485:5605":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"18:614:38846":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"21:1446:4906":{"crate_id":21,"path":["aho_corasick","automaton","StreamFindIter"],"kind":"struct"},"21:1802:6659":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddyFat2Mask256"],"kind":"struct"},"1:8208:9031":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"21:1499:5443":{"crate_id":21,"path":["aho_corasick","dfa","Builder"],"kind":"struct"},"7:79:23341":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"5:3547:5622":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"22:798:3323":{"crate_id":22,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:0:1389":{"crate_id":1,"path":["std"],"kind":"module"},"15:219:11092":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"1:9386:6493":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"2:40726:4821":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"17:12510:7501":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:3370:17645":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"2:43656:5029":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:40226:4828":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:7808:9082":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"6:4890:10368":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"18:515:6034":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"2:39970:5980":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"6:5077:10467":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"2:40399:4847":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"17:12959:7669":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"17:12576:7508":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"1:3440:5510":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"17:13257:7734":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"2:11424:5659":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"2:46866:8944":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:9043:9060":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:46189:8924":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"17:13625:7846":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"2:45347:8891":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:1924:5934":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"20:3139:1899":{"crate_id":20,"path":["regex_syntax","hir","Look"],"kind":"enum"},"16:7467:8333":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"18:531:6035":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"16:6327:8148":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"5:1058:11987":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"2:44076:5647":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"20:2605:6392":{"crate_id":20,"path":["regex_syntax","ast","Group"],"kind":"struct"},"5:3521:163":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"17:9409:24426":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"2:43621:5033":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"20:2134:2042":{"crate_id":20,"path":["regex_syntax","ast","Literal"],"kind":"struct"},"16:5655:7975":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:42433:6845":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"6:562:9940":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"17:13101:7695":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2:47862:8995":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"2:41911:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"22:844:6029":{"crate_id":22,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"17:9772:7069":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:21443:36832":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"21:1549:6606":{"crate_id":21,"path":["aho_corasick","nfa","noncontiguous","NFA"],"kind":"struct"},"17:13488:7794":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"6:4743:10300":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"17:9188:38839":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"20:3247:4776":{"crate_id":20,"path":["regex_syntax","hir","PropertiesI"],"kind":"struct"},"1:8082:9025":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"6:5773:10511":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:7595:4824":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"15:180:11357":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"6:4538:10246":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:41991:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:3983:12423":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"16:2694:7960":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"1:4642:12443":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"1:7015:11379":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"6:5755:10498":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"17:13292:7740":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"16:2298:23461":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"1:1589:6831":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"2:40338:4843":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:40255:4838":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"2:4433:4879":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:2206:129":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"11:652:5622":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"6:4449:10204":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"16:5944:8069":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"1:5499:10639":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"1:4683:12435":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"1:8918:5436":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"21:1589:2737":{"crate_id":21,"path":["aho_corasick","packed","api","MatchKind"],"kind":"enum"},"5:2906:37326":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"2:45437:8895":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"16:7042:8253":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"21:0:1699":{"crate_id":21,"path":["aho_corasick"],"kind":"module"},"2:39176:200":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"6:4499:10225":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"16:8090:8400":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:43301:5031":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:47686:8985":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"6:573:9945":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"2:39982:35108":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"20:3005:2038":{"crate_id":20,"path":["regex_syntax","hir","HirKind"],"kind":"enum"},"20:3084:2054":{"crate_id":20,"path":["regex_syntax","hir","ClassUnicodeRange"],"kind":"struct"},"1:8047:9125":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"1:11900:745":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"17:10377:7147":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"2:43989:5042":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"2:46212:8925":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"17:11090:7215":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"5:5191:6405":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"21:1614:38872":{"crate_id":21,"path":["aho_corasick","packed","api","ForceAlgorithm"],"kind":"enum"},"1:10712:9027":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"17:9265:7027":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"5:7280:8613":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"21:1473:28283":{"crate_id":21,"path":["aho_corasick","automaton","StreamChunk"],"kind":"enum"},"1:11168:9196":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:30360:35107":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"16:6919:38832":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"2:2744:5490":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"11:1071:38826":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"16:8047:8397":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"20:2584:28251":{"crate_id":20,"path":["regex_syntax","ast","RepetitionRange"],"kind":"enum"},"1:8800:3525":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"21:2167:6712":{"crate_id":21,"path":["aho_corasick","util","primitives","SmallIndexIter"],"kind":"struct"},"6:6755:10784":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:11938:112":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:4854:12469":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"2:45367:8892":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"16:2319:7938":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"1:7659:12315":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"16:7077:24352":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"1:8776:9160":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:41289:4779":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"1:10822:9078":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"17:13821:7902":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"1:8387:2361":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"17:10712:24522":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"6:7503:10849":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"1:7665:6106":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"17:13332:7750":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"1:3135:30268":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:39961:8814":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:11027:29780":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"17:9469:7038":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"5:3673:8589":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"1:11887:936":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"17:11484:7289":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"17:11813:7372":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"2:3234:4885":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"17:8310:24405":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"5:3150:6831":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"17:13426:7779":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"1:11870:29784":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"1:1785:9009":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"6:5935:10597":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:42917:6045":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"2:46528:8939":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:41521:5388":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"2:40116:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"6:4641:10269":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:20770:17694":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"17:10015:7096":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"13:226:9865":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"6:6598:10714":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"6:4392:10176":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"21:2173:4913":{"crate_id":21,"path":["aho_corasick","util","primitives","PatternID"],"kind":"struct"},"1:676:11988":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"2:42695:2361":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"6:6587:10709":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"16:4702:8014":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"2:2812:4988":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"6:6830:10823":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:40121:8817":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:1783:9008":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"11:744:8502":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"17:13399:7772":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"6:7544:10858":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"1:11888:419":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"17:9443:7037":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"16:3047:23489":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"2:41671:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"6:4767:10312":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:13121:7703":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"6:6691:10745":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"17:9424:7036":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"1:11035:10960":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"21:1825:6662":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddyFat3Mask256"],"kind":"struct"},"2:40050:5029":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"2:41479:4900":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"22:224:3255":{"crate_id":22,"path":["memchr","memchr","memchr3"],"kind":"function"},"5:5:1565":{"crate_id":5,"path":["alloc","vec"],"kind":"macro"},"1:7697:8683":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"9:481:23347":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"16:5643:8041":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"11:279:9867":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"2:20564:36829":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"22:716:38847":{"crate_id":22,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:3079:5002":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:45792:8912":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"17:9350:38838":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"2:39302:4716":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"12:0:4597":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"21:2155:6710":{"crate_id":21,"path":["aho_corasick","util","primitives","SmallIndexError"],"kind":"struct"},"21:1833:6663":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddySlim4Mask128"],"kind":"struct"},"17:11969:7399":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"17:11573:7311":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"1:7937:9087":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"17:12282:7461":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"6:4827:10338":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"6:5870:10553":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"20:2482:28255":{"crate_id":20,"path":["regex_syntax","ast","ClassSetBinaryOpKind"],"kind":"enum"},"2:3197:4883":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"11:2060:8256":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"18:564:6037":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"16:7411:8080":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"2:2768:4978":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"5:2912:37324":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"5:2905:3909":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"21:1605:3311":{"crate_id":21,"path":["aho_corasick","packed","api","Config"],"kind":"struct"},"17:9068:38836":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:47785:8992":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"16:7509:7985":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"6:6668:10738":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"16:3749:7999":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"6:4851:10349":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"1:2867:210":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"11:1540:8516":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"17:12307:7465":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"1:10670:9189":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"2:40149:8818":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"6:5829:10535":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:30272:4806":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"17:242:6618":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"2:47732:8989":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"2:43763:8860":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"17:12915:7639":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"2:41791:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"5:7209:35991":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:45521:8898":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:10226:11991":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"1:3449:30068":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"22:741:38845":{"crate_id":22,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"1:4112:12441":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"16:154:6394":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"17:10125:7108":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"1:4508:12461":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"11:1847:5601":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"20:2878:6750":{"crate_id":20,"path":["regex_syntax","hir","print","Printer"],"kind":"struct"},"6:587:9953":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"5:4207:3526":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:12295:136":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"21:2398:6719":{"crate_id":21,"path":["aho_corasick","util","primitives","StateIDIter"],"kind":"struct"},"1:10826:8568":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"2:2692:4882":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"21:1678:5015":{"crate_id":21,"path":["aho_corasick","packed","pattern","Pattern"],"kind":"struct"},"21:1896:6674":{"crate_id":21,"path":["aho_corasick","util","alphabet","ByteClassElementRanges"],"kind":"struct"},"20:3289:2738":{"crate_id":20,"path":["regex_syntax","parser","ParserBuilder"],"kind":"struct"},"6:5857:10547":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"21:1709:6613":{"crate_id":21,"path":["aho_corasick","packed","teddy","compile","Mask"],"kind":"struct"},"17:13159:7708":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"17:13651:7855":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"1:5247:120":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"17:12126:7420":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"17:10569:7167":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"6:4571:10264":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"21:1981:4912":{"crate_id":21,"path":["aho_corasick","util","error","MatchErrorKind"],"kind":"enum"},"11:1866:6830":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"20:0:1700":{"crate_id":20,"path":["regex_syntax"],"kind":"module"},"1:7644:12314":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"1:3875:12417":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"21:1541:5443":{"crate_id":21,"path":["aho_corasick","nfa","contiguous","Builder"],"kind":"struct"},"17:9683:7062":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"16:6307:7970":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"2:2163:17695":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"1:1844:6115":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"21:2078:6698":{"crate_id":21,"path":["aho_corasick","util","prefilter","RareBytesOne"],"kind":"struct"},"16:6520:8170":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"16:7103:9172":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"17:11832:7377":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"16:6336:8149":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"20:2666:6390":{"crate_id":20,"path":["regex_syntax","ast","Flags"],"kind":"struct"},"6:1715:10088":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"5:7036:6414":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"16:6506:8168":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"17:9822:7071":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:4845:12468":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"20:1814:1900":{"crate_id":20,"path":["regex_syntax","is_word_byte"],"kind":"function"},"20:2269:6808":{"crate_id":20,"path":["regex_syntax","ast","ClassAscii"],"kind":"struct"},"2:41380:8640":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"2:7632:35882":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:11717:5015":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:10050:9176":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"2:42393:10951":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"5:780:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2:10203:6064":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:8843:11114":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"17:11258:7252":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"17:13639:7852":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"2:2506:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"16:7498:8337":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"2:12597:5596":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"17:12224:7449":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"17:13791:7894":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"17:8548:24412":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"20:2283:28257":{"crate_id":20,"path":["regex_syntax","ast","ClassAsciiKind"],"kind":"enum"},"16:6819:8222":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"1:11091:9060":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"2:44347:161":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"2:47666:8983":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:8160:9131":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"16:2931:23487":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"17:9148:38840":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"20:3121:2109":{"crate_id":20,"path":["regex_syntax","hir","ClassBytesRange"],"kind":"struct"},"11:60:11366":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"5:1351:3526":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:39334:5004":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"17:8420:24408":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"6:7497:10848":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"6:4431:10195":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"16:8180:24357":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"16:4904:8021":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"1:8427:12481":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"2:9813:222":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"16:5104:8027":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"11:1035:8510":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"18:644:6572":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"2:40699:4815":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:22227:178":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"20:3365:1902":{"crate_id":20,"path":["regex_syntax","utf8","Utf8Sequence"],"kind":"enum"},"1:11902:743":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"2:43084:8853":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"17:13443:7783":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"16:8156:7991":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"11:1839:3526":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:8356:5015":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:420:6900":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"17:10967:7206":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:2847:4996":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"11:1634:6403":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"6:494:9898":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"1:11393:9030":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"17:9895:7079":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"16:2426:7949":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"11:1050:23426":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"2:2751:996":{"crate_id":2,"path":["core","ops"],"kind":"module"},"1:9081:9174":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"1:11688:6503":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"1:10416:9019":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"2:6768:4810":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"17:8753:6891":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"1:11493:9069":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"20:3324:6882":{"crate_id":20,"path":["regex_syntax","unicode","SimpleCaseFolder"],"kind":"struct"},"20:2833:2806":{"crate_id":20,"path":["regex_syntax","hir","literal","Seq"],"kind":"struct"},"1:3615:12413":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"22:648:6035":{"crate_id":22,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:47072:8974":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"21:1483:3313":{"crate_id":21,"path":["aho_corasick","dfa","DFA"],"kind":"struct"},"17:12318:7466":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"16:4969:8023":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:7202:152":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"2:43809:8869":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"16:7317:38833":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"2:44092:5655":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"6:6785:10801":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"16:8256:8416":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"2:2264:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"16:7366:24353":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"17:13219:7726":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"1:6373:4742":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"0:23:1667":{"crate_id":0,"path":["regex","bytes"],"kind":"module"},"1:926:8500":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"15:0:4599":{"crate_id":15,"path":["addr2line"],"kind":"module"},"18:599:38847":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"6:123:18051":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:20990:12500":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"20:2824:3078":{"crate_id":20,"path":["regex_syntax","hir","literal","ExtractKind"],"kind":"enum"},"2:40069:5976":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"1:1768:610":{"crate_id":1,"path":["std","env"],"kind":"module"},"1:8242:9139":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"2:30466:35096":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"22:665:141":{"crate_id":22,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:3995:8620":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"2:43640:5020":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"16:5886:8063":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"17:11861:7382":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"5:1213:8510":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2:30302:35110":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"1:4760:12431":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"11:2198:9871":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"16:8269:128":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"16:6854:8226":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"16:7478:7984":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"1:1080:8514":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"1:10652:10969":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"18:96:4929":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:10948:6497":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"2:43315:5028":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"11:816:8515":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"21:1660:6646":{"crate_id":21,"path":["aho_corasick","packed","pattern","Patterns"],"kind":"struct"},"6:4619:10267":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"1:8124:4838":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"17:10735:7190":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"1:8091:9027":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"6:1721:10089":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"6:7230:10832":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"6:4941:10404":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"1:4903:4892":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"8:0:4593":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"17:386:6898":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"17:13678:7864":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"17:13411:7775":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"17:9275:38841":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"20:2357:28259":{"crate_id":20,"path":["regex_syntax","ast","ClassUnicodeOpKind"],"kind":"enum"},"21:2111:6706":{"crate_id":21,"path":["aho_corasick","util","prefilter","StartBytesOne"],"kind":"struct"},"21:1585:6639":{"crate_id":21,"path":["aho_corasick","nfa","noncontiguous","QueuedSet"],"kind":"struct"},"2:44291:195":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"21:1623:5443":{"crate_id":21,"path":["aho_corasick","packed","api","Builder"],"kind":"struct"},"5:2077:5432":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"1:10835:9050":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"2:41606:183":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"17:9696:7044":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"17:8683:6889":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"16:2594:7956":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:41512:4901":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"6:7538:10857":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"5:5108:1367":{"crate_id":5,"path":["alloc","slice"],"kind":"module"},"1:8141:1887":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"22:699:4937":{"crate_id":22,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"2:10010:1663":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:44108:5649":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:3973:12422":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:44164:17777":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"2:4042:5631":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:42498:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"6:7491:10847":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:45391:8893":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:42458:68":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"16:7757:8348":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"6:6628:10736":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"6:6116:10653":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"6:4416:10189":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"17:11600:7320":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"2:2317:125":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"6:6776:10798":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"6:474:6744":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"14:40:7253":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"16:8142:8407":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"1:922:8499":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"2:43884:8650":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"5:6579:5605":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"20:3102:4773":{"crate_id":20,"path":["regex_syntax","hir","ClassBytes"],"kind":"struct"},"17:11532:7301":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:3142:5003":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"17:10052:7101":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"6:4960:10414":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"6:4478:10214":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"6:4318:10125":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"5:3129:37510":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:43375:5037":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"21:1640:38874":{"crate_id":21,"path":["aho_corasick","packed","api","SearchKind"],"kind":"enum"},"2:45990:8918":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:9120:30624":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"6:4553:10253":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"6:7252:10833":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:46158:8923":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"17:10897:7202":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"1:11449:9197":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"16:6376:7972":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"17:12550:7506":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"17:12980:7674":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"6:532:9923":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"6:579:9948":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"1:6907:6487":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"22:788:6026":{"crate_id":22,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:2832:6475":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"6:568:9943":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"17:9986:7091":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"2:42031:4736":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"17:12770:7526":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"16:4540:8010":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:43792:8868":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"5:4321:245":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"5:6097:12588":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:9117:132":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"21:2046:3261":{"crate_id":21,"path":["aho_corasick","util","prefilter","Memmem"],"kind":"struct"},"2:2151:589":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:8912:107":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"1:3987:12424":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"9:174:11105":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"17:11770:7361":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"16:8170:8409":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"6:4653:10270":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"5:3622:6405":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:8806:9051":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"16:5571:7974":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:4386:4877":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"1:8854:12490":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"6:4559:10255":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"21:1948:4910":{"crate_id":21,"path":["aho_corasick","util","error","BuildError"],"kind":"struct"},"21:1383:4907":{"crate_id":21,"path":["aho_corasick","ahocorasick","AhoCorasickBuilder"],"kind":"struct"},"6:6057:10641":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"5:7019:8604":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"2:47526:8979":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"18:755:6030":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:44100:5654":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"17:11471:7288":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"2:20984:12498":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"2:40356:4854":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"5:5293:1397":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"2:5586:4832":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"5:5818:4735":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"17:10743:7192":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"1:6236:206":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"6:4813:10334":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"1:5910:6478":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"22:731:38846":{"crate_id":22,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"1:10422:9023":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"5:1995:8590":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"2:44084:5652":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"2:46446:8938":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"6:5843:10546":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:45592:8901":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:20549:36829":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"2:6917:2040":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"16:3872:8002":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"17:12236:7451":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"17:10885:7201":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"18:582:4937":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"5:783:6408":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"2:4808:795":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:46716:8943":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"2:47572:8980":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"5:265:6405":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"6:7532:10856":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"17:11422:7281":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"17:12634:7517":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:45622:8902":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"2:1637:4800":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"21:1507:6606":{"crate_id":21,"path":["aho_corasick","nfa","contiguous","NFA"],"kind":"struct"},"20:3181:103":{"crate_id":20,"path":["regex_syntax","hir","Capture"],"kind":"struct"},"1:1821:9010":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:22359:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:959:8508":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"1:8154:5032":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"2:43173:6055":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"22:632:6034":{"crate_id":22,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"1:8907:9164":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"5:3688:8590":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"6:6136:10667":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"21:1434:4909":{"crate_id":21,"path":["aho_corasick","automaton","FindOverlappingIter"],"kind":"struct"},"1:2574:9016":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"17:9218:7026":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"1:7595:5444":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"14:0:4598":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"16:0:4600":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:20742:12506":{"crate_id":2,"path":["core","core_simd","cast","SimdCastPtr"],"kind":"trait"},"1:10462:5442":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"13:110:38827":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"17:12894:7629":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"17:13145:7707":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"17:11946:7394":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"21:1356:4908":{"crate_id":21,"path":["aho_corasick","ahocorasick","FindIter"],"kind":"struct"},"21:2481:2737":{"crate_id":21,"path":["aho_corasick","util","search","MatchKind"],"kind":"enum"},"16:4932:8022":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"1:2346:12363":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"20:3319:4761":{"crate_id":20,"path":["regex_syntax","unicode","UnicodeWordError"],"kind":"struct"},"11:859:8507":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"17:12345:7469":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"5:1366:5622":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"21:1729:1688":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","Exec"],"kind":"enum"},"2:42658:5726":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:43946:8872":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"16:7803:8356":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:43674:5030":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:2706:4881":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"6:5798:10516":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:3163:5005":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"16:3899:8003":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:46416:8937":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:8838:12491":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"2:10258:5038":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:21827:8661":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:9062:9061":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"1:1985:184":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"16:6671:8195":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"5:6248:5601":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"2:9961:3526":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"6:6553:10690":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:13211:7723":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2:2788:4987":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"6:554:9935":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"20:2238:6804":{"crate_id":20,"path":["regex_syntax","ast","ClassPerl"],"kind":"struct"},"16:3815:8001":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"11:1859:6829":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"16:2337:7940":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"16:6179:8111":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"2:8467:1156":{"crate_id":2,"path":["core","result"],"kind":"module"},"5:4732:668":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"17:9796:7070":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"1:9877:8835":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"5:4336:6428":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"1:2614:9017":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"6:4466:10210":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:40718:4819":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:12501:107":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"16:6390:8156":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"16:5418:8030":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"1:911:5599":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"6:5747:10496":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"1:3129:28900":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"21:1788:6657":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddySlim2Mask128"],"kind":"struct"},"2:2354:189":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"17:13053:7686":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"17:10649:7178":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"1:2540:6472":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"2:7588:3693":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:554:5439":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"14:202:17643":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"2:20760:12502":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr"],"kind":"trait"},"17:12522:7502":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"16:5305:8028":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2:3510:5601":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"16:3063:6924":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"2:3382:8619":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"5:1612:6405":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"22:556:6888":{"crate_id":22,"path":["memchr","cow","Imp"],"kind":"enum"},"2:39379:8692":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:20768:35587":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"17:8651:7013":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"2:12382:8652":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"16:2572:7955":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:40277:4831":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"17:12033:7408":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"16:5920:7924":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"11:393:11367":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"17:11037:24418":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"1:1572:5599":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"2:2749:5492":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"9:502:8571":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"1:9033:218":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"11:97:9866":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"17:13419:7778":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"1:3168:9019":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:20922:12378":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"22:681:6037":{"crate_id":22,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"16:7635:8344":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"5:633:8585":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"16:6488:8161":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"6:1709:10085":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"6:4667:10271":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"16:2862:7967":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"2:7263:4010":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"20:2374:6824":{"crate_id":20,"path":["regex_syntax","ast","ClassBracketed"],"kind":"struct"},"2:21083:12378":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"17:12046:7409":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"17:12403:7479":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"1:10657:9080":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"2:43461:1664":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:1565:3525":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"20:2176:28260":{"crate_id":20,"path":["regex_syntax","ast","SpecialLiteralKind"],"kind":"enum"},"1:6552:4751":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"6:1525:9967":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"18:574:6572":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"21:2420:6722":{"crate_id":21,"path":["aho_corasick","util","remapper","IndexMapper"],"kind":"struct"},"2:2827:4992":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:7670:9075":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"2:40206:8819":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"11:703:8500":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"1:4104:11377":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"16:6146:194":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"17:10747:128":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"5:3088:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"20:2067:28247":{"crate_id":20,"path":["regex_syntax","ast","Ast"],"kind":"enum"},"2:39161:5001":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"1:6485:4746":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"17:9670:7061":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"5:4914:6426":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"21:2009:28284":{"crate_id":21,"path":["aho_corasick","util","prefilter","Candidate"],"kind":"enum"},"21:2071:6697":{"crate_id":21,"path":["aho_corasick","util","prefilter","RareByteOffset"],"kind":"struct"},"1:11886:371":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"17:13169:7709":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"6:6814:10817":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"2:45938:8916":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"6:6605:10718":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:2469:12378":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"17:12536:7503":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:8264:10718":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"20:2930:6868":{"crate_id":20,"path":["regex_syntax","hir","translate","TranslatorI"],"kind":"struct"},"2:3644:3525":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"2:5987:4855":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"17:10527:24520":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"11:638:3526":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"16:7626:8343":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:4007:8621":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"6:5015:10434":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"2:2780:4980":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:6586:217":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"1:1062:8509":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"17:8931:6897":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"1:10419:9021":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"2:22557:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"5:3975:5601":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"16:4728:8015":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"2:14:2725":{"crate_id":2,"path":["core","write"],"kind":"macro"},"17:9653:7058":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"6:4344:10145":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:487:6901":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"5:2087:8591":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"1:3782:9030":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"20:280:38865":{"crate_id":20,"path":["regex_syntax","ast","visitor","ClassInduct"],"kind":"enum"},"2:41345:9031":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"2:1916:5632":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"5:4047:5622":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"17:13316:7748":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"2:20938:12496":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"17:12098:7416":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"17:3266:6916":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"20:2943:6390":{"crate_id":20,"path":["regex_syntax","hir","translate","Flags"],"kind":"struct"},"1:11859:12316":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"2:9142:112":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:44273:205":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"6:7443:10845":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"17:13721:7880":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"2:8250:3375":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"2:4406:4878":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"20:2858:4939":{"crate_id":20,"path":["regex_syntax","hir","literal","PreferenceTrie"],"kind":"struct"},"2:2839:4994":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:501:5432":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"2:21803:3109":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"6:6569:10702":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:43579:5036":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"16:7449:8326":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"1:11054:9061":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"20:2467:6828":{"crate_id":20,"path":["regex_syntax","ast","ClassSetBinaryOp"],"kind":"struct"},"1:2360:12367":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"2:3169:5007":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2:40306:4840":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:42174:5514":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"20:2041:6784":{"crate_id":20,"path":["regex_syntax","ast","WithComments"],"kind":"struct"},"21:2064:6619":{"crate_id":21,"path":["aho_corasick","util","prefilter","RareByteOffsets"],"kind":"struct"},"16:2905:7969":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"1:585:4863":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"1:2372:12373":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:47402:8977":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:6538:4750":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"2:1544:6426":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"6:7520:10854":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"1:11906:1496":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"11:452:142":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"16:2448:7950":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"17:10923:7203":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"20:3065:4771":{"crate_id":20,"path":["regex_syntax","hir","ClassUnicode"],"kind":"struct"},"18:736:6024":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"17:10798:24416":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"20:2803:4782":{"crate_id":20,"path":["regex_syntax","hir","interval","IntervalSetIter"],"kind":"struct"},"17:12158:7424":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"21:2194:6717":{"crate_id":21,"path":["aho_corasick","util","primitives","StateID"],"kind":"struct"},"2:44152:8881":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"2:42666:8845":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"21:1782:6656":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddyFat1Mask256"],"kind":"struct"},"16:5724:8046":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"1:3939:12421":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"20:3195:2089":{"crate_id":20,"path":["regex_syntax","hir","Repetition"],"kind":"struct"},"1:3292:12400":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"1:5021:9041":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:4761:389":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"11:2204:38825":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"2:21107:12378":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:2550:6458":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"17:12072:7412":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"16:535:7927":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"16:6243:38830":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"17:9826:7072":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:43525:5035":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"21:2433:4779":{"crate_id":21,"path":["aho_corasick","util","search","Span"],"kind":"struct"},"16:6981:8244":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"20:2639:6839":{"crate_id":20,"path":["regex_syntax","ast","CaptureName"],"kind":"struct"},"1:8955:9169":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"2:21665:8654":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"18:491:6888":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"17:975:6903":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"18:80:4928":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:4990:9041":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"16:7859:24356":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"20:1928:128":{"crate_id":20,"path":["regex_syntax","ast","Error"],"kind":"struct"},"16:7697:7979":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"21:1954:4770":{"crate_id":21,"path":["aho_corasick","util","error","ErrorKind"],"kind":"enum"},"2:2758:4982":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:3401:9026":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:42403:68":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"1:8226:9137":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"17:9839:7073":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:40034:5030":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"11:2212:9874":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"2:39372:3108":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"2:9405:5723":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"17:10334:7026":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:43857:8870":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:40163:2105":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"typedef"},"6:1657:10053":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:21787:10881":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"17:11628:7330":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:47648:8982":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"10:44:8519":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"2:43333:5024":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"2:2784:4983":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"17:13033:7680":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"17:9523:7046":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:41462:5622":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"17:9498:7044":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:0:497":{"crate_id":2,"path":["core"],"kind":"module"},"1:3881:12416":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"2:21431:6172":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"17:11136:7219":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"20:2054:6785":{"crate_id":20,"path":["regex_syntax","ast","Comment"],"kind":"struct"},"2:10244:1664":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"16:2642:7958":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"2:4782:36453":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"5:5235:2083":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:2245:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"16:5998:24346":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"22:753:6588":{"crate_id":22,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"20:2872:6748":{"crate_id":20,"path":["regex_syntax","hir","print","PrinterBuilder"],"kind":"struct"},"5:5035:4735":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"20:2551:6832":{"crate_id":20,"path":["regex_syntax","ast","RepetitionOp"],"kind":"struct"},"2:20982:12378":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"6:7509:10850":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"6:5967:10610":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:21088:12497":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"2:4141:4888":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"5:1242:8514":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"17:12923:7640":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"1:2387:4605":{"crate_id":1,"path":["std","io"],"kind":"module"},"2:2926:3386":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"1:4096:11376":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:43144:6052":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:1568:5601":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:4460:419":{"crate_id":2,"path":["core","char"],"kind":"module"},"2:2800:4986":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"6:119:18050":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"16:7259:4900":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"1:7257:28931":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"17:11615:7326":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"2:2684:220":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"2:41470:3525":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"21:2405:6720":{"crate_id":21,"path":["aho_corasick","util","primitives","WithStateIDIter"],"kind":"struct"},"18:507:6572":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"2:43778:8865":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2:20804:12508":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"1:7932:9086":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"21:1721:6643":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","Teddy"],"kind":"struct"},"21:2464:1657":{"crate_id":21,"path":["aho_corasick","util","search","Match"],"kind":"struct"},"1:5570:6479":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"1:3458:12376":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"2:11712:1643":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"20:2252:28256":{"crate_id":20,"path":["regex_syntax","ast","ClassPerlKind"],"kind":"enum"},"20:1890:28268":{"crate_id":20,"path":["regex_syntax","ast","parse","ClassState"],"kind":"enum"},"6:4590:10265":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"1:4176:9032":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"18:699:6028":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"16:2967:23488":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"16:7683:7989":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"11:828:12318":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"5:7103:3525":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"1:11908:1498":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"6:5816:10526":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:1594:6731":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"22:824:3276":{"crate_id":22,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:2981:3694":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"1:6009:6480":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"6:4970:10420":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"21:2117:6707":{"crate_id":21,"path":["aho_corasick","util","prefilter","StartBytesTwo"],"kind":"struct"},"2:43357:1663":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"17:9641:7056":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"11:1561:8517":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"2:47706:8987":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"17:10452:7155":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"18:671:6026":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"6:1609:10017":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"21:1770:6654":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddySlim1Mask128"],"kind":"struct"},"2:6585:3095":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"17:1947:6909":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"16:5557:7971":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"1:10702:119":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"17:9917:7084":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"11:1843:3525":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"5:6608:5607":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"6:4836:10341":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"17:13763:7885":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"2:2701:228":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:11737:5014":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"16:3300:7996":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"2:43223:6043":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:5556:206":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:2603:128":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"1:1895:5933":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"5:7150:4722":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"20:2619:28249":{"crate_id":20,"path":["regex_syntax","ast","GroupKind"],"kind":"enum"},"6:7258:10835":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:43407:5040":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:47695:8986":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"21:1817:6661":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddySlim3Mask256"],"kind":"struct"},"20:2734:28269":{"crate_id":20,"path":["regex_syntax","either","Either"],"kind":"enum"},"22:726:3084":{"crate_id":22,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"1:844:3526":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"17:8389:24407":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"2:41951:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"6:6578:10708":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"21:2085:6700":{"crate_id":21,"path":["aho_corasick","util","prefilter","RareBytesTwo"],"kind":"struct"},"17:9098:7023":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:44104:5648":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"2:11672:3695":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"6:4784:10323":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"18:690:6027":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"20:3314:4785":{"crate_id":20,"path":["regex_syntax","unicode","CaseFoldError"],"kind":"struct"},"16:4872:8020":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"2:4602:5969":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"1:8968:9172":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"16:2470:7951":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"5:1382:3525":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"22:220:1620":{"crate_id":22,"path":["memchr","memchr","memchr"],"kind":"function"},"17:11282:7253":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"2:21337:12511":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"20:471:1897":{"crate_id":20,"path":["regex_syntax","hir"],"kind":"module"},"16:5741:24345":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"2:20869:12503":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr"],"kind":"trait"},"5:4005:6405":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:8675:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"17:10080:7104":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"21:174:38986":{"crate_id":21,"path":["aho_corasick","ahocorasick","AcAutomaton"],"kind":"trait"},"5:1197:8256":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2:40057:5975":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"6:482:9892":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"17:13356:7757":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"6:4383:10171":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"20:2994:1898":{"crate_id":20,"path":["regex_syntax","hir","Hir"],"kind":"struct"},"17:12461:7488":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"2:7240:121":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"2:45644:8903":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:3060:9018":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"16:6662:8194":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"17:11821:7374":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"16:4624:8013":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"17:10257:7140":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"21:2499:4916":{"crate_id":21,"path":["aho_corasick","util","search","StartKind"],"kind":"enum"},"11:1524:23427":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"1:10628:9185":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"11:991:8256":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:11210:9066":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"6:4797:10328":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:11249:17746":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"}},"external_crates":{"20":{"name":"regex_syntax","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"memchr","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"aho_corasick","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":26}