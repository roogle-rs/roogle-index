{"root":"0:0:1653","crate_version":"1.6.0","includes_private":false,"index":{"0:1035:1895":{"id":"0:1035:1895","crate_id":0,"name":"only_utf8","span":{"filename":"src/prog.rs","begin":[141,4],"end":[143,5]},"visibility":"public","docs":"Returns true if this program exclusively matches valid UTF-8 bytes.\n\nThat is, if an invalid UTF-8 byte is seen, then no match is possible.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1615:3859":{"id":"0:1615:3859","crate_id":0,"name":"size_hint","span":{"filename":"src/re_unicode.rs","begin":[1096,4],"end":[1098,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2417:664":{"id":"0:2417:664","crate_id":0,"name":"fmt","span":{"filename":"src/prog.rs","begin":[340,22],"end":[340,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:806:1845":{"id":"0:806:1845","crate_id":0,"name":"is_word_byte","span":{"filename":"src/input.rs","begin":[386,4],"end":[391,5]},"visibility":"public","docs":"Returns true iff the byte is a word byte.\n\nIf the byte is absent, then false is returned.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2460":{"id":"0:2460","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[2,16],"end":[2,21]},"visibility":{"restricted":{"parent":"0:1063:1600","path":"::re_builder"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexOptions","id":"0:2446:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2461:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3405:4927-0:543:1642":{"id":"a:2:3405:4927-0:543:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecBuilder","id":"0:543:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13801:62924":{"id":"2:13801:62924","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9533:3267-0:2031:2692":{"id":"a:2:9533:3267-0:2031:2692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecNoSync","id":"0:2031:2692","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2914:3584":{"id":"0:2914:3584","crate_id":0,"name":"SubCapturesPosIter","span":{"filename":"src/re_trait.rs","begin":[58,0],"end":[61,1]},"visibility":"public","docs":"An iterator over capture group positions for a particular match of a\nregular expression.\n\nPositions are byte indices in terms of the original string matched.\n\n`'c` is the lifetime of the captures.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:3376:224-0:2914:3584","a:2:3405:4927-0:2914:3584","a:2:9533:3267-0:2914:3584","a:2:9534:3266-0:2914:3584","a:2:3364:215-0:2914:3584","b:2:3201-0:2914:3584","b:2:3197-0:2914:3584","b:2:3207-0:2914:3584","b:2:2868-0:2914:3584","b:2:4097-0:2914:3584","b:2:8677-0:2914:3584","b:2:2865-0:2914:3584","b:2:3212-0:2914:3584","b:5:848-0:2914:3584","0:2918","0:2921","0:1357","0:1363","0:1365"]}},"2:3526:4868":{"id":"2:3526:4868","crate_id":2,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3528:363"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:4097-0:2585:3575":{"id":"b:2:4097-0:2585:3575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2585:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3479:4858":{"id":"2:3479:4858","crate_id":2,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3481:1111"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:543:1642":{"id":"0:543:1642","crate_id":0,"name":"ExecBuilder","span":{"filename":"src/exec.rs","begin":[113,0],"end":[118,1]},"visibility":"public","docs":"Facilitates the construction of an executor by exposing various knobs\nto control how a regex is executed and what kinds of resources it's\npermitted to use.","links":{},"attrs":["#[allow(missing_debug_implementations)]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:553","a:2:3376:224-0:543:1642","a:2:3405:4927-0:543:1642","a:2:9533:3267-0:543:1642","a:2:9534:3266-0:543:1642","a:2:3364:215-0:543:1642","b:2:3201-0:543:1642","b:2:3197-0:543:1642","b:2:3207-0:543:1642","b:2:2868-0:543:1642","b:2:4097-0:543:1642","b:2:2865-0:543:1642","b:2:3212-0:543:1642"]}},"0:2416":{"id":"0:2416","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[340,22],"end":[340,27]},"visibility":{"restricted":{"parent":"0:1000:1632","path":"::prog"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2396:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2417:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3212-0:2375:1852":{"id":"b:2:3212-0:2375:1852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstSave","id":"0:2375:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:627:1864":{"id":"0:627:1864","crate_id":0,"name":"capture_name_idx","span":{"filename":"src/exec.rs","begin":[1249,4],"end":[1251,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arc","id":"5:6739:69","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"HashMap","id":"1:1261:144","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2387":{"id":"0:2387","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[319,16],"end":[319,21]},"visibility":{"restricted":{"parent":"0:1000:1632","path":"::prog"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstSplit","id":"0:2382:1853","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2388:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9533:3267-0:2424:1850":{"id":"a:2:9533:3267-0:2424:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstChar","id":"0:2424:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2257:1558":{"id":"0:2257:1558","crate_id":0,"name":"0","span":{"filename":"src/literal/imp.rs","begin":[226,7],"end":[226,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Literal","id":"20:2912:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"2:13789:62919":{"id":"2:13789:62919","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:13332:1596","`DoubleEndedIterator`":"2:8717:121","prim@char":"1:15883:4458","str::rmatch_indices":"2:13792:62920"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:49939:4908","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1482":{"id":"0:1482","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[169,0],"end":[589,1]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":"Core regular expression methods.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2967:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1483:926","0:1484:2277","0:1485:2536","0:1487:3643","0:1490:1919","0:1493:3700","0:1496:1929","0:1499:3721","0:1502:2484","0:1505:3791","0:1508:3785"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13759:34859":{"id":"2:13759:34859","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"self::pattern":"2:13332:1596","prim@char":"1:15883:4458"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:13124:4895","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1528:3839":{"id":"0:1528:3839","crate_id":0,"name":"captures_len","span":{"filename":"src/re_unicode.rs","begin":[724,4],"end":[726,5]},"visibility":"public","docs":"Returns the number of captures.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:553":{"id":"0:553","crate_id":0,"name":null,"span":{"filename":"src/exec.rs","begin":[129,0],"end":[382,1]},"visibility":{"restricted":{"parent":"0:451:1626","path":"::exec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ExecBuilder","id":"0:543:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:554:926","0:555:2741","0:559:2749","0:560:2755","0:561:2705","0:562:2767","0:563:1620","0:564:1895","0:565:1575","0:570:2790"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2432:1827":{"id":"0:2432:1827","crate_id":0,"name":"goto","span":{"filename":"src/prog.rs","begin":[375,4],"end":[375,21]},"visibility":"public","docs":"The next location to execute in the program if this instruction\nsucceeds.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"0:2584:2789":{"id":"0:2584:2789","crate_id":0,"name":"nest_limit","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the nesting limit for this parser.\n\nThe nesting limit controls how deep the abstract syntax tree is allowed\nto be. If the AST exceeds the given limit (e.g., with too many nested\ngroups), then an error is returned by the parser.\n\nThe purpose of this limit is to act as a heuristic to prevent stack\noverflow for consumers that do structural induction on an `Ast` using\nexplicit recursion. While this crate never does this (instead using\nconstant stack space and moving the call stack to the heap), other\ncrates may.\n\nThis limit is not checked until the entire Ast is parsed. Therefore,\nif callers want to put a limit on the amount of heap space used, then\nthey should impose a limit on the length, in bytes, of the concrete\npattern string. In particular, this is viable since this parser\nimplementation will limit itself to heap space proportional to the\nlength of the pattern string.\n\nNote that a nest limit of `0` will return a nest limit error for most\npatterns but not all. For example, a nest limit of `0` permits `a` but\nnot `ab`, since `ab` requires a concatenation, which results in a nest\ndepth of `1`. In general, a nest limit is not something that manifests\nin an obvious way in the concrete syntax, therefore, it should not be\nused in a granular way.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2585:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:560:2755":{"id":"0:560:2755","crate_id":0,"name":"automatic","span":{"filename":"src/exec.rs","begin":[171,4],"end":[174,5]},"visibility":"public","docs":"Set the matching engine to be automatically determined.\n\nThis is the default state and will apply whatever optimizations are\npossible, such as running a DFA.\n\nThis overrides whatever was previously set via the `nfa` or\n`bounded_backtracking` methods.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2513:2787":{"id":"0:2513:2787","crate_id":0,"name":"ignore_whitespace","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the value for the ignore whitespace (`x`) flag.\n\nWhen enabled, whitespace such as new lines and spaces will be ignored\nbetween expressions of the pattern, and `#` can be used to start a\ncomment until the next new line.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2519:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3212-0:2349:1648":{"id":"b:2:3212-0:2349:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:2349:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2443:414":{"id":"0:2443:414","crate_id":0,"name":"clone","span":{"filename":"src/prog.rs","begin":[418,9],"end":[418,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"InstBytes","id":"0:2438:1849","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3376:224-0:3020:1606":{"id":"a:2:3376:224-0:3020:1606","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3020:1606","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:3197-0:2396:1647":{"id":"b:2:3197-0:2396:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2396:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9534:3266-0:2585:3575":{"id":"a:2:9534:3266-0:2585:3575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2585:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3212-0:1565:1608":{"id":"b:2:3212-0:1565:1608","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1608","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9533:3267-0:173:1640":{"id":"a:2:9533:3267-0:173:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Compiler","id":"0:173:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2487:2789":{"id":"0:2487:2789","crate_id":0,"name":"nest_limit","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the nesting limit for this parser.\n\nThe nesting limit controls how deep the abstract syntax tree is allowed\nto be. If the AST exceeds the given limit (e.g., with too many nested\ngroups), then an error is returned by the parser.\n\nThe purpose of this limit is to act as a heuristic to prevent stack\noverflow for consumers that do structural induction on an `Ast` using\nexplicit recursion. While this crate never does this (instead using\nconstant stack space and moving the call stack to the heap), other\ncrates may.\n\nThis limit is not checked until the entire Ast is parsed. Therefore,\nif callers want to put a limit on the amount of heap space used, then\nthey should impose a limit on the length, in bytes, of the concrete\npattern string. In particular, this is viable since this parser\nimplementation will limit itself to heap space proportional to the\nlength of the pattern string.\n\nNote that a nest limit of `0` will return a nest limit error for most\npatterns but not all. For example, a nest limit of `0` permits `a` but\nnot `ab`, since `ab` requires a concatenation, which results in a nest\ndepth of `1`. In general, a nest limit is not something that manifests\nin an obvious way in the concrete syntax, therefore, it should not be\nused in a granular way.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2488:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2336:1338":{"id":"0:2336:1338","crate_id":0,"name":"start","span":{"filename":"src/prog.rs","begin":[35,4],"end":[35,22]},"visibility":"public","docs":"A pointer to the start instruction. This can vary depending on how\nthe program was compiled. For example, programs for use with the DFA\nengine have a `.*?` inserted at the beginning of unanchored regular\nexpressions. The actual starting point of the program is after the\n`.*?`.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"0:58":{"id":"0:58","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[728,4],"end":[728,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::re_bytes","name":"re_bytes","id":"0:1068:1622","glob":true}},"0:1185":{"id":"0:1185","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[654,0],"end":[684,1]},"visibility":{"restricted":{"parent":"0:1068:1622","path":"::re_bytes"}},"docs":"Auxiliary methods.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2613:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1186:312","0:1187:2936","0:1188:3839","0:1189:3683"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2549:1866":{"id":"0:2549:1866","crate_id":0,"name":"size_limit","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the approximate size limit of the compiled regular expression.\n\nThis roughly corresponds to the number of bytes occupied by a single\ncompiled program. If the program exceeds this number, then a\ncompilation error is returned.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2552:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9533:3267-0:2488:3495":{"id":"a:2:9533:3267-0:2488:3495","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2488:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2964":{"id":"0:2964","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[28,33],"end":[28,42]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2917:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2966:608"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3197-0:2174:1644":{"id":"b:2:3197-0:2174:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:2174:1644","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2991:1617":{"id":"0:2991:1617","crate_id":0,"name":"SplitN","span":{"filename":"src/re_unicode.rs","begin":[819,0],"end":[822,1]},"visibility":"public","docs":"Yields at most `N` substrings delimited by a regular expression match.\n\nThe last substring will be whatever remains after splitting.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the string being split.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:3376:224-0:2991:1617","a:2:3405:4927-0:2991:1617","a:2:9533:3267-0:2991:1617","a:2:9534:3266-0:2991:1617","a:2:3364:215-0:2991:1617","b:2:3201-0:2991:1617","b:2:3197-0:2991:1617","b:2:3207-0:2991:1617","b:2:2868-0:2991:1617","b:2:4097-0:2991:1617","b:2:8677-0:2991:1617","b:2:2865-0:2991:1617","b:2:3212-0:2991:1617","0:2996","0:1551","0:1557"]}},"b:2:3201-0:2585:3575":{"id":"b:2:3201-0:2585:3575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2585:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:872:2867":{"id":"0:872:2867","crate_id":0,"name":"find_end","span":{"filename":"src/literal/imp.rs","begin":[108,4],"end":[118,5]},"visibility":"public","docs":"Like find, except matches must end at index `haystack.len()`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3364:215-0:2198:1643":{"id":"a:2:3364:215-0:2198:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2331:1650":{"id":"0:2331:1650","crate_id":0,"name":"Program","span":{"filename":"src/prog.rs","begin":[18,0],"end":[75,1]},"visibility":"public","docs":"Program is a sequence of instructions and various facts about thos\ninstructions.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:2332:1861","0:2333:1773","0:2334:1919","0:2335:1864","0:2336:1338","0:2337:1870","0:2338:1895","0:2339:1891","0:2340:1902","0:2341:1906","0:2342:1811","0:2343:1916","0:2344:2005","0:2345:1814","0:2346:2172"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:1029","a:2:3376:224-0:2331:1650","a:2:3405:4927-0:2331:1650","a:2:9533:3267-0:2331:1650","a:2:9534:3266-0:2331:1650","a:2:3364:215-0:2331:1650","b:2:3201-0:2331:1650","b:2:3197-0:2331:1650","b:2:3207-0:2331:1650","b:2:2868-0:2331:1650","b:2:4097-0:2331:1650","b:2:2865-0:2331:1650","b:2:3212-0:2331:1650","b:5:848-0:2331:1650","0:2347","0:1037","0:1040","0:1049"]}},"0:2379:414":{"id":"0:2379:414","crate_id":0,"name":"clone","span":{"filename":"src/prog.rs","begin":[309,9],"end":[309,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"InstSave","id":"0:2375:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:2012:128":{"id":"b:2:2868-0:2012:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4097-0:173:1640":{"id":"b:2:4097-0:173:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Compiler","id":"0:173:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2374:664":{"id":"0:2374:664","crate_id":0,"name":"fmt","span":{"filename":"src/prog.rs","begin":[267,16],"end":[267,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2386:414":{"id":"0:2386:414","crate_id":0,"name":"clone","span":{"filename":"src/prog.rs","begin":[319,9],"end":[319,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"InstSplit","id":"0:2382:1853","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2353:1824":{"id":"0:2353:1824","crate_id":0,"name":"Save","span":{"filename":"src/prog.rs","begin":[279,4],"end":[279,18]},"visibility":"default","docs":"Save causes the program to save the current location of the input in\nthe slot indicated by InstSave.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:2355:1558"]}},"2:13745:58813":{"id":"2:13745:58813","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"self::pattern":"2:13332:1596","prim@char":"1:15883:4458"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13357:4890","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23138:6553":{"id":"2:23138:6553","crate_id":2,"name":"SimdUint","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23139:60935","2:23140:1238","2:23141:1239","2:23142:60936","2:23143:60937","2:23144:60938","2:23145:60939","2:23146:60940","2:23147:60941","2:23148:60942"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3374:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23151:6013","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1133":{"id":"0:1133","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[80,0],"end":[85,1]},"visibility":{"restricted":{"parent":"0:1068:1622","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10570:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2613:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1134:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2368:1833":{"id":"0:2368:1833","crate_id":0,"name":"Bytes","span":{"filename":"src/prog.rs","begin":[295,4],"end":[295,20]},"visibility":"default","docs":"Bytes is like Ranges, except it expresses a single byte range. It is\nused in conjunction with Split instructions to implement multi-byte\ncharacter classes.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:2370:1558"]}},"b:2:4097-0:2967:1613":{"id":"b:2:4097-0:2967:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2967:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2865-0:2349:1648":{"id":"b:2:2865-0:2349:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:2349:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2493:1575":{"id":"0:2493:1575","crate_id":0,"name":"unicode","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2519:3495"],"is_stripped":false}},"a:2:3376:224-0:2026:1641":{"id":"a:2:3376:224-0:2026:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Exec","id":"0:2026:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13826:2039":{"id":"2:13826:2039","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9533:3267-0:2778:2926":{"id":"a:2:9533:3267-0:2778:2926","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2778:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:4097-0:2012:128":{"id":"b:2:4097-0:2012:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1554:2046":{"id":"0:1554:2046","crate_id":0,"name":"Item","span":{"filename":"src/re_unicode.rs","begin":[825,4],"end":[825,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}},"a:2:3376:224-0:2331:1650":{"id":"a:2:3376:224-0:2331:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Program","id":"0:2331:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:593":{"id":"0:593","crate_id":0,"name":null,"span":{"filename":"src/exec.rs","begin":[688,0],"end":[1252,1]},"visibility":{"restricted":{"parent":"0:451:1626","path":"::exec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ExecNoSync","id":"0:2031:2692","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":["0:623:2914","0:627:1864"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13768:62915":{"id":"2:13768:62915","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"str::split_terminator":"2:13765:62914","self::pattern":"2:13332:1596","prim@char":"1:15883:4458","str::split":"2:13756:1929"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:49857:4913","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13357:4890","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:741:1790":{"id":"0:741:1790","crate_id":0,"name":"at","span":{"filename":"src/input.rs","begin":[69,4],"end":[69,38]},"visibility":"default","docs":"Return an encoding of the position at byte offset `i`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2415":{"id":"0:2415","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[340,16],"end":[340,20]},"visibility":{"restricted":{"parent":"0:1000:1632","path":"::prog"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3374:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2396:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3364:215-0:2438:1849":{"id":"a:2:3364:215-0:2438:1849","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstBytes","id":"0:2438:1849","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2021":{"id":"0:2021","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[5,9],"end":[5,14]},"visibility":{"restricted":{"parent":"0:438:1599","path":"::error"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2022:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:848-0:2012:128":{"id":"b:5:848-0:2012:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:850:3797","5:851:2605","5:852:5449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3207-0:2026:1641":{"id":"b:2:3207-0:2026:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Exec","id":"0:2026:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3006:664":{"id":"0:3006:664","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[869,16],"end":[869,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1608":{"id":"0:1608","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1087,0],"end":[1103,1]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["rposition","try_for_each","count","try_collect","map_while","find","intersperse_with","rev","next_chunk","cmp","take","sum","size_hint","max_by_key","eq_by","unzip","peekable","fold","collect_into","scan","any","for_each","advance_by","all","min","enumerate","is_sorted","cycle","reduce","partition","flat_map","filter","nth","gt","is_sorted_by","array_chunks","position","try_reduce","lt","partition_in_place","flatten","filter_map","step_by","copied","by_ref","max","min_by","is_sorted_by_key","product","find_map","is_partitioned","fuse","partial_cmp","skip","skip_while","chain","eq","le","cloned","ne","min_by_key","__iterator_get_unchecked","zip","last","try_find","cmp_by","try_fold","ge","inspect","take_while","intersperse","map","collect","max_by","partial_cmp_by"],"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3007:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1611:2046","0:1612:928","0:1615:3859","0:1616:500"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:185:1866":{"id":"0:185:1866","crate_id":0,"name":"size_limit","span":{"filename":"src/compile.rs","begin":[75,4],"end":[78,5]},"visibility":"public","docs":"The size of the resulting program is limited by size_limit. If\nthe program approximately exceeds the given size (in bytes), then\ncompilation will stop and return an error.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["size_limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9533:3267-0:2375:1852":{"id":"a:2:9533:3267-0:2375:1852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstSave","id":"0:2375:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1565:1608":{"id":"0:1565:1608","crate_id":0,"name":"Captures","span":{"filename":"src/re_unicode.rs","begin":[922,0],"end":[926,1]},"visibility":"public","docs":"Captures represents a group of captured strings for a single match.\n\nThe 0th capture always corresponds to the entire match. Each subsequent\nindex corresponds to the next capture group in the regex. If a capture\ngroup is named, then the matched string is *also* available via the `name`\nmethod. (Note that the 0th capture is always unnamed and so must be\naccessed with the `get` method.)\n\nPositions returned from a capture group are always byte indices.\n\n`'t` is the lifetime of the matched text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:1570","a:2:3376:224-0:1565:1608","a:2:3405:4927-0:1565:1608","a:2:9533:3267-0:1565:1608","a:2:9534:3266-0:1565:1608","a:2:3364:215-0:1565:1608","b:2:3201-0:1565:1608","b:2:3197-0:1565:1608","b:2:3207-0:1565:1608","b:2:2868-0:1565:1608","b:2:4097-0:1565:1608","b:2:2865-0:1565:1608","b:2:3212-0:1565:1608","0:1580","0:1594","0:1600"]}},"a:2:3364:215-0:2164:1645":{"id":"a:2:3364:215-0:2164:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:848-0:2880:2926":{"id":"b:5:848-0:2880:2926","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2880:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:850:3797","5:851:2605","5:852:5449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5575:6076":{"id":"1:5575:6076","crate_id":1,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5576:8292"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2865-0:2552:3575":{"id":"b:2:2865-0:2552:3575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2552:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3197-0:3020:1606":{"id":"b:2:3197-0:3020:1606","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3020:1606","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2342:1811":{"id":"0:2342:1811","crate_id":0,"name":"is_anchored_start","span":{"filename":"src/prog.rs","begin":[52,4],"end":[52,31]},"visibility":"public","docs":"Whether the regex must match from the start of the input.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"0:1699":{"id":"0:1699","crate_id":0,"name":null,"span":{"filename":"src/sparse.rs","begin":[64,0],"end":[68,1]},"visibility":{"restricted":{"parent":"0:1681:1634","path":"::sparse"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SparseSet","id":"0:3057:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1700:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:800:664":{"id":"0:800:664","crate_id":0,"name":"fmt","span":{"filename":"src/input.rs","begin":[349,4],"end":[354,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1627:928":{"id":"0:1627:928","crate_id":0,"name":"next","span":{"filename":"src/re_unicode.rs","begin":[1124,4],"end":[1130,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1608","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:2519:3495":{"id":"b:2:3207-0:2519:3495","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2519:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3197-0:2972:1607":{"id":"b:2:3197-0:2972:1607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2972:1607","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1142":{"id":"0:1142","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[114,0],"end":[531,1]},"visibility":{"restricted":{"parent":"0:1068:1622","path":"::re_bytes"}},"docs":"Core regular expression methods.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2613:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1143:926","0:1144:2277","0:1145:2536","0:1147:3643","0:1150:1919","0:1153:3700","0:1156:1929","0:1159:3721","0:1162:2484","0:1165:3791","0:1168:3785"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3212-0:2438:1849":{"id":"b:2:3212-0:2438:1849","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstBytes","id":"0:2438:1849","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1370:3842":{"id":"0:1370:3842","crate_id":0,"name":"locations","span":{"filename":"src/re_trait.rs","begin":[113,4],"end":[115,5]},"visibility":"default","docs":"Allocates fresh space for all capturing groups in this regex.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Locations","id":"0:2907:1609","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2970":{"id":"0:2970","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[135,9],"end":[135,14]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2967:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2971:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9534:3266-0:3020:1606":{"id":"a:2:9534:3266-0:3020:1606","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3020:1606","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:852:5449":{"id":"5:852:5449","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6502:1410":{"id":"5:6502:1410","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2734:2277":{"id":"0:2734:2277","crate_id":0,"name":"is_match","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Returns true if and only if one of the regexes in this set matches\nthe text given.\n\nThis method should be preferred if you only need to test whether any\nof the regexes in the set should match, but don't care about *which*\nregexes matched. This is because the underlying matching engine will\nquit immediately after seeing the first match instead of continuing to\nfind all matches.\n\nNote that as with searches using `Regex`, the expression is unanchored\nby default. That is, if the regex does not start with `^` or `\\A`, or\nend with `$` or `\\z`, then it is permitted to match anywhere in the\ntext.\n\n# Example\n\nTests whether a set matches some text:\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[r\"\\w+\", r\"\\d+\"]).unwrap();\nassert!(set.is_match(\"foo\"));\nassert!(!set.is_match(\"☃\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2865-0:2164:1645":{"id":"b:2:2865-0:2164:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3201-0:3020:1606":{"id":"b:2:3201-0:3020:1606","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3020:1606","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1556:3859":{"id":"0:1556:3859","crate_id":0,"name":"size_hint","span":{"filename":"src/re_unicode.rs","begin":[847,4],"end":[849,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3484:4863":{"id":"2:3484:4863","crate_id":2,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3485:183","2:3486:958"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6186:57613":{"id":"5:6186:57613","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:13828:57616"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:635:2925":{"id":"0:635:2925","crate_id":0,"name":"into_regex_set","span":{"filename":"src/exec.rs","begin":[1282,4],"end":[1284,5]},"visibility":"public","docs":"Build a RegexSet from this executor.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"re_set::unicode::RegexSet","id":"0:2778:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1036:2474":{"id":"0:1036:2474","crate_id":0,"name":"approximate_size","span":{"filename":"src/prog.rs","begin":[147,4],"end":[158,5]},"visibility":"public","docs":"Return the approximate heap usage of this instruction sequence in\nbytes.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:585:2812":{"id":"0:585:2812","crate_id":0,"name":"next_after_empty","span":{"filename":"src/exec.rs","begin":[431,4],"end":[433,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["_text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["i",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3405:4927-0:3029:1611":{"id":"a:2:3405:4927-0:3029:1611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3029:1611","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3743:4872":{"id":"2:3743:4872","crate_id":2,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3745:61794","2:3746:61795","2:3747:2433"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"b:2:3207-0:2972:1607":{"id":"b:2:3207-0:2972:1607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2972:1607","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3201-0:2967:1613":{"id":"b:2:3201-0:2967:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2967:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3512:4865":{"id":"2:3512:4865","crate_id":2,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3514:183","2:3515:1247"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2865-0:2438:1849":{"id":"b:2:2865-0:2438:1849","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstBytes","id":"0:2438:1849","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2440:1338":{"id":"0:2440:1338","crate_id":0,"name":"start","span":{"filename":"src/prog.rs","begin":[424,4],"end":[424,17]},"visibility":"public","docs":"The start (inclusive) of this byte range.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"b:2:3212-0:3007:1618":{"id":"b:2:3212-0:3007:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3007:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2397:1995":{"id":"0:2397:1995","crate_id":0,"name":"StartLine","span":{"filename":"src/prog.rs","begin":[343,4],"end":[343,13]},"visibility":"default","docs":"Start of line or input.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:2252:3188":{"id":"0:2252:3188","crate_id":0,"name":"Single","span":{"filename":"src/literal/imp.rs","begin":[225,4],"end":[225,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:2254:1558"]}},"a:2:3364:215-0:2012:128":{"id":"a:2:3364:215-0:2012:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3201-0:3057:2164":{"id":"b:2:3201-0:3057:2164","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SparseSet","id":"0:3057:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1693:798":{"id":"0:1693:798","crate_id":0,"name":"len","span":{"filename":"src/sparse.rs","begin":[35,4],"end":[37,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5563:6073":{"id":"1:5563:6073","crate_id":1,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5564:58157"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:37":{"id":"0:37","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[633,41],"end":[633,46]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::re_unicode::Regex","name":"Regex","id":"0:2967:1613","glob":false}},"0:1145:2536":{"id":"0:1145:2536","crate_id":0,"name":"find","span":{"filename":"src/re_bytes.rs","begin":[166,4],"end":[168,5]},"visibility":"public","docs":"Returns the start and end byte range of the leftmost-first match in\n`text`. If no match exists, then `None` is returned.\n\nNote that this should only be used if you want to discover the position\nof the match. Testing the existence of a match is faster if you use\n`is_match`.\n\n# Example\n\nFind the start and end location of the first word with exactly 13\nASCII word bytes:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet text = b\"I categorically deny having triskaidekaphobia.\";\nlet mat = Regex::new(r\"\\b\\w{13}\\b\").unwrap().find(text).unwrap();\nassert_eq!((mat.start(), mat.end()), (2, 15));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2590:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:875:2886":{"id":"0:875:2886","crate_id":0,"name":"lcs","span":{"filename":"src/literal/imp.rs","begin":[137,4],"end":[139,5]},"visibility":"public","docs":"Returns a matcher for the longest common suffix of this matcher.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Memmem","id":"0:2273:3155","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1490:1919":{"id":"0:1490:1919","crate_id":0,"name":"captures","span":{"filename":"src/re_unicode.rs","begin":[311,4],"end":[318,5]},"visibility":"public","docs":"Returns the capture groups corresponding to the leftmost-first\nmatch in `text`. Capture group `0` always corresponds to the entire\nmatch. If no match is found, then `None` is returned.\n\nYou should only use `captures` if you need access to the location of\ncapturing group matches. Otherwise, `find` is faster for discovering\nthe location of the overall match.\n\n# Examples\n\nSay you have some text with movie names and their release years,\nlike \"'Citizen Kane' (1941)\". It'd be nice if we could search for text\nlooking like that, while also extracting the movie name and its release\nyear separately.\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"'([^']+)'\\s+\\((\\d{4})\\)\").unwrap();\nlet text = \"Not my favorite movie: 'Citizen Kane' (1941).\";\nlet caps = re.captures(text).unwrap();\nassert_eq!(caps.get(1).unwrap().as_str(), \"Citizen Kane\");\nassert_eq!(caps.get(2).unwrap().as_str(), \"1941\");\nassert_eq!(caps.get(0).unwrap().as_str(), \"'Citizen Kane' (1941)\");\n// You can also access the groups by index using the Index notation.\n// Note that this will panic on an invalid index.\nassert_eq!(&caps[1], \"Citizen Kane\");\nassert_eq!(&caps[2], \"1941\");\nassert_eq!(&caps[0], \"'Citizen Kane' (1941)\");\n# }\n```\n\nNote that the full match is at capture group `0`. Each subsequent\ncapture group is indexed by the order of its opening `(`.\n\nWe can make this example a bit clearer by using *named* capture groups:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"'(?P<title>[^']+)'\\s+\\((?P<year>\\d{4})\\)\")\n               .unwrap();\nlet text = \"Not my favorite movie: 'Citizen Kane' (1941).\";\nlet caps = re.captures(text).unwrap();\nassert_eq!(caps.name(\"title\").unwrap().as_str(), \"Citizen Kane\");\nassert_eq!(caps.name(\"year\").unwrap().as_str(), \"1941\");\nassert_eq!(caps.get(0).unwrap().as_str(), \"'Citizen Kane' (1941)\");\n// You can also access the groups by name using the Index notation.\n// Note that this will panic on an invalid group name.\nassert_eq!(&caps[\"title\"], \"Citizen Kane\");\nassert_eq!(&caps[\"year\"], \"1941\");\nassert_eq!(&caps[0], \"'Citizen Kane' (1941)\");\n\n# }\n```\n\nHere we name the capture groups, which we can access with the `name`\nmethod or the `Index` notation with a `&str`. Note that the named\ncapture groups are still accessible with `get` or the `Index` notation\nwith a `usize`.\n\nThe `0`th capture group is always unnamed, so it must always be\naccessed with `get(0)` or `[0]`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1608","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3212-0:3057:2164":{"id":"b:2:3212-0:3057:2164","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SparseSet","id":"0:3057:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1676:3798":{"id":"0:1676:3798","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1287,4],"end":[1289,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1608","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2580:1575":{"id":"0:2580:1575","crate_id":0,"name":"unicode","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the value for the Unicode (`u`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2585:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3405:4927-0:2972:1607":{"id":"a:2:3405:4927-0:2972:1607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2972:1607","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3442:4851":{"id":"2:3442:4851","crate_id":2,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3444:183","2:3445:898"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3207-0:2431:1649":{"id":"b:2:3207-0:2431:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstRanges","id":"0:2431:1649","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1059:3480":{"id":"0:1059:3480","crate_id":0,"name":"num_chars","span":{"filename":"src/prog.rs","begin":[409,4],"end":[414,5]},"visibility":"public","docs":"Return the number of distinct characters represented by all of the\nranges.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9534:3266-0:3000:1605":{"id":"a:2:9534:3266-0:3000:1605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3000:1605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:766":{"id":"0:766","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[157,0],"end":[222,1]},"visibility":{"restricted":{"parent":"0:702:1629","path":"::input"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["is_empty"],"trait":{"name":"Input","id":"0:740:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:2174:1644","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:768:1790","0:770:3114","0:771:3116","0:773:1830","0:775:1816","0:777:798","0:778:2813"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2388:664":{"id":"0:2388:664","crate_id":0,"name":"fmt","span":{"filename":"src/prog.rs","begin":[319,16],"end":[319,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2865-0:1565:1608":{"id":"b:2:2865-0:1565:1608","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1608","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3364:215-0:2396:1647":{"id":"a:2:3364:215-0:2396:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2396:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3364:215-0:2424:1850":{"id":"a:2:3364:215-0:2424:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstChar","id":"0:2424:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:23238:6113":{"id":"2:23238:6113","crate_id":2,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23228:6013","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3201-0:2431:1649":{"id":"b:2:3201-0:2431:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstRanges","id":"0:2431:1649","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2405:2002":{"id":"0:2405:2002","crate_id":0,"name":"WordBoundary","span":{"filename":"src/prog.rs","begin":[351,4],"end":[351,16]},"visibility":"default","docs":"Word character on one side and non-word character on other.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:1643:3795":{"id":"0:1643:3795","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1179,4],"end":[1181,5]},"visibility":"default","docs":"Return a fixed unchanging replacement string.\n\nWhen doing replacements, if access to `Captures` is not needed (e.g.,\nthe replacement byte string does not need `$` expansion), then it can\nbe beneficial to avoid finding sub-captures.\n\nIn general, this is called once for every call to `replacen`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:853:109","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1375:2817":{"id":"0:1375:2817","crate_id":0,"name":"captures_read_at","span":{"filename":"src/re_trait.rs","begin":[143,4],"end":[148,32]},"visibility":"default","docs":"Returns the leftmost-first match location if one exists, and also\nfills in any matching capture slot locations.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["locs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Locations","id":"0:2907:1609","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Text","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1367:2673","args":null}}}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:3405:4927-0:3047:1612":{"id":"a:2:3405:4927-0:3047:1612","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3047:1612","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2990:664":{"id":"0:2990:664","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[780,9],"end":[780,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9534:3266-0:2982:1616":{"id":"a:2:9534:3266-0:2982:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2982:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2959":{"id":"0:2959","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[28,29],"end":[28,31]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2922:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2365:1832":{"id":"0:2365:1832","crate_id":0,"name":"Ranges","span":{"filename":"src/prog.rs","begin":[291,4],"end":[291,22]},"visibility":"default","docs":"Ranges requires the regex program to match the character at the current\nposition in the input with one of the ranges specified in InstRanges.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:2367:1558"]}},"0:802:2107":{"id":"0:802:2107","crate_id":0,"name":"is_none","span":{"filename":"src/input.rs","begin":[360,4],"end":[362,5]},"visibility":"public","docs":"Returns true iff the character is absent.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2557:1601":{"id":"0:2557:1601","crate_id":0,"name":"set_unicode","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2585:3575"],"is_stripped":false}},"2:13812:58814":{"id":"2:13812:58814","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"self::pattern":"2:13332:1596","prim@char":"1:15883:4458"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13357:4890","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2842:3576":{"id":"0:2842:3576","crate_id":0,"name":"patterns","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Returns the patterns that this set will match on.\n\nThis function can be used to determine the pattern for a match. The\nslice returned has exactly as many patterns givens to this regex set,\nand the order of the slice is the same as the order of the patterns\nprovided to the set.\n\n# Example\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[\n    r\"\\w+\",\n    r\"\\d+\",\n    r\"\\pL+\",\n    r\"foo\",\n    r\"bar\",\n    r\"barfoo\",\n    r\"foobar\",\n]).unwrap();\nlet matches: Vec<_> = set\n    .matches(\"foobar\")\n    .into_iter()\n    .map(|match_idx| &set.patterns()[match_idx])\n    .collect();\nassert_eq!(matches, vec![r\"\\w+\", r\"\\pL+\", r\"foo\", r\"bar\", r\"foobar\"]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3201-0:2331:1650":{"id":"b:2:3201-0:2331:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Program","id":"0:2331:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2359:1647":{"id":"0:2359:1647","crate_id":0,"name":"EmptyLook","span":{"filename":"src/prog.rs","begin":[285,4],"end":[285,28]},"visibility":"default","docs":"EmptyLook represents a zero-width assertion in a regex program. A\nzero-width assertion does not consume any of the input text.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:2361:1558"]}},"a:2:3364:215-0:2375:1852":{"id":"a:2:3364:215-0:2375:1852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstSave","id":"0:2375:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:848-0:2164:1645":{"id":"b:5:848-0:2164:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:850:3797","5:851:2605","5:852:5449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13780:62917":{"id":"2:13780:62917","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13357:4890","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:562:2767":{"id":"0:562:2767","crate_id":0,"name":"bounded_backtracking","span":{"filename":"src/exec.rs","begin":[194,4],"end":[197,5]},"visibility":"public","docs":"Sets the matching engine to use a bounded backtracking engine no\nmatter what optimizations are possible.\n\nOne must use this with care, since the bounded backtracking engine\nuses memory proportion to `len(regex) * len(text)`.\n\nThis overrides whatever was previously set via the `automatic` or\n`nfa` methods.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2865-0:2031:2692":{"id":"b:2:2865-0:2031:2692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecNoSync","id":"0:2031:2692","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3376:224-0:1565:1608":{"id":"a:2:3376:224-0:1565:1608","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1608","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13777:62916":{"id":"2:13777:62916","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2944:1610":{"id":"0:2944:1610","crate_id":0,"name":"Match","span":{"filename":"src/re_unicode.rs","begin":[29,0],"end":[33,1]},"visibility":"public","docs":"Match represents a single match of a regex in a haystack.\n\nThe lifetime parameter `'t` refers to the lifetime of the matched text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:1460","a:2:3376:224-0:2944:1610","a:2:3405:4927-0:2944:1610","a:2:9533:3267-0:2944:1610","a:2:9534:3266-0:2944:1610","a:2:3364:215-0:2944:1610","b:2:3201-0:2944:1610","b:2:3197-0:2944:1610","b:2:3207-0:2944:1610","b:2:2868-0:2944:1610","b:2:4097-0:2944:1610","b:2:2865-0:2944:1610","b:2:3212-0:2944:1610","b:5:848-0:2944:1610","0:2949","0:2951","0:2954","0:2957","0:2959","0:2962","0:2964","0:1467","0:1470"]}},"a:2:3405:4927-0:2982:1616":{"id":"a:2:3405:4927-0:2982:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2982:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3506:4864":{"id":"2:3506:4864","crate_id":2,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3508:183","2:3509:1244"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2868-0:2375:1852":{"id":"b:2:2868-0:2375:1852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstSave","id":"0:2375:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3364:215-0:2349:1648":{"id":"a:2:3364:215-0:2349:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:2349:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:10574:5369":{"id":"2:10574:5369","crate_id":2,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10575:664"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1483:926":{"id":"0:1483:926","crate_id":0,"name":"new","span":{"filename":"src/re_unicode.rs","begin":[174,4],"end":[176,5]},"visibility":"public","docs":"Compiles a regular expression. Once compiled, it can be used repeatedly\nto search, split or replace text in a string.\n\nIf an invalid expression is given, then an error is returned.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["re",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47933:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2967:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3364:215-0:3020:1606":{"id":"a:2:3364:215-0:3020:1606","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3020:1606","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2183":{"id":"0:2183","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[139,22],"end":[139,27]},"visibility":{"restricted":{"parent":"0:702:1629","path":"::input"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:2174:1644","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2185:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2349:1648":{"id":"0:2349:1648","crate_id":0,"name":"Inst","span":{"filename":"src/prog.rs","begin":[268,0],"end":[296,1]},"visibility":"public","docs":"Inst is an instruction code in a Regex program.\n\nRegrettably, a regex program either contains Unicode codepoint\ninstructions (Char and Ranges) or it contains byte instructions (Bytes).\nA regex program can never contain both.\n\nIt would be worth investigating splitting this into two distinct types and\nthen figuring out how to make the matching engines polymorphic over those\ntypes without sacrificing performance.\n\nOther than the benefit of moving invariants into the type system, another\nbenefit is the decreased size. If we remove the `Char` and `Ranges`\ninstructions from the `Inst` enum, then its size shrinks from 32 bytes to\n24 bytes. (This is because of the removal of a `Box<[]>` in the `Ranges`\nvariant.) Given that byte based machines are typically much bigger than\ntheir Unicode analogues (because they can decode UTF-8 directly), this ends\nup being a pretty significant savings.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:2350:1610","0:2353:1824","0:2356:1616","0:2359:1647","0:2362:1643","0:2365:1832","0:2368:1833"],"impls":["0:1054","a:2:3376:224-0:2349:1648","a:2:3405:4927-0:2349:1648","a:2:9533:3267-0:2349:1648","a:2:9534:3266-0:2349:1648","a:2:3364:215-0:2349:1648","b:2:3201-0:2349:1648","b:2:3197-0:2349:1648","b:2:3207-0:2349:1648","b:2:2868-0:2349:1648","b:2:4097-0:2349:1648","b:2:2865-0:2349:1648","b:2:3212-0:2349:1648","b:5:848-0:2349:1648","0:2371","0:2373"]}},"b:5:848-0:3047:1612":{"id":"b:5:848-0:3047:1612","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3047:1612","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["5:850:3797","5:851:2605","5:852:5449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1576:784":{"id":"0:1576:784","crate_id":0,"name":"iter","span":{"filename":"src/re_unicode.rs","begin":[963,4],"end":[965,5]},"visibility":"public","docs":"An iterator that yields all capturing matches in the order in which\nthey appear in the regex. If a particular capture group didn't\nparticipate in the match, then `None` is yielded for that capture.\n\nThe first match always corresponds to the overall match of the regex.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'c","mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3007:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9533:3267-0:2880:2926":{"id":"a:2:9533:3267-0:2880:2926","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2880:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1029":{"id":"0:1029","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[77,0],"end":[159,1]},"visibility":{"restricted":{"parent":"0:1000:1632","path":"::prog"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Program","id":"0:2331:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1030:926","0:1031:1321","0:1032:3393","0:1033:1917","0:1034:1983","0:1035:1895","0:1036:2474"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9533:3267-0:2519:3495":{"id":"a:2:9533:3267-0:2519:3495","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2519:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2448:1866":{"id":"0:2448:1866","crate_id":0,"name":"size_limit","span":{"filename":"src/re_builder.rs","begin":[6,4],"end":[6,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"2:3471:4857":{"id":"2:3471:4857","crate_id":2,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3473:899"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2430:664":{"id":"0:2430:664","crate_id":0,"name":"fmt","span":{"filename":"src/prog.rs","begin":[361,16],"end":[361,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2507:926":{"id":"0:2507:926","crate_id":0,"name":"new","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Create a new regular expression builder with the given pattern.\n\nIf the pattern is invalid, then an error will be returned when\n`build` is called.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["pattern",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2519:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3197-0:2031:2692":{"id":"b:2:3197-0:2031:2692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecNoSync","id":"0:2031:2692","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3405:4927-0:2174:1644":{"id":"a:2:3405:4927-0:2174:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:2174:1644","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1669:3798":{"id":"0:1669:3798","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1265,4],"end":[1267,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1608","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:2446:2672":{"id":"b:2:2868-0:2446:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexOptions","id":"0:2446:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13748:2536":{"id":"2:13748:2536","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"self::pattern":"2:13332:1596","prim@char":"1:15883:4458","`None`":"2:47810:176"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:580:2817":{"id":"0:580:2817","crate_id":0,"name":"captures_read_at","span":{"filename":"src/exec.rs","begin":[411,4],"end":[418,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["locs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Locations","id":"0:2907:1609","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3201-0:3029:1611":{"id":"b:2:3201-0:3029:1611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3029:1611","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2868-0:2382:1853":{"id":"b:2:2868-0:2382:1853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstSplit","id":"0:2382:1853","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1652":{"id":"0:1652","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1224,0],"end":[1232,1]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["by_ref","no_expansion"],"trait":{"name":"Replacer","id":"0:1641:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"items":["0:1654:3798","0:1655:3795"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10513:5363":{"id":"2:10513:5363","crate_id":2,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10514:1549","2:10515:58714","2:10517:5249"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:23768:19127":{"id":"2:23768:19127","crate_id":2,"name":"SimdOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23769:61192","2:23770:61191","2:23771:61193"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialOrd","id":"2:23763:6384","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1180:2817":{"id":"0:1180:2817","crate_id":0,"name":"captures_read_at","span":{"filename":"src/re_bytes.rs","begin":[625,4],"end":[635,5]},"visibility":"public","docs":"Returns the same as `captures_read`, but starts the search at the given\noffset and populates the capture locations given.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["locs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2664:1605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2590:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3364:215-0:2031:2692":{"id":"a:2:3364:215-0:2031:2692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecNoSync","id":"0:2031:2692","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3248:116":{"id":"2:3248:116","crate_id":2,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3249:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3459:4852":{"id":"2:3459:4852","crate_id":2,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3460:183","2:3461:919"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2967:1613":{"id":"0:2967:1613","crate_id":0,"name":"Regex","span":{"filename":"src/re_unicode.rs","begin":[136,0],"end":[136,23]},"visibility":"public","docs":"A compiled regular expression for matching Unicode strings.\n\nIt is represented as either a sequence of bytecode instructions (dynamic)\nor as a specialized Rust function (native). It can be used to search, split\nor replace text. All searching is done with an implicit `.*?` at the\nbeginning and end of an expression. To force an expression to match the\nwhole string (or a prefix or a suffix), you must use an anchor like `^` or\n`$` (or `\\A` and `\\z`).\n\nWhile this crate will handle Unicode strings (whether in the regular\nexpression or in the search text), all positions returned are **byte\nindices**. Every byte index is guaranteed to be at a Unicode code point\nboundary.\n\nThe lifetimes `'r` and `'t` in this crate correspond to the lifetime of a\ncompiled regular expression and text to search, respectively.\n\nThe only methods that allocate new strings are the string replacement\nmethods. All other methods (searching and splitting) return borrowed\npointers into the string given.\n\n# Examples\n\nFind the location of a US phone number:\n\n```rust\n# use regex::Regex;\nlet re = Regex::new(\"[0-9]{3}-[0-9]{3}-[0-9]{4}\").unwrap();\nlet mat = re.find(\"phone: 111-222-3333\").unwrap();\nassert_eq!((mat.start(), mat.end()), (7, 19));\n```\n\n# Using the `std::str::pattern` methods with `Regex`\n\n> **Note**: This section requires that this crate is compiled with the\n> `pattern` Cargo feature enabled, which **requires nightly Rust**.\n\nSince `Regex` implements `Pattern`, you can use regexes with methods\ndefined on `&str`. For example, `is_match`, `find`, `find_iter`\nand `split` can be replaced with `str::contains`, `str::find`,\n`str::match_indices` and `str::split`.\n\nHere are some examples:\n\n```rust,ignore\n# use regex::Regex;\nlet re = Regex::new(r\"\\d+\").unwrap();\nlet haystack = \"a111b222c\";\n\nassert!(haystack.contains(&re));\nassert_eq!(haystack.find(&re), Some(1));\nassert_eq!(haystack.match_indices(&re).collect::<Vec<_>>(),\n           vec![(1, \"111\"), (5, \"222\")]);\nassert_eq!(haystack.split(&re).collect::<Vec<_>>(), vec![\"a\", \"b\", \"c\"]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:1482","0:1511","0:1525","a:2:3376:224-0:2967:1613","a:2:3405:4927-0:2967:1613","a:2:9533:3267-0:2967:1613","a:2:9534:3266-0:2967:1613","a:2:3364:215-0:2967:1613","b:2:3201-0:2967:1613","b:2:3197-0:2967:1613","b:2:3207-0:2967:1613","b:2:2868-0:2967:1613","b:2:4097-0:2967:1613","b:2:2865-0:2967:1613","b:2:3212-0:2967:1613","b:5:848-0:2967:1613","b:5:6500-0:2967:1613","0:2970","0:1473","0:1475","0:1479"]}},"0:2378":{"id":"0:2378","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[309,9],"end":[309,14]},"visibility":{"restricted":{"parent":"0:1000:1632","path":"::prog"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstSave","id":"0:2375:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2379:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2367:1558":{"id":"0:2367:1558","crate_id":0,"name":"0","span":{"filename":"src/prog.rs","begin":[291,11],"end":[291,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"InstRanges","id":"0:2431:1649","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:2437:664":{"id":"0:2437:664","crate_id":0,"name":"fmt","span":{"filename":"src/prog.rs","begin":[371,16],"end":[371,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3405:4927-0:2967:1613":{"id":"a:2:3405:4927-0:2967:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2967:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3201-0:2031:2692":{"id":"b:2:3201-0:2031:2692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecNoSync","id":"0:2031:2692","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6171:63567":{"id":"5:6171:63567","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8472:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2636:1616":{"id":"0:2636:1616","crate_id":0,"name":"Split","span":{"filename":"src/re_bytes.rs","begin":[739,0],"end":[742,1]},"visibility":"public","docs":"Yields all substrings delimited by a regular expression match.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the byte string being split.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":[]}},"0:1053:773":{"id":"0:1053:773","crate_id":0,"name":"into_iter","span":{"filename":"src/prog.rs","begin":[245,4],"end":[247,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8673:152","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:13":{"id":"0:13","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[632,12],"end":[632,28]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::re_unicode::CaptureLocations","name":"CaptureLocations","id":"0:3000:1605","glob":false}},"b:2:2865-0:2424:1850":{"id":"b:2:2865-0:2424:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstChar","id":"0:2424:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2831:926":{"id":"0:2831:926","crate_id":0,"name":"new","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Create a new regex set with the given regular expressions.\n\nThis takes an iterator of `S`, where `S` is something that can produce\na `&str`. If any of the strings in the iterator are not valid regular\nexpressions, then an error is returned.\n\n# Example\n\nCreate a new regex set from an iterator of strings:\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[r\"\\w+\", r\"\\d+\"]).unwrap();\nassert!(set.is_match(\"foo\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["exprs",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47933:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2880:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:3165:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8673:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"S"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2645:1617":{"id":"0:2645:1617","crate_id":0,"name":"SplitN","span":{"filename":"src/re_bytes.rs","begin":[777,0],"end":[780,1]},"visibility":"public","docs":"Yields at most `N` substrings delimited by a regular expression match.\n\nThe last substring will be whatever remains after splitting.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the byte string being split.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":[]}},"0:2341:1906":{"id":"0:2341:1906","crate_id":0,"name":"is_reverse","span":{"filename":"src/prog.rs","begin":[50,4],"end":[50,24]},"visibility":"public","docs":"When true, the program matches text in reverse (for use only in the\nDFA).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"2:13357:4890":{"id":"2:13357:4890","crate_id":2,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13359:4148","2:13360:61152","2:13361:61153"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Searcher","id":"2:13351:3170","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:8677-0:2982:1616":{"id":"b:2:8677-0:2982:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8673:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2982:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:8679:2046","2:8680:3413","2:8681:773"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:3056:664":{"id":"0:3056:664","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[1300,16],"end":[1300,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8717:121":{"id":"2:8717:121","crate_id":2,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8718:4148","2:8719:5400","2:8720:5401","2:8721:5402","2:8725:5403","2:8728:5404"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:623:2914":{"id":"0:623:2914","crate_id":0,"name":"many_matches_at","span":{"filename":"src/exec.rs","begin":[1150,4],"end":[1225,5]},"visibility":"public","docs":"Finds which regular expressions match the given text.\n\n`matches` should have length equal to the number of regexes being\nsearched.\n\nThis is only useful when one wants to know which regexes in a set\nmatch some text.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["matches",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"bool"}}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3201-0:3000:1605":{"id":"b:2:3201-0:3000:1605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3000:1605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9534:3266-0:2431:1649":{"id":"a:2:9534:3266-0:2431:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstRanges","id":"0:2431:1649","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1546:2046":{"id":"0:1546:2046","crate_id":0,"name":"Item","span":{"filename":"src/re_unicode.rs","begin":[787,4],"end":[787,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}},"2:3210:128":{"id":"2:3210:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"0:2407:2009":{"id":"0:2407:2009","crate_id":0,"name":"NotWordBoundary","span":{"filename":"src/prog.rs","begin":[353,4],"end":[353,19]},"visibility":"default","docs":"Word character on both sides or non-word character on both sides.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:3007:1618":{"id":"0:3007:1618","crate_id":0,"name":"SubCaptureMatches","span":{"filename":"src/re_unicode.rs","begin":[1082,0],"end":[1085,1]},"visibility":"public","docs":"An iterator that yields all capturing matches in the order in which they\nappear in the regex.\n\nIf a particular capture group didn't participate in the match, then `None`\nis yielded for that capture. The first match always corresponds to the\noverall match of the regex.\n\nThe lifetime `'c` corresponds to the lifetime of the `Captures` value, and\nthe lifetime `'t` corresponds to the originally matched text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:3376:224-0:3007:1618","a:2:3405:4927-0:3007:1618","a:2:9533:3267-0:3007:1618","a:2:9534:3266-0:3007:1618","a:2:3364:215-0:3007:1618","b:2:3201-0:3007:1618","b:2:3197-0:3007:1618","b:2:3207-0:3007:1618","b:2:2868-0:3007:1618","b:2:4097-0:3007:1618","b:2:8677-0:3007:1618","b:2:2865-0:3007:1618","b:2:3212-0:3007:1618","b:5:848-0:3007:1618","0:3012","0:3016","0:1608","0:1617","0:1620"]}},"2:13792:62920":{"id":"2:13792:62920","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"prim@char":"1:15883:4458","`DoubleEndedIterator`":"2:8717:121","str::match_indices":"2:13789:62919","self::pattern":"2:13332:1596"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:49957:4909","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13357:4890","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3405:4927-0:2431:1649":{"id":"a:2:3405:4927-0:2431:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstRanges","id":"0:2431:1649","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1527:2936":{"id":"0:1527:2936","crate_id":0,"name":"capture_names","span":{"filename":"src/re_unicode.rs","begin":[719,4],"end":[721,5]},"visibility":"public","docs":"Returns an iterator over the capture names.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2972:1607","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:795:1816":{"id":"0:795:1816","crate_id":0,"name":"prefix_at","span":{"filename":"src/input.rs","begin":[320,4],"end":[326,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefixes",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:2217:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["at",{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2546:2787":{"id":"0:2546:2787","crate_id":0,"name":"ignore_whitespace","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the value for the ignore whitespace (`x`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2552:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1041:664":{"id":"0:1041:664","crate_id":0,"name":"fmt","span":{"filename":"src/prog.rs","begin":[171,4],"end":[239,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3201-0:2778:2926":{"id":"b:2:3201-0:2778:2926","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2778:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3405:4927-0:2424:1850":{"id":"a:2:3405:4927-0:2424:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstChar","id":"0:2424:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:577:2814":{"id":"0:577:2814","crate_id":0,"name":"shortest_match_at","span":{"filename":"src/exec.rs","begin":[396,4],"end":[398,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2015:1558":{"id":"0:2015:1558","crate_id":0,"name":"0","span":{"filename":"src/error.rs","begin":[8,11],"end":[8,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:1679:3798":{"id":"0:1679:3798","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1304,4],"end":[1306,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["_",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1608","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5431:6100":{"id":"1:5431:6100","crate_id":1,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5432:7387","1:5433:2813"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10416:6013","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:6241:6104":{"id":"1:6241:6104","crate_id":1,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6242:60760","1:6243:10516","1:6244:60761","1:6245:60762","1:6246:60763","1:6247:60764"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10416:6013","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:445":{"id":"0:445","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[21,0],"end":[31,1]},"visibility":{"restricted":{"parent":"0:438:1599","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["description","cause","provide","source","type_id"],"trait":{"name":"Error","id":"2:3272:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:446:2648"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2865-0:2914:3584":{"id":"b:2:2865-0:2914:3584","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCapturesPosIter","id":"0:2914:3584","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3207-0:2038:2696":{"id":"b:2:3207-0:2038:2696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecNoSyncStr","id":"0:2038:2696","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:16":{"id":"0:16","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[632,30],"end":[632,44]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::re_unicode::CaptureMatches","name":"CaptureMatches","id":"0:3020:1606","glob":false}},"0:2693:1612":{"id":"0:2693:1612","crate_id":0,"name":"NoExpand","span":{"filename":"src/re_bytes.rs","begin":[1250,0],"end":[1250,38]},"visibility":"public","docs":"`NoExpand` indicates literal byte string replacement.\n\nIt can be used with `replace` and `replace_all` to do a literal byte string\nreplacement without expanding `$name` to their corresponding capture\ngroups. This can be both convenient (to avoid escaping `$`, for example)\nand performant (since capture groups don't need to be found).\n\n`'t` is the lifetime of the literal text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":["0:2696:1558"]},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":[]}},"0:778:2813":{"id":"0:778:2813","crate_id":0,"name":"as_bytes","span":{"filename":"src/input.rs","begin":[219,4],"end":[221,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2344:2005":{"id":"0:2344:2005","crate_id":0,"name":"has_unicode_word_boundary","span":{"filename":"src/prog.rs","begin":[56,4],"end":[56,39]},"visibility":"public","docs":"Whether this program contains a Unicode word boundary instruction.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"a:2:9534:3266-0:2424:1850":{"id":"a:2:9534:3266-0:2424:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstChar","id":"0:2424:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3216:1430":{"id":"2:3216:1430","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47933:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2508:2790":{"id":"0:2508:2790","crate_id":0,"name":"build","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Consume the builder and compile the regular expression.\n\nNote that calling `as_str` on the resulting `Regex` will produce the\npattern given to `new` verbatim. Notably, it will not incorporate any\nof the flags set on this builder.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47933:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2967:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3376:224":{"id":"2:3376:224","crate_id":2,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3364:215-0:2967:1613":{"id":"a:2:3364:215-0:2967:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2967:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2454:2786":{"id":"0:2454:2786","crate_id":0,"name":"swap_greed","span":{"filename":"src/re_builder.rs","begin":[12,4],"end":[12,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"0:2654:1607":{"id":"0:2654:1607","crate_id":0,"name":"CaptureNames","span":{"filename":"src/re_bytes.rs","begin":[819,0],"end":[819,68]},"visibility":"public","docs":"An iterator over the names of all possible captures.\n\n`None` indicates an unnamed capture; the first element (capture 0, the\nwhole matched region) is always unnamed.\n\n`'r` is the lifetime of the compiled regular expression.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":[]}},"a:2:9533:3267-0:543:1642":{"id":"a:2:9533:3267-0:543:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecBuilder","id":"0:543:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9534:3266-0:2375:1852":{"id":"a:2:9534:3266-0:2375:1852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstSave","id":"0:2375:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2254:1558":{"id":"0:2254:1558","crate_id":0,"name":"0","span":{"filename":"src/literal/imp.rs","begin":[225,11],"end":[225,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}},"0:2479:2784":{"id":"0:2479:2784","crate_id":0,"name":"multi_line","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the value for the multi-line matching (`m`) flag.\n\nWhen enabled, `^` matches the beginning of lines and `$` matches the\nend of lines.\n\nBy default, they match beginning/end of the input.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2488:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:56":{"id":"0:56","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[726,4],"end":[726,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::re_builder::bytes","name":"bytes","id":"0:2462:1620","glob":true}},"0:3043":{"id":"0:3043","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1212,9],"end":[1212,14]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3038:1615","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:3046:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3364:215-0:2174:1644":{"id":"a:2:3364:215-0:2174:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:2174:1644","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1700:664":{"id":"0:1700:664","crate_id":0,"name":"fmt","span":{"filename":"src/sparse.rs","begin":[65,4],"end":[67,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:2778:2926":{"id":"b:2:2868-0:2778:2926","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2778:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3019:664":{"id":"0:3019:664","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[1081,16],"end":[1081,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:809":{"id":"0:809","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[400,0],"end":[404,1]},"visibility":{"restricted":{"parent":"0:702:1629","path":"::input"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"char"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:810:685"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3103:6405":{"id":"2:3103:6405","crate_id":2,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:3102:6013","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1666:3795":{"id":"0:1666:3795","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1259,4],"end":[1261,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:853:109","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1626:2046":{"id":"0:1626:2046","crate_id":0,"name":"Item","span":{"filename":"src/re_unicode.rs","begin":[1122,4],"end":[1122,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1608","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}},"0:2550:2172":{"id":"0:2550:2172","crate_id":0,"name":"dfa_size_limit","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the approximate size of the cache used by the DFA.\n\nThis roughly corresponds to the number of bytes that the DFA will\nuse while searching.\n\nNote that this is a *per thread* limit. There is no way to set a global\nlimit. In particular, if a regex is used from multiple threads\nsimultaneously, then each thread may use up to the number of bytes\nspecified here.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2552:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3405:4927-0:2778:2926":{"id":"a:2:3405:4927-0:2778:2926","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2778:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1706:2046":{"id":"0:1706:2046","crate_id":0,"name":"Item","span":{"filename":"src/sparse.rs","begin":[79,4],"end":[79,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"usize"}}}}},"b:2:4097-0:2349:1648":{"id":"b:2:4097-0:2349:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:2349:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:31":{"id":"0:31","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[633,22],"end":[633,29]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::re_unicode::Matches","name":"Matches","id":"0:3029:1611","glob":false}},"b:2:3197-0:3000:1605":{"id":"b:2:3197-0:3000:1605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3000:1605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3376:224-0:2982:1616":{"id":"a:2:3376:224-0:2982:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2982:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:2935:1606":{"id":"0:2935:1606","crate_id":0,"name":"CaptureMatches","span":{"filename":"src/re_trait.rs","begin":[235,0],"end":[238,16]},"visibility":"public","docs":"An iterator over all non-overlapping successive leftmost-first matches with\ncaptures.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RegularExpression","id":"0:1367:2673","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Text","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"name":"","id":"0:1367:2673","args":null}}},"bounds":[{"outlives":"'t"}],"generic_params":[]}}]},"impls":[]}},"0:43":{"id":"0:43","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[633,58],"end":[633,69]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::re_unicode::ReplacerRef","name":"ReplacerRef","id":"0:3038:1615","glob":false}},"2:13774:58810":{"id":"2:13774:58810","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"self::pattern":"2:13332:1596","prim@char":"1:15883:4458","str::splitn":"2:13771:3721"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:49911:4912","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13357:4890","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:6500-0:2012:128":{"id":"b:5:6500-0:2012:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10570:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6498:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:6502:1410"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3207-0:543:1642":{"id":"b:2:3207-0:543:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecBuilder","id":"0:543:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:848-0:2396:1647":{"id":"b:5:848-0:2396:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2396:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:850:3797","5:851:2605","5:852:5449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3201-0:2972:1607":{"id":"b:2:3201-0:2972:1607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2972:1607","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3376:224-0:2389:1851":{"id":"a:2:3376:224-0:2389:1851","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstEmptyLook","id":"0:2389:1851","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3364:215-0:2488:3495":{"id":"a:2:3364:215-0:2488:3495","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2488:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3364:215-0:2613:1613":{"id":"a:2:3364:215-0:2613:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2613:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9534:3266-0:173:1640":{"id":"a:2:9534:3266-0:173:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Compiler","id":"0:173:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2420:608":{"id":"0:2420:608","crate_id":0,"name":"eq","span":{"filename":"src/prog.rs","begin":[340,29],"end":[340,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2396:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3376:224-0:3047:1612":{"id":"a:2:3376:224-0:3047:1612","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3047:1612","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1691":{"id":"0:1691","crate_id":0,"name":null,"span":{"filename":"src/sparse.rs","begin":[27,0],"end":[62,1]},"visibility":{"restricted":{"parent":"0:1681:1634","path":"::sparse"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"SparseSet","id":"0:3057:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1692:926","0:1693:798","0:1694:1815","0:1695:3265","0:1696:2020","0:1697:2433","0:1698:1803"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3376:224-0:3000:1605":{"id":"a:2:3376:224-0:3000:1605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3000:1605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1612:928":{"id":"0:1612:928","crate_id":0,"name":"next","span":{"filename":"src/re_unicode.rs","begin":[1090,4],"end":[1094,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:3038:1615":{"id":"b:2:2868-0:3038:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3038:1615","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9533:3267-0:2438:1849":{"id":"a:2:9533:3267-0:2438:1849","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstBytes","id":"0:2438:1849","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2830":{"id":"0:2830","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2805:1620","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2880:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2831:926","0:2834:2779","0:2836:2277","0:2838:1773","0:2840:798","0:2841:1815","0:2842:3576"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3201-0:2349:1648":{"id":"b:2:3201-0:2349:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:2349:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2555":{"id":"0:2555","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":{"restricted":{"parent":"0:2524:1621","path":"::re_builder::set_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2552:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2556:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3207-0:2174:1644":{"id":"b:2:3207-0:2174:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:2174:1644","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1659:3795":{"id":"0:1659:3795","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1239,4],"end":[1241,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:853:109","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2865-0:2944:1610":{"id":"b:2:2865-0:2944:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3364:215-0:2382:1853":{"id":"a:2:3364:215-0:2382:1853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstSplit","id":"0:2382:1853","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:10584:5373":{"id":"2:10584:5373","crate_id":2,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10585:664"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2537":{"id":"0:2537","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":{"restricted":{"parent":"0:2524:1621","path":"::re_builder::set_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2552:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2538:926","0:2541:2790","0:2542:2783","0:2543:2784","0:2544:2785","0:2545:2786","0:2546:2787","0:2547:1575","0:2548:2782","0:2549:1866","0:2550:2172","0:2551:2789"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2868-0:173:1640":{"id":"b:2:2868-0:173:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Compiler","id":"0:173:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3203:685":{"id":"2:3203:685","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1538:500":{"id":"0:1538:500","crate_id":0,"name":"count","span":{"filename":"src/re_unicode.rs","begin":[767,4],"end":[769,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2273:3155":{"id":"0:2273:3155","crate_id":0,"name":"Memmem","span":{"filename":"src/literal/imp.rs","begin":[361,0],"end":[364,1]},"visibility":"public","docs":"A simple wrapper around the memchr crate's memmem implementation.\n\nThe API this exposes mirrors the API of previous substring searchers that\nthis supplanted.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":[]}},"0:2171":{"id":"0:2171","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[12,16],"end":[12,20]},"visibility":{"restricted":{"parent":"0:702:1629","path":"::input"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3374:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3212-0:2488:3495":{"id":"b:2:3212-0:2488:3495","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2488:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9533:3267-0:2552:3575":{"id":"a:2:9533:3267-0:2552:3575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2552:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:848-0:2613:1613":{"id":"b:5:848-0:2613:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2613:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:850:3797","5:851:2605","5:852:5449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3165:75":{"id":"2:3165:75","crate_id":2,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3167:311"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"a:2:3405:4927-0:173:1640":{"id":"a:2:3405:4927-0:173:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Compiler","id":"0:173:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1467":{"id":"0:1467","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[68,0],"end":[72,1]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"items":["0:1469:685"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:57":{"id":"0:57","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[727,4],"end":[727,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::re_builder::set_bytes","name":"set_bytes","id":"0:2524:1621","glob":true}},"0:2492:664":{"id":"0:2492:664","crate_id":0,"name":"fmt","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2544:2785":{"id":"0:2544:2785","crate_id":0,"name":"dot_matches_new_line","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the value for the any character (`s`) flag, where in `.` matches\nanything when `s` is set and matches anything except for new line when\nit is not set (the default).\n\nN.B. \"matches anything\" means \"any byte\" for `regex::bytes::RegexSet`\nexpressions and means \"any Unicode scalar value\" for `regex::RegexSet`\nexpressions.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2552:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1620":{"id":"0:1620","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1107,0],"end":[1107,59]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:9154:3581","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3007:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:8":{"id":"0:8","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[629,0],"end":[629,34]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::re_set::unicode","name":"unicode","id":"0:2703:1575","glob":true}},"2:13828:57616":{"id":"2:13828:57616","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2778:2926":{"id":"0:2778:2926","crate_id":0,"name":"RegexSet","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Match multiple (possibly overlapping) regular expressions in a single scan.\n\nA regex set corresponds to the union of two or more regular expressions.\nThat is, a regex set will match text where at least one of its\nconstituent regular expressions matches. A regex set as its formulated here\nprovides a touch more power: it will also report *which* regular\nexpressions in the set match. Indeed, this is the key difference between\nregex sets and a single `Regex` with many alternates, since only one\nalternate can match at a time.\n\nFor example, consider regular expressions to match email addresses and\ndomains: `[a-z]+@[a-z]+\\.(com|org|net)` and `[a-z]+\\.(com|org|net)`. If a\nregex set is constructed from those regexes, then searching the text\n`foo@example.com` will report both regexes as matching. Of course, one\ncould accomplish this by compiling each regex on its own and doing two\nsearches over the text. The key advantage of using a regex set is that it\nwill report the matching regexes using a *single pass through the text*.\nIf one has hundreds or thousands of regexes to match repeatedly (like a URL\nrouter for a complex web application or a user agent matcher), then a regex\nset can realize huge performance gains.\n\n# Example\n\nThis shows how the above two regexes (for matching email addresses and\ndomains) might work:\n\n ```rust\n # use regex::RegexSet;\n let set = RegexSet::new(&[\n     r\"[a-z]+@[a-z]+\\.(com|org|net)\",\n     r\"[a-z]+\\.(com|org|net)\",\n ]).unwrap();\n\n // Ask whether any regexes in the set match.\n assert!(set.is_match(\"foo@example.com\"));\n\n // Identify which regexes in the set match.\n let matches: Vec<_> = set.matches(\"foo@example.com\").into_iter().collect();\n assert_eq!(vec![0, 1], matches);\n\n // Try again, but with text that only matches one of the regexes.\n let matches: Vec<_> = set.matches(\"example.com\").into_iter().collect();\n assert_eq!(vec![1], matches);\n\n // Try again, but with text that doesn't match any regex in the set.\n let matches: Vec<_> = set.matches(\"example\").into_iter().collect();\n assert!(matches.is_empty());\n ```\n\nNote that it would be possible to adapt the above example to using `Regex`\nwith an expression like:\n\n```text\n(?P<email>[a-z]+@(?P<email_domain>[a-z]+[.](com|org|net)))|(?P<domain>[a-z]+[.](com|org|net))\n```\n\nAfter a match, one could then inspect the capture groups to figure out\nwhich alternates matched. The problem is that it is hard to make this\napproach scale when there are many regexes since the overlap between each\nalternate isn't always obvious to reason about.\n\n# Limitations\n\nRegex sets are limited to answering the following two questions:\n\n1. Does any regex in the set match?\n2. If so, which regexes in the set match?\n\nAs with the main [`Regex`][crate::Regex] type, it is cheaper to ask (1)\ninstead of (2) since the matching engines can stop after the first match\nis found.\n\nYou cannot directly extract [`Match`][crate::Match] or\n[`Captures`][crate::Captures] objects from a regex set. If you need these\noperations, the recommended approach is to compile each pattern in the set\nindependently and scan the exact same input a second time with those\nindependently compiled patterns:\n\n```rust\nuse regex::{Regex, RegexSet};\n\nlet patterns = [\"foo\", \"bar\"];\n// Both patterns will match different ranges of this string.\nlet text = \"barfoo\";\n\n// Compile a set matching any of our patterns.\nlet set = RegexSet::new(&patterns).unwrap();\n// Compile each pattern independently.\nlet regexes: Vec<_> = set.patterns().iter()\n    .map(|pat| Regex::new(pat).unwrap())\n    .collect();\n\n// Match against the whole set first and identify the individual\n// matching patterns.\nlet matches: Vec<&str> = set.matches(text).into_iter()\n    // Dereference the match index to get the corresponding\n    // compiled pattern.\n    .map(|match_idx| &regexes[match_idx])\n    // To get match locations or any other info, we then have to search\n    // the exact same text again, using our separately-compiled pattern.\n    .map(|pat| pat.find(text).unwrap().as_str())\n    .collect();\n\n// Matches arrive in the order the constituent patterns were declared,\n// not the order they appear in the input.\nassert_eq!(vec![\"foo\", \"bar\"], matches);\n```\n\n# Performance\n\nA `RegexSet` has the same performance characteristics as `Regex`. Namely,\nsearch takes `O(mn)` time, where `m` is proportional to the size of the\nregex set and `n` is proportional to the length of the search text.","links":{"crate::Regex":"0:2967:1613","crate::Captures":"0:1565:1608","crate::Match":"0:2944:1610"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:2728","a:2:3376:224-0:2778:2926","a:2:3405:4927-0:2778:2926","a:2:9533:3267-0:2778:2926","a:2:9534:3266-0:2778:2926","a:2:3364:215-0:2778:2926","b:2:3201-0:2778:2926","b:2:3197-0:2778:2926","b:2:3207-0:2778:2926","b:2:2868-0:2778:2926","b:2:4097-0:2778:2926","b:2:2865-0:2778:2926","b:2:3212-0:2778:2926","b:5:848-0:2778:2926","0:2781","0:2774"]}},"0:2429":{"id":"0:2429","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[361,16],"end":[361,21]},"visibility":{"restricted":{"parent":"0:1000:1632","path":"::prog"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstChar","id":"0:2424:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2430:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9533:3267-0:2431:1649":{"id":"a:2:9533:3267-0:2431:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstRanges","id":"0:2431:1649","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:771:3116":{"id":"0:771:3116","crate_id":0,"name":"previous_char","span":{"filename":"src/input.rs","begin":[171,4],"end":[173,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["at",{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6745:5998":{"id":"1:6745:5998","crate_id":1,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6746:58665"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2332:1861":{"id":"0:2332:1861","crate_id":0,"name":"insts","span":{"filename":"src/prog.rs","begin":[20,4],"end":[20,24]},"visibility":"public","docs":"A sequence of instructions that represents an NFA.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7891:239","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:2349:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"1:4467:5363":{"id":"1:4467:5363","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4468:2652","1:4469:60636","1:4471:60637","1:4472:6943","1:4473:60638","1:4474:60639","1:4475:5249","1:4484:3984"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2921":{"id":"0:2921","crate_id":0,"name":null,"span":{"filename":"src/re_trait.rs","begin":[57,16],"end":[57,21]},"visibility":{"restricted":{"parent":"0:1344:1633","path":"::re_trait"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCapturesPosIter","id":"0:2914:3584","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":["0:2923:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3197-0:2198:1643":{"id":"b:2:3197-0:2198:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2335:1864":{"id":"0:2335:1864","crate_id":0,"name":"capture_name_idx","span":{"filename":"src/prog.rs","begin":[29,4],"end":[29,53]},"visibility":"public","docs":"Pointers to all named capture groups into `captures`.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Arc","id":"5:6739:69","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"HashMap","id":"1:1261:144","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}}},"2:10578:5371":{"id":"2:10578:5371","crate_id":2,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10579:664"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3197-0:2375:1852":{"id":"b:2:3197-0:2375:1852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstSave","id":"0:2375:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4097-0:2613:1613":{"id":"b:2:4097-0:2613:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2613:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3197-0:2382:1853":{"id":"b:2:3197-0:2382:1853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstSplit","id":"0:2382:1853","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2868-0:2880:2926":{"id":"b:2:2868-0:2880:2926","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2880:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3215:128":{"id":"2:3215:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:39108:6190","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:1499:3721":{"id":"0:1499:3721","crate_id":0,"name":"splitn","span":{"filename":"src/re_unicode.rs","begin":[394,4],"end":[400,5]},"visibility":"public","docs":"Returns an iterator of at most `limit` substrings of `text` delimited\nby a match of the regular expression. (A `limit` of `0` will return no\nsubstrings.) Namely, each element of the iterator corresponds to text\nthat *isn't* matched by the regular expression. The remainder of the\nstring that is not split will be the last element in the iterator.\n\nThis method will *not* copy the text given.\n\n# Example\n\nGet the first two words in some text:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"\\W+\").unwrap();\nlet fields: Vec<&str> = re.splitn(\"Hey! How are you?\", 3).collect();\nassert_eq!(fields, vec!(\"Hey\", \"How\", \"are you?\"));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2991:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13715:2813":{"id":"2:13715:2813","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12796:3041"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3212-0:2914:3584":{"id":"b:2:3212-0:2914:3584","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCapturesPosIter","id":"0:2914:3584","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2868-0:2967:1613":{"id":"b:2:2868-0:2967:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2967:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3201-0:2552:3575":{"id":"b:2:3201-0:2552:3575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2552:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1361:3859":{"id":"0:1361:3859","crate_id":0,"name":"size_hint","span":{"filename":"src/re_trait.rs","begin":[78,4],"end":[81,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5553:6072":{"id":"1:5553:6072","crate_id":1,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5554:56265","1:5555:56266","1:5556:56267","1:5557:56268"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3620:133":{"id":"2:3620:133","crate_id":2,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3622:183","2:3623:384"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:4097-0:2914:3584":{"id":"b:2:4097-0:2914:3584","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCapturesPosIter","id":"0:2914:3584","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1051:2046":{"id":"0:1051:2046","crate_id":0,"name":"Item","span":{"filename":"src/prog.rs","begin":[243,4],"end":[243,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:2349:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"2:3281:5764":{"id":"2:3281:5764","crate_id":2,"name":"provide","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["demand",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Demand","id":"2:4161:6388","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:738:1817":{"id":"0:738:1817","crate_id":0,"name":"pos","span":{"filename":"src/input.rs","begin":[56,4],"end":[58,5]},"visibility":"public","docs":"Returns the byte offset of this position.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2399:1999":{"id":"0:2399:1999","crate_id":0,"name":"EndLine","span":{"filename":"src/prog.rs","begin":[345,4],"end":[345,11]},"visibility":"default","docs":"End of line or input.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"b:2:3212-0:3038:1615":{"id":"b:2:3212-0:3038:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3038:1615","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13725:58778":{"id":"2:13725:58778","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11205:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11205:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:1360:928":{"id":"0:1360:928","crate_id":0,"name":"next","span":{"filename":"src/re_trait.rs","begin":[66,4],"end":[76,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3364:215-0:2217:1646":{"id":"a:2:3364:215-0:2217:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:2217:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3364:215-0:2431:1649":{"id":"a:2:3364:215-0:2431:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstRanges","id":"0:2431:1649","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1745":{"id":"0:1745","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[763,51],"end":[763,58]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::input::InputAt","name":"InputAt","id":"0:2164:1645","glob":false}},"0:2453:2785":{"id":"0:2453:2785","crate_id":0,"name":"dot_matches_new_line","span":{"filename":"src/re_builder.rs","begin":[11,4],"end":[11,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"b:2:2865-0:2331:1650":{"id":"b:2:2865-0:2331:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Program","id":"0:2331:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:4410:6032":{"id":"1:4410:6032","crate_id":1,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4411:6248","1:4412:58470","1:4414:58471","1:4415:58472","1:4416:6033","1:4417:58473","1:4418:57736","1:4420:58474","1:4421:3984","1:4422:1620","1:4423:5411","1:4425:2073"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3600:4739":{"id":"2:3600:4739","crate_id":2,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3601:550"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Deref","id":"2:3587:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3207-0:3000:1605":{"id":"b:2:3207-0:3000:1605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3000:1605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:848-0:2778:2926":{"id":"b:5:848-0:2778:2926","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2778:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:850:3797","5:851:2605","5:852:5449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3051":{"id":"0:3051","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1300,9],"end":[1300,14]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3047:1612","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:3053:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3374:107":{"id":"2:3374:107","crate_id":2,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1555:928":{"id":"0:1555:928","crate_id":0,"name":"next","span":{"filename":"src/re_unicode.rs","begin":[827,4],"end":[845,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13802:62925":{"id":"2:13802:62925","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:3047:1612":{"id":"b:2:3207-0:3047:1612","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3047:1612","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:733:3100":{"id":"0:733:3100","crate_id":0,"name":"is_end","span":{"filename":"src/input.rs","begin":[27,4],"end":[29,5]},"visibility":"public","docs":"Returns true iff this position is past the end of the input.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2972:1607":{"id":"0:2972:1607","crate_id":0,"name":"CaptureNames","span":{"filename":"src/re_unicode.rs","begin":[751,0],"end":[751,68]},"visibility":"public","docs":"An iterator over the names of all possible captures.\n\n`None` indicates an unnamed capture; the first element (capture 0, the\nwhole matched region) is always unnamed.\n\n`'r` is the lifetime of the compiled regular expression.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:3376:224-0:2972:1607","a:2:3405:4927-0:2972:1607","a:2:9533:3267-0:2972:1607","a:2:9534:3266-0:2972:1607","a:2:3364:215-0:2972:1607","b:2:3201-0:2972:1607","b:2:3197-0:2972:1607","b:2:3207-0:2972:1607","b:2:2868-0:2972:1607","b:2:4097-0:2972:1607","b:2:8677-0:2972:1607","b:2:2865-0:2972:1607","b:2:3212-0:2972:1607","b:5:848-0:2972:1607","0:2976","0:2979","0:1531","0:1539","0:1541"]}},"a:2:3376:224-0:2382:1853":{"id":"a:2:3376:224-0:2382:1853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstSplit","id":"0:2382:1853","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1537:3859":{"id":"0:1537:3859","crate_id":0,"name":"size_hint","span":{"filename":"src/re_unicode.rs","begin":[763,4],"end":[765,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4097-0:2389:1851":{"id":"b:2:4097-0:2389:1851","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstEmptyLook","id":"0:2389:1851","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2790:4142":{"id":"0:2790:4142","crate_id":0,"name":"SetMatchesIntoIter","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"An owned iterator over the set of matches from a regex set.\n\nThis will always produces matches in ascending order of index, where the\nindex corresponds to the index of the regex that matched with respect to\nits position when initially building the set.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":[]}},"5:5910:4892":{"id":"5:5910:4892","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5912:183","5:5913:3345"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3207-0:2778:2926":{"id":"b:2:3207-0:2778:2926","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2778:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:848-0:2972:1607":{"id":"b:5:848-0:2972:1607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2972:1607","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["5:850:3797","5:851:2605","5:852:5449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:579:2816":{"id":"0:579:2816","crate_id":0,"name":"find_at","span":{"filename":"src/exec.rs","begin":[406,4],"end":[408,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:584:2811":{"id":"0:584:2811","crate_id":0,"name":"slots_len","span":{"filename":"src/exec.rs","begin":[427,4],"end":[429,5]},"visibility":"default","docs":"Returns the number of capture slots in the regular expression. (There\nare two slots for every capture group, corresponding to possibly empty\nstart and end locations of the capture.)","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1175:2816":{"id":"0:1175:2816","crate_id":0,"name":"find_at","span":{"filename":"src/re_bytes.rs","begin":[590,4],"end":[599,5]},"visibility":"public","docs":"Returns the same as find, but starts the search at the given\noffset.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2590:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1485:2536":{"id":"0:1485:2536","crate_id":0,"name":"find","span":{"filename":"src/re_unicode.rs","begin":[222,4],"end":[224,5]},"visibility":"public","docs":"Returns the start and end byte range of the leftmost-first match in\n`text`. If no match exists, then `None` is returned.\n\nNote that this should only be used if you want to discover the position\nof the match. Testing the existence of a match is faster if you use\n`is_match`.\n\n# Example\n\nFind the start and end location of the first word with exactly 13\nUnicode word characters:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet text = \"I categorically deny having triskaidekaphobia.\";\nlet mat = Regex::new(r\"\\b\\w{13}\\b\").unwrap().find(text).unwrap();\nassert_eq!(mat.start(), 2);\nassert_eq!(mat.end(), 15);\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:2012:128":{"id":"b:2:3207-0:2012:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:757:798":{"id":"0:757:798","crate_id":0,"name":"len","span":{"filename":"src/input.rs","begin":[129,4],"end":[131,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2922:125":{"id":"2:2922:125","crate_id":2,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2917:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2884:414":{"id":"0:2884:414","crate_id":0,"name":"clone","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2880:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:3007:1618":{"id":"b:2:2868-0:3007:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3007:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2373":{"id":"0:2373","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[267,16],"end":[267,21]},"visibility":{"restricted":{"parent":"0:1000:1632","path":"::prog"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:2349:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2374:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2795:4141":{"id":"0:2795:4141","crate_id":0,"name":"SetMatchesIter","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"A borrowed iterator over the set of matches from a regex set.\n\nThe lifetime `'a` refers to the lifetime of a `SetMatches` value.\n\nThis will always produces matches in ascending order of index, where the\nindex corresponds to the index of the regex that matched with respect to\nits position when initially building the set.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":[]}},"a:2:9534:3266-0:2382:1853":{"id":"a:2:9534:3266-0:2382:1853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstSplit","id":"0:2382:1853","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3207-0:173:1640":{"id":"b:2:3207-0:173:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Compiler","id":"0:173:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2870:1798":{"id":"2:2870:1798","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3197-0:2038:2696":{"id":"b:2:3197-0:2038:2696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecNoSyncStr","id":"0:2038:2696","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2506":{"id":"0:2506","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":{"restricted":{"parent":"0:2493:1575","path":"::re_builder::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2519:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2507:926","0:2508:2790","0:2509:2783","0:2510:2784","0:2511:2785","0:2512:2786","0:2513:2787","0:2514:1575","0:2515:2782","0:2516:1866","0:2517:2172","0:2518:2789"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2868-0:2972:1607":{"id":"b:2:2868-0:2972:1607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2972:1607","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1572:1826":{"id":"0:1572:1826","crate_id":0,"name":"get","span":{"filename":"src/re_unicode.rs","begin":[948,4],"end":[950,5]},"visibility":"public","docs":"Returns the match associated with the capture group at index `i`. If\n`i` does not correspond to a capture group, or if the capture group\ndid not participate in the match, then `None` is returned.\n\n# Examples\n\nGet the text of the match with a default of an empty string if this\ngroup didn't participate in the match:\n\n```rust\n# use regex::Regex;\nlet re = Regex::new(r\"[a-z]+(?:([0-9]+)|([A-Z]+))\").unwrap();\nlet caps = re.captures(\"abc123\").unwrap();\n\nlet text1 = caps.get(1).map_or(\"\", |m| m.as_str());\nlet text2 = caps.get(2).map_or(\"\", |m| m.as_str());\nassert_eq!(text1, \"123\");\nassert_eq!(text2, \"\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3617:132":{"id":"2:3617:132","crate_id":2,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3619:383"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnOnce","id":"2:3620:133","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3824:229":{"id":"2:3824:229","crate_id":2,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3825:183","2:3826:4875","2:3827:690","2:3828:375"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FromResidual","id":"2:3829:138","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3824:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9533:3267-0:2164:1645":{"id":"a:2:9533:3267-0:2164:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:590:2817":{"id":"0:590:2817","crate_id":0,"name":"captures_read_at","span":{"filename":"src/exec.rs","begin":[589,4],"end":[685,5]},"visibility":"default","docs":"Finds the start and end location of the leftmost-first match and also\nfills in all matching capture groups.\n\nThe number of capture slots given should be equal to the total number\nof capture slots in the compiled program.\n\nNote that the first two slots always correspond to the start and end\nlocations of the overall match.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["locs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Locations","id":"0:2907:1609","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4097-0:3007:1618":{"id":"b:2:4097-0:3007:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3007:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2868-0:2982:1616":{"id":"b:2:2868-0:2982:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2982:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:34":{"id":"0:34","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[633,31],"end":[633,39]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::re_unicode::NoExpand","name":"NoExpand","id":"0:3047:1612","glob":false}},"2:10563:110":{"id":"2:10563:110","crate_id":2,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10564:664"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2348:414":{"id":"0:2348:414","crate_id":0,"name":"clone","span":{"filename":"src/prog.rs","begin":[17,9],"end":[17,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Program","id":"0:2331:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6647:6004":{"id":"1:6647:6004","crate_id":1,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6648:58637"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1673":{"id":"0:1673","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1282,0],"end":[1290,1]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3617:132","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1608","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],"output":{"kind":"generic","inner":"T"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:3165:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["by_ref","no_expansion"],"trait":{"name":"Replacer","id":"0:1641:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"generic","inner":"F"},"items":["0:1676:3798"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13803:62926":{"id":"2:13803:62926","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:15883:4458","self::pattern":"2:13332:1596"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:13362:4888","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2579:2787":{"id":"0:2579:2787","crate_id":0,"name":"ignore_whitespace","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the value for the ignore whitespace (`x`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2585:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2461:664":{"id":"0:2461:664","crate_id":0,"name":"fmt","span":{"filename":"src/re_builder.rs","begin":[2,16],"end":[2,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2524:1621":{"id":"0:2524:1621","crate_id":0,"name":"set_bytes","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2552:3575"],"is_stripped":false}},"b:2:3201-0:2396:1647":{"id":"b:2:3201-0:2396:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2396:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3376:224-0:2519:3495":{"id":"a:2:3376:224-0:2519:3495","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2519:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1761":{"id":"0:1761","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[765,55],"end":[765,62]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::prog::Program","name":"Program","id":"0:2331:1650","glob":false}},"0:2953:414":{"id":"0:2953:414","crate_id":0,"name":"clone","span":{"filename":"src/re_unicode.rs","begin":[28,15],"end":[28,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1529:3683":{"id":"0:1529:3683","crate_id":0,"name":"capture_locations","span":{"filename":"src/re_unicode.rs","begin":[730,4],"end":[732,5]},"visibility":"public","docs":"Returns an empty set of capture locations that can be reused in\nmultiple calls to `captures_read` or `captures_read_at`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3000:1605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:631":{"id":"0:631","crate_id":0,"name":null,"span":{"filename":"src/exec.rs","begin":[1260,0],"end":[1314,1]},"visibility":{"restricted":{"parent":"0:451:1626","path":"::exec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Exec","id":"0:2026:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:632:2919","0:633:2921","0:634:2923","0:635:2925","0:636:2928","0:637:2930","0:638:2933","0:639:2936","0:640:1864"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13712:62910":{"id":"2:13712:62910","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:13710:62909"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:3057:2164":{"id":"b:2:3207-0:3057:2164","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SparseSet","id":"0:3057:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3437:4854":{"id":"2:3437:4854","crate_id":2,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3439:183","2:3440:1368"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3405:4927-0:2217:1646":{"id":"a:2:3405:4927-0:2217:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:2217:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3197-0:3057:2164":{"id":"b:2:3197-0:3057:2164","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SparseSet","id":"0:3057:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1171":{"id":"0:1171","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[534,0],"end":[651,1]},"visibility":{"restricted":{"parent":"0:1068:1622","path":"::re_bytes"}},"docs":"Advanced or \"lower level\" search methods.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2613:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1172:3811","0:1173:2814","0:1174:2815","0:1175:2816","0:1178:3827","0:1180:2817"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9533:3267-0:2613:1613":{"id":"a:2:9533:3267-0:2613:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2613:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2208":{"id":"0:2208","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[345,28],"end":[345,37]},"visibility":{"restricted":{"parent":"0:702:1629","path":"::input"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2917:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2209:608"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3207-0:2164:1645":{"id":"b:2:3207-0:2164:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3028:664":{"id":"0:3028:664","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[1116,9],"end":[1116,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1570":{"id":"0:1570","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[928,0],"end":[1000,1]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1608","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1572:1826","0:1574:905","0:1576:784","0:1578:1627","0:1579:798"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1159:3721":{"id":"0:1159:3721","crate_id":0,"name":"splitn","span":{"filename":"src/re_bytes.rs","begin":[341,4],"end":[347,5]},"visibility":"public","docs":"Returns an iterator of at most `limit` substrings of `text` delimited\nby a match of the regular expression. (A `limit` of `0` will return no\nsubstrings.) Namely, each element of the iterator corresponds to text\nthat *isn't* matched by the regular expression. The remainder of the\nstring that is not split will be the last element in the iterator.\n\nThis method will *not* copy the text given.\n\n# Example\n\nGet the first two words in some text:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(r\"\\W+\").unwrap();\nlet fields: Vec<&[u8]> = re.splitn(b\"Hey! How are you?\", 3).collect();\nassert_eq!(fields, vec![&b\"Hey\"[..], &b\"How\"[..], &b\"are you?\"[..]]);\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2645:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1472:685":{"id":"0:1472:685","crate_id":0,"name":"from","span":{"filename":"src/re_unicode.rs","begin":[75,4],"end":[77,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["m",{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Range","id":"2:46187:196","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1748":{"id":"0:1748","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[764,4],"end":[764,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::literal::LiteralSearcher","name":"LiteralSearcher","id":"0:2217:1646","glob":false}},"0:2012:128":{"id":"0:2012:128","crate_id":0,"name":"Error","span":{"filename":"src/error.rs","begin":[6,0],"end":[19,1]},"visibility":"public","docs":"An error that occurred during parsing or compiling a regular expression.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":true,"variants":["0:2013:2003","0:2016:2087"],"impls":["a:2:3376:224-0:2012:128","a:2:3405:4927-0:2012:128","a:2:9533:3267-0:2012:128","a:2:9534:3266-0:2012:128","a:2:3364:215-0:2012:128","b:2:3201-0:2012:128","b:2:3197-0:2012:128","b:2:3207-0:2012:128","b:2:2868-0:2012:128","b:2:4097-0:2012:128","b:2:2865-0:2012:128","b:2:3212-0:2012:128","b:2:3279-0:2012:128","b:5:848-0:2012:128","b:5:6500-0:2012:128","0:2021","0:2023","0:2024","0:445","0:447","0:449"]}},"b:2:4097-0:2331:1650":{"id":"b:2:4097-0:2331:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Program","id":"0:2331:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1357":{"id":"0:1357","crate_id":0,"name":null,"span":{"filename":"src/re_trait.rs","begin":[63,0],"end":[86,1]},"visibility":{"restricted":{"parent":"0:1344:1633","path":"::re_trait"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["rposition","try_for_each","count","try_collect","map_while","find","intersperse_with","rev","next_chunk","cmp","take","sum","size_hint","max_by_key","eq_by","unzip","peekable","fold","collect_into","scan","any","for_each","advance_by","all","min","enumerate","is_sorted","cycle","reduce","partition","flat_map","filter","nth","gt","is_sorted_by","array_chunks","position","try_reduce","lt","partition_in_place","flatten","filter_map","step_by","copied","by_ref","max","min_by","is_sorted_by_key","product","find_map","is_partitioned","fuse","partial_cmp","skip","skip_while","chain","eq","le","cloned","ne","min_by_key","__iterator_get_unchecked","zip","last","try_find","cmp_by","try_fold","ge","inspect","take_while","intersperse","map","collect","max_by","partial_cmp_by"],"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCapturesPosIter","id":"0:2914:3584","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":["0:1359:2046","0:1360:928","0:1361:3859","0:1362:500"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:5505:6068":{"id":"1:5505:6068","crate_id":1,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5506:8292","1:5507:57647","1:5508:57648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:807":{"id":"0:807","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[394,0],"end":[398,1]},"visibility":{"restricted":{"parent":"0:702:1629","path":"::input"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"char"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:808:685"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:10570:120":{"id":"2:10570:120","crate_id":2,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10571:664"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3207-0:2488:3495":{"id":"b:2:3207-0:2488:3495","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2488:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2481:2786":{"id":"0:2481:2786","crate_id":0,"name":"swap_greed","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the value for the greedy swap (`U`) flag.\n\nWhen enabled, a pattern like `a*` is lazy (tries to find shortest\nmatch) and `a*?` is greedy (tries to find longest match).\n\nBy default, `a*` is greedy and `a*?` is lazy.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2488:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2247:1977":{"id":"0:2247:1977","crate_id":0,"name":"Empty","span":{"filename":"src/literal/imp.rs","begin":[223,4],"end":[223,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:1677":{"id":"0:1677","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1303,0],"end":[1311,1]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["by_ref","no_expansion"],"trait":{"name":"Replacer","id":"0:1641:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3047:1612","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1679:3798","0:1680:3795"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13721:11340":{"id":"2:13721:11340","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:47810:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11205:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11205:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:747:1815":{"id":"0:747:1815","crate_id":0,"name":"is_empty","span":{"filename":"src/input.rs","begin":[96,4],"end":[98,5]},"visibility":"default","docs":"Whether the input is empty.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9533:3267-0:2382:1853":{"id":"a:2:9533:3267-0:2382:1853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstSplit","id":"0:2382:1853","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3207-0:1565:1608":{"id":"b:2:3207-0:1565:1608","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1608","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2838:1773":{"id":"0:2838:1773","crate_id":0,"name":"matches","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Returns the set of regular expressions that match in the given text.\n\nThe set returned contains the index of each regular expression that\nmatches in the given text. The index is in correspondence with the\norder of regular expressions given to `RegexSet`'s constructor.\n\nThe set can also be used to iterate over the matched indices.\n\nNote that as with searches using `Regex`, the expression is unanchored\nby default. That is, if the regex does not start with `^` or `\\A`, or\nend with `$` or `\\z`, then it is permitted to match anywhere in the\ntext.\n\n# Example\n\nTests which regular expressions match the given text:\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[\n    r\"\\w+\",\n    r\"\\d+\",\n    r\"\\pL+\",\n    r\"foo\",\n    r\"bar\",\n    r\"barfoo\",\n    r\"foobar\",\n]).unwrap();\nlet matches: Vec<_> = set.matches(\"foobar\").into_iter().collect();\nassert_eq!(matches, vec![0, 2, 3, 4, 6]);\n\n// You can also test whether a particular regex matched:\nlet matches = set.matches(\"foobar\");\nassert!(!matches.matched(5));\nassert!(matches.matched(6));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2885:4108","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9534:3266-0:2944:1610":{"id":"a:2:9534:3266-0:2944:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13795:62921":{"id":"2:13795:62921","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3376:224-0:2944:1610":{"id":"a:2:3376:224-0:2944:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1579:798":{"id":"0:1579:798","crate_id":0,"name":"len","span":{"filename":"src/re_unicode.rs","begin":[997,4],"end":[999,5]},"visibility":"public","docs":"Returns the total number of capture groups (even if they didn't match).\n\nThis is always at least `1`, since every regex has at least one capture\ngroup that corresponds to the full match.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2729:926":{"id":"0:2729:926","crate_id":0,"name":"new","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Create a new regex set with the given regular expressions.\n\nThis takes an iterator of `S`, where `S` is something that can produce\na `&str`. If any of the strings in the iterator are not valid regular\nexpressions, then an error is returned.\n\n# Example\n\nCreate a new regex set from an iterator of strings:\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[r\"\\w+\", r\"\\d+\"]).unwrap();\nassert!(set.is_match(\"foo\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["exprs",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47933:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2778:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:3165:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8673:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"S"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23435:6480":{"id":"2:23435:6480","crate_id":2,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdElement","id":"2:24072:6383","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23426:6013","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:634:2923":{"id":"0:634:2923","crate_id":0,"name":"into_regex","span":{"filename":"src/exec.rs","begin":[1277,4],"end":[1279,5]},"visibility":"public","docs":"Build a Regex from this executor.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"re_unicode::Regex","id":"0:2967:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2953:179":{"id":"2:2953:179","crate_id":2,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2954:421","2:2955:2064","2:2956:2062","2:2957:5398"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Eq","id":"2:2922:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2963:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2868-0:2038:2696":{"id":"b:2:2868-0:2038:2696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecNoSyncStr","id":"0:2038:2696","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2865-0:2488:3495":{"id":"b:2:2865-0:2488:3495","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2488:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2170:414":{"id":"0:2170:414","crate_id":0,"name":"clone","span":{"filename":"src/input.rs","begin":[12,9],"end":[12,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3047:1612":{"id":"0:3047:1612","crate_id":0,"name":"NoExpand","span":{"filename":"src/re_unicode.rs","begin":[1301,0],"end":[1301,37]},"visibility":"public","docs":"`NoExpand` indicates literal string replacement.\n\nIt can be used with `replace` and `replace_all` to do a literal string\nreplacement without expanding `$name` to their corresponding capture\ngroups. This can be both convenient (to avoid escaping `$`, for example)\nand performant (since capture groups don't need to be found).\n\n`'t` is the lifetime of the literal text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":["0:3050:1558"]},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:3376:224-0:3047:1612","a:2:3405:4927-0:3047:1612","a:2:9533:3267-0:3047:1612","a:2:9534:3266-0:3047:1612","a:2:3364:215-0:3047:1612","b:2:3201-0:3047:1612","b:2:3197-0:3047:1612","b:2:3207-0:3047:1612","b:2:2868-0:3047:1612","b:2:4097-0:3047:1612","b:2:2865-0:3047:1612","b:2:3212-0:3047:1612","b:5:848-0:3047:1612","0:3051","0:3054","0:1677"]}},"0:1574:905":{"id":"0:1574:905","crate_id":0,"name":"name","span":{"filename":"src/re_unicode.rs","begin":[954,4],"end":[956,5]},"visibility":"public","docs":"Returns the match for the capture group named `name`. If `name` isn't a\nvalid capture group or didn't match anything, then `None` is returned.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["name",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2865-0:2382:1853":{"id":"b:2:2865-0:2382:1853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstSplit","id":"0:2382:1853","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2205:718":{"id":"0:2205:718","crate_id":0,"name":"hash","span":{"filename":"src/input.rs","begin":[345,22],"end":[345,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10811:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:799":{"id":"0:799","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[348,0],"end":[355,1]},"visibility":{"restricted":{"parent":"0:702:1629","path":"::input"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:800:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3207-0:3007:1618":{"id":"b:2:3207-0:3007:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3007:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3207-0:2031:2692":{"id":"b:2:3207-0:2031:2692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecNoSync","id":"0:2031:2692","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9533:3267-0:2174:1644":{"id":"a:2:9533:3267-0:2174:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:2174:1644","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1189:3683":{"id":"0:1189:3683","crate_id":0,"name":"capture_locations","span":{"filename":"src/re_bytes.rs","begin":[672,4],"end":[674,5]},"visibility":"public","docs":"Returns an empty set of capture locations that can be reused in\nmultiple calls to `captures_read` or `captures_read_at`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2664:1605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1513:2814":{"id":"0:1513:2814","crate_id":0,"name":"shortest_match_at","span":{"filename":"src/re_unicode.rs","begin":[624,4],"end":[630,5]},"visibility":"public","docs":"Returns the same as shortest_match, but starts the search at the given\noffset.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:3020:1606":{"id":"b:2:2868-0:3020:1606","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3020:1606","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:188:1625":{"id":"0:188:1625","crate_id":0,"name":"dfa","span":{"filename":"src/compile.rs","begin":[112,4],"end":[115,5]},"visibility":"public","docs":"When set, the machine returned is suitable for use in the DFA matching\nengine.\n\nIn particular, this ensures that if the regex is not anchored in the\nbeginning, then a preceding `.*?` is included in the program. (The NFA\nbased engines handle the preceding `.*?` explicitly, which is difficult\nor impossible in the DFA engine.)","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2225:664":{"id":"0:2225:664","crate_id":0,"name":"fmt","span":{"filename":"src/literal/imp.rs","begin":[12,16],"end":[12,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2781":{"id":"0:2781","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2703:1575","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2778:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2782:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3376:224-0:3007:1618":{"id":"a:2:3376:224-0:3007:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3007:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3212-0:2198:1643":{"id":"b:2:3212-0:2198:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:753:3114":{"id":"0:753:3114","crate_id":0,"name":"next_char","span":{"filename":"src/input.rs","begin":[109,4],"end":[111,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["at",{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1641:1614":{"id":"0:1641:1614","crate_id":0,"name":"Replacer","span":{"filename":"src/re_unicode.rs","begin":[1162,0],"end":[1207,1]},"visibility":"public","docs":"Replacer describes types that can be used to replace matches in a string.\n\nIn general, users of this crate shouldn't need to implement this trait,\nsince implementations are already provided for `&str` along with other\nvariants of string types and `FnMut(&Captures) -> String` (or any\n`FnMut(&Captures) -> T` where `T: AsRef<str>`), which covers most use cases.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:1642:3798","0:1643:3795","0:1645:3984"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:1647","0:1652","0:1656","0:1660","0:1663","0:1667","0:1673","0:1677"]}},"b:2:3207-0:2375:1852":{"id":"b:2:3207-0:2375:1852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstSave","id":"0:2375:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2865-0:543:1642":{"id":"b:2:2865-0:543:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecBuilder","id":"0:543:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3405:4927-0:2349:1648":{"id":"a:2:3405:4927-0:2349:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:2349:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2245:3187":{"id":"0:2245:3187","crate_id":0,"name":"LiteralIter","span":{"filename":"src/literal/imp.rs","begin":[222,0],"end":[228,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:2247:1977","0:2249:1833","0:2252:3188","0:2255:3163","0:2258:3169"],"impls":[]}},"b:2:3207-0:2349:1648":{"id":"b:2:3207-0:2349:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:2349:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2577:2785":{"id":"0:2577:2785","crate_id":0,"name":"dot_matches_new_line","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the value for the any character (`s`) flag, where in `.` matches\nanything when `s` is set and matches anything except for new line when\nit is not set (the default).\n\nN.B. \"matches anything\" means \"any byte\" for `regex::bytes::RegexSet`\nexpressions and means \"any Unicode scalar value\" for `regex::RegexSet`\nexpressions.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2585:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3364:215-0:2914:3584":{"id":"a:2:3364:215-0:2914:3584","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCapturesPosIter","id":"0:2914:3584","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3376:224-0:2585:3575":{"id":"a:2:3376:224-0:2585:3575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2585:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3201-0:2389:1851":{"id":"b:2:3201-0:2389:1851","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstEmptyLook","id":"0:2389:1851","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9534:3266-0:2349:1648":{"id":"a:2:9534:3266-0:2349:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:2349:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1056":{"id":"0:1056","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[380,0],"end":[415,1]},"visibility":{"restricted":{"parent":"0:1000:1632","path":"::prog"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"InstRanges","id":"0:2431:1649","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1057:1773","0:1059:3480"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4097-0:1565:1608":{"id":"b:2:4097-0:1565:1608","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1608","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1578:1627":{"id":"0:1578:1627","crate_id":0,"name":"expand","span":{"filename":"src/re_unicode.rs","begin":[988,4],"end":[990,5]},"visibility":"public","docs":"Expands all instances of `$name` in `replacement` to the corresponding\ncapture group `name`, and writes them to the `dst` buffer given.\n\n`name` may be an integer corresponding to the index of the capture\ngroup (counted by order of opening parenthesis where `0` is the\nentire match) or it can be a name (consisting of letters, digits or\nunderscores) corresponding to a named capture group.\n\nIf `name` isn't a valid capture group (whether the name doesn't exist\nor isn't a valid index), then it is replaced with the empty string.\n\nThe longest possible name consisting of the characters `[_0-9A-Za-z]`\nis used. e.g., `$1a` looks up the capture group named `1a` and not the\ncapture group at index `1`. To exert more precise control over the\nname, or to refer to a capture group name that uses characters outside\nof `[_0-9A-Za-z]`, use braces, e.g., `${1}a` or `${foo[bar].baz}`. When\nusing braces, any sequence of characters is permitted. If the sequence\ndoes not refer to a capture group name in the corresponding regex, then\nit is replaced with an empty string.\n\nTo write a literal `$` use `$$`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["replacement",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:749":{"id":"0:749","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[104,0],"end":[136,1]},"visibility":{"restricted":{"parent":"0:702:1629","path":"::input"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Input","id":"0:740:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_empty"],"trait":{"name":"Input","id":"0:740:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}},"items":["0:752:1790","0:753:3114","0:754:3116","0:755:1830","0:756:1816","0:757:798","0:758:2813"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3405:4927-0:1565:1608":{"id":"a:2:3405:4927-0:1565:1608","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1608","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3197-0:2349:1648":{"id":"b:2:3197-0:2349:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:2349:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3376:224-0:2375:1852":{"id":"a:2:3376:224-0:2375:1852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstSave","id":"0:2375:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:9154:3581":{"id":"2:9154:3581","crate_id":2,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13719:1826":{"id":"2:13719:1826","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:47810:176"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11205:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11205:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3405:4927-0:2552:3575":{"id":"a:2:3405:4927-0:2552:3575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2552:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1302:3798":{"id":"0:1302:3798","crate_id":0,"name":"replace_append","span":{"filename":"src/re_bytes.rs","begin":[1119,4],"end":[1119,73]},"visibility":"default","docs":"Appends text to `dst` to replace the current match.\n\nThe current match is represented by `caps`, which is guaranteed to\nhave a match at capture group `0`.\n\nFor example, a no-op replacement would be\n`dst.extend(&caps[0])`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1608","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7891:239","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"1:6649:6005":{"id":"1:6649:6005","crate_id":1,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6650:60625"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1655:3795":{"id":"0:1655:3795","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1229,4],"end":[1231,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:853:109","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2509:2783":{"id":"0:2509:2783","crate_id":0,"name":"case_insensitive","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the value for the case insensitive (`i`) flag.\n\nWhen enabled, letters in the pattern will match both upper case and\nlower case variants.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2519:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:12772:6737":{"id":"2:12772:6737","crate_id":2,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12773:2046","2:12774:62120"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:4097-0:2431:1649":{"id":"b:2:4097-0:2431:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstRanges","id":"0:2431:1649","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3364:215-0:2552:3575":{"id":"a:2:3364:215-0:2552:3575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2552:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:848-0:2967:1613":{"id":"b:5:848-0:2967:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2967:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:850:3797","5:851:2605","5:852:5449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9533:3267-0:2349:1648":{"id":"a:2:9533:3267-0:2349:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:2349:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3207-0:2438:1849":{"id":"b:2:3207-0:2438:1849","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstBytes","id":"0:2438:1849","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1604:757":{"id":"0:1604:757","crate_id":0,"name":"index","span":{"filename":"src/re_unicode.rs","begin":[1065,4],"end":[1069,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["name",{"kind":"borrowed_ref","inner":{"lifetime":"'i","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3197-0:3047:1612":{"id":"b:2:3197-0:3047:1612","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3047:1612","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9533:3267-0:2991:1617":{"id":"a:2:9533:3267-0:2991:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2991:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13710:62909":{"id":"2:13710:62909","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2350:1610":{"id":"0:2350:1610","crate_id":0,"name":"Match","span":{"filename":"src/prog.rs","begin":[276,4],"end":[276,16]},"visibility":"default","docs":"Match indicates that the program has reached a match state.\n\nThe number in the match corresponds to the Nth logical regular\nexpression in this program. This index is always 0 for normal regex\nprograms. Values greater than 0 appear when compiling regex sets, and\neach match instruction gets its own unique value. The value corresponds\nto the Nth regex in the set.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:2352:1558"]}},"0:2210":{"id":"0:2210","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[345,39],"end":[345,41]},"visibility":{"restricted":{"parent":"0:702:1629","path":"::input"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3373:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:2862:98":{"id":"2:2862:98","crate_id":2,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2864:1798"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1597:757":{"id":"0:1597:757","crate_id":0,"name":"index","span":{"filename":"src/re_unicode.rs","begin":[1043,4],"end":[1047,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3376:224-0:2613:1613":{"id":"a:2:3376:224-0:2613:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2613:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1534:928":{"id":"0:1534:928","crate_id":0,"name":"next","span":{"filename":"src/re_unicode.rs","begin":[756,4],"end":[761,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1165:3791":{"id":"0:1165:3791","crate_id":0,"name":"replace_all","span":{"filename":"src/re_bytes.rs","begin":[471,4],"end":[477,5]},"visibility":"public","docs":"Replaces all non-overlapping matches in `text` with the replacement\nprovided. This is the same as calling `replacen` with `limit` set to\n`0`.\n\nSee the documentation for `replace` for details on how to access\ncapturing group matches in the replacement text.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["rep",{"kind":"generic","inner":"R"}]],"output":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:853:109","args":{"angle_bracketed":{"args":[{"lifetime":"'t"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Replacer","id":"0:1301:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1656":{"id":"0:1656","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1234,0],"end":[1242,1]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["by_ref","no_expansion"],"trait":{"name":"Replacer","id":"0:1641:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"items":["0:1658:3798","0:1659:3795"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1694:1815":{"id":"0:1694:1815","crate_id":0,"name":"is_empty","span":{"filename":"src/sparse.rs","begin":[39,4],"end":[41,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9533:3267-0:2198:1643":{"id":"a:2:9533:3267-0:2198:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:773:1830":{"id":"0:773:1830","crate_id":0,"name":"is_empty_match","span":{"filename":"src/input.rs","begin":[175,4],"end":[205,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["at",{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["empty",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"InstEmptyLook","id":"0:2389:1851","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3212-0:2967:1613":{"id":"b:2:3212-0:2967:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2967:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:877:798":{"id":"0:877:798","crate_id":0,"name":"len","span":{"filename":"src/literal/imp.rs","begin":[147,4],"end":[156,5]},"visibility":"public","docs":"Returns the number of prefixes in this machine.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9534:3266-0:3029:1611":{"id":"a:2:9534:3266-0:3029:1611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3029:1611","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3364:215-0:543:1642":{"id":"a:2:3364:215-0:543:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecBuilder","id":"0:543:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2541:2790":{"id":"0:2541:2790","crate_id":0,"name":"build","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Consume the builder and compile the regular expressions into a set.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47933:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2880:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13736:7020":{"id":"2:13736:7020","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:50043:4906","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1617":{"id":"0:1617","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1105,0],"end":[1105,63]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"name":"ExactSizeIterator","id":"2:8742:3864","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3007:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2452:2784":{"id":"0:2452:2784","crate_id":0,"name":"multi_line","span":{"filename":"src/re_builder.rs","begin":[10,4],"end":[10,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"2:3432:4849":{"id":"2:3432:4849","crate_id":2,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3434:183","2:3435:270"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5519:6071":{"id":"1:5519:6071","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5520:10098","1:5521:58157","1:5522:8292","1:5523:58158","1:5524:6307","1:5525:6308","1:5526:58159","1:5527:1317","1:5528:58160","1:5529:58161","1:5530:58162","1:5531:58163","1:5532:58164","1:5533:58165","1:5534:58166","1:5535:58167"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2385":{"id":"0:2385","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[319,9],"end":[319,14]},"visibility":{"restricted":{"parent":"0:1000:1632","path":"::prog"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstSplit","id":"0:2382:1853","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2386:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3364:215-0:173:1640":{"id":"a:2:3364:215-0:173:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Compiler","id":"0:173:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3376:224-0:2914:3584":{"id":"a:2:3376:224-0:2914:3584","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCapturesPosIter","id":"0:2914:3584","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3050:1558":{"id":"0:3050:1558","crate_id":0,"name":"0","span":{"filename":"src/re_unicode.rs","begin":[1301,24],"end":[1301,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}},"0:2783:4108":{"id":"0:2783:4108","crate_id":0,"name":"SetMatches","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"A set of matches returned by a regex set.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":[]}},"b:2:4097-0:2031:2692":{"id":"b:2:4097-0:2031:2692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecNoSync","id":"0:2031:2692","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2224":{"id":"0:2224","crate_id":0,"name":null,"span":{"filename":"src/literal/imp.rs","begin":[12,16],"end":[12,21]},"visibility":{"restricted":{"parent":"0:822:2916","path":"::literal::imp"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:2217:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2225:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2345:1814":{"id":"0:2345:1814","crate_id":0,"name":"prefixes","span":{"filename":"src/prog.rs","begin":[58,4],"end":[58,33]},"visibility":"public","docs":"A possibly empty machine for very quickly matching prefix literals.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:2217:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"a:2:3376:224-0:2198:1643":{"id":"a:2:3376:224-0:2198:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1561":{"id":"0:1561","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[880,0],"end":[909,1]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3000:1605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1562:1826","0:1563:798"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2016:2087":{"id":"0:2016:2087","crate_id":0,"name":"CompiledTooBig","span":{"filename":"src/error.rs","begin":[11,4],"end":[11,25]},"visibility":"default","docs":"The compiled program exceeded the set size limit.\nThe argument is the size limit imposed.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:2018:1558"]}},"0:2358:1558":{"id":"0:2358:1558","crate_id":0,"name":"0","span":{"filename":"src/prog.rs","begin":[282,10],"end":[282,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"InstSplit","id":"0:2382:1853","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:555:2741":{"id":"0:555:2741","crate_id":0,"name":"new_many","span":{"filename":"src/exec.rs","begin":[144,4],"end":[152,5]},"visibility":"public","docs":"Like new, but compiles the union of the given regular expressions.\n\nNote that when compiling 2 or more regular expressions, capture groups\nare completely unsupported. (This means both `find` and `captures`\nwon't work.)","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["res",{"kind":"generic","inner":"I"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:3165:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8673:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"S"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1511":{"id":"0:1511","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[592,0],"end":[709,1]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":"Advanced or \"lower level\" search methods.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2967:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1512:3811","0:1513:2814","0:1514:2815","0:1515:2816","0:1518:3827","0:1520:2817"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2026:1641":{"id":"0:2026:1641","crate_id":0,"name":"Exec","span":{"filename":"src/exec.rs","begin":[35,0],"end":[47,1]},"visibility":"public","docs":"`Exec` manages the execution of a regular expression.\n\nIn particular, this manages the various compiled forms of a single regular\nexpression and the choice of which matching engine to use to execute a\nregular expression.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:631","a:2:3376:224-0:2026:1641","a:2:3405:4927-0:2026:1641","a:2:9533:3267-0:2026:1641","a:2:9534:3266-0:2026:1641","a:2:3364:215-0:2026:1641","b:2:3201-0:2026:1641","b:2:3197-0:2026:1641","b:2:3207-0:2026:1641","b:2:2868-0:2026:1641","b:2:4097-0:2026:1641","b:2:2865-0:2026:1641","b:2:3212-0:2026:1641","b:5:848-0:2026:1641","0:2029","0:641"]}},"2:2884:105":{"id":"2:2884:105","crate_id":2,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2885:414","2:2886:416"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:19":{"id":"0:19","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[632,46],"end":[632,58]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::re_unicode::CaptureNames","name":"CaptureNames","id":"0:2972:1607","glob":false}},"2:13827:57615":{"id":"2:13827:57615","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2515:2782":{"id":"0:2515:2782","crate_id":0,"name":"octal","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Whether to support octal syntax or not.\n\nOctal syntax is a little-known way of uttering Unicode codepoints in\na regular expression. For example, `a`, `\\x61`, `\\u0061` and\n`\\141` are all equivalent regular expressions, where the last example\nshows octal syntax.\n\nWhile supporting octal syntax isn't in and of itself a problem, it does\nmake good error messages harder. That is, in PCRE based regex engines,\nsyntax like `\\0` invokes a backreference, which is explicitly\nunsupported in Rust's regex engine. However, many users expect it to\nbe supported. Therefore, when octal support is disabled, the error\nmessage will explicitly mention that backreferences aren't supported.\n\nOctal syntax is disabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2519:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:736:798":{"id":"0:736:798","crate_id":0,"name":"len","span":{"filename":"src/input.rs","begin":[45,4],"end":[47,5]},"visibility":"public","docs":"Returns the UTF-8 width of the character at this position.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2384:1828":{"id":"0:2384:1828","crate_id":0,"name":"goto2","span":{"filename":"src/prog.rs","begin":[326,4],"end":[326,22]},"visibility":"public","docs":"The second instruction to try. A match resulting from following goto1\nhas precedence over a match resulting from following goto2.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"0:1141:3606":{"id":"0:1141:3606","crate_id":0,"name":"from_str","span":{"filename":"src/re_bytes.rs","begin":[108,4],"end":[110,5]},"visibility":"default","docs":"Attempts to parse a string into a regular expression","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47933:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2613:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:1031:4720":{"id":"1:1031:4720","crate_id":1,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:1032:3797","1:1033:2039","1:1034:57613","1:1035:57614","1:1036:57615","1:1037:57616","1:1038:57617"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3376:224-0:2991:1617":{"id":"a:2:3376:224-0:2991:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2991:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:1755":{"id":"0:1755","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[765,37],"end":[765,41]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::prog::Inst","name":"Inst","id":"0:2349:1648","glob":false}},"2:10582:5372":{"id":"2:10582:5372","crate_id":2,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10583:664"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:871:2865":{"id":"0:871:2865","crate_id":0,"name":"find_start","span":{"filename":"src/literal/imp.rs","begin":[95,4],"end":[105,5]},"visibility":"public","docs":"Like find, except matches must start at index `0`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:848-0:3007:1618":{"id":"b:5:848-0:3007:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3007:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["5:850:3797","5:851:2605","5:852:5449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3212-0:2031:2692":{"id":"b:2:3212-0:2031:2692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecNoSync","id":"0:2031:2692","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2576:2784":{"id":"0:2576:2784","crate_id":0,"name":"multi_line","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the value for the multi-line matching (`m`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2585:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3587:117":{"id":"2:3587:117","crate_id":2,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3588:226","2:3589:548"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1680:3795":{"id":"0:1680:3795","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1308,4],"end":[1310,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:853:109","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1462:1338":{"id":"0:1462:1338","crate_id":0,"name":"start","span":{"filename":"src/re_unicode.rs","begin":[38,4],"end":[40,5]},"visibility":"public","docs":"Returns the starting byte offset of the match in the haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3211:1431":{"id":"2:3211:1431","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47933:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2389:1851":{"id":"0:2389:1851","crate_id":0,"name":"InstEmptyLook","span":{"filename":"src/prog.rs","begin":[331,0],"end":[337,1]},"visibility":"public","docs":"Representation of the `EmptyLook` instruction.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:2390:1827","0:2391:2045"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:3376:224-0:2389:1851","a:2:3405:4927-0:2389:1851","a:2:9533:3267-0:2389:1851","a:2:9534:3266-0:2389:1851","a:2:3364:215-0:2389:1851","b:2:3201-0:2389:1851","b:2:3197-0:2389:1851","b:2:3207-0:2389:1851","b:2:2868-0:2389:1851","b:2:4097-0:2389:1851","b:2:2865-0:2389:1851","b:2:3212-0:2389:1851","b:5:848-0:2389:1851","0:2392","0:2394"]}},"b:2:3201-0:2038:2696":{"id":"b:2:3201-0:2038:2696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecNoSyncStr","id":"0:2038:2696","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:808:685":{"id":"0:808:685","crate_id":0,"name":"from","span":{"filename":"src/input.rs","begin":[395,4],"end":[397,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["c",{"kind":"primitive","inner":"char"}]],"output":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3197-0:543:1642":{"id":"b:2:3197-0:543:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecBuilder","id":"0:543:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3491:4860":{"id":"2:3491:4860","crate_id":2,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3493:183","2:3494:357"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1136:664":{"id":"0:1136:664","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[89,4],"end":[91,5]},"visibility":"default","docs":"Shows the original regular expression.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3197-0:2914:3584":{"id":"b:2:3197-0:2914:3584","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCapturesPosIter","id":"0:2914:3584","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3405:4927-0:2944:1610":{"id":"a:2:3405:4927-0:2944:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:4097-0:2438:1849":{"id":"b:2:4097-0:2438:1849","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstBytes","id":"0:2438:1849","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9533:3267-0:2967:1613":{"id":"a:2:9533:3267-0:2967:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2967:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3376:224-0:2446:2672":{"id":"a:2:3376:224-0:2446:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexOptions","id":"0:2446:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:570:2790":{"id":"0:570:2790","crate_id":0,"name":"build","span":{"filename":"src/exec.rs","begin":[299,4],"end":[356,5]},"visibility":"public","docs":"Build an executor that can run a regular expression.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47933:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Exec","id":"0:2026:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2574:2790":{"id":"0:2574:2790","crate_id":0,"name":"build","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Consume the builder and compile the regular expressions into a set.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47933:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2778:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3201-0:2488:3495":{"id":"b:2:3201-0:2488:3495","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2488:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1660":{"id":"0:1660","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1244,0],"end":[1252,1]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["by_ref","no_expansion"],"trait":{"name":"Replacer","id":"0:1641:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1661:3798","0:1662:3795"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1186:312":{"id":"0:1186:312","crate_id":0,"name":"as_str","span":{"filename":"src/re_bytes.rs","begin":[656,4],"end":[658,5]},"visibility":"public","docs":"Returns the original string of this regex.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9533:3267":{"id":"2:9533:3267","crate_id":2,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3405:4927-0:2396:1647":{"id":"a:2:3405:4927-0:2396:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2396:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:23049:6547":{"id":"2:23049:6547","crate_id":2,"name":"SimdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23050:6382","2:23051:60935","2:23052:1756","2:23053:61178","2:23054:61179","2:23055:44989","2:23056:61180","2:23057:61181","2:23058:61182","2:23059:61183","2:23060:61184","2:23061:61185","2:23062:61186","2:23063:61187","2:23064:61188","2:23065:61189","2:23066:60985","2:23067:61190","2:23068:61191","2:23069:61192","2:23070:61193","2:23071:60936","2:23072:60937","2:23073:60938","2:23074:60939"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3374:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23151:6013","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3197-0:2446:2672":{"id":"b:2:3197-0:2446:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexOptions","id":"0:2446:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:791:3116":{"id":"0:791:3116","crate_id":0,"name":"previous_char","span":{"filename":"src/input.rs","begin":[264,4],"end":[266,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["at",{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:848-0:2198:1643":{"id":"b:5:848-0:2198:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:850:3797","5:851:2605","5:852:5449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1496:1929":{"id":"0:1496:1929","crate_id":0,"name":"split","span":{"filename":"src/re_unicode.rs","begin":[370,4],"end":[372,5]},"visibility":"public","docs":"Returns an iterator of substrings of `text` delimited by a match of the\nregular expression. Namely, each element of the iterator corresponds to\ntext that *isn't* matched by the regular expression.\n\nThis method will *not* copy the text given.\n\n# Example\n\nTo split a string delimited by arbitrary amounts of spaces or tabs:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"[ \\t]+\").unwrap();\nlet fields: Vec<&str> = re.split(\"a b \\t  c\\td    e\").collect();\nassert_eq!(fields, vec![\"a\", \"b\", \"c\", \"d\", \"e\"]);\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2982:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:3047:1612":{"id":"b:2:2868-0:3047:1612","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3047:1612","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13709:62908":{"id":"2:13709:62908","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6339:6106":{"id":"1:6339:6106","crate_id":1,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6340:60925","1:6341:60926"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2775:664":{"id":"0:2775:664","crate_id":0,"name":"fmt","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3197-0:2438:1849":{"id":"b:2:3197-0:2438:1849","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstBytes","id":"0:2438:1849","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1038:226":{"id":"0:1038:226","crate_id":0,"name":"Target","span":{"filename":"src/prog.rs","begin":[162,4],"end":[162,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:2349:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:3201-0:3007:1618":{"id":"b:2:3201-0:3007:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3007:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1541":{"id":"0:1541","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[774,0],"end":[774,46]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:9154:3581","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2972:1607","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:732:1812":{"id":"0:732:1812","crate_id":0,"name":"is_start","span":{"filename":"src/input.rs","begin":[22,4],"end":[24,5]},"visibility":"public","docs":"Returns true iff this position is at the beginning of the input.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3034":{"id":"0:3034","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1142,9],"end":[1142,14]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3029:1611","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:3037:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:848-0:2174:1644":{"id":"b:5:848-0:2174:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:2174:1644","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["5:850:3797","5:851:2605","5:852:5449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3201-0:2424:1850":{"id":"b:2:3201-0:2424:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstChar","id":"0:2424:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1061":{"id":"0:1061","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[429,0],"end":[434,1]},"visibility":{"restricted":{"parent":"0:1000:1632","path":"::prog"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"InstBytes","id":"0:2438:1849","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1062:1773"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1563:798":{"id":"0:1563:798","crate_id":0,"name":"len","span":{"filename":"src/re_unicode.rs","begin":[895,4],"end":[897,5]},"visibility":"public","docs":"Returns the total number of capture groups (even if they didn't match).\n\nThis is always at least `1` since every regex has at least `1`\ncapturing group that corresponds to the entire match.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2510:2784":{"id":"0:2510:2784","crate_id":0,"name":"multi_line","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the value for the multi-line matching (`m`) flag.\n\nWhen enabled, `^` matches the beginning of lines and `$` matches the\nend of lines.\n\nBy default, they match beginning/end of the input.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2519:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5425:6098":{"id":"1:5425:6098","crate_id":1,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5426:56283","1:5427:4968"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10416:6013","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:4095:68":{"id":"2:4095:68","crate_id":2,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4096:1443"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"0:632:2919":{"id":"0:632:2919","crate_id":0,"name":"searcher","span":{"filename":"src/exec.rs","begin":[1263,4],"end":[1268,5]},"visibility":"public","docs":"Get a searcher that isn't Sync.","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ExecNoSync","id":"0:2031:2692","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2538:926":{"id":"0:2538:926","crate_id":0,"name":"new","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Create a new regular expression builder with the given pattern.\n\nIf the pattern is invalid, then an error will be returned when\n`build` is called.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["patterns",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2552:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:3165:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8673:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"S"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:2174:1644":{"id":"b:2:2868-0:2174:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:2174:1644","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:5513:6070":{"id":"1:5513:6070","crate_id":1,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5514:8292","1:5515:9575"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1752":{"id":"0:1752","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[765,26],"end":[765,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::prog::EmptyLook","name":"EmptyLook","id":"0:2396:1647","glob":false}},"0:2419":{"id":"0:2419","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[340,29],"end":[340,38]},"visibility":{"restricted":{"parent":"0:1000:1632","path":"::prog"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2917:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2396:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2396:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2420:608"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4097-0:2944:1610":{"id":"b:2:4097-0:2944:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1156:1929":{"id":"0:1156:1929","crate_id":0,"name":"split","span":{"filename":"src/re_bytes.rs","begin":[317,4],"end":[319,5]},"visibility":"public","docs":"Returns an iterator of substrings of `text` delimited by a match of the\nregular expression. Namely, each element of the iterator corresponds to\ntext that *isn't* matched by the regular expression.\n\nThis method will *not* copy the text given.\n\n# Example\n\nTo split a string delimited by arbitrary amounts of spaces or tabs:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(r\"[ \\t]+\").unwrap();\nlet fields: Vec<&[u8]> = re.split(b\"a b \\t  c\\td    e\").collect();\nassert_eq!(fields, vec![\n    &b\"a\"[..], &b\"b\"[..], &b\"c\"[..], &b\"d\"[..], &b\"e\"[..],\n]);\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2636:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3212-0:2431:1649":{"id":"b:2:3212-0:2431:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstRanges","id":"0:2431:1649","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2522":{"id":"0:2522","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":{"restricted":{"parent":"0:2493:1575","path":"::re_builder::unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2519:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2523:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:554:926":{"id":"0:554:926","crate_id":0,"name":"new","span":{"filename":"src/exec.rs","begin":[135,4],"end":[137,5]},"visibility":"public","docs":"Create a regex execution builder.\n\nThis uses default settings for everything except the regex itself,\nwhich must be provided. Further knobs can be set by calling methods,\nand then finally, `build` to actually create the executor.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["re",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2451:2783":{"id":"0:2451:2783","crate_id":0,"name":"case_insensitive","span":{"filename":"src/re_builder.rs","begin":[9,4],"end":[9,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"a:2:3405:4927-0:2031:2692":{"id":"a:2:3405:4927-0:2031:2692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecNoSync","id":"0:2031:2692","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3207-0:2982:1616":{"id":"b:2:3207-0:2982:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2982:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3207-0:2382:1853":{"id":"b:2:3207-0:2382:1853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstSplit","id":"0:2382:1853","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6184:63569":{"id":"5:6184:63569","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:444:2038","`String`":"5:8472:220"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:444:2038","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8217:5469","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1481:3606":{"id":"0:1481:3606","crate_id":0,"name":"from_str","span":{"filename":"src/re_unicode.rs","begin":[163,4],"end":[165,5]},"visibility":"default","docs":"Attempts to parse a string into a regular expression","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47933:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2967:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2390:1827":{"id":"0:2390:1827","crate_id":0,"name":"goto","span":{"filename":"src/prog.rs","begin":[334,4],"end":[334,21]},"visibility":"public","docs":"The next location to execute in the program if this instruction\nsucceeds.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"2:13362:4888":{"id":"2:13362:4888","crate_id":2,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13357:4890","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:46":{"id":"0:46","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[633,71],"end":[633,76]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::re_unicode::Split","name":"Split","id":"0:2982:1616","glob":false}},"a:2:3364:215-0:2446:2672":{"id":"a:2:3364:215-0:2446:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexOptions","id":"0:2446:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:777:798":{"id":"0:777:798","crate_id":0,"name":"len","span":{"filename":"src/input.rs","begin":[215,4],"end":[217,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3197-0:2944:1610":{"id":"b:2:3197-0:2944:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3453:4853":{"id":"2:3453:4853","crate_id":2,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3455:183","2:3456:1110"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:4485:6018":{"id":"1:4485:6018","crate_id":1,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4486:60486","1:4487:42001","1:4488:60487","1:4489:60488"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3201-0:2375:1852":{"id":"b:2:3201-0:2375:1852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstSave","id":"0:2375:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1703:548":{"id":"0:1703:548","crate_id":0,"name":"deref","span":{"filename":"src/sparse.rs","begin":[73,4],"end":[75,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:3587:117","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6165:2484":{"id":"5:6165:2484","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8472:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:8677-0:3020:1606":{"id":"b:2:8677-0:3020:1606","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8673:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3020:1606","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:8679:2046","2:8680:3413","2:8681:773"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"2:3369:3987":{"id":"2:3369:3987","crate_id":2,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:574:2810":{"id":"0:574:2810","crate_id":0,"name":"Text","span":{"filename":"src/exec.rs","begin":[385,4],"end":[385,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"str"}}},"5:5906:2021":{"id":"5:5906:2021","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5908:183","5:5909:438"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:1632":{"id":"0:1632","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1145,0],"end":[1152,1]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["rposition","try_for_each","count","try_collect","map_while","find","intersperse_with","rev","next_chunk","cmp","take","sum","size_hint","max_by_key","eq_by","unzip","peekable","fold","collect_into","scan","any","for_each","advance_by","all","min","enumerate","is_sorted","cycle","reduce","partition","flat_map","filter","nth","gt","is_sorted_by","array_chunks","position","try_reduce","lt","partition_in_place","flatten","filter_map","step_by","copied","by_ref","max","min_by","is_sorted_by_key","product","find_map","is_partitioned","fuse","partial_cmp","skip","skip_while","chain","eq","le","cloned","ne","min_by_key","__iterator_get_unchecked","zip","last","try_find","cmp_by","try_fold","ge","inspect","take_while","intersperse","map","collect","max_by","partial_cmp_by"],"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3029:1611","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1635:2046","0:1636:928"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13716:62911":{"id":"2:13716:62911","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:1476:664":{"id":"0:1476:664","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[147,4],"end":[149,5]},"visibility":"default","docs":"Shows the original regular expression.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3676:4871":{"id":"2:3676:4871","crate_id":2,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3678:758"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Index","id":"2:3672:3582","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:4097-0:2778:2926":{"id":"b:2:4097-0:2778:2926","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2778:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3212-0:2982:1616":{"id":"b:2:3212-0:2982:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2982:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2445:664":{"id":"0:2445:664","crate_id":0,"name":"fmt","span":{"filename":"src/prog.rs","begin":[418,16],"end":[418,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2484:2782":{"id":"0:2484:2782","crate_id":0,"name":"octal","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Whether to support octal syntax or not.\n\nOctal syntax is a little-known way of uttering Unicode codepoints in\na regular expression. For example, `a`, `\\x61`, `\\u0061` and\n`\\141` are all equivalent regular expressions, where the last example\nshows octal syntax.\n\nWhile supporting octal syntax isn't in and of itself a problem, it does\nmake good error messages harder. That is, in PCRE based regex engines,\nsyntax like `\\0` invokes a backreference, which is explicitly\nunsupported in Rust's regex engine. However, many users expect it to\nbe supported. Therefore, when octal support is disabled, the error\nmessage will explicitly mention that backreferences aren't supported.\n\nOctal syntax is disabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2488:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3405:4927-0:3007:1618":{"id":"a:2:3405:4927-0:3007:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[{"region_predicate":{"lifetime":"'t","bounds":[{"outlives":"'c"}]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3007:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:642:414":{"id":"0:642:414","crate_id":0,"name":"clone","span":{"filename":"src/exec.rs","begin":[1317,4],"end":[1320,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Exec","id":"0:2026:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:2880:2926":{"id":"b:2:3207-0:2880:2926","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2880:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2868-0:2424:1850":{"id":"b:2:2868-0:2424:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstChar","id":"0:2424:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2774":{"id":"0:2774","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2703:1575","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2778:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2775:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2458":{"id":"0:2458","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[2,9],"end":[2,14]},"visibility":{"restricted":{"parent":"0:1063:1600","path":"::re_builder"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(missing_docs)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexOptions","id":"0:2446:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2459:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3212-0:2991:1617":{"id":"b:2:3212-0:2991:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2991:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3405:4927-0:3000:1605":{"id":"a:2:3405:4927-0:3000:1605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3000:1605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:4097-0:2038:2696":{"id":"b:2:4097-0:2038:2696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecNoSyncStr","id":"0:2038:2696","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2548:2782":{"id":"0:2548:2782","crate_id":0,"name":"octal","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Whether to support octal syntax or not.\n\nOctal syntax is a little-known way of uttering Unicode codepoints in\na regular expression. For example, `a`, `\\x61`, `\\u0061` and\n`\\141` are all equivalent regular expressions, where the last example\nshows octal syntax.\n\nWhile supporting octal syntax isn't in and of itself a problem, it does\nmake good error messages harder. That is, in PCRE based regex engines,\nsyntax like `\\0` invokes a backreference, which is explicitly\nunsupported in Rust's regex engine. However, many users expect it to\nbe supported. Therefore, when octal support is disabled, the error\nmessage will explicitly mention that backreferences aren't supported.\n\nOctal syntax is disabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2552:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3020:1606":{"id":"0:3020:1606","crate_id":0,"name":"CaptureMatches","span":{"filename":"src/re_unicode.rs","begin":[1117,0],"end":[1119,2]},"visibility":"public","docs":"An iterator that yields all non-overlapping capture groups matching a\nparticular regular expression.\n\nThe iterator stops when no more matches can be found.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the matched string.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:3376:224-0:3020:1606","a:2:3405:4927-0:3020:1606","a:2:9533:3267-0:3020:1606","a:2:9534:3266-0:3020:1606","a:2:3364:215-0:3020:1606","b:2:3201-0:3020:1606","b:2:3197-0:3020:1606","b:2:3207-0:3020:1606","b:2:2868-0:3020:1606","b:2:4097-0:3020:1606","b:2:8677-0:3020:1606","b:2:2865-0:3020:1606","b:2:3212-0:3020:1606","0:3025","0:1623","0:1629"]}},"b:2:8677-0:2991:1617":{"id":"b:2:8677-0:2991:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8673:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2991:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:8679:2046","2:8680:3413","2:8681:773"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"b:2:4097-0:3029:1611":{"id":"b:2:4097-0:3029:1611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3029:1611","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2590:1610":{"id":"0:2590:1610","crate_id":0,"name":"Match","span":{"filename":"src/re_bytes.rs","begin":[21,0],"end":[25,1]},"visibility":"public","docs":"Match represents a single match of a regex in a haystack.\n\nThe lifetime parameter `'t` refers to the lifetime of the matched text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":[]}},"2:13717:310":{"id":"2:13717:310","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"`u8`":"1:15900:4472","str::as_mut_ptr":"2:13718:11352"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9533:3267-0:2026:1641":{"id":"a:2:9533:3267-0:2026:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Exec","id":"0:2026:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:4097-0:2174:1644":{"id":"b:2:4097-0:2174:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:2174:1644","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2488:3495":{"id":"0:2488:3495","crate_id":0,"name":"RegexBuilder","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"A configurable builder for a regular expression.\n\nA builder can be used to configure how the regex is built, for example, by\nsetting the default flags (which can be overridden in the expression\nitself) or setting various limits.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:2475","a:2:3376:224-0:2488:3495","a:2:3405:4927-0:2488:3495","a:2:9533:3267-0:2488:3495","a:2:9534:3266-0:2488:3495","a:2:3364:215-0:2488:3495","b:2:3201-0:2488:3495","b:2:3197-0:2488:3495","b:2:3207-0:2488:3495","b:2:2868-0:2488:3495","b:2:4097-0:2488:3495","b:2:2865-0:2488:3495","b:2:3212-0:2488:3495","0:2491"]}},"2:3181:232":{"id":"2:3181:232","crate_id":2,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3183:128","2:3184:1430"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:879:2474":{"id":"0:879:2474","crate_id":0,"name":"approximate_size","span":{"filename":"src/literal/imp.rs","begin":[159,4],"end":[168,5]},"visibility":"public","docs":"Return the approximate heap usage of literals in bytes.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3200:2138":{"id":"2:3200:2138","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3174:136"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1473":{"id":"0:1473","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[138,0],"end":[143,1]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10570:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2967:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1474:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:814":{"id":"0:814","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[413,0],"end":[418,1]},"visibility":{"restricted":{"parent":"0:702:1629","path":"::input"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2917:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"primitive","inner":"char"},"items":["0:815:608"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:793:1830":{"id":"0:793:1830","crate_id":0,"name":"is_empty_match","span":{"filename":"src/input.rs","begin":[268,4],"end":[318,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["at",{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["empty",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"InstEmptyLook","id":"0:2389:1851","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2178":{"id":"0:2178","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[139,9],"end":[139,14]},"visibility":{"restricted":{"parent":"0:702:1629","path":"::input"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:2174:1644","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2180:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9534:3266-0:3047:1612":{"id":"a:2:9534:3266-0:3047:1612","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3047:1612","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3212-0:2972:1607":{"id":"b:2:3212-0:2972:1607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2972:1607","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:636:2928":{"id":"0:636:2928","crate_id":0,"name":"into_byte_regex","span":{"filename":"src/exec.rs","begin":[1287,4],"end":[1289,5]},"visibility":"public","docs":"Build a Regex from this executor that can match arbitrary bytes.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"re_bytes::Regex","id":"0:2613:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2251:1558":{"id":"0:2251:1558","crate_id":0,"name":"0","span":{"filename":"src/literal/imp.rs","begin":[224,10],"end":[224,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}},"2:3364:215":{"id":"2:3364:215","crate_id":2,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9534:3266-0:2174:1644":{"id":"a:2:9534:3266-0:2174:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:2174:1644","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13833:4784":{"id":"2:13833:4784","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:5443:4784"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:50106:4904","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3212-0:543:1642":{"id":"b:2:3212-0:543:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecBuilder","id":"0:543:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10801:143":{"id":"2:10801:143","crate_id":2,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10802:718","2:10804:5556"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2198:1643":{"id":"0:2198:1643","crate_id":0,"name":"Char","span":{"filename":"src/input.rs","begin":[346,0],"end":[346,21]},"visibility":"public","docs":"An inline representation of `Option<char>`.\n\nThis eliminates the need to do case analysis on `Option<char>` to determine\nordinality with other characters.\n\n(The `Option<char>` is not related to encoding. Instead, it is used in the\nmatching engines to represent the beginning and ending boundaries of the\nsearch text.)","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:801","a:2:3376:224-0:2198:1643","a:2:3405:4927-0:2198:1643","a:2:9533:3267-0:2198:1643","a:2:9534:3266-0:2198:1643","a:2:3364:215-0:2198:1643","b:2:3201-0:2198:1643","b:2:3197-0:2198:1643","b:2:3207-0:2198:1643","b:2:2868-0:2198:1643","b:2:4097-0:2198:1643","b:2:2865-0:2198:1643","b:2:3212-0:2198:1643","b:5:848-0:2198:1643","0:2201","0:2203","0:2204","0:2207","0:2208","0:2210","0:2211","0:2213","0:2215","0:799","0:807","0:809","0:812","0:814","0:816","0:818"]}},"1:6841:6016":{"id":"1:6841:6016","crate_id":1,"name":"TcpStreamExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6842:57924","1:6843:57925"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10416:6013","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13351:3170":{"id":"2:13351:3170","crate_id":2,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13353:3094","2:13354:928","2:13355:62187","2:13356:62188"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2978:414":{"id":"0:2978:414","crate_id":0,"name":"clone","span":{"filename":"src/re_unicode.rs","begin":[750,9],"end":[750,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2972:1607","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:28":{"id":"0:28","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[633,15],"end":[633,20]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::re_unicode::Match","name":"Match","id":"0:2944:1610","glob":false}},"b:5:848-0:2389:1851":{"id":"b:5:848-0:2389:1851","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstEmptyLook","id":"0:2389:1851","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:850:3797","5:851:2605","5:852:5449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3279-0:2012:128":{"id":"b:2:3279-0:2012:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:3272:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:4146:6389","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3281:5764"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"E"}}},"0:1696:2020":{"id":"0:1696:2020","crate_id":0,"name":"insert","span":{"filename":"src/sparse.rs","begin":[47,4],"end":[52,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1168:3785":{"id":"0:1168:3785","crate_id":0,"name":"replacen","span":{"filename":"src/re_bytes.rs","begin":[485,4],"end":[530,5]},"visibility":"public","docs":"Replaces at most `limit` non-overlapping matches in `text` with the\nreplacement provided. If `limit` is 0, then all non-overlapping matches\nare replaced.\n\nSee the documentation for `replace` for details on how to access\ncapturing group matches in the replacement text.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["limit",{"kind":"primitive","inner":"usize"}],["rep",{"kind":"generic","inner":"R"}]],"output":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:853:109","args":{"angle_bracketed":{"args":[{"lifetime":"'t"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Replacer","id":"0:1301:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9533:3267-0:2038:2696":{"id":"a:2:9533:3267-0:2038:2696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecNoSyncStr","id":"0:2038:2696","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1616:500":{"id":"0:1616:500","crate_id":0,"name":"count","span":{"filename":"src/re_unicode.rs","begin":[1100,4],"end":[1102,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:789:3114":{"id":"0:789:3114","crate_id":0,"name":"next_char","span":{"filename":"src/input.rs","begin":[260,4],"end":[262,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["at",{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2338:1895":{"id":"0:2338:1895","crate_id":0,"name":"only_utf8","span":{"filename":"src/prog.rs","begin":[40,4],"end":[40,23]},"visibility":"public","docs":"When true, this program can only match valid UTF-8.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"2:3177:233":{"id":"2:3177:233","crate_id":2,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3179:128","2:3180:1431"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2169":{"id":"0:2169","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[12,9],"end":[12,14]},"visibility":{"restricted":{"parent":"0:702:1629","path":"::input"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2170:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2865-0:3029:1611":{"id":"b:2:2865-0:3029:1611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3029:1611","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1663":{"id":"0:1663","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1254,0],"end":[1262,1]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["by_ref","no_expansion"],"trait":{"name":"Replacer","id":"0:1641:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:853:109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}},"items":["0:1665:3798","0:1666:3795"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2478:2783":{"id":"0:2478:2783","crate_id":0,"name":"case_insensitive","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the value for the case insensitive (`i`) flag.\n\nWhen enabled, letters in the pattern will match both upper case and\nlower case variants.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2488:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2517:2172":{"id":"0:2517:2172","crate_id":0,"name":"dfa_size_limit","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the approximate size of the cache used by the DFA.\n\nThis roughly corresponds to the number of bytes that the DFA will\nuse while searching.\n\nNote that this is a *per thread* limit. There is no way to set a global\nlimit. In particular, if a regex is used from multiple threads\nsimultaneously, then each thread may use up to the number of bytes\nspecified here.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2519:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2740:3576":{"id":"0:2740:3576","crate_id":0,"name":"patterns","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Returns the patterns that this set will match on.\n\nThis function can be used to determine the pattern for a match. The\nslice returned has exactly as many patterns givens to this regex set,\nand the order of the slice is the same as the order of the patterns\nprovided to the set.\n\n# Example\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[\n    r\"\\w+\",\n    r\"\\d+\",\n    r\"\\pL+\",\n    r\"foo\",\n    r\"bar\",\n    r\"barfoo\",\n    r\"foobar\",\n]).unwrap();\nlet matches: Vec<_> = set\n    .matches(\"foobar\")\n    .into_iter()\n    .map(|match_idx| &set.patterns()[match_idx])\n    .collect();\nassert_eq!(matches, vec![r\"\\w+\", r\"\\pL+\", r\"foo\", r\"bar\", r\"foobar\"]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1670:3795":{"id":"0:1670:3795","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1269,4],"end":[1271,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:853:109","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1635:2046":{"id":"0:1635:2046","crate_id":0,"name":"Item","span":{"filename":"src/re_unicode.rs","begin":[1146,4],"end":[1146,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}},"a:2:3364:215-0:2778:2926":{"id":"a:2:3364:215-0:2778:2926","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2778:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:731":{"id":"0:731","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[20,0],"end":[64,1]},"visibility":{"restricted":{"parent":"0:702:1629","path":"::input"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:732:1812","0:733:3100","0:734:410","0:735:1834","0:736:798","0:737:1815","0:738:1817","0:739:1818"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2671:1618":{"id":"0:2671:1618","crate_id":0,"name":"SubCaptureMatches","span":{"filename":"src/re_bytes.rs","begin":[1087,0],"end":[1090,1]},"visibility":"public","docs":"An iterator that yields all capturing matches in the order in which they\nappear in the regex.\n\nIf a particular capture group didn't participate in the match, then `None`\nis yielded for that capture. The first match always corresponds to the\noverall match of the regex.\n\nThe lifetime `'c` corresponds to the lifetime of the `Captures` value, and\nthe lifetime `'t` corresponds to the originally matched text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":[]}},"2:10811:147":{"id":"2:10811:147","crate_id":2,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10812:656","2:10813:2652","2:10814:60387","2:10815:60388","2:10816:60389","2:10817:60390","2:10818:60391","2:10819:60392","2:10820:60393","2:10821:60394","2:10822:60395","2:10823:60396","2:10824:60397","2:10825:60398","2:10826:60399","2:10827:1549"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13818:62929":{"id":"2:13818:62929","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"self::pattern":"2:13332:1596","prim@char":"1:15883:4458"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1515:2816":{"id":"0:1515:2816","crate_id":0,"name":"find_at","span":{"filename":"src/re_unicode.rs","begin":[648,4],"end":[657,5]},"visibility":"public","docs":"Returns the same as find, but starts the search at the given\noffset.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9534:3266-0:2389:1851":{"id":"a:2:9534:3266-0:2389:1851","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstEmptyLook","id":"0:2389:1851","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:575:2811":{"id":"0:575:2811","crate_id":0,"name":"slots_len","span":{"filename":"src/exec.rs","begin":[387,4],"end":[389,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3475:4856":{"id":"2:3475:4856","crate_id":2,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3477:564"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:5:848-0:3000:1605":{"id":"b:5:848-0:3000:1605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3000:1605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:850:3797","5:851:2605","5:852:5449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3201-0:2026:1641":{"id":"b:2:3201-0:2026:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Exec","id":"0:2026:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3201-0:2880:2926":{"id":"b:2:3201-0:2880:2926","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2880:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:9143:6110":{"id":"1:9143:6110","crate_id":1,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9144:56246","1:9145:56247","1:9146:56248","1:9147:56249","1:9148:56250","1:9149:41597","1:9150:56245"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10416:6013","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:40":{"id":"0:40","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[633,48],"end":[633,56]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::re_unicode::Replacer","name":"Replacer","id":"0:1641:1614","glob":false}},"0:758:2813":{"id":"0:758:2813","crate_id":0,"name":"as_bytes","span":{"filename":"src/input.rs","begin":[133,4],"end":[135,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13271:3583":{"id":"2:13271:3583","crate_id":2,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13272:127","2:13273:3606"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3201-0:2174:1644":{"id":"b:2:3201-0:2174:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:2174:1644","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2956:664":{"id":"0:2956:664","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[28,22],"end":[28,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2999:664":{"id":"0:2999:664","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[818,9],"end":[818,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13829:57617":{"id":"2:13829:57617","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2381:664":{"id":"0:2381:664","crate_id":0,"name":"fmt","span":{"filename":"src/prog.rs","begin":[309,16],"end":[309,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3054":{"id":"0:3054","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1300,16],"end":[1300,21]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3047:1612","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:3056:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:744:1830":{"id":"0:744:1830","crate_id":0,"name":"is_empty_match","span":{"filename":"src/input.rs","begin":[83,4],"end":[83,73]},"visibility":"default","docs":"Return true if the given empty width instruction matches at the\ninput position given.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["at",{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["empty",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"InstEmptyLook","id":"0:2389:1851","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2356:1616":{"id":"0:2356:1616","crate_id":0,"name":"Split","span":{"filename":"src/prog.rs","begin":[282,4],"end":[282,20]},"visibility":"default","docs":"Split causes the program to diverge to one of two paths in the\nprogram, preferring goto1 in InstSplit.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:2358:1558"]}},"b:2:2865-0:2389:1851":{"id":"b:2:2865-0:2389:1851","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstEmptyLook","id":"0:2389:1851","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:446:2648":{"id":"0:446:2648","crate_id":0,"name":"description","span":{"filename":"src/error.rs","begin":[24,4],"end":[30,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:3020:1606":{"id":"b:2:3207-0:3020:1606","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3020:1606","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1594":{"id":"0:1594","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1040,0],"end":[1048,1]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":"Get a group by index.\n\n`'t` is the lifetime of the matched text.\n\nThe text can't outlive the `Captures` object if this method is\nused, because of how `Index` is defined (normally `a[i]` is part\nof `a` and can't outlive it); to do that, use `get()` instead.\n\n# Panics\n\nIf there is no group at the given index.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"2:3672:3582","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1608","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1596:183","0:1597:757"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1153:3700":{"id":"0:1153:3700","crate_id":0,"name":"captures_iter","span":{"filename":"src/re_bytes.rs","begin":[290,4],"end":[295,5]},"visibility":"public","docs":"Returns an iterator over all the non-overlapping capture groups matched\nin `text`. This is operationally the same as `find_iter`, except it\nyields information about capturing group matches.\n\n# Example\n\nWe can use this to find all movie titles and their release years in\nsome text, where the movie is formatted like \"'Title' (xxxx)\":\n\n```rust\n# use std::str; use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(r\"'(?P<title>[^']+)'\\s+\\((?P<year>\\d{4})\\)\")\n               .unwrap();\nlet text = b\"'Citizen Kane' (1941), 'The Wizard of Oz' (1939), 'M' (1931).\";\nfor caps in re.captures_iter(text) {\n    let title = str::from_utf8(&caps[\"title\"]).unwrap();\n    let year = str::from_utf8(&caps[\"year\"]).unwrap();\n    println!(\"Movie: {:?}, Released: {:?}\", title, year);\n}\n// Output:\n// Movie: Citizen Kane, Released: 1941\n// Movie: The Wizard of Oz, Released: 1939\n// Movie: M, Released: 1931\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2627:1606","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:735:1834":{"id":"0:735:1834","crate_id":0,"name":"byte","span":{"filename":"src/input.rs","begin":[40,4],"end":[42,5]},"visibility":"public","docs":"Returns the byte at this position.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:3000:1605":{"id":"b:2:2868-0:3000:1605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3000:1605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4097-0:2396:1647":{"id":"b:2:4097-0:2396:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2396:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3201-0:2012:128":{"id":"b:2:3201-0:2012:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:860:2779":{"id":"0:860:2779","crate_id":0,"name":"empty","span":{"filename":"src/literal/imp.rs","begin":[41,4],"end":[43,5]},"visibility":"public","docs":"Returns a matcher that never matches and never advances the input.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1470":{"id":"0:1470","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[74,0],"end":[78,1]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Range","id":"2:46187:196","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"items":["0:1472:685"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:8677-0:3007:1618":{"id":"b:2:8677-0:3007:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8673:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3007:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:8679:2046","2:8680:3413","2:8681:773"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:762":{"id":"0:762","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[149,0],"end":[155,1]},"visibility":{"restricted":{"parent":"0:702:1629","path":"::input"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:3587:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:2174:1644","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:764:226","0:765:548"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13727:6152":{"id":"2:13727:6152","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:15889:4463","crate::ops::Index":"2:3672:3582","str::slice_mut_unchecked":"2:13728:62912"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:2438:1849":{"id":"0:2438:1849","crate_id":0,"name":"InstBytes","span":{"filename":"src/prog.rs","begin":[419,0],"end":[427,1]},"visibility":"public","docs":"Representation of the Bytes instruction.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:2439:1827","0:2440:1338","0:2441:603"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:1061","a:2:3376:224-0:2438:1849","a:2:3405:4927-0:2438:1849","a:2:9533:3267-0:2438:1849","a:2:9534:3266-0:2438:1849","a:2:3364:215-0:2438:1849","b:2:3201-0:2438:1849","b:2:3197-0:2438:1849","b:2:3207-0:2438:1849","b:2:2868-0:2438:1849","b:2:4097-0:2438:1849","b:2:2865-0:2438:1849","b:2:3212-0:2438:1849","b:5:848-0:2438:1849","0:2442","0:2444"]}},"0:754:3116":{"id":"0:754:3116","crate_id":0,"name":"previous_char","span":{"filename":"src/input.rs","begin":[113,4],"end":[115,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["at",{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2355:1558":{"id":"0:2355:1558","crate_id":0,"name":"0","span":{"filename":"src/prog.rs","begin":[279,9],"end":[279,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"InstSave","id":"0:2375:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"a:2:3405:4927-0:2446:2672":{"id":"a:2:3405:4927-0:2446:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexOptions","id":"0:2446:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:14057:139":{"id":"2:14057:139","crate_id":2,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:14058:183","2:14059:1020"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3376:224-0:2031:2692":{"id":"a:2:3376:224-0:2031:2692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecNoSync","id":"0:2031:2692","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:2868-0:2488:3495":{"id":"b:2:2868-0:2488:3495","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2488:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3405:4927-0:2613:1613":{"id":"a:2:3405:4927-0:2613:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2613:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:805:3129":{"id":"0:805:3129","crate_id":0,"name":"is_word_char","span":{"filename":"src/input.rs","begin":[375,4],"end":[381,5]},"visibility":"public","docs":"Returns true iff the character is a word character.\n\nIf the character is absent, then false is returned.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2865-0:2012:128":{"id":"b:2:2865-0:2012:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3364:215-0:2519:3495":{"id":"a:2:3364:215-0:2519:3495","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2519:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3496:4861":{"id":"2:3496:4861","crate_id":2,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3498:183","2:3499:359"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2867:3346":{"id":"2:2867:3346","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2462:1620":{"id":"0:2462:1620","crate_id":0,"name":"bytes","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2488:3495"],"is_stripped":false}},"0:1708:773":{"id":"0:1708:773","crate_id":0,"name":"into_iter","span":{"filename":"src/sparse.rs","begin":[81,4],"end":[83,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:8673:152","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4097-0:2488:3495":{"id":"b:2:4097-0:2488:3495","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2488:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1502:2484":{"id":"0:1502:2484","crate_id":0,"name":"replace","span":{"filename":"src/re_unicode.rs","begin":[506,4],"end":[512,5]},"visibility":"public","docs":"Replaces the leftmost-first match with the replacement provided.\nThe replacement can be a regular string (where `$N` and `$name` are\nexpanded to match capture groups) or a function that takes the matches'\n`Captures` and returns the replaced string.\n\nIf no match is found, then a copy of the string is returned unchanged.\n\n# Replacement string syntax\n\nAll instances of `$name` in the replacement text is replaced with the\ncorresponding capture group `name`.\n\n`name` may be an integer corresponding to the index of the\ncapture group (counted by order of opening parenthesis where `0` is the\nentire match) or it can be a name (consisting of letters, digits or\nunderscores) corresponding to a named capture group.\n\nIf `name` isn't a valid capture group (whether the name doesn't exist\nor isn't a valid index), then it is replaced with the empty string.\n\nThe longest possible name is used. e.g., `$1a` looks up the capture\ngroup named `1a` and not the capture group at index `1`. To exert more\nprecise control over the name, use braces, e.g., `${1}a`.\n\nTo write a literal `$` use `$$`.\n\n# Examples\n\nNote that this function is polymorphic with respect to the replacement.\nIn typical usage, this can just be a normal string:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(\"[^01]+\").unwrap();\nassert_eq!(re.replace(\"1078910\", \"\"), \"1010\");\n# }\n```\n\nBut anything satisfying the `Replacer` trait will work. For example,\na closure of type `|&Captures| -> String` provides direct access to the\ncaptures corresponding to a match. This allows one to access\ncapturing group matches easily:\n\n```rust\n# use regex::Regex;\n# use regex::Captures; fn main() {\nlet re = Regex::new(r\"([^,\\s]+),\\s+(\\S+)\").unwrap();\nlet result = re.replace(\"Springsteen, Bruce\", |caps: &Captures| {\n    format!(\"{} {}\", &caps[2], &caps[1])\n});\nassert_eq!(result, \"Bruce Springsteen\");\n# }\n```\n\nBut this is a bit cumbersome to use all the time. Instead, a simple\nsyntax is supported that expands `$name` into the corresponding capture\ngroup. Here's the last example, but using this expansion technique\nwith named capture groups:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?P<last>[^,\\s]+),\\s+(?P<first>\\S+)\").unwrap();\nlet result = re.replace(\"Springsteen, Bruce\", \"$first $last\");\nassert_eq!(result, \"Bruce Springsteen\");\n# }\n```\n\nNote that using `$2` instead of `$first` or `$1` instead of `$last`\nwould produce the same result. To write a literal `$` use `$$`.\n\nSometimes the replacement string requires use of curly braces to\ndelineate a capture group replacement and surrounding literal text.\nFor example, if we wanted to join two words together with an\nunderscore:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?P<first>\\w+)\\s+(?P<second>\\w+)\").unwrap();\nlet result = re.replace(\"deep fried\", \"${first}_$second\");\nassert_eq!(result, \"deep_fried\");\n# }\n```\n\nWithout the curly braces, the capture group name `first_` would be\nused, and since it doesn't exist, it would be replaced with the empty\nstring.\n\nFinally, sometimes you just want to replace a literal string with no\nregard for capturing group expansion. This can be done by wrapping a\nbyte string with `NoExpand`:\n\n```rust\n# use regex::Regex;\n# fn main() {\nuse regex::NoExpand;\n\nlet re = Regex::new(r\"(?P<last>[^,\\s]+),\\s+(\\S+)\").unwrap();\nlet result = re.replace(\"Springsteen, Bruce\", NoExpand(\"$2 $last\"));\nassert_eq!(result, \"$2 $last\");\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["rep",{"kind":"generic","inner":"R"}]],"output":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:853:109","args":{"angle_bracketed":{"args":[{"lifetime":"'t"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Replacer","id":"0:1641:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3015:414":{"id":"0:3015:414","crate_id":0,"name":"clone","span":{"filename":"src/re_unicode.rs","begin":[1081,9],"end":[1081,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3007:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2459:414":{"id":"0:2459:414","crate_id":0,"name":"clone","span":{"filename":"src/re_builder.rs","begin":[2,9],"end":[2,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"RegexOptions","id":"0:2446:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:4146:6389":{"id":"2:4146:6389","crate_id":2,"name":"Provider","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4147:5764"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3197-0:2519:3495":{"id":"b:2:3197-0:2519:3495","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2519:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2966:608":{"id":"0:2966:608","crate_id":0,"name":"eq","span":{"filename":"src/re_unicode.rs","begin":[28,33],"end":[28,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1526:312":{"id":"0:1526:312","crate_id":0,"name":"as_str","span":{"filename":"src/re_unicode.rs","begin":[714,4],"end":[716,5]},"visibility":"public","docs":"Returns the original string of this regex.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23387:19108":{"id":"2:23387:19108","crate_id":2,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23388:9673","2:23389:62339","2:23390:62340"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:23380:6013","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2340:1902":{"id":"0:2340:1902","crate_id":0,"name":"is_dfa","span":{"filename":"src/prog.rs","begin":[47,4],"end":[47,20]},"visibility":"public","docs":"When true, the program is compiled for DFA matching. For example, this\nimplies `is_bytes` and also inserts a preceding `.*?` for unanchored\nregexes.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"b:2:2868-0:2026:1641":{"id":"b:2:2868-0:2026:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Exec","id":"0:2026:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2362:1643":{"id":"0:2362:1643","crate_id":0,"name":"Char","span":{"filename":"src/prog.rs","begin":[288,4],"end":[288,18]},"visibility":"default","docs":"Char requires the regex program to match the character in InstChar at\nthe current position in the input.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:2364:1558"]}},"a:2:3376:224-0:2552:3575":{"id":"a:2:3376:224-0:2552:3575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2552:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2514:1575":{"id":"0:2514:1575","crate_id":0,"name":"unicode","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the value for the Unicode (`u`) flag.\n\nEnabled by default. When disabled, character classes such as `\\w` only\nmatch ASCII word characters instead of all Unicode word characters.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2519:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4097-0:2519:3495":{"id":"b:2:4097-0:2519:3495","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2519:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1365":{"id":"0:1365","crate_id":0,"name":null,"span":{"filename":"src/re_trait.rs","begin":[90,0],"end":[90,52]},"visibility":{"restricted":{"parent":"0:1344:1633","path":"::re_trait"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:9154:3581","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCapturesPosIter","id":"0:2914:3584","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3405:4927-0:2389:1851":{"id":"a:2:3405:4927-0:2389:1851","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstEmptyLook","id":"0:2389:1851","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13707:798":{"id":"2:13707:798","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:15883:4458"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2449:2172":{"id":"0:2449:2172","crate_id":0,"name":"dfa_size_limit","span":{"filename":"src/re_builder.rs","begin":[7,4],"end":[7,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"0:186:1620":{"id":"0:186:1620","crate_id":0,"name":"bytes","span":{"filename":"src/compile.rs","begin":[91,4],"end":[94,5]},"visibility":"public","docs":"If bytes is true, then the program is compiled as a byte based\nautomaton, which incorporates UTF-8 decoding into the machine. If it's\nfalse, then the automaton is Unicode scalar value based, e.g., an\nengine utilizing such an automaton is responsible for UTF-8 decoding.\n\nThe specific invariant is that when returning a byte based machine,\nthe neither the `Char` nor `Ranges` instructions are produced.\nConversely, when producing a Unicode scalar value machine, the `Bytes`\ninstruction is never produced.\n\nNote that `dfa(true)` implies `bytes(true)`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3197-0:2552:3575":{"id":"b:2:3197-0:2552:3575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2552:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2868-0:2198:1643":{"id":"b:2:2868-0:2198:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2840:798":{"id":"0:2840:798","crate_id":0,"name":"len","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Returns the total number of regular expressions in this set.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:816":{"id":"0:816","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[420,0],"end":[425,1]},"visibility":{"restricted":{"parent":"0:702:1629","path":"::input"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","gt","ge"],"trait":{"name":"PartialOrd","id":"2:2963:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"char"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:817:1004"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1557":{"id":"0:1557","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[852,0],"end":[852,48]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:9154:3581","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2991:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1460":{"id":"0:1460","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[35,0],"end":[66,1]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1462:1338","0:1463:603","0:1464:2100","0:1465:312"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1034:1983":{"id":"0:1034:1983","crate_id":0,"name":"uses_bytes","span":{"filename":"src/prog.rs","begin":[134,4],"end":[136,5]},"visibility":"public","docs":"Returns true if this program uses Byte instructions instead of\nChar/Range instructions.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3376:224-0:2349:1648":{"id":"a:2:3376:224-0:2349:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:2349:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9533:3267-0:3047:1612":{"id":"a:2:9533:3267-0:3047:1612","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3047:1612","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:818":{"id":"0:818","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[427,0],"end":[432,1]},"visibility":{"restricted":{"parent":"0:702:1629","path":"::input"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","gt","ge"],"trait":{"name":"PartialOrd","id":"2:2963:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"primitive","inner":"char"},"items":["0:819:1004"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13739:2433":{"id":"2:13739:2433","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"self::pattern":"2:13332:1596","prim@char":"1:15883:4458"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:564:1895":{"id":"0:564:1895","crate_id":0,"name":"only_utf8","span":{"filename":"src/exec.rs","begin":[217,4],"end":[220,5]},"visibility":"public","docs":"When disabled, the program compiled may match arbitrary bytes.\n\nWhen enabled (the default), all compiled programs exclusively match\nvalid UTF-8 bytes.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3376:224-0:2012:128":{"id":"a:2:3376:224-0:2012:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1547:928":{"id":"0:1547:928","crate_id":0,"name":"next","span":{"filename":"src/re_unicode.rs","begin":[789,4],"end":[807,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2025:608":{"id":"0:2025:608","crate_id":0,"name":"eq","span":{"filename":"src/error.rs","begin":[5,16],"end":[5,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:844:227":{"id":"5:844:227","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:845:3797","5:846:2605","5:847:5449"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2485:1866":{"id":"0:2485:1866","crate_id":0,"name":"size_limit","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the approximate size limit of the compiled regular expression.\n\nThis roughly corresponds to the number of bytes occupied by a single\ncompiled program. If the program exceeds this number, then a\ncompilation error is returned.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2488:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1374:2816":{"id":"0:1374:2816","crate_id":0,"name":"find_at","span":{"filename":"src/re_trait.rs","begin":[135,4],"end":[139,32]},"visibility":"default","docs":"Returns the leftmost-first match location if one exists.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Text","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1367:2673","args":null}}}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2418":{"id":"0:2418","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[340,29],"end":[340,38]},"visibility":{"restricted":{"parent":"0:1000:1632","path":"::prog"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3372:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2396:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1373:2815":{"id":"0:1373:2815","crate_id":0,"name":"is_match_at","span":{"filename":"src/re_trait.rs","begin":[132,4],"end":[132,67]},"visibility":"default","docs":"Returns whether the regex matches the text given.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Text","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1367:2673","args":null}}}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:2865-0:2446:2672":{"id":"b:2:2865-0:2446:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexOptions","id":"0:2446:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2865-0:2982:1616":{"id":"b:2:2865-0:2982:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2982:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2868-0:2552:3575":{"id":"b:2:2868-0:2552:3575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2552:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3171:150":{"id":"2:3171:150","crate_id":2,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3173:2138"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3197-0:3038:1615":{"id":"b:2:3197-0:3038:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3038:1615","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9533:3267-0:2972:1607":{"id":"a:2:9533:3267-0:2972:1607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2972:1607","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3501:4862":{"id":"2:3501:4862","crate_id":2,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3503:183","2:3504:362"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1580":{"id":"0:1580","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1002,0],"end":[1006,1]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1608","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1582:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2868-0:2164:1645":{"id":"b:2:2868-0:2164:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3405:4927-0:2438:1849":{"id":"a:2:3405:4927-0:2438:1849","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstBytes","id":"0:2438:1849","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2868-0:3057:2164":{"id":"b:2:2868-0:3057:2164","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SparseSet","id":"0:3057:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8742:3864":{"id":"2:8742:3864","crate_id":2,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8743:798","2:8744:1815"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9534:3266-0:2012:128":{"id":"a:2:9534:3266-0:2012:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3201-0:1565:1608":{"id":"b:2:3201-0:1565:1608","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1608","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1704":{"id":"0:1704","crate_id":0,"name":null,"span":{"filename":"src/sparse.rs","begin":[78,0],"end":[84,1]},"visibility":{"restricted":{"parent":"0:1681:1634","path":"::sparse"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8673:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"SparseSet","id":"0:3057:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"items":["0:1706:2046","0:1707:3413","0:1708:773"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:637:2930":{"id":"0:637:2930","crate_id":0,"name":"into_byte_regex_set","span":{"filename":"src/exec.rs","begin":[1292,4],"end":[1294,5]},"visibility":"public","docs":"Build a RegexSet from this executor that can match arbitrary bytes.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"re_set::bytes::RegexSet","id":"0:2880:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2023":{"id":"0:2023","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[5,16],"end":[5,25]},"visibility":{"restricted":{"parent":"0:438:1599","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3372:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4097-0:2026:1641":{"id":"b:2:4097-0:2026:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Exec","id":"0:2026:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2865-0:3020:1606":{"id":"b:2:2865-0:3020:1606","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3020:1606","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3197-0:2613:1613":{"id":"b:2:3197-0:2613:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2613:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1698:1803":{"id":"0:1698:1803","crate_id":0,"name":"clear","span":{"filename":"src/sparse.rs","begin":[59,4],"end":[61,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2892:4142":{"id":"0:2892:4142","crate_id":0,"name":"SetMatchesIntoIter","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"An owned iterator over the set of matches from a regex set.\n\nThis will always produces matches in ascending order of index, where the\nindex corresponds to the index of the regex that matched with respect to\nits position when initially building the set.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":[]}},"0:1629":{"id":"0:1629","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1133,0],"end":[1133,56]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:9154:3581","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3020:1606","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2260:1558":{"id":"0:2260:1558","crate_id":0,"name":"0","span":{"filename":"src/literal/imp.rs","begin":[227,11],"end":[227,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Literal","id":"20:2912:1979","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"0:572":{"id":"0:572","crate_id":0,"name":null,"span":{"filename":"src/exec.rs","begin":[384,0],"end":[419,1]},"visibility":{"restricted":{"parent":"0:451:1626","path":"::exec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["captures_iter","locations","find_iter"],"trait":{"name":"RegularExpression","id":"0:1367:2673","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecNoSyncStr","id":"0:2038:2696","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":["0:574:2810","0:575:2811","0:576:2812","0:577:2814","0:578:2815","0:579:2816","0:580:2817"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3212-0:2026:1641":{"id":"b:2:3212-0:2026:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Exec","id":"0:2026:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3376:224-0:2164:1645":{"id":"a:2:3376:224-0:2164:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2865-0:2880:2926":{"id":"b:2:2865-0:2880:2926","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2880:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3197-0:2424:1850":{"id":"b:2:3197-0:2424:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstChar","id":"0:2424:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:6500-0:2613:1613":{"id":"b:5:6500-0:2613:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10570:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6498:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2613:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:6502:1410"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3364:215-0:3057:2164":{"id":"a:2:3364:215-0:3057:2164","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SparseSet","id":"0:3057:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8680:3413":{"id":"2:8680:3413","crate_id":2,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"I"}}},"b:2:2865-0:2198:1643":{"id":"b:2:2865-0:2198:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2868-0:2613:1613":{"id":"b:2:2868-0:2613:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2613:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2979":{"id":"0:2979","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[750,16],"end":[750,21]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2972:1607","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["0:2981:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:862:2717":{"id":"0:862:2717","crate_id":0,"name":"suffixes","span":{"filename":"src/literal/imp.rs","begin":[52,4],"end":[55,5]},"visibility":"public","docs":"Returns a matcher for literal suffixes from the given set.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["lits",{"kind":"resolved_path","inner":{"name":"Literals","id":"20:2900:2667","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1650:3798":{"id":"0:1650:3798","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1216,4],"end":[1218,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1608","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1484:2277":{"id":"0:1484:2277","crate_id":0,"name":"is_match","span":{"filename":"src/re_unicode.rs","begin":[197,4],"end":[199,5]},"visibility":"public","docs":"Returns true if and only if there is a match for the regex in the\nstring given.\n\nIt is recommended to use this method if all you need to do is test\na match, since the underlying matching engine may be able to do less\nwork.\n\n# Example\n\nTest if some text contains at least one word with exactly 13\nUnicode word characters:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet text = \"I categorically deny having triskaidekaphobia.\";\nassert!(Regex::new(r\"\\b\\w{13}\\b\").unwrap().is_match(text));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2589:664":{"id":"0:2589:664","crate_id":0,"name":"fmt","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:2967:1613":{"id":"b:2:3207-0:2967:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2967:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2613:1613":{"id":"0:2613:1613","crate_id":0,"name":"Regex","span":{"filename":"src/re_bytes.rs","begin":[78,0],"end":[78,23]},"visibility":"public","docs":"A compiled regular expression for matching arbitrary bytes.\n\nIt can be used to search, split or replace text. All searching is done with\nan implicit `.*?` at the beginning and end of an expression. To force an\nexpression to match the whole string (or a prefix or a suffix), you must\nuse an anchor like `^` or `$` (or `\\A` and `\\z`).\n\nLike the `Regex` type in the parent module, matches with this regex return\nbyte offsets into the search text. **Unlike** the parent `Regex` type,\nthese byte offsets may not correspond to UTF-8 sequence boundaries since\nthe regexes in this module can match arbitrary bytes.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:1142","0:1171","0:1185","a:2:3376:224-0:2613:1613","a:2:3405:4927-0:2613:1613","a:2:9533:3267-0:2613:1613","a:2:9534:3266-0:2613:1613","a:2:3364:215-0:2613:1613","b:2:3201-0:2613:1613","b:2:3197-0:2613:1613","b:2:3207-0:2613:1613","b:2:2868-0:2613:1613","b:2:4097-0:2613:1613","b:2:2865-0:2613:1613","b:2:3212-0:2613:1613","b:5:848-0:2613:1613","b:5:6500-0:2613:1613","0:2616","0:1133","0:1135","0:1139"]}},"1:5567:6074":{"id":"1:5567:6074","crate_id":1,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5568:57916"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10416:6013","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3467:4859":{"id":"2:3467:4859","crate_id":2,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3469:1369"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3405:4927-0:2914:3584":{"id":"a:2:3405:4927-0:2914:3584","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCapturesPosIter","id":"0:2914:3584","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1362:500":{"id":"0:1362:500","crate_id":0,"name":"count","span":{"filename":"src/re_trait.rs","begin":[83,4],"end":[85,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:848-0:2431:1649":{"id":"b:5:848-0:2431:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstRanges","id":"0:2431:1649","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:850:3797","5:851:2605","5:852:5449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:797:798":{"id":"0:797:798","crate_id":0,"name":"len","span":{"filename":"src/input.rs","begin":[328,4],"end":[330,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2585:3575":{"id":"0:2585:3575","crate_id":0,"name":"RegexSetBuilder","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"A configurable builder for a set of regular expressions.\n\nA builder can be used to configure how the regexes are built, for example,\nby setting the default flags (which can be overridden in the expression\nitself) or setting various limits.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:2570","a:2:3376:224-0:2585:3575","a:2:3405:4927-0:2585:3575","a:2:9533:3267-0:2585:3575","a:2:9534:3266-0:2585:3575","a:2:3364:215-0:2585:3575","b:2:3201-0:2585:3575","b:2:3197-0:2585:3575","b:2:3207-0:2585:3575","b:2:2868-0:2585:3575","b:2:4097-0:2585:3575","b:2:2865-0:2585:3575","b:2:3212-0:2585:3575","0:2588"]}},"b:5:848-0:2438:1849":{"id":"b:5:848-0:2438:1849","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstBytes","id":"0:2438:1849","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:850:3797","5:851:2605","5:852:5449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1144:2277":{"id":"0:1144:2277","crate_id":0,"name":"is_match","span":{"filename":"src/re_bytes.rs","begin":[142,4],"end":[144,5]},"visibility":"public","docs":"Returns true if and only if there is a match for the regex in the\nstring given.\n\nIt is recommended to use this method if all you need to do is test\na match, since the underlying matching engine may be able to do less\nwork.\n\n# Example\n\nTest if some text contains at least one word with exactly 13 ASCII word\nbytes:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet text = b\"I categorically deny having triskaidekaphobia.\";\nassert!(Regex::new(r\"\\b\\w{13}\\b\").unwrap().is_match(text));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2411:2013":{"id":"0:2411:2013","crate_id":0,"name":"NotWordBoundaryAscii","span":{"filename":"src/prog.rs","begin":[357,4],"end":[357,24]},"visibility":"default","docs":"Not ASCII word boundary.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"0:6":{"id":"0:6","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[625,0],"end":[625,42]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::re_builder::set_unicode","name":"set_unicode","id":"0:2557:1601","glob":true}},"0:1479":{"id":"0:1479","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[159,0],"end":[166,1]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:13271:3583","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2967:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1480:127","0:1481:3606"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2217:1646":{"id":"0:2217:1646","crate_id":0,"name":"LiteralSearcher","span":{"filename":"src/literal/imp.rs","begin":[13,0],"end":[18,1]},"visibility":"public","docs":"A prefix extracted from a compiled regular expression.\n\nA regex prefix is a set of literal strings that *must* be matched at the\nbeginning of a regex in order for the entire regex to match. Similarly\nfor a regex suffix.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:859","a:2:3376:224-0:2217:1646","a:2:3405:4927-0:2217:1646","a:2:9533:3267-0:2217:1646","a:2:9534:3266-0:2217:1646","a:2:3364:215-0:2217:1646","b:2:3201-0:2217:1646","b:2:3197-0:2217:1646","b:2:3207-0:2217:1646","b:2:2868-0:2217:1646","b:2:4097-0:2217:1646","b:2:2865-0:2217:1646","b:2:3212-0:2217:1646","b:5:848-0:2217:1646","0:2222","0:2224"]}},"0:2545:2786":{"id":"0:2545:2786","crate_id":0,"name":"swap_greed","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the value for the greedy swap (`U`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2552:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:2438:1849":{"id":"b:2:2868-0:2438:1849","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstBytes","id":"0:2438:1849","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3197-0:3007:1618":{"id":"b:2:3197-0:3007:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3007:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9533:3267-0:2944:1610":{"id":"a:2:9533:3267-0:2944:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1638":{"id":"0:1638","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1154,0],"end":[1154,49]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:9154:3581","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3029:1611","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1647":{"id":"0:1647","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1215,0],"end":[1222,1]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Replacer","id":"0:1641:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["by_ref","no_expansion"],"trait":{"name":"Replacer","id":"0:1641:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3038:1615","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:1650:3798","0:1651:3795"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1465:312":{"id":"0:1465:312","crate_id":0,"name":"as_str","span":{"filename":"src/re_unicode.rs","begin":[57,4],"end":[59,5]},"visibility":"public","docs":"Returns the matched text.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2383:1829":{"id":"0:2383:1829","crate_id":0,"name":"goto1","span":{"filename":"src/prog.rs","begin":[323,4],"end":[323,22]},"visibility":"public","docs":"The first instruction to try. A match resulting from following goto1\nhas precedence over a match resulting from following goto2.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"2:4099:1443":{"id":"2:4099:1443","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:46336:6390","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13797:62922":{"id":"2:13797:62922","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2181":{"id":"0:2181","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[139,16],"end":[139,20]},"visibility":{"restricted":{"parent":"0:702:1629","path":"::input"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3374:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:2174:1644","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:803:3126":{"id":"0:803:3126","crate_id":0,"name":"len_utf8","span":{"filename":"src/input.rs","begin":[368,4],"end":[370,5]},"visibility":"public","docs":"Returns the length of the character's UTF-8 encoding.\n\nIf the character is absent, then `1` is returned.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2963:186":{"id":"2:2963:186","crate_id":2,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2965:1004","2:2966:832","2:2967:797","2:2968:716","2:2969:700"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2917:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:5:848-0:2382:1853":{"id":"b:5:848-0:2382:1853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstSplit","id":"0:2382:1853","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:850:3797","5:851:2605","5:852:5449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9534:3266-0:2778:2926":{"id":"a:2:9534:3266-0:2778:2926","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2778:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3197-0:173:1640":{"id":"b:2:3197-0:173:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Compiler","id":"0:173:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13737:62913":{"id":"2:13737:62913","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:50053:4907","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3376:224-0:3057:2164":{"id":"a:2:3376:224-0:3057:2164","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SparseSet","id":"0:3057:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2865-0:2972:1607":{"id":"b:2:2865-0:2972:1607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2972:1607","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3654:4878":{"id":"2:3654:4878","crate_id":2,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3656:242","2:3657:208","2:3658:62131"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9534:3266-0:3057:2164":{"id":"a:2:9534:3266-0:3057:2164","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SparseSet","id":"0:3057:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:4896:5517":{"id":"2:4896:5517","crate_id":2,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4897:2046","2:4898:61924","2:4899:3859"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3197-0:2991:1617":{"id":"b:2:3197-0:2991:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2991:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1033:1917":{"id":"0:1033:1917","crate_id":0,"name":"needs_dotstar","span":{"filename":"src/prog.rs","begin":[128,4],"end":[130,5]},"visibility":"public","docs":"Returns true if the current configuration demands that an implicit\n`.*?` be prepended to the instruction sequence.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:786":{"id":"0:786","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[246,0],"end":[335,1]},"visibility":{"restricted":{"parent":"0:702:1629","path":"::input"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["is_empty"],"trait":{"name":"Input","id":"0:740:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ByteInput","id":"0:2186:2669","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:788:1790","0:789:3114","0:791:3116","0:793:1830","0:795:1816","0:797:798","0:798:2813"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:815:608":{"id":"0:815:608","crate_id":0,"name":"eq","span":{"filename":"src/input.rs","begin":[415,4],"end":[417,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2391:2045":{"id":"0:2391:2045","crate_id":0,"name":"look","span":{"filename":"src/prog.rs","begin":[336,4],"end":[336,23]},"visibility":"public","docs":"The type of zero-width assertion to check.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2396:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"b:2:2868-0:2031:2692":{"id":"b:2:2868-0:2031:2692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecNoSync","id":"0:2031:2692","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8682:4672":{"id":"2:8682:4672","crate_id":2,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8684:2584","2:8686:5405","2:8687:5406"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3201-0:2914:3584":{"id":"b:2:3201-0:2914:3584","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCapturesPosIter","id":"0:2914:3584","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1188:3839":{"id":"0:1188:3839","crate_id":0,"name":"captures_len","span":{"filename":"src/re_bytes.rs","begin":[666,4],"end":[668,5]},"visibility":"public","docs":"Returns the number of captures.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4097-0:2217:1646":{"id":"b:2:4097-0:2217:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:2217:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:586:2814":{"id":"0:586:2814","crate_id":0,"name":"shortest_match_at","span":{"filename":"src/exec.rs","begin":[438,4],"end":[480,5]},"visibility":"default","docs":"Returns the end of a match location, possibly occurring before the\nend location of the correct leftmost-first match.","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2216:421":{"id":"0:2216:421","crate_id":0,"name":"cmp","span":{"filename":"src/input.rs","begin":[345,55],"end":[345,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:37928:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:2446:2672":{"id":"b:2:3207-0:2446:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexOptions","id":"0:2446:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:865:2536":{"id":"0:865:2536","crate_id":0,"name":"find","span":{"filename":"src/literal/imp.rs","begin":[79,4],"end":[92,5]},"visibility":"public","docs":"Find the position of a literal in `haystack` if it exists.","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13762:58807":{"id":"2:13762:58807","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"prim@char":"1:15883:4458","str::split":"2:13756:1929","`DoubleEndedIterator`":"2:8717:121","self::pattern":"2:13332:1596"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:49807:4911","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13357:4890","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3463:4855":{"id":"2:3463:4855","crate_id":2,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3465:271"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3364:215-0:2972:1607":{"id":"a:2:3364:215-0:2972:1607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2972:1607","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2865-0:2613:1613":{"id":"b:2:2865-0:2613:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2613:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2425:1827":{"id":"0:2425:1827","crate_id":0,"name":"goto","span":{"filename":"src/prog.rs","begin":[365,4],"end":[365,21]},"visibility":"public","docs":"The next location to execute in the program if this instruction\nsucceeds.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"a:2:3405:4927-0:3057:2164":{"id":"a:2:3405:4927-0:3057:2164","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SparseSet","id":"0:3057:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9534:3266-0:2519:3495":{"id":"a:2:9534:3266-0:2519:3495","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2519:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:7":{"id":"0:7","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[627,0],"end":[627,38]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::re_builder::unicode","name":"unicode","id":"0:2493:1575","glob":true}},"0:2551:2789":{"id":"0:2551:2789","crate_id":0,"name":"nest_limit","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the nesting limit for this parser.\n\nThe nesting limit controls how deep the abstract syntax tree is allowed\nto be. If the AST exceeds the given limit (e.g., with too many nested\ngroups), then an error is returned by the parser.\n\nThe purpose of this limit is to act as a heuristic to prevent stack\noverflow for consumers that do structural induction on an `Ast` using\nexplicit recursion. While this crate never does this (instead using\nconstant stack space and moving the call stack to the heap), other\ncrates may.\n\nThis limit is not checked until the entire Ast is parsed. Therefore,\nif callers want to put a limit on the amount of heap space used, then\nthey should impose a limit on the length, in bytes, of the concrete\npattern string. In particular, this is viable since this parser\nimplementation will limit itself to heap space proportional to the\nlength of the pattern string.\n\nNote that a nest limit of `0` will return a nest limit error for most\npatterns but not all. For example, a nest limit of `0` permits `a` but\nnot `ab`, since `ab` requires a concatenation, which results in a nest\ndepth of `1`. In general, a nest limit is not something that manifests\nin an obvious way in the concrete syntax, therefore, it should not be\nused in a granular way.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2552:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2865-0:2991:1617":{"id":"b:2:2865-0:2991:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2991:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1636:928":{"id":"0:1636:928","crate_id":0,"name":"next","span":{"filename":"src/re_unicode.rs","begin":[1148,4],"end":[1151,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2477:2790":{"id":"0:2477:2790","crate_id":0,"name":"build","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Consume the builder and compile the regular expression.\n\nNote that calling `as_str` on the resulting `Regex` will produce the\npattern given to `new` verbatim. Notably, it will not incorporate any\nof the flags set on this builder.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47933:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2613:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3376:224-0:2174:1644":{"id":"a:2:3376:224-0:2174:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:2174:1644","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3405:4927-0:2026:1641":{"id":"a:2:3405:4927-0:2026:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Exec","id":"0:2026:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3197-0:2026:1641":{"id":"b:2:3197-0:2026:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Exec","id":"0:2026:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:742:3114":{"id":"0:742:3114","crate_id":0,"name":"next_char","span":{"filename":"src/input.rs","begin":[74,4],"end":[74,45]},"visibility":"default","docs":"Return the Unicode character occurring next to `at`.\n\nIf no such character could be decoded, then `Char` is absent.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["at",{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:13821:62930":{"id":"2:13821:62930","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:15883:4458","self::pattern":"2:13332:1596"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13357:4890","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2877:664":{"id":"0:2877:664","crate_id":0,"name":"fmt","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:543:1642":{"id":"b:2:2868-0:543:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecBuilder","id":"0:543:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2413":{"id":"0:2413","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[340,9],"end":[340,14]},"visibility":{"restricted":{"parent":"0:1000:1632","path":"::prog"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2396:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2414:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:190:1624":{"id":"0:190:1624","crate_id":0,"name":"compile","span":{"filename":"src/compile.rs","begin":[129,4],"end":[137,5]},"visibility":"public","docs":"Compile a regular expression given its AST.\n\nThe compiler is guaranteed to succeed unless the program exceeds the\nspecified size limit. If the size limit is exceeded, then compilation\nstops and returns an error.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["exprs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Hir","id":"20:3040:1844","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"result::Result","id":"2:47933:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Program","id":"0:2331:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1464:2100":{"id":"0:1464:2100","crate_id":0,"name":"range","span":{"filename":"src/re_unicode.rs","begin":[51,4],"end":[53,5]},"visibility":"public","docs":"Returns the range over the starting and ending byte offsets of the\nmatch in the haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Range","id":"2:46187:196","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1057:1773":{"id":"0:1057:1773","crate_id":0,"name":"matches","span":{"filename":"src/prog.rs","begin":[382,4],"end":[405,5]},"visibility":"public","docs":"Tests whether the given input character matches this instruction.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["c",{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3197-0:2967:1613":{"id":"b:2:3197-0:2967:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2967:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3376:224-0:2431:1649":{"id":"a:2:3376:224-0:2431:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstRanges","id":"0:2431:1649","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9534:3266-0:3038:1615":{"id":"a:2:9534:3266-0:3038:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3038:1615","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2865-0:2431:1649":{"id":"b:2:2865-0:2431:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstRanges","id":"0:2431:1649","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3197-0:3029:1611":{"id":"b:2:3197-0:3029:1611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3029:1611","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1725":{"id":"0:1725","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[761,4],"end":[761,37]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::compile::Compiler","name":"Compiler","id":"0:173:1640","glob":false}},"0:2696:1558":{"id":"0:2696:1558","crate_id":0,"name":"0","span":{"filename":"src/re_bytes.rs","begin":[1250,24],"end":[1250,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}},"0:1582:664":{"id":"0:1582:664","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[1003,4],"end":[1005,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3212-0:2174:1644":{"id":"b:2:3212-0:2174:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:2174:1644","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3405:4927-0:3020:1606":{"id":"a:2:3405:4927-0:3020:1606","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3020:1606","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:848-0:2446:2672":{"id":"b:5:848-0:2446:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexOptions","id":"0:2446:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:850:3797","5:851:2605","5:852:5449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9534:3266-0:2488:3495":{"id":"a:2:9534:3266-0:2488:3495","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2488:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1531":{"id":"0:1531","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[753,0],"end":[770,1]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["rposition","try_for_each","count","try_collect","map_while","find","intersperse_with","rev","next_chunk","cmp","take","sum","size_hint","max_by_key","eq_by","unzip","peekable","fold","collect_into","scan","any","for_each","advance_by","all","min","enumerate","is_sorted","cycle","reduce","partition","flat_map","filter","nth","gt","is_sorted_by","array_chunks","position","try_reduce","lt","partition_in_place","flatten","filter_map","step_by","copied","by_ref","max","min_by","is_sorted_by_key","product","find_map","is_partitioned","fuse","partial_cmp","skip","skip_while","chain","eq","le","cloned","ne","min_by_key","__iterator_get_unchecked","zip","last","try_find","cmp_by","try_fold","ge","inspect","take_while","intersperse","map","collect","max_by","partial_cmp_by"],"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2972:1607","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["0:1533:2046","0:1534:928","0:1537:3859","0:1538:500"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2868-0:2431:1649":{"id":"b:2:2868-0:2431:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstRanges","id":"0:2431:1649","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1742":{"id":"0:1742","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[763,44],"end":[763,49]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::input::Input","name":"Input","id":"0:740:149","glob":false}},"b:2:3197-0:2012:128":{"id":"b:2:3197-0:2012:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3405:4927-0:2382:1853":{"id":"a:2:3405:4927-0:2382:1853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstSplit","id":"0:2382:1853","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:740:149":{"id":"0:740:149","crate_id":0,"name":"Input","span":{"filename":"src/input.rs","begin":[67,0],"end":[102,1]},"visibility":"public","docs":"An abstraction over input used in the matching engines.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:741:1790","0:742:3114","0:743:3116","0:744:1830","0:745:1816","0:746:798","0:747:1815","0:748:2813"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:749","0:766","0:786"]}},"0:2201":{"id":"0:2201","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[345,9],"end":[345,14]},"visibility":{"restricted":{"parent":"0:702:1629","path":"::input"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2202:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3364:215-0:2389:1851":{"id":"a:2:3364:215-0:2389:1851","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstEmptyLook","id":"0:2389:1851","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1369:2811":{"id":"0:1369:2811","crate_id":0,"name":"slots_len","span":{"filename":"src/re_trait.rs","begin":[110,4],"end":[110,33]},"visibility":"default","docs":"The number of capture slots in the compiled regular expression. This is\nalways two times the number of capture groups (two slots per group).","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2444":{"id":"0:2444","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[418,16],"end":[418,21]},"visibility":{"restricted":{"parent":"0:1000:1632","path":"::prog"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstBytes","id":"0:2438:1849","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2445:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:6185:2072":{"id":"5:6185:2072","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8472:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2841:1815":{"id":"0:2841:1815","crate_id":0,"name":"is_empty","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Returns `true` if this set contains no regular expressions.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2987":{"id":"0:2987","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[780,9],"end":[780,14]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2982:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2990:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2512:2786":{"id":"0:2512:2786","crate_id":0,"name":"swap_greed","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the value for the greedy swap (`U`) flag.\n\nWhen enabled, a pattern like `a*` is lazy (tries to find shortest\nmatch) and `a*?` is greedy (tries to find longest match).\n\nBy default, `a*` is greedy and `a*?` is lazy.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2519:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2578:2786":{"id":"0:2578:2786","crate_id":0,"name":"swap_greed","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the value for the greedy swap (`U`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2585:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2883":{"id":"0:2883","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2805:1620","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2880:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2884:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1187:2936":{"id":"0:1187:2936","crate_id":0,"name":"capture_names","span":{"filename":"src/re_bytes.rs","begin":[661,4],"end":[663,5]},"visibility":"public","docs":"Returns an iterator over the capture names.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2654:1607","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3197-0:2982:1616":{"id":"b:2:3197-0:2982:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2982:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1729":{"id":"0:1729","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[762,26],"end":[762,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::exec::Exec","name":"Exec","id":"0:2026:1641","glob":false}},"0:1459:1604":{"id":"0:1459:1604","crate_id":0,"name":"escape","span":{"filename":"src/re_unicode.rs","begin":[21,0],"end":[23,1]},"visibility":"public","docs":"Escapes all regular expression meta characters in `text`.\n\nThe string returned may be safely used as a literal in a regular\nexpression.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"0:450:664":{"id":"0:450:664","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[52,4],"end":[70,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3364:215-0:3029:1611":{"id":"a:2:3364:215-0:3029:1611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3029:1611","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3835:4875":{"id":"2:3835:4875","crate_id":2,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3837:57046"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3376:224-0:2778:2926":{"id":"a:2:3376:224-0:2778:2926","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2778:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3364:215-0:2944:1610":{"id":"a:2:3364:215-0:2944:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1031:1321":{"id":"0:1031:1321","crate_id":0,"name":"skip","span":{"filename":"src/prog.rs","begin":[102,4],"end":[109,5]},"visibility":"public","docs":"If pc is an index to a no-op instruction (like Save), then return the\nnext pc that is not a no-op instruction.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pc",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2173:664":{"id":"0:2173:664","crate_id":0,"name":"fmt","span":{"filename":"src/input.rs","begin":[12,22],"end":[12,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2439:1827":{"id":"0:2439:1827","crate_id":0,"name":"goto","span":{"filename":"src/prog.rs","begin":[422,4],"end":[422,21]},"visibility":"public","docs":"The next location to execute in the program if this instruction\nsucceeds.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"0:2214:1004":{"id":"0:2214:1004","crate_id":0,"name":"partial_cmp","span":{"filename":"src/input.rs","begin":[345,43],"end":[345,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::option::Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:37928:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9533:3267-0:2585:3575":{"id":"a:2:9533:3267-0:2585:3575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2585:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3201-0:2944:1610":{"id":"b:2:3201-0:2944:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2865-0:173:1640":{"id":"b:2:2865-0:173:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Compiler","id":"0:173:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2684:1615":{"id":"0:2684:1615","crate_id":0,"name":"ReplacerRef","span":{"filename":"src/re_bytes.rs","begin":[1162,0],"end":[1162,49]},"visibility":"public","docs":"By-reference adaptor for a `Replacer`\n\nReturned by [`Replacer::by_ref`](trait.Replacer.html#method.by_ref).","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}},"a:2:9534:3266-0:2880:2926":{"id":"a:2:9534:3266-0:2880:2926","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2880:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13756:1929":{"id":"2:13756:1929","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:13332:1596","`DoubleEndedIterator`":"2:8717:121","prim@char":"1:15883:4458","str::rsplit":"2:13762:58807","str::split_whitespace":"2:13734:34992"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:49789:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3364:215-0:3000:1605":{"id":"a:2:3364:215-0:3000:1605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3000:1605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1173:2814":{"id":"0:1173:2814","crate_id":0,"name":"shortest_match_at","span":{"filename":"src/re_bytes.rs","begin":[566,4],"end":[572,5]},"visibility":"public","docs":"Returns the same as shortest_match, but starts the search at the given\noffset.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3197-0:2585:3575":{"id":"b:2:3197-0:2585:3575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2585:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2728":{"id":"0:2728","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2703:1575","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2778:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2729:926","0:2732:2779","0:2734:2277","0:2736:1773","0:2738:798","0:2739:1815","0:2740:3576"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2337:1870":{"id":"0:2337:1870","crate_id":0,"name":"byte_classes","span":{"filename":"src/prog.rs","begin":[38,4],"end":[38,29]},"visibility":"public","docs":"A set of equivalence classes for discriminating bytes in the compiled\nprogram.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7891:239","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}},"0:2581:2782":{"id":"0:2581:2782","crate_id":0,"name":"octal","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Whether to support octal syntax or not.\n\nOctal syntax is a little-known way of uttering Unicode codepoints in\na regular expression. For example, `a`, `\\x61`, `\\u0061` and\n`\\141` are all equivalent regular expressions, where the last example\nshows octal syntax.\n\nWhile supporting octal syntax isn't in and of itself a problem, it does\nmake good error messages harder. That is, in PCRE based regex engines,\nsyntax like `\\0` invokes a backreference, which is explicitly\nunsupported in Rust's regex engine. However, many users expect it to\nbe supported. Therefore, when octal support is disabled, the error\nmessage will explicitly mention that backreferences aren't supported.\n\nOctal syntax is disabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2585:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3376:224-0:3029:1611":{"id":"a:2:3376:224-0:3029:1611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3029:1611","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:2211":{"id":"0:2211","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[345,39],"end":[345,41]},"visibility":{"restricted":{"parent":"0:702:1629","path":"::input"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2922:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13742:58812":{"id":"2:13742:58812","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"self::pattern":"2:13332:1596","prim@char":"1:15883:4458"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1062:1773":{"id":"0:1062:1773","crate_id":0,"name":"matches","span":{"filename":"src/prog.rs","begin":[431,4],"end":[433,5]},"visibility":"public","docs":"Returns true if and only if the given byte is in this range.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["byte",{"kind":"primitive","inner":"u8"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3212-0:3047:1612":{"id":"b:2:3212-0:3047:1612","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3047:1612","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1665:3798":{"id":"0:1665:3798","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1255,4],"end":[1257,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1608","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9534:3266-0:2991:1617":{"id":"a:2:9534:3266-0:2991:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2991:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1658:3798":{"id":"0:1658:3798","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1235,4],"end":[1237,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1608","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:2396:1647":{"id":"b:2:2868-0:2396:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2396:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4097-0:3020:1606":{"id":"b:2:4097-0:3020:1606","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3020:1606","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:848-0:2424:1850":{"id":"b:5:848-0:2424:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstChar","id":"0:2424:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:850:3797","5:851:2605","5:852:5449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3376:224-0:2396:1647":{"id":"a:2:3376:224-0:2396:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2396:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1243:1608":{"id":"0:1243:1608","crate_id":0,"name":"Captures","span":{"filename":"src/re_bytes.rs","begin":[912,0],"end":[916,1]},"visibility":"public","docs":"Captures represents a group of captured byte strings for a single match.\n\nThe 0th capture always corresponds to the entire match. Each subsequent\nindex corresponds to the next capture group in the regex. If a capture\ngroup is named, then the matched byte string is *also* available via the\n`name` method. (Note that the 0th capture is always unnamed and so must be\naccessed with the `get` method.)\n\nPositions returned from a capture group are always byte indices.\n\n`'t` is the lifetime of the matched text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":[]}},"0:859":{"id":"0:859","crate_id":0,"name":null,"span":{"filename":"src/literal/imp.rs","begin":[39,0],"end":[169,1]},"visibility":{"restricted":{"parent":"0:822:2916","path":"::literal::imp"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:2217:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:860:2779","0:861:1814","0:862:2717","0:864:2946","0:865:2536","0:871:2865","0:872:2867","0:873:784","0:874:2963","0:875:2886","0:876:1815","0:877:798","0:879:2474"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:756:1816":{"id":"0:756:1816","crate_id":0,"name":"prefix_at","span":{"filename":"src/input.rs","begin":[121,4],"end":[127,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefixes",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:2217:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["at",{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8679:2046":{"id":"2:8679:2046","crate_id":2,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:3376:224-0:543:1642":{"id":"a:2:3376:224-0:543:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecBuilder","id":"0:543:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3364:215-0:2038:2696":{"id":"a:2:3364:215-0:2038:2696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecNoSyncStr","id":"0:2038:2696","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3207-0:2389:1851":{"id":"b:2:3207-0:2389:1851","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstEmptyLook","id":"0:2389:1851","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1469:685":{"id":"0:1469:685","crate_id":0,"name":"from","span":{"filename":"src/re_unicode.rs","begin":[69,4],"end":[71,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["m",{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:876:1815":{"id":"0:876:1815","crate_id":0,"name":"is_empty","span":{"filename":"src/literal/imp.rs","begin":[142,4],"end":[144,5]},"visibility":"public","docs":"Returns true iff this prefix is empty.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2424:1850":{"id":"0:2424:1850","crate_id":0,"name":"InstChar","span":{"filename":"src/prog.rs","begin":[362,0],"end":[368,1]},"visibility":"public","docs":"Representation of the Char instruction.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:2425:1827","0:2426:1831"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:3376:224-0:2424:1850","a:2:3405:4927-0:2424:1850","a:2:9533:3267-0:2424:1850","a:2:9534:3266-0:2424:1850","a:2:3364:215-0:2424:1850","b:2:3201-0:2424:1850","b:2:3197-0:2424:1850","b:2:3207-0:2424:1850","b:2:2868-0:2424:1850","b:2:4097-0:2424:1850","b:2:2865-0:2424:1850","b:2:3212-0:2424:1850","b:5:848-0:2424:1850","0:2427","0:2429"]}},"2:13735:34982":{"id":"2:13735:34982","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"2:13734:34992"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:50072:4894","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4097-0:543:1642":{"id":"b:2:4097-0:543:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecBuilder","id":"0:543:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10580:191":{"id":"2:10580:191","crate_id":2,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10581:664"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1368:2810":{"id":"0:1368:2810","crate_id":0,"name":"Text","span":{"filename":"src/re_trait.rs","begin":[106,4],"end":[106,35]},"visibility":"default","docs":"The type of the haystack.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:2392":{"id":"0:2392","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[330,9],"end":[330,14]},"visibility":{"restricted":{"parent":"0:1000:1632","path":"::prog"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstEmptyLook","id":"0:2389:1851","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2393:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:8677-0:2914:3584":{"id":"b:2:8677-0:2914:3584","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8673:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCapturesPosIter","id":"0:2914:3584","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":["2:8679:2046","2:8680:3413","2:8681:773"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"a:2:3405:4927-0:2488:3495":{"id":"a:2:3405:4927-0:2488:3495","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2488:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:788:1790":{"id":"0:788:1790","crate_id":0,"name":"at","span":{"filename":"src/input.rs","begin":[247,4],"end":[258,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2880:2926":{"id":"0:2880:2926","crate_id":0,"name":"RegexSet","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Match multiple (possibly overlapping) regular expressions in a single scan.\n\nA regex set corresponds to the union of two or more regular expressions.\nThat is, a regex set will match text where at least one of its\nconstituent regular expressions matches. A regex set as its formulated here\nprovides a touch more power: it will also report *which* regular\nexpressions in the set match. Indeed, this is the key difference between\nregex sets and a single `Regex` with many alternates, since only one\nalternate can match at a time.\n\nFor example, consider regular expressions to match email addresses and\ndomains: `[a-z]+@[a-z]+\\.(com|org|net)` and `[a-z]+\\.(com|org|net)`. If a\nregex set is constructed from those regexes, then searching the text\n`foo@example.com` will report both regexes as matching. Of course, one\ncould accomplish this by compiling each regex on its own and doing two\nsearches over the text. The key advantage of using a regex set is that it\nwill report the matching regexes using a *single pass through the text*.\nIf one has hundreds or thousands of regexes to match repeatedly (like a URL\nrouter for a complex web application or a user agent matcher), then a regex\nset can realize huge performance gains.\n\n# Example\n\nThis shows how the above two regexes (for matching email addresses and\ndomains) might work:\n\n ```rust\n # use regex::bytes::RegexSet;\n let set = RegexSet::new(&[\n     r\"[a-z]+@[a-z]+\\.(com|org|net)\",\n     r\"[a-z]+\\.(com|org|net)\",\n ]).unwrap();\n\n // Ask whether any regexes in the set match.\n assert!(set.is_match(b\"foo@example.com\"));\n\n // Identify which regexes in the set match.\n let matches: Vec<_> = set.matches(b\"foo@example.com\").into_iter().collect();\n assert_eq!(vec![0, 1], matches);\n\n // Try again, but with text that only matches one of the regexes.\n let matches: Vec<_> = set.matches(b\"example.com\").into_iter().collect();\n assert_eq!(vec![1], matches);\n\n // Try again, but with text that doesn't match any regex in the set.\n let matches: Vec<_> = set.matches(b\"example\").into_iter().collect();\n assert!(matches.is_empty());\n ```\n\nNote that it would be possible to adapt the above example to using `Regex`\nwith an expression like:\n\n```text\n(?P<email>[a-z]+@(?P<email_domain>[a-z]+[.](com|org|net)))|(?P<domain>[a-z]+[.](com|org|net))\n```\n\nAfter a match, one could then inspect the capture groups to figure out\nwhich alternates matched. The problem is that it is hard to make this\napproach scale when there are many regexes since the overlap between each\nalternate isn't always obvious to reason about.\n\n# Limitations\n\nRegex sets are limited to answering the following two questions:\n\n1. Does any regex in the set match?\n2. If so, which regexes in the set match?\n\nAs with the main [`Regex`][crate::Regex] type, it is cheaper to ask (1)\ninstead of (2) since the matching engines can stop after the first match\nis found.\n\nYou cannot directly extract [`Match`][crate::Match] or\n[`Captures`][crate::Captures] objects from a regex set. If you need these\noperations, the recommended approach is to compile each pattern in the set\nindependently and scan the exact same input a second time with those\nindependently compiled patterns:\n\n```rust\nuse regex::{Regex, RegexSet};\n\nlet patterns = [\"foo\", \"bar\"];\n// Both patterns will match different ranges of this string.\nlet text = \"barfoo\";\n\n// Compile a set matching any of our patterns.\nlet set = RegexSet::new(&patterns).unwrap();\n// Compile each pattern independently.\nlet regexes: Vec<_> = set.patterns().iter()\n    .map(|pat| Regex::new(pat).unwrap())\n    .collect();\n\n// Match against the whole set first and identify the individual\n// matching patterns.\nlet matches: Vec<&str> = set.matches(text).into_iter()\n    // Dereference the match index to get the corresponding\n    // compiled pattern.\n    .map(|match_idx| &regexes[match_idx])\n    // To get match locations or any other info, we then have to search\n    // the exact same text again, using our separately-compiled pattern.\n    .map(|pat| pat.find(text).unwrap().as_str())\n    .collect();\n\n// Matches arrive in the order the constituent patterns were declared,\n// not the order they appear in the input.\nassert_eq!(vec![\"foo\", \"bar\"], matches);\n```\n\n# Performance\n\nA `RegexSet` has the same performance characteristics as `Regex`. Namely,\nsearch takes `O(mn)` time, where `m` is proportional to the size of the\nregex set and `n` is proportional to the length of the search text.","links":{"crate::Regex":"0:2967:1613","crate::Captures":"0:1565:1608","crate::Match":"0:2944:1610"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:2830","a:2:3376:224-0:2880:2926","a:2:3405:4927-0:2880:2926","a:2:9533:3267-0:2880:2926","a:2:9534:3266-0:2880:2926","a:2:3364:215-0:2880:2926","b:2:3201-0:2880:2926","b:2:3197-0:2880:2926","b:2:3207-0:2880:2926","b:2:2868-0:2880:2926","b:2:4097-0:2880:2926","b:2:2865-0:2880:2926","b:2:3212-0:2880:2926","b:5:848-0:2880:2926","0:2883","0:2876"]}},"2:3611:3334":{"id":"2:3611:3334","crate_id":2,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3612:583"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3372:222":{"id":"2:3372:222","crate_id":2,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2180:414":{"id":"0:2180:414","crate_id":0,"name":"clone","span":{"filename":"src/input.rs","begin":[139,9],"end":[139,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:2174:1644","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2037:664":{"id":"0:2037:664","crate_id":0,"name":"fmt","span":{"filename":"src/exec.rs","begin":[52,9],"end":[52,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2782:414":{"id":"0:2782:414","crate_id":0,"name":"clone","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2778:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6576:6012":{"id":"1:6576:6012","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6577:9571"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10416:6013","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:3376:224-0:3038:1615":{"id":"a:2:3376:224-0:3038:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3038:1615","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:4097-0:2198:1643":{"id":"b:2:4097-0:2198:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3197-0:2331:1650":{"id":"b:2:3197-0:2331:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Program","id":"0:2331:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3061:414":{"id":"0:3061:414","crate_id":0,"name":"clone","span":{"filename":"src/sparse.rs","begin":[15,9],"end":[15,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SparseSet","id":"0:3057:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:10":{"id":"0:10","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[632,4],"end":[632,10]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::re_unicode::escape","name":"escape","id":"0:1459:1604","glob":false}},"2:3518:4866":{"id":"2:3518:4866","crate_id":2,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3520:358"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1030:926":{"id":"0:1030:926","crate_id":0,"name":"new","span":{"filename":"src/prog.rs","begin":[80,4],"end":[98,5]},"visibility":"public","docs":"Creates an empty instruction sequence. Fields are given default\nvalues.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2865-0:2217:1646":{"id":"b:2:2865-0:2217:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:2217:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3212-0:2880:2926":{"id":"b:2:3212-0:2880:2926","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2880:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2920:414":{"id":"0:2920:414","crate_id":0,"name":"clone","span":{"filename":"src/re_trait.rs","begin":[57,9],"end":[57,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SubCapturesPosIter","id":"0:2914:3584","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2518:2789":{"id":"0:2518:2789","crate_id":0,"name":"nest_limit","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the nesting limit for this parser.\n\nThe nesting limit controls how deep the abstract syntax tree is allowed\nto be. If the AST exceeds the given limit (e.g., with too many nested\ngroups), then an error is returned by the parser.\n\nThe purpose of this limit is to act as a heuristic to prevent stack\noverflow for consumers that do structural induction on an `Ast` using\nexplicit recursion. While this crate never does this (instead using\nconstant stack space and moving the call stack to the heap), other\ncrates may.\n\nThis limit is not checked until the entire Ast is parsed. Therefore,\nif callers want to put a limit on the amount of heap space used, then\nthey should impose a limit on the length, in bytes, of the concrete\npattern string. In particular, this is viable since this parser\nimplementation will limit itself to heap space proportional to the\nlength of the pattern string.\n\nNote that a nest limit of `0` will return a nest limit error for most\npatterns but not all. For example, a nest limit of `0` permits `a` but\nnot `ab`, since `ab` requires a concatenation, which results in a nest\ndepth of `1`. In general, a nest limit is not something that manifests\nin an obvious way in the concrete syntax, therefore, it should not be\nused in a granular way.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2519:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5497:6069":{"id":"1:5497:6069","crate_id":1,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5498:60580","1:5499:60582","1:5500:60581","1:5501:60583"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2664:1605":{"id":"0:2664:1605","crate_id":0,"name":"CaptureLocations","span":{"filename":"src/re_bytes.rs","begin":[860,0],"end":[860,49]},"visibility":"public","docs":"CaptureLocations is a low level representation of the raw offsets of each\nsubmatch.\n\nYou can think of this as a lower level\n[`Captures`](struct.Captures.html), where this type does not support\nnamed capturing groups directly and it does not borrow the text that these\noffsets were matched on.\n\nPrimarily, this type is useful when using the lower level `Regex` APIs\nsuch as `read_captures`, which permits amortizing the allocation in which\ncapture match locations are stored.\n\nIn order to build a value of this type, you'll need to call the\n`capture_locations` method on the `Regex` being used to execute the search.\nThe value returned can then be reused in subsequent searches.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":[]}},"0:874:2963":{"id":"0:874:2963","crate_id":0,"name":"lcp","span":{"filename":"src/literal/imp.rs","begin":[132,4],"end":[134,5]},"visibility":"public","docs":"Returns a matcher for the longest common prefix of this matcher.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Memmem","id":"0:2273:3155","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:2914:3584":{"id":"b:2:2868-0:2914:3584","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCapturesPosIter","id":"0:2914:3584","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:851:2605":{"id":"5:851:2605","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3197-0:2778:2926":{"id":"b:2:3197-0:2778:2926","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2778:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2018:1558":{"id":"0:2018:1558","crate_id":0,"name":"0","span":{"filename":"src/error.rs","begin":[11,19],"end":[11,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"2:2917:185":{"id":"2:2917:185","crate_id":2,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2919:608","2:2920:913"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:2436":{"id":"0:2436","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[371,16],"end":[371,21]},"visibility":{"restricted":{"parent":"0:1000:1632","path":"::prog"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstRanges","id":"0:2431:1649","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2437:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1376:3643":{"id":"0:1376:3643","crate_id":0,"name":"find_iter","span":{"filename":"src/re_trait.rs","begin":[152,4],"end":[154,5]},"visibility":"default","docs":"Returns an iterator over all non-overlapping successive leftmost-first\nmatches.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Text","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1367:2673","args":null}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2924:1611","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1487:3643":{"id":"0:1487:3643","crate_id":0,"name":"find_iter","span":{"filename":"src/re_unicode.rs","begin":[244,4],"end":[246,5]},"visibility":"public","docs":"Returns an iterator for each successive non-overlapping match in\n`text`, returning the start and end byte indices with respect to\n`text`.\n\n# Example\n\nFind the start and end location of every word with exactly 13 Unicode\nword characters:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet text = \"Retroactively relinquishing remunerations is reprehensible.\";\nfor mat in Regex::new(r\"\\b\\w{13}\\b\").unwrap().find_iter(text) {\n    println!(\"{:?}\", mat);\n}\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3029:1611","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8632:4674":{"id":"2:8632:4674","crate_id":2,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8634:3481"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2543:2784":{"id":"0:2543:2784","crate_id":0,"name":"multi_line","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the value for the multi-line matching (`m`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2552:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2805:1620":{"id":"0:2805:1620","crate_id":0,"name":"bytes","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2880:2926","0:2885:4108","0:2892:4142","0:2897:4141"],"is_stripped":false}},"b:2:4097-0:2424:1850":{"id":"b:2:4097-0:2424:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstChar","id":"0:2424:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2022:414":{"id":"0:2022:414","crate_id":0,"name":"clone","span":{"filename":"src/error.rs","begin":[5,9],"end":[5,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3364:215-0:2331:1650":{"id":"a:2:3364:215-0:2331:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Program","id":"0:2331:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9534:3266-0:2198:1643":{"id":"a:2:9534:3266-0:2198:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13806:62927":{"id":"2:13806:62927","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:15883:4458","self::pattern":"2:13332:1596"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2618:1611":{"id":"0:2618:1611","crate_id":0,"name":"Matches","span":{"filename":"src/re_bytes.rs","begin":[695,0],"end":[695,66]},"visibility":"public","docs":"An iterator over all non-overlapping matches for a particular string.\n\nThe iterator yields a tuple of integers corresponding to the start and end\nof the match. The indices are byte offsets. The iterator stops when no more\nmatches can be found.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the matched byte string.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":[]}},"a:2:9533:3267-0:2914:3584":{"id":"a:2:9533:3267-0:2914:3584","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCapturesPosIter","id":"0:2914:3584","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3522:4867":{"id":"2:3522:4867","crate_id":2,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3524:360"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3201-0:3038:1615":{"id":"b:2:3201-0:3038:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3038:1615","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:638:2933":{"id":"0:638:2933","crate_id":0,"name":"regex_strings","span":{"filename":"src/exec.rs","begin":[1298,4],"end":[1300,5]},"visibility":"public","docs":"The original regular expressions given by the caller that were\ncompiled.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13799:62923":{"id":"2:13799:62923","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1064":{"id":"0:1064","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[18,0],"end":[34,1]},"visibility":{"restricted":{"parent":"0:1063:1600","path":"::re_builder"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Default","id":"2:3248:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexOptions","id":"0:2446:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1065:59"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2394":{"id":"0:2394","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[330,16],"end":[330,21]},"visibility":{"restricted":{"parent":"0:1000:1632","path":"::prog"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstEmptyLook","id":"0:2389:1851","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2395:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2617:414":{"id":"0:2617:414","crate_id":0,"name":"clone","span":{"filename":"src/re_bytes.rs","begin":[77,9],"end":[77,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2613:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9534:3266-0:2038:2696":{"id":"a:2:9534:3266-0:2038:2696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecNoSyncStr","id":"0:2038:2696","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3037:664":{"id":"0:3037:664","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[1142,9],"end":[1142,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1651:3795":{"id":"0:1651:3795","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1219,4],"end":[1221,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:853:109","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2834:2779":{"id":"0:2834:2779","crate_id":0,"name":"empty","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Create a new empty regex set.\n\n# Example\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::empty();\nassert!(set.is_empty());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2880:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2918":{"id":"0:2918","crate_id":0,"name":null,"span":{"filename":"src/re_trait.rs","begin":[57,9],"end":[57,14]},"visibility":{"restricted":{"parent":"0:1344:1633","path":"::re_trait"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCapturesPosIter","id":"0:2914:3584","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":["0:2920:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3405:4927-0:3038:1615":{"id":"a:2:3405:4927-0:3038:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3038:1615","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2172":{"id":"0:2172","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[12,22],"end":[12,27]},"visibility":{"restricted":{"parent":"0:702:1629","path":"::input"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2173:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9534:3266-0:2972:1607":{"id":"a:2:9534:3266-0:2972:1607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2972:1607","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2185:664":{"id":"0:2185:664","crate_id":0,"name":"fmt","span":{"filename":"src/input.rs","begin":[139,22],"end":[139,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:813:608":{"id":"0:813:608","crate_id":0,"name":"eq","span":{"filename":"src/input.rs","begin":[408,4],"end":[410,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"char"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:2389:1851":{"id":"b:2:2868-0:2389:1851","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstEmptyLook","id":"0:2389:1851","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:4097-0:2982:1616":{"id":"b:2:4097-0:2982:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2982:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:801":{"id":"0:801","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[357,0],"end":[392,1]},"visibility":{"restricted":{"parent":"0:702:1629","path":"::input"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:802:2107","0:803:3126","0:805:3129","0:806:1845"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2222":{"id":"0:2222","crate_id":0,"name":null,"span":{"filename":"src/literal/imp.rs","begin":[12,9],"end":[12,14]},"visibility":{"restricted":{"parent":"0:822:2916","path":"::literal::imp"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:2217:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2223:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:581":{"id":"0:581","crate_id":0,"name":null,"span":{"filename":"src/exec.rs","begin":[421,0],"end":[686,1]},"visibility":{"restricted":{"parent":"0:451:1626","path":"::exec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["captures_iter","locations","find_iter"],"trait":{"name":"RegularExpression","id":"0:1367:2673","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecNoSync","id":"0:2031:2692","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":["0:583:2810","0:584:2811","0:585:2812","0:586:2814","0:588:2815","0:589:2816","0:590:2817"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13783:1773":{"id":"2:13783:1773","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:13332:1596","str::matches":"2:13783:1773","`DoubleEndedIterator`":"2:8717:121","prim@char":"1:15883:4458"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:49993:1611","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3025":{"id":"0:3025","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1116,9],"end":[1116,14]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3020:1606","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:3028:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3212-0:2424:1850":{"id":"b:2:3212-0:2424:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstChar","id":"0:2424:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2456:1575":{"id":"0:2456:1575","crate_id":0,"name":"unicode","span":{"filename":"src/re_builder.rs","begin":[14,4],"end":[14,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"b:2:3207-0:2552:3575":{"id":"b:2:3207-0:2552:3575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2552:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3201-0:3047:1612":{"id":"b:2:3201-0:3047:1612","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3047:1612","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1600":{"id":"0:1600","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1062,0],"end":[1070,1]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":"Get a group by name.\n\n`'t` is the lifetime of the matched text and `'i` is the lifetime\nof the group name (the index).\n\nThe text can't outlive the `Captures` object if this method is\nused, because of how `Index` is defined (normally `a[i]` is part\nof `a` and can't outlive it); to do that, use `name` instead.\n\n# Panics\n\nIf there is no group named by the given value.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"'i","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"2:3672:3582","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'i","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1608","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1603:183","0:1604:757"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3212-0:2585:3575":{"id":"b:2:3212-0:2585:3575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2585:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2223:414":{"id":"0:2223:414","crate_id":0,"name":"clone","span":{"filename":"src/literal/imp.rs","begin":[12,9],"end":[12,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:2217:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2409:2011":{"id":"0:2409:2011","crate_id":0,"name":"WordBoundaryAscii","span":{"filename":"src/prog.rs","begin":[355,4],"end":[355,21]},"visibility":"default","docs":"ASCII word boundary.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"2:23102:6378":{"id":"2:23102:6378","crate_id":2,"name":"SimdInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23103:6382","2:23104:60935","2:23105:1238","2:23106:1239","2:23107:44989","2:23108:60981","2:23109:60982","2:23110:60983","2:23111:60984","2:23112:60985","2:23113:60936","2:23114:60937","2:23115:60938","2:23116:60939","2:23117:60940","2:23118:60941","2:23119:60942"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3374:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sealed","id":"2:23151:6013","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2031:2692":{"id":"0:2031:2692","crate_id":0,"name":"ExecNoSync","span":{"filename":"src/exec.rs","begin":[53,0],"end":[58,1]},"visibility":"public","docs":"`ExecNoSync` is like `Exec`, except it embeds a reference to a cache. This\nmeans it is no longer Sync, but we can now avoid the overhead of\nsynchronization to fetch the cache.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:593","a:2:3376:224-0:2031:2692","a:2:3405:4927-0:2031:2692","a:2:9533:3267-0:2031:2692","a:2:9534:3266-0:2031:2692","a:2:3364:215-0:2031:2692","b:2:3201-0:2031:2692","b:2:3197-0:2031:2692","b:2:3207-0:2031:2692","b:2:2868-0:2031:2692","b:2:4097-0:2031:2692","b:2:2865-0:2031:2692","b:2:3212-0:2031:2692","0:2035","0:581"]}},"a:2:9534:3266-0:3007:1618":{"id":"a:2:9534:3266-0:3007:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3007:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:14456:142":{"id":"2:14456:142","crate_id":2,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14457:283","2:14458:523","2:14459:286","2:14460:1087"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:4097-0:2972:1607":{"id":"b:2:4097-0:2972:1607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2972:1607","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2035":{"id":"0:2035","crate_id":0,"name":null,"span":{"filename":"src/exec.rs","begin":[52,9],"end":[52,14]},"visibility":{"restricted":{"parent":"0:451:1626","path":"::exec"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecNoSync","id":"0:2031:2692","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":["0:2037:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3000:1605":{"id":"0:3000:1605","crate_id":0,"name":"CaptureLocations","span":{"filename":"src/re_unicode.rs","begin":[870,0],"end":[870,49]},"visibility":"public","docs":"CaptureLocations is a low level representation of the raw offsets of each\nsubmatch.\n\nYou can think of this as a lower level\n[`Captures`](struct.Captures.html), where this type does not support\nnamed capturing groups directly and it does not borrow the text that these\noffsets were matched on.\n\nPrimarily, this type is useful when using the lower level `Regex` APIs\nsuch as `read_captures`, which permits amortizing the allocation in which\ncapture match locations are stored.\n\nIn order to build a value of this type, you'll need to call the\n`capture_locations` method on the `Regex` being used to execute the search.\nThe value returned can then be reused in subsequent searches.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:1561","a:2:3376:224-0:3000:1605","a:2:3405:4927-0:3000:1605","a:2:9533:3267-0:3000:1605","a:2:9534:3266-0:3000:1605","a:2:3364:215-0:3000:1605","b:2:3201-0:3000:1605","b:2:3197-0:3000:1605","b:2:3207-0:3000:1605","b:2:2868-0:3000:1605","b:2:4097-0:3000:1605","b:2:2865-0:3000:1605","b:2:3212-0:3000:1605","b:5:848-0:3000:1605","0:3003","0:3005"]}},"0:3004:414":{"id":"0:3004:414","crate_id":0,"name":"clone","span":{"filename":"src/re_unicode.rs","begin":[869,9],"end":[869,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3000:1605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13718:11352":{"id":"2:13718:11352","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:15900:4472"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3212-0:2382:1853":{"id":"b:2:3212-0:2382:1853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstSplit","id":"0:2382:1853","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11205:218":{"id":"2:11205:218","crate_id":2,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:11207:183","2:11208:1826","2:11209:11340","2:11210:2413","2:11211:58778","2:11212:757","2:11213:758"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:11196:6013","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9534:3266-0:2331:1650":{"id":"a:2:9534:3266-0:2331:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Program","id":"0:2331:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1692:926":{"id":"0:1692:926","crate_id":0,"name":"new","span":{"filename":"src/sparse.rs","begin":[28,4],"end":[33,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["size",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"SparseSet","id":"0:3057:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1363":{"id":"0:1363","crate_id":0,"name":null,"span":{"filename":"src/re_trait.rs","begin":[88,0],"end":[88,56]},"visibility":{"restricted":{"parent":"0:1344:1633","path":"::re_trait"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"name":"ExactSizeIterator","id":"2:8742:3864","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCapturesPosIter","id":"0:2914:3584","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3405:4927-0:2585:3575":{"id":"a:2:3405:4927-0:2585:3575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2585:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3":{"id":"0:3","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[623,0],"end":[623,28]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::error::Error","name":"Error","id":"0:2012:128","glob":false}},"0:2949":{"id":"0:2949","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[28,9],"end":[28,13]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3374:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3812:4873":{"id":"2:3812:4873","crate_id":2,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"name":"RangeBounds","id":"2:3743:4872","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:9157:4670":{"id":"2:9157:4670","crate_id":2,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:59":{"id":"0:59","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[729,4],"end":[729,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::re_set::bytes","name":"bytes","id":"0:2805:1620","glob":true}},"0:2164:1645":{"id":"0:2164:1645","crate_id":0,"name":"InputAt","span":{"filename":"src/input.rs","begin":[13,0],"end":[18,1]},"visibility":"public","docs":"Represents a location in the input.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:731","a:2:3376:224-0:2164:1645","a:2:3405:4927-0:2164:1645","a:2:9533:3267-0:2164:1645","a:2:9534:3266-0:2164:1645","a:2:3364:215-0:2164:1645","b:2:3201-0:2164:1645","b:2:3197-0:2164:1645","b:2:3207-0:2164:1645","b:2:2868-0:2164:1645","b:2:4097-0:2164:1645","b:2:2865-0:2164:1645","b:2:3212-0:2164:1645","b:5:848-0:2164:1645","0:2169","0:2171","0:2172"]}},"0:589:2816":{"id":"0:589:2816","crate_id":0,"name":"find_at","span":{"filename":"src/exec.rs","begin":[537,4],"end":[579,5]},"visibility":"default","docs":"Finds the start and end location of the leftmost-first match, starting\nat the given location.","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2957":{"id":"0:2957","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[28,29],"end":[28,31]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3373:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3207-0:2991:1617":{"id":"b:2:3207-0:2991:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2991:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2393:414":{"id":"0:2393:414","crate_id":0,"name":"clone","span":{"filename":"src/prog.rs","begin":[330,9],"end":[330,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"InstEmptyLook","id":"0:2389:1851","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:819:1004":{"id":"0:819:1004","crate_id":0,"name":"partial_cmp","span":{"filename":"src/input.rs","begin":[429,4],"end":[431,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37928:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2865-0:3057:2164":{"id":"b:2:2865-0:3057:2164","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SparseSet","id":"0:3057:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9534:3266-0:2164:1645":{"id":"a:2:9534:3266-0:2164:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1701":{"id":"0:1701","crate_id":0,"name":null,"span":{"filename":"src/sparse.rs","begin":[70,0],"end":[76,1]},"visibility":{"restricted":{"parent":"0:1681:1634","path":"::sparse"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:3587:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SparseSet","id":"0:3057:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1702:226","0:1703:548"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:6163":{"id":"5:6163","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5976:1353","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:6164:63566","5:6165:2484","5:6168:3785","5:6171:63567","5:6183:63568","5:6184:63569","5:6185:2072","5:6186:57613","5:6187:57614"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2868-0:2585:3575":{"id":"b:2:2868-0:2585:3575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2585:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2739:1815":{"id":"0:2739:1815","crate_id":0,"name":"is_empty","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Returns `true` if this set contains no regular expressions.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4097-0:2552:3575":{"id":"b:2:4097-0:2552:3575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2552:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9533:3267-0:2217:1646":{"id":"a:2:9533:3267-0:2217:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:2217:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3405:4927-0:2880:2926":{"id":"a:2:3405:4927-0:2880:2926","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2880:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2042":{"id":"0:2042","crate_id":0,"name":null,"span":{"filename":"src/exec.rs","begin":[61,9],"end":[61,14]},"visibility":{"restricted":{"parent":"0:451:1626","path":"::exec"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecNoSyncStr","id":"0:2038:2696","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":["0:2044:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:755:1830":{"id":"0:755:1830","crate_id":0,"name":"is_empty_match","span":{"filename":"src/input.rs","begin":[117,4],"end":[119,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["at",{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["empty",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"InstEmptyLook","id":"0:2389:1851","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3272:128":{"id":"2:3272:128","crate_id":2,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3273:4926","2:3275:2648","2:3276:5763","2:3277:5764"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Display","id":"2:10570:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:1508:3785":{"id":"0:1508:3785","crate_id":0,"name":"replacen","span":{"filename":"src/re_unicode.rs","begin":[534,4],"end":[588,5]},"visibility":"public","docs":"Replaces at most `limit` non-overlapping matches in `text` with the\nreplacement provided. If `limit` is 0, then all non-overlapping matches\nare replaced.\n\nSee the documentation for `replace` for details on how to access\ncapturing group matches in the replacement string.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["limit",{"kind":"primitive","inner":"usize"}],["rep",{"kind":"generic","inner":"R"}]],"output":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:853:109","args":{"angle_bracketed":{"args":[{"lifetime":"'t"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Replacer","id":"0:1641:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:748:2813":{"id":"0:748:2813","crate_id":0,"name":"as_bytes","span":{"filename":"src/input.rs","begin":[101,4],"end":[101,32]},"visibility":"default","docs":"Return the given input as a sequence of bytes.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:2865-0:3000:1605":{"id":"b:2:2865-0:3000:1605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3000:1605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9533:3267-0:2012:128":{"id":"a:2:9533:3267-0:2012:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3207-0:2914:3584":{"id":"b:2:3207-0:2914:3584","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCapturesPosIter","id":"0:2914:3584","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13809:17735":{"id":"2:13809:17735","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:15883:4458","self::pattern":"2:13332:1596"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2380":{"id":"0:2380","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[309,16],"end":[309,21]},"visibility":{"restricted":{"parent":"0:1000:1632","path":"::prog"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstSave","id":"0:2375:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2381:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13729:58797":{"id":"2:13729:58797","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:13730:58798"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3364:215-0:2880:2926":{"id":"a:2:3364:215-0:2880:2926","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2880:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2876":{"id":"0:2876","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2805:1620","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2880:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2877:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2556:664":{"id":"0:2556:664","crate_id":0,"name":"fmt","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2865-0:2585:3575":{"id":"b:2:2865-0:2585:3575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2585:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3212-0:2164:1645":{"id":"b:2:3212-0:2164:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1178:3827":{"id":"0:1178:3827","crate_id":0,"name":"captures_read","span":{"filename":"src/re_bytes.rs","begin":[611,4],"end":[617,5]},"visibility":"public","docs":"This is like `captures`, but uses\n[`CaptureLocations`](struct.CaptureLocations.html)\ninstead of\n[`Captures`](struct.Captures.html) in order to amortize allocations.\n\nTo create a `CaptureLocations` value, use the\n`Regex::capture_locations` method.\n\nThis returns the overall match if this was successful, which is always\nequivalence to the `0`th capture group.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["locs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2664:1605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2590:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3405:4927-0:2198:1643":{"id":"a:2:3405:4927-0:2198:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:22":{"id":"0:22","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[632,60],"end":[632,68]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::re_unicode::Captures","name":"Captures","id":"0:1565:1608","glob":false}},"b:2:3207-0:2944:1610":{"id":"b:2:3207-0:2944:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2859:97":{"id":"2:2859:97","crate_id":2,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2861:3346"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"b:2:3201-0:2198:1643":{"id":"b:2:3201-0:2198:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:449":{"id":"0:449","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[51,0],"end":[71,1]},"visibility":{"restricted":{"parent":"0:438:1599","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:450:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2542:2783":{"id":"0:2542:2783","crate_id":0,"name":"case_insensitive","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the value for the case insensitive (`i`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2552:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3212-0:2552:3575":{"id":"b:2:3212-0:2552:3575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2552:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3201-0:2164:1645":{"id":"b:2:3201-0:2164:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2457:2782":{"id":"0:2457:2782","crate_id":0,"name":"octal","span":{"filename":"src/re_builder.rs","begin":[15,4],"end":[15,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"2:8636:4673":{"id":"2:8636:4673","crate_id":2,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8638:5441"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:745:1816":{"id":"0:745:1816","crate_id":0,"name":"prefix_at","span":{"filename":"src/input.rs","begin":[86,4],"end":[90,25]},"visibility":"default","docs":"Scan the input for a matching prefix.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefixes",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:2217:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["at",{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1037":{"id":"0:1037","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[161,0],"end":[168,1]},"visibility":{"restricted":{"parent":"0:1000:1632","path":"::prog"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:3587:117","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Program","id":"0:2331:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1038:226","0:1039:548"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2732:2779":{"id":"0:2732:2779","crate_id":0,"name":"empty","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Create a new empty regex set.\n\n# Example\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::empty();\nassert!(set.is_empty());\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2778:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2547:1575":{"id":"0:2547:1575","crate_id":0,"name":"unicode","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the value for the Unicode (`u`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2552:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1739":{"id":"0:1739","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[763,33],"end":[763,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::input::CharInput","name":"CharInput","id":"0:2174:1644","glob":false}},"b:2:8677-0:3029:1611":{"id":"b:2:8677-0:3029:1611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8673:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3029:1611","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:8679:2046","2:8680:3413","2:8681:773"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"b:2:3212-0:2217:1646":{"id":"b:2:3212-0:2217:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:2217:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2482:2787":{"id":"0:2482:2787","crate_id":0,"name":"ignore_whitespace","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the value for the ignore whitespace (`x`) flag.\n\nWhen enabled, whitespace such as new lines and spaces will be ignored\nbetween expressions of the pattern, and `#` can be used to start a\ncomment until the next new line.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2488:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4097-0:3000:1605":{"id":"b:2:4097-0:3000:1605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3000:1605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3364:215-0:3007:1618":{"id":"a:2:3364:215-0:3007:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3007:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1518:3827":{"id":"0:1518:3827","crate_id":0,"name":"captures_read","span":{"filename":"src/re_unicode.rs","begin":[669,4],"end":[675,5]},"visibility":"public","docs":"This is like `captures`, but uses\n[`CaptureLocations`](struct.CaptureLocations.html)\ninstead of\n[`Captures`](struct.Captures.html) in order to amortize allocations.\n\nTo create a `CaptureLocations` value, use the\n`Regex::capture_locations` method.\n\nThis returns the overall match if this was successful, which is always\nequivalence to the `0`th capture group.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["locs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3000:1605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:768:1790":{"id":"0:768:1790","crate_id":0,"name":"at","span":{"filename":"src/input.rs","begin":[158,4],"end":[165,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1301:1614":{"id":"0:1301:1614","crate_id":0,"name":"Replacer","span":{"filename":"src/re_bytes.rs","begin":[1111,0],"end":[1156,1]},"visibility":"public","docs":"Replacer describes types that can be used to replace matches in a byte\nstring.\n\nIn general, users of this crate shouldn't need to implement this trait,\nsince implementations are already provided for `&[u8]` along with other\nvariants of bytes types and `FnMut(&Captures) -> Vec<u8>` (or any\n`FnMut(&Captures) -> T` where `T: AsRef<[u8]>`), which covers most use cases.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:1302:3798","0:1303:3795","0:1305:3984"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2951":{"id":"0:2951","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[28,15],"end":[28,20]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2953:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:583:2810":{"id":"0:583:2810","crate_id":0,"name":"Text","span":{"filename":"src/exec.rs","begin":[422,4],"end":[422,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"a:2:9533:3267-0:3029:1611":{"id":"a:2:9533:3267-0:3029:1611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3029:1611","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:4097-0:2375:1852":{"id":"b:2:4097-0:2375:1852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstSave","id":"0:2375:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3197-0:2880:2926":{"id":"b:2:3197-0:2880:2926","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2880:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3201-0:2982:1616":{"id":"b:2:3201-0:2982:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2982:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:9161:4671":{"id":"2:9161:4671","crate_id":2,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Step","id":"2:8197:4659","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2204":{"id":"0:2204","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[345,22],"end":[345,26]},"visibility":{"restricted":{"parent":"0:702:1629","path":"::input"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10801:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2205:718"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3405:4927-0:2991:1617":{"id":"a:2:3405:4927-0:2991:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2991:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9534:3266-0:2026:1641":{"id":"a:2:9534:3266-0:2026:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Exec","id":"0:2026:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2215":{"id":"0:2215","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[345,55],"end":[345,58]},"visibility":{"restricted":{"parent":"0:702:1629","path":"::input"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["max","min","clamp"],"trait":{"name":"Ord","id":"2:2953:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2216:421"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2868-0:1565:1608":{"id":"b:2:2868-0:1565:1608","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1608","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2588":{"id":"0:2588","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":{"restricted":{"parent":"0:2557:1601","path":"::re_builder::set_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2585:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2589:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13830:62931":{"id":"2:13830:62931","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:5445:62931"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:50088:4903","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:14072:151":{"id":"2:14072:151","crate_id":2,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:14073:183","2:14074:151","2:14075:772"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:7602:6189":{"id":"1:7602:6189","crate_id":1,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7603:57717"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2207":{"id":"0:2207","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[345,28],"end":[345,37]},"visibility":{"restricted":{"parent":"0:702:1629","path":"::input"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3372:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2422":{"id":"0:2422","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[340,40],"end":[340,42]},"visibility":{"restricted":{"parent":"0:1000:1632","path":"::prog"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2922:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2396:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:8681:773":{"id":"2:8681:773","crate_id":2,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:752:1790":{"id":"0:752:1790","crate_id":0,"name":"at","span":{"filename":"src/input.rs","begin":[105,4],"end":[107,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1667":{"id":"0:1667","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1264,0],"end":[1272,1]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["by_ref","no_expansion"],"trait":{"name":"Replacer","id":"0:1641:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:853:109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}},"items":["0:1669:3798","0:1670:3795"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3016":{"id":"0:3016","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1081,16],"end":[1081,21]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3007:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:3019:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4097-0:2164:1645":{"id":"b:2:4097-0:2164:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3907:4880":{"id":"2:3907:4880","crate_id":2,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2333:1773":{"id":"0:2333:1773","crate_id":0,"name":"matches","span":{"filename":"src/prog.rs","begin":[24,4],"end":[24,29]},"visibility":"public","docs":"Pointers to each Match instruction in the sequence.\n\nThis is always length 1 unless this program represents a regex set.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7891:239","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}},"b:2:3207-0:2613:1613":{"id":"b:2:3207-0:2613:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2613:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9533:3267-0:2331:1650":{"id":"a:2:9533:3267-0:2331:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Program","id":"0:2331:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:3373:221":{"id":"2:3373:221","crate_id":2,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:765:548":{"id":"0:765:548","crate_id":0,"name":"deref","span":{"filename":"src/input.rs","begin":[152,4],"end":[154,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2434":{"id":"0:2434","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[371,9],"end":[371,14]},"visibility":{"restricted":{"parent":"0:1000:1632","path":"::prog"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstRanges","id":"0:2431:1649","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2435:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:798:2813":{"id":"0:798:2813","crate_id":0,"name":"as_bytes","span":{"filename":"src/input.rs","begin":[332,4],"end":[334,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2174:1644":{"id":"0:2174:1644","crate_id":0,"name":"CharInput","span":{"filename":"src/input.rs","begin":[140,0],"end":[140,35]},"visibility":"public","docs":"An input reader over characters.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:759","a:2:3376:224-0:2174:1644","a:2:3405:4927-0:2174:1644","a:2:9533:3267-0:2174:1644","a:2:9534:3266-0:2174:1644","a:2:3364:215-0:2174:1644","b:2:3201-0:2174:1644","b:2:3197-0:2174:1644","b:2:3207-0:2174:1644","b:2:2868-0:2174:1644","b:2:4097-0:2174:1644","b:2:2865-0:2174:1644","b:2:3212-0:2174:1644","b:5:848-0:2174:1644","0:2178","0:2181","0:2183","0:762","0:766"]}},"0:563:1620":{"id":"0:563:1620","crate_id":0,"name":"bytes","span":{"filename":"src/exec.rs","begin":[208,4],"end":[211,5]},"visibility":"public","docs":"Compiles byte based programs for use with the NFA matching engines.\n\nBy default, the NFA engines match on Unicode scalar values. They can\nbe made to use byte based programs instead. In general, the byte based\nprograms are slower because of a less efficient encoding of character\nclasses.\n\nNote that this does not impact DFA matching engines, which always\nexecute on bytes.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3405:4927-0:2375:1852":{"id":"a:2:3405:4927-0:2375:1852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstSave","id":"0:2375:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3207-0:2424:1850":{"id":"b:2:3207-0:2424:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstChar","id":"0:2424:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:588:2815":{"id":"0:588:2815","crate_id":0,"name":"is_match_at","span":{"filename":"src/exec.rs","begin":[487,4],"end":[532,5]},"visibility":"default","docs":"Returns true if and only if the regex matches text.\n\nFor single regular expressions, this is equivalent to calling\nshortest_match(...).is_some().","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2450:2789":{"id":"0:2450:2789","crate_id":0,"name":"nest_limit","span":{"filename":"src/re_builder.rs","begin":[8,4],"end":[8,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u32"}},"0:1143:926":{"id":"0:1143:926","crate_id":0,"name":"new","span":{"filename":"src/re_bytes.rs","begin":[119,4],"end":[121,5]},"visibility":"public","docs":"Compiles a regular expression. Once compiled, it can be used repeatedly\nto search, split or replace text in a string.\n\nIf an invalid expression is given, then an error is returned.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["re",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47933:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2613:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2428:414":{"id":"0:2428:414","crate_id":0,"name":"clone","span":{"filename":"src/prog.rs","begin":[361,9],"end":[361,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"InstChar","id":"0:2424:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3212-0:2012:128":{"id":"b:2:3212-0:2012:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:25":{"id":"0:25","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[633,4],"end":[633,13]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::re_unicode::Locations","name":"Locations","id":"0:1560:1609","glob":false}},"a:2:3405:4927-0:2331:1650":{"id":"a:2:3405:4927-0:2331:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Program","id":"0:2331:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13731:3215":{"id":"2:13731:3215","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:15883:4458"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49759:4899","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3197-0:2389:1851":{"id":"b:2:3197-0:2389:1851","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstEmptyLook","id":"0:2389:1851","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2868-0:2217:1646":{"id":"b:2:2868-0:2217:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:2217:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:4752:6083":{"id":"1:4752:6083","crate_id":1,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4753:3414","1:4754:58675"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1661:3798":{"id":"0:1661:3798","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1245,4],"end":[1247,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1608","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3364:215-0:2585:3575":{"id":"a:2:3364:215-0:2585:3575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2585:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1736":{"id":"0:1736","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[763,27],"end":[763,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::input::Char","name":"Char","id":"0:2198:1643","glob":false}},"b:2:3201-0:2991:1617":{"id":"b:2:3201-0:2991:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2991:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1702:226":{"id":"0:1702:226","crate_id":0,"name":"Target","span":{"filename":"src/sparse.rs","begin":[71,4],"end":[71,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"slice","inner":{"kind":"primitive","inner":"usize"}}}},"b:2:8677-0:2972:1607":{"id":"b:2:8677-0:2972:1607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8673:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2972:1607","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:8679:2046","2:8680:3413","2:8681:773"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"2:23763:6384":{"id":"2:23763:6384","crate_id":2,"name":"SimdPartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23764:1283","2:23765:1282","2:23766:1280","2:23767:1279"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"SimdPartialEq","id":"2:23175:6548","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3197-0:1565:1608":{"id":"b:2:3197-0:1565:1608","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1608","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:6467:6071":{"id":"1:6467:6071","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6468:56167","1:6469:10441","1:6470:10442","1:6471:10444","1:6472:10443","1:6473:10445","1:6474:10446","1:6475:10448","1:6476:8333","1:6477:10451","1:6478:10452","1:6479:10453","1:6480:10454","1:6481:10455","1:6482:10456","1:6483:10449","1:6484:10450"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1040":{"id":"0:1040","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[170,0],"end":[240,1]},"visibility":{"restricted":{"parent":"0:1000:1632","path":"::prog"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Program","id":"0:2331:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1041:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13752:5404":{"id":"2:13752:5404","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:47810:176","self::pattern":"2:13332:1596","prim@char":"1:15883:4458"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13357:4890","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:734:410":{"id":"0:734:410","crate_id":0,"name":"char","span":{"filename":"src/input.rs","begin":[35,4],"end":[37,5]},"visibility":"public","docs":"Returns the character at this position.\n\nIf this position is just before or after the input, then an absent\ncharacter is returned.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1162:2484":{"id":"0:1162:2484","crate_id":0,"name":"replace","span":{"filename":"src/re_bytes.rs","begin":[457,4],"end":[463,5]},"visibility":"public","docs":"Replaces the leftmost-first match with the replacement provided. The\nreplacement can be a regular byte string (where `$N` and `$name` are\nexpanded to match capture groups) or a function that takes the matches'\n`Captures` and returns the replaced byte string.\n\nIf no match is found, then a copy of the byte string is returned\nunchanged.\n\n# Replacement string syntax\n\nAll instances of `$name` in the replacement text is replaced with the\ncorresponding capture group `name`.\n\n`name` may be an integer corresponding to the index of the\ncapture group (counted by order of opening parenthesis where `0` is the\nentire match) or it can be a name (consisting of letters, digits or\nunderscores) corresponding to a named capture group.\n\nIf `name` isn't a valid capture group (whether the name doesn't exist\nor isn't a valid index), then it is replaced with the empty string.\n\nThe longest possible name is used. e.g., `$1a` looks up the capture\ngroup named `1a` and not the capture group at index `1`. To exert more\nprecise control over the name, use braces, e.g., `${1}a`.\n\nTo write a literal `$` use `$$`.\n\n# Examples\n\nNote that this function is polymorphic with respect to the replacement.\nIn typical usage, this can just be a normal byte string:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(\"[^01]+\").unwrap();\nassert_eq!(re.replace(b\"1078910\", &b\"\"[..]), &b\"1010\"[..]);\n# }\n```\n\nBut anything satisfying the `Replacer` trait will work. For example, a\nclosure of type `|&Captures| -> Vec<u8>` provides direct access to the\ncaptures corresponding to a match. This allows one to access capturing\ngroup matches easily:\n\n```rust\n# use regex::bytes::Regex;\n# use regex::bytes::Captures; fn main() {\nlet re = Regex::new(r\"([^,\\s]+),\\s+(\\S+)\").unwrap();\nlet result = re.replace(b\"Springsteen, Bruce\", |caps: &Captures| {\n    let mut replacement = caps[2].to_owned();\n    replacement.push(b' ');\n    replacement.extend(&caps[1]);\n    replacement\n});\nassert_eq!(result, &b\"Bruce Springsteen\"[..]);\n# }\n```\n\nBut this is a bit cumbersome to use all the time. Instead, a simple\nsyntax is supported that expands `$name` into the corresponding capture\ngroup. Here's the last example, but using this expansion technique\nwith named capture groups:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?P<last>[^,\\s]+),\\s+(?P<first>\\S+)\").unwrap();\nlet result = re.replace(b\"Springsteen, Bruce\", &b\"$first $last\"[..]);\nassert_eq!(result, &b\"Bruce Springsteen\"[..]);\n# }\n```\n\nNote that using `$2` instead of `$first` or `$1` instead of `$last`\nwould produce the same result. To write a literal `$` use `$$`.\n\nSometimes the replacement string requires use of curly braces to\ndelineate a capture group replacement and surrounding literal text.\nFor example, if we wanted to join two words together with an\nunderscore:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?P<first>\\w+)\\s+(?P<second>\\w+)\").unwrap();\nlet result = re.replace(b\"deep fried\", &b\"${first}_$second\"[..]);\nassert_eq!(result, &b\"deep_fried\"[..]);\n# }\n```\n\nWithout the curly braces, the capture group name `first_` would be\nused, and since it doesn't exist, it would be replaced with the empty\nstring.\n\nFinally, sometimes you just want to replace a literal string with no\nregard for capturing group expansion. This can be done by wrapping a\nbyte string with `NoExpand`:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nuse regex::bytes::NoExpand;\n\nlet re = Regex::new(r\"(?P<last>[^,\\s]+),\\s+(\\S+)\").unwrap();\nlet result = re.replace(b\"Springsteen, Bruce\", NoExpand(b\"$2 $last\"));\nassert_eq!(result, &b\"$2 $last\"[..]);\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["rep",{"kind":"generic","inner":"R"}]],"output":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:853:109","args":{"angle_bracketed":{"args":[{"lifetime":"'t"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Replacer","id":"0:1301:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2433:1988":{"id":"0:2433:1988","crate_id":0,"name":"ranges","span":{"filename":"src/prog.rs","begin":[377,4],"end":[377,35]},"visibility":"public","docs":"The set of Unicode scalar value ranges to test.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Box","id":"5:444:2038","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"tuple","inner":[{"kind":"primitive","inner":"char"},{"kind":"primitive","inner":"char"}]}}}],"bindings":[]}}}}},"0:1562:1826":{"id":"0:1562:1826","crate_id":0,"name":"get","span":{"filename":"src/re_unicode.rs","begin":[886,4],"end":[888,5]},"visibility":"public","docs":"Returns the start and end positions of the Nth capture group. Returns\n`None` if `i` is not a valid capture group or if the capture group did\nnot match anything. The positions returned are *always* byte indices\nwith respect to the original string matched.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3364:215-0:2026:1641":{"id":"a:2:3364:215-0:2026:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Exec","id":"0:2026:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2523:664":{"id":"0:2523:664","crate_id":0,"name":"fmt","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2736:1773":{"id":"0:2736:1773","crate_id":0,"name":"matches","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Returns the set of regular expressions that match in the given text.\n\nThe set returned contains the index of each regular expression that\nmatches in the given text. The index is in correspondence with the\norder of regular expressions given to `RegexSet`'s constructor.\n\nThe set can also be used to iterate over the matched indices.\n\nNote that as with searches using `Regex`, the expression is unanchored\nby default. That is, if the regex does not start with `^` or `\\A`, or\nend with `$` or `\\z`, then it is permitted to match anywhere in the\ntext.\n\n# Example\n\nTests which regular expressions match the given text:\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[\n    r\"\\w+\",\n    r\"\\d+\",\n    r\"\\pL+\",\n    r\"foo\",\n    r\"bar\",\n    r\"barfoo\",\n    r\"foobar\",\n]).unwrap();\nlet matches: Vec<_> = set.matches(\"foobar\").into_iter().collect();\nassert_eq!(matches, vec![0, 2, 3, 4, 6]);\n\n// You can also test whether a particular regex matched:\nlet matches = set.matches(\"foobar\");\nassert!(!matches.matched(5));\nassert!(matches.matched(6));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2783:4108","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2865-0:2519:3495":{"id":"b:2:2865-0:2519:3495","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2519:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3405:4927-0:2164:1645":{"id":"a:2:3405:4927-0:2164:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2954":{"id":"0:2954","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[28,22],"end":[28,27]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2956:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2441:603":{"id":"0:2441:603","crate_id":0,"name":"end","span":{"filename":"src/prog.rs","begin":[426,4],"end":[426,15]},"visibility":"public","docs":"The end (inclusive) of this byte range.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"0:2971:414":{"id":"0:2971:414","crate_id":0,"name":"clone","span":{"filename":"src/re_unicode.rs","begin":[135,9],"end":[135,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2967:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:746:798":{"id":"0:746:798","crate_id":0,"name":"len","span":{"filename":"src/input.rs","begin":[93,4],"end":[93,27]},"visibility":"default","docs":"The number of bytes in the input.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:3003":{"id":"0:3003","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[869,9],"end":[869,14]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3000:1605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3004:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1147:3643":{"id":"0:1147:3643","crate_id":0,"name":"find_iter","span":{"filename":"src/re_bytes.rs","begin":[188,4],"end":[190,5]},"visibility":"public","docs":"Returns an iterator for each successive non-overlapping match in\n`text`, returning the start and end byte indices with respect to\n`text`.\n\n# Example\n\nFind the start and end location of every word with exactly 13 ASCII\nword bytes:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet text = b\"Retroactively relinquishing remunerations is reprehensible.\";\nfor mat in Regex::new(r\"\\b\\w{13}\\b\").unwrap().find_iter(text) {\n    println!(\"{:?}\", mat);\n}\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2618:1611","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3212-0:2778:2926":{"id":"b:2:3212-0:2778:2926","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2778:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:821":{"id":"0:821","crate_id":0,"name":null,"span":{"filename":"src/literal/mod.rs","begin":[1,0],"end":[1,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::imp","name":"imp","id":"0:822:2916","glob":true}},"a:2:9533:3267-0:3038:1615":{"id":"a:2:9533:3267-0:3038:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3038:1615","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"21:1184:4772":{"id":"21:1184:4772","crate_id":21,"name":"StateID","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["21:1185:693","21:1186:64433","21:1187:64434"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"21:1178:6013","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"2:3374:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Eq","id":"2:2922:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Hash","id":"2:10801:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2917:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2963:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Ord","id":"2:2953:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13734:34992":{"id":"2:13734:34992","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"2:13735:34982"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:50063:4896","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1039:548":{"id":"0:1039:548","crate_id":0,"name":"deref","span":{"filename":"src/prog.rs","begin":[165,4],"end":[167,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:3587:117","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3376:224-0:2880:2926":{"id":"a:2:3376:224-0:2880:2926","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2880:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:770:3114":{"id":"0:770:3114","crate_id":0,"name":"next_char","span":{"filename":"src/input.rs","begin":[167,4],"end":[169,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["at",{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1596:183":{"id":"0:1596:183","crate_id":0,"name":"Output","span":{"filename":"src/re_unicode.rs","begin":[1041,4],"end":[1041,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"str"}}},"2:13728:62912":{"id":"2:13728:62912","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:15889:4463","crate::ops::IndexMut":"2:3676:4871","str::slice_unchecked":"2:13727:6152"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:2570":{"id":"0:2570","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":{"restricted":{"parent":"0:2557:1601","path":"::re_builder::set_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2585:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2571:926","0:2574:2790","0:2575:2783","0:2576:2784","0:2577:2785","0:2578:2786","0:2579:2787","0:2580:1575","0:2581:2782","0:2582:1866","0:2583:2172","0:2584:2789"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1695:3265":{"id":"0:1695:3265","crate_id":0,"name":"capacity","span":{"filename":"src/sparse.rs","begin":[43,4],"end":[45,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2446:2672":{"id":"0:2446:2672","crate_id":0,"name":"RegexOptions","span":{"filename":"src/re_builder.rs","begin":[4,0],"end":[16,1]},"visibility":"public","docs":"The set of user configurable options for compiling zero or more regexes.","links":{},"attrs":["#[allow(missing_docs)]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:2447:2748","0:2448:1866","0:2449:2172","0:2450:2789","0:2451:2783","0:2452:2784","0:2453:2785","0:2454:2786","0:2455:2787","0:2456:1575","0:2457:2782"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:3376:224-0:2446:2672","a:2:3405:4927-0:2446:2672","a:2:9533:3267-0:2446:2672","a:2:9534:3266-0:2446:2672","a:2:3364:215-0:2446:2672","b:2:3201-0:2446:2672","b:2:3197-0:2446:2672","b:2:3207-0:2446:2672","b:2:2868-0:2446:2672","b:2:4097-0:2446:2672","b:2:2865-0:2446:2672","b:2:3212-0:2446:2672","b:5:848-0:2446:2672","0:2458","0:2460","0:1064"]}},"0:2024":{"id":"0:2024","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[5,16],"end":[5,25]},"visibility":{"restricted":{"parent":"0:438:1599","path":"::error"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2917:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2025:608"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:3005":{"id":"0:3005","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[869,16],"end":[869,21]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3000:1605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3006:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1052:3413":{"id":"0:1052:3413","crate_id":0,"name":"IntoIter","span":{"filename":"src/prog.rs","begin":[244,4],"end":[244,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11385:3414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:2349:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:1603:183":{"id":"0:1603:183","crate_id":0,"name":"Output","span":{"filename":"src/re_unicode.rs","begin":[1063,4],"end":[1063,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"str"}}},"0:1140:127":{"id":"0:1140:127","crate_id":0,"name":"Err","span":{"filename":"src/re_bytes.rs","begin":[105,4],"end":[105,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:3447:4850":{"id":"2:3447:4850","crate_id":2,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3449:183","2:3450:563"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2421":{"id":"0:2421","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[340,40],"end":[340,42]},"visibility":{"restricted":{"parent":"0:1000:1632","path":"::prog"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:3373:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2396:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"1:4492:6038":{"id":"1:4492:6038","crate_id":1,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4493:60796","1:4494:60797","1:4495:60799","1:4497:6037","1:4498:60798","1:4500:1929","1:4501:7020"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"1:4410:6032","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2924:1611":{"id":"0:2924:1611","crate_id":0,"name":"Matches","span":{"filename":"src/re_trait.rs","begin":[165,0],"end":[174,1]},"visibility":"public","docs":"An iterator over all non-overlapping successive leftmost-first matches.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RegularExpression","id":"0:1367:2673","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Text","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"name":"","id":"0:1367:2673","args":null}}},"bounds":[{"outlives":"'t"}],"generic_params":[]}}]},"impls":[]}},"a:2:9534:3266-0:2438:1849":{"id":"a:2:9534:3266-0:2438:1849","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstBytes","id":"0:2438:1849","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2865-0:2038:2696":{"id":"b:2:2865-0:2038:2696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecNoSyncStr","id":"0:2038:2696","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2981:664":{"id":"0:2981:664","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[750,16],"end":[750,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3212-0:2446:2672":{"id":"b:2:3212-0:2446:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexOptions","id":"0:2446:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13730:58798":{"id":"2:13730:58798","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:13729:58797"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:775:1816":{"id":"0:775:1816","crate_id":0,"name":"prefix_at","span":{"filename":"src/input.rs","begin":[207,4],"end":[213,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefixes",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:2217:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["at",{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:628":{"id":"0:628","crate_id":0,"name":null,"span":{"filename":"src/exec.rs","begin":[1254,0],"end":[1258,1]},"visibility":{"restricted":{"parent":"0:451:1626","path":"::exec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ExecNoSyncStr","id":"0:2038:2696","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":["0:630:1864"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:848-0:2331:1650":{"id":"b:5:848-0:2331:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Program","id":"0:2331:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:850:3797","5:851:2605","5:852:5449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1543":{"id":"0:1543","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[786,0],"end":[808,1]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["rposition","try_for_each","count","try_collect","map_while","find","intersperse_with","rev","next_chunk","cmp","take","sum","size_hint","max_by_key","eq_by","unzip","peekable","fold","collect_into","scan","any","for_each","advance_by","all","min","enumerate","is_sorted","cycle","reduce","partition","flat_map","filter","nth","gt","is_sorted_by","array_chunks","position","try_reduce","lt","partition_in_place","flatten","filter_map","step_by","copied","by_ref","max","min_by","is_sorted_by_key","product","find_map","is_partitioned","fuse","partial_cmp","skip","skip_while","chain","eq","le","cloned","ne","min_by_key","__iterator_get_unchecked","zip","last","try_find","cmp_by","try_fold","ge","inspect","take_while","intersperse","map","collect","max_by","partial_cmp_by"],"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2982:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1546:2046","0:1547:928"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2923:664":{"id":"0:2923:664","crate_id":0,"name":"fmt","span":{"filename":"src/re_trait.rs","begin":[57,16],"end":[57,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1548":{"id":"0:1548","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[810,0],"end":[810,47]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:9154:3581","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2982:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13765:62914":{"id":"2:13765:62914","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"str::rsplit_terminator":"2:13768:62915","prim@char":"1:15883:4458","self::pattern":"2:13332:1596","str::split":"2:13756:1929","`DoubleEndedIterator`":"2:8717:121"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:49839:4914","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3364:215-0:3038:1615":{"id":"a:2:3364:215-0:3038:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3038:1615","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3212-0:2396:1647":{"id":"b:2:3212-0:2396:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2396:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2013:2003":{"id":"0:2013:2003","crate_id":0,"name":"Syntax","span":{"filename":"src/error.rs","begin":[8,4],"end":[8,18]},"visibility":"default","docs":"A syntax error.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:2015:1558"]}},"2:3614:131":{"id":"2:3614:131","crate_id":2,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3616:382"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3617:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:4097-0:3057:2164":{"id":"b:2:4097-0:3057:2164","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SparseSet","id":"0:3057:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:848-0:2944:1610":{"id":"b:5:848-0:2944:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["5:850:3797","5:851:2605","5:852:5449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:559:2749":{"id":"0:559:2749","crate_id":0,"name":"new_options","span":{"filename":"src/exec.rs","begin":[155,4],"end":[162,5]},"visibility":"public","docs":"Create a regex execution builder.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["opts",{"kind":"resolved_path","inner":{"name":"RegexOptions","id":"0:2446:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1303:3795":{"id":"0:1303:3795","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_bytes.rs","begin":[1128,4],"end":[1130,5]},"visibility":"default","docs":"Return a fixed unchanging replacement byte string.\n\nWhen doing replacements, if access to `Captures` is not needed (e.g.,\nthe replacement byte string does not need `$` expansion), then it can\nbe beneficial to avoid finding sub-captures.\n\nIn general, this is called once for every call to `replacen`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:853:109","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3376:224-0:2217:1646":{"id":"a:2:3376:224-0:2217:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:2217:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:759":{"id":"0:759","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[142,0],"end":[147,1]},"visibility":{"restricted":{"parent":"0:702:1629","path":"::input"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:2174:1644","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:761:926"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2203":{"id":"0:2203","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[345,16],"end":[345,20]},"visibility":{"restricted":{"parent":"0:702:1629","path":"::input"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3374:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:812":{"id":"0:812","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[406,0],"end":[411,1]},"visibility":{"restricted":{"parent":"0:702:1629","path":"::input"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2917:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"char"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:813:608"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1463:603":{"id":"0:1463:603","crate_id":0,"name":"end","span":{"filename":"src/re_unicode.rs","begin":[44,4],"end":[46,5]},"visibility":"public","docs":"Returns the ending byte offset of the match in the haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3212-0:3020:1606":{"id":"b:2:3212-0:3020:1606","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3020:1606","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1551":{"id":"0:1551","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[824,0],"end":[850,1]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["rposition","try_for_each","count","try_collect","map_while","find","intersperse_with","rev","next_chunk","cmp","take","sum","size_hint","max_by_key","eq_by","unzip","peekable","fold","collect_into","scan","any","for_each","advance_by","all","min","enumerate","is_sorted","cycle","reduce","partition","flat_map","filter","nth","gt","is_sorted_by","array_chunks","position","try_reduce","lt","partition_in_place","flatten","filter_map","step_by","copied","by_ref","max","min_by","is_sorted_by_key","product","find_map","is_partitioned","fuse","partial_cmp","skip","skip_while","chain","eq","le","cloned","ne","min_by_key","__iterator_get_unchecked","zip","last","try_find","cmp_by","try_fold","ge","inspect","take_while","intersperse","map","collect","max_by","partial_cmp_by"],"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2991:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1554:2046","0:1555:928","0:1556:3859"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:6187:57614":{"id":"5:6187:57614","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:13829:57617"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1134:664":{"id":"0:1134:664","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[82,4],"end":[84,5]},"visibility":"default","docs":"Shows the original regular expression.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1623":{"id":"0:1623","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1121,0],"end":[1131,1]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["rposition","try_for_each","count","try_collect","map_while","find","intersperse_with","rev","next_chunk","cmp","take","sum","size_hint","max_by_key","eq_by","unzip","peekable","fold","collect_into","scan","any","for_each","advance_by","all","min","enumerate","is_sorted","cycle","reduce","partition","flat_map","filter","nth","gt","is_sorted_by","array_chunks","position","try_reduce","lt","partition_in_place","flatten","filter_map","step_by","copied","by_ref","max","min_by","is_sorted_by_key","product","find_map","is_partitioned","fuse","partial_cmp","skip","skip_while","chain","eq","le","cloned","ne","min_by_key","__iterator_get_unchecked","zip","last","try_find","cmp_by","try_fold","ge","inspect","take_while","intersperse","map","collect","max_by","partial_cmp_by"],"trait":{"name":"Iterator","id":"2:8874:158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3020:1606","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1626:2046","0:1627:928"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:848-0:2914:3584":{"id":"b:5:848-0:2914:3584","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCapturesPosIter","id":"0:2914:3584","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":["5:850:3797","5:851:2605","5:852:5449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1372:2814":{"id":"0:1372:2814","crate_id":0,"name":"shortest_match_at","span":{"filename":"src/re_trait.rs","begin":[125,4],"end":[129,23]},"visibility":"default","docs":"Returns the location of the shortest match.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Text","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1367:2673","args":null}}}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:565:1575":{"id":"0:565:1575","crate_id":0,"name":"unicode","span":{"filename":"src/exec.rs","begin":[223,4],"end":[226,5]},"visibility":"public","docs":"Set the Unicode flag.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2865-0:2967:1613":{"id":"b:2:2865-0:2967:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2967:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:189:1905":{"id":"0:189:1905","crate_id":0,"name":"reverse","span":{"filename":"src/compile.rs","begin":[119,4],"end":[122,5]},"visibility":"public","docs":"When set, the machine returned is suitable for matching text in\nreverse. In particular, all concatenations are flipped.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8197:4659":{"id":"2:8197:4659","crate_id":2,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8198:62243","2:8199:62244","2:8200:2387","2:8201:62238","2:8202:62245","2:8203:62242","2:8204:62241"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"PartialOrd","id":"2:2963:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:2491":{"id":"0:2491","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":{"restricted":{"parent":"0:2462:1620","path":"::re_builder::bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2488:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2492:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2865-0:2375:1852":{"id":"b:2:2865-0:2375:1852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstSave","id":"0:2375:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3212-0:2389:1851":{"id":"b:2:3212-0:2389:1851","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstEmptyLook","id":"0:2389:1851","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2552:3575":{"id":"0:2552:3575","crate_id":0,"name":"RegexSetBuilder","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"A configurable builder for a set of regular expressions.\n\nA builder can be used to configure how the regexes are built, for example,\nby setting the default flags (which can be overridden in the expression\nitself) or setting various limits.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:2537","a:2:3376:224-0:2552:3575","a:2:3405:4927-0:2552:3575","a:2:9533:3267-0:2552:3575","a:2:9534:3266-0:2552:3575","a:2:3364:215-0:2552:3575","b:2:3201-0:2552:3575","b:2:3197-0:2552:3575","b:2:3207-0:2552:3575","b:2:2868-0:2552:3575","b:2:4097-0:2552:3575","b:2:2865-0:2552:3575","b:2:3212-0:2552:3575","0:2555"]}},"b:2:3197-0:2164:1645":{"id":"b:2:3197-0:2164:1645","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3201-0:2613:1613":{"id":"b:2:3201-0:2613:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2613:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1068:1622":{"id":"0:1068:1622","crate_id":0,"name":"re_bytes","span":{"filename":"src/re_bytes.rs","begin":[1,0],"end":[1260,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2590:1610","0:2613:1613","0:2618:1611","0:2627:1606","0:2636:1616","0:2645:1617","0:2654:1607","0:2664:1605","0:1243:1608","0:2671:1618","0:1301:1614","0:2684:1615","0:2693:1612"],"is_stripped":true}},"0:2249:1833":{"id":"0:2249:1833","crate_id":0,"name":"Bytes","span":{"filename":"src/literal/imp.rs","begin":[224,4],"end":[224,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:2251:1558"]}},"0:1645:3984":{"id":"0:1645:3984","crate_id":0,"name":"by_ref","span":{"filename":"src/re_unicode.rs","begin":[1204,4],"end":[1206,5]},"visibility":"default","docs":"Return a `Replacer` that borrows and wraps this `Replacer`.\n\nThis is useful when you want to take a generic `Replacer` (which might\nnot be cloneable) and use it without consuming it, so it can be used\nmore than once.\n\n# Example\n\n```\nuse regex::{Regex, Replacer};\n\nfn replace_all_twice<R: Replacer>(\n    re: Regex,\n    src: &str,\n    mut rep: R,\n) -> String {\n    let dst = re.replace_all(src, rep.by_ref());\n    let dst = re.replace_all(&dst, rep.by_ref());\n    dst.into_owned()\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3038:1615","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2976":{"id":"0:2976","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[750,9],"end":[750,14]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2972:1607","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["0:2978:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3212-0:2331:1650":{"id":"b:2:3212-0:2331:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Program","id":"0:2331:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9534:3266-0:543:1642":{"id":"a:2:9534:3266-0:543:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecBuilder","id":"0:543:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3012":{"id":"0:3012","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1081,9],"end":[1081,14]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3007:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:3015:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:861:1814":{"id":"0:861:1814","crate_id":0,"name":"prefixes","span":{"filename":"src/literal/imp.rs","begin":[46,4],"end":[49,5]},"visibility":"public","docs":"Returns a matcher for literal prefixes from the given set.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["lits",{"kind":"resolved_path","inner":{"name":"Literals","id":"20:2900:2667","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:864:2946":{"id":"0:864:2946","crate_id":0,"name":"complete","span":{"filename":"src/literal/imp.rs","begin":[73,4],"end":[75,5]},"visibility":"public","docs":"Returns true if all matches comprise the entire regular expression.\n\nThis does not necessarily mean that a literal match implies a match\nof the regular expression. For example, the regular expression `^a`\nis comprised of a single complete literal `a`, but the regular\nexpression demands that it only match at the beginning of a string.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4097-0:2446:2672":{"id":"b:2:4097-0:2446:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexOptions","id":"0:2446:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2583:2172":{"id":"0:2583:2172","crate_id":0,"name":"dfa_size_limit","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the approximate size of the cache used by the DFA.\n\nThis roughly corresponds to the number of bytes that the DFA will\nuse while searching.\n\nNote that this is a *per thread* limit. There is no way to set a global\nlimit. In particular, if a regex is used from multiple threads\nsimultaneously, then each thread may use up to the number of bytes\nspecified here.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2585:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:9534:3266":{"id":"2:9534:3266","crate_id":2,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:576:2812":{"id":"0:576:2812","crate_id":0,"name":"next_after_empty","span":{"filename":"src/exec.rs","begin":[391,4],"end":[393,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["i",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:2519:3495":{"id":"b:2:2868-0:2519:3495","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2519:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3364:215-0:1565:1608":{"id":"a:2:3364:215-0:1565:1608","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1608","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3201-0:2519:3495":{"id":"b:2:3201-0:2519:3495","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2519:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2486:2172":{"id":"0:2486:2172","crate_id":0,"name":"dfa_size_limit","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the approximate size of the cache used by the DFA.\n\nThis roughly corresponds to the number of bytes that the DFA will\nuse while searching.\n\nNote that this is a *per thread* limit. There is no way to set a global\nlimit. In particular, if a regex is used from multiple threads\nsimultaneously, then each thread may use up to the number of bytes\nspecified here.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2488:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2255:3163":{"id":"0:2255:3163","crate_id":0,"name":"AC","span":{"filename":"src/literal/imp.rs","begin":[226,4],"end":[226,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:2257:1558"]}},"0:2361:1558":{"id":"0:2361:1558","crate_id":0,"name":"0","span":{"filename":"src/prog.rs","begin":[285,14],"end":[285,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"InstEmptyLook","id":"0:2389:1851","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"a:2:3364:215-0:3047:1612":{"id":"a:2:3364:215-0:3047:1612","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3047:1612","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2865-0:2396:1647":{"id":"b:2:2865-0:2396:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2396:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1032:3393":{"id":"0:1032:3393","crate_id":0,"name":"leads_to_match","span":{"filename":"src/prog.rs","begin":[113,4],"end":[124,5]},"visibility":"public","docs":"Return true if and only if an execution engine at instruction `pc` will\nalways lead to a match.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pc",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2480:2785":{"id":"0:2480:2785","crate_id":0,"name":"dot_matches_new_line","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the value for the any character (`s`) flag, where in `.` matches\nanything when `s` is set and matches anything except for new line when\nit is not set (the default).\n\nN.B. \"matches anything\" means \"any byte\" when Unicode is disabled and\nmeans \"any valid UTF-8 encoding of any Unicode scalar value\" when\nUnicode is enabled.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2488:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9533:3267-0:3000:1605":{"id":"a:2:9533:3267-0:3000:1605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3000:1605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:3038:1615":{"id":"0:3038:1615","crate_id":0,"name":"ReplacerRef","span":{"filename":"src/re_unicode.rs","begin":[1213,0],"end":[1213,49]},"visibility":"public","docs":"By-reference adaptor for a `Replacer`\n\nReturned by [`Replacer::by_ref`](trait.Replacer.html#method.by_ref).","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:3376:224-0:3038:1615","a:2:3405:4927-0:3038:1615","a:2:9533:3267-0:3038:1615","a:2:9534:3266-0:3038:1615","a:2:3364:215-0:3038:1615","b:2:3201-0:3038:1615","b:2:3197-0:3038:1615","b:2:3207-0:3038:1615","b:2:2868-0:3038:1615","b:2:4097-0:3038:1615","b:2:2865-0:3038:1615","b:2:3212-0:3038:1615","0:3043","0:1647"]}},"0:2038:2696":{"id":"0:2038:2696","crate_id":0,"name":"ExecNoSyncStr","span":{"filename":"src/exec.rs","begin":[62,0],"end":[62,45]},"visibility":"public","docs":"`ExecNoSyncStr` is like `ExecNoSync`, but matches on &str instead of &[u8].","links":{"u8":"1:15900:4472"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:628","a:2:3376:224-0:2038:2696","a:2:3405:4927-0:2038:2696","a:2:9533:3267-0:2038:2696","a:2:9534:3266-0:2038:2696","a:2:3364:215-0:2038:2696","b:2:3201-0:2038:2696","b:2:3197-0:2038:2696","b:2:3207-0:2038:2696","b:2:2868-0:2038:2696","b:2:4097-0:2038:2696","b:2:2865-0:2038:2696","b:2:3212-0:2038:2696","0:2042","0:572"]}},"0:1065:59":{"id":"0:1065:59","crate_id":0,"name":"default","span":{"filename":"src/re_builder.rs","begin":[19,4],"end":[33,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:848-0:2375:1852":{"id":"b:5:848-0:2375:1852","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstSave","id":"0:2375:1852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:850:3797","5:851:2605","5:852:5449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2209:608":{"id":"0:2209:608","crate_id":0,"name":"eq","span":{"filename":"src/input.rs","begin":[345,28],"end":[345,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1505:3791":{"id":"0:1505:3791","crate_id":0,"name":"replace_all","span":{"filename":"src/re_unicode.rs","begin":[520,4],"end":[526,5]},"visibility":"public","docs":"Replaces all non-overlapping matches in `text` with the replacement\nprovided. This is the same as calling `replacen` with `limit` set to\n`0`.\n\nSee the documentation for `replace` for details on how to access\ncapturing group matches in the replacement string.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["rep",{"kind":"generic","inner":"R"}]],"output":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:853:109","args":{"angle_bracketed":{"args":[{"lifetime":"'t"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Replacer","id":"0:1641:1614","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9534:3266-0:2446:2672":{"id":"a:2:9534:3266-0:2446:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexOptions","id":"0:2446:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2511:2785":{"id":"0:2511:2785","crate_id":0,"name":"dot_matches_new_line","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the value for the any character (`s`) flag, where in `.` matches\nanything when `s` is set and matches anything except for new line when\nit is not set (the default).\n\nN.B. \"matches anything\" means \"any byte\" when Unicode is disabled and\nmeans \"any valid UTF-8 encoding of any Unicode scalar value\" when\nUnicode is enabled.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2519:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:639:2936":{"id":"0:639:2936","crate_id":0,"name":"capture_names","span":{"filename":"src/exec.rs","begin":[1305,4],"end":[1307,5]},"visibility":"public","docs":"Return a slice of capture names.\n\nAny capture that isn't named is None.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3168:74":{"id":"2:3168:74","crate_id":2,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3170:5399"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:817:1004":{"id":"0:817:1004","crate_id":0,"name":"partial_cmp","span":{"filename":"src/input.rs","begin":[422,4],"end":[424,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"char"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:37928:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1174:2815":{"id":"0:1174:2815","crate_id":0,"name":"is_match_at","span":{"filename":"src/re_bytes.rs","begin":[580,4],"end":[582,5]},"visibility":"public","docs":"Returns the same as is_match, but starts the search at the given\noffset.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2403:2001":{"id":"0:2403:2001","crate_id":0,"name":"EndText","span":{"filename":"src/prog.rs","begin":[349,4],"end":[349,11]},"visibility":"default","docs":"End of input.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"2:13738:34977":{"id":"2:13738:34977","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:50081:4893","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3197-0:2431:1649":{"id":"b:2:3197-0:2431:1649","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstRanges","id":"0:2431:1649","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8669:137":{"id":"2:8669:137","crate_id":2,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8671:688"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6645:6003":{"id":"1:6645:6003","crate_id":1,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6646:57685"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9534:3266-0:2217:1646":{"id":"a:2:9534:3266-0:2217:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:2217:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2030:664":{"id":"0:2030:664","crate_id":0,"name":"fmt","span":{"filename":"src/exec.rs","begin":[34,9],"end":[34,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1662:3795":{"id":"0:1662:3795","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1249,4],"end":[1251,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:853:109","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6573:6010":{"id":"1:6573:6010","crate_id":1,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6574:10556","1:6575:57970"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10416:6013","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:5:848-0:3057:2164":{"id":"b:5:848-0:3057:2164","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SparseSet","id":"0:3057:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:850:3797","5:851:2605","5:852:5449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:641":{"id":"0:641","crate_id":0,"name":null,"span":{"filename":"src/exec.rs","begin":[1316,0],"end":[1321,1]},"visibility":{"restricted":{"parent":"0:451:1626","path":"::exec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Exec","id":"0:2026:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:642:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2044:664":{"id":"0:2044:664","crate_id":0,"name":"fmt","span":{"filename":"src/exec.rs","begin":[61,9],"end":[61,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:173:1640":{"id":"0:173:1640","crate_id":0,"name":"Compiler","span":{"filename":"src/compile.rs","begin":[32,0],"end":[52,1]},"visibility":"public","docs":"A compiler translates a regular expression AST to a sequence of\ninstructions. The sequence of instructions represents an NFA.","links":{},"attrs":["#[allow(missing_debug_implementations)]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:183","a:2:3376:224-0:173:1640","a:2:3405:4927-0:173:1640","a:2:9533:3267-0:173:1640","a:2:9534:3266-0:173:1640","a:2:3364:215-0:173:1640","b:2:3201-0:173:1640","b:2:3197-0:173:1640","b:2:3207-0:173:1640","b:2:2868-0:173:1640","b:2:4097-0:173:1640","b:2:2865-0:173:1640","b:2:3212-0:173:1640"]}},"0:2382:1853":{"id":"0:2382:1853","crate_id":0,"name":"InstSplit","span":{"filename":"src/prog.rs","begin":[320,0],"end":[327,1]},"visibility":"public","docs":"Representation of the Split instruction.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:2383:1829","0:2384:1828"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:3376:224-0:2382:1853","a:2:3405:4927-0:2382:1853","a:2:9533:3267-0:2382:1853","a:2:9534:3266-0:2382:1853","a:2:3364:215-0:2382:1853","b:2:3201-0:2382:1853","b:2:3197-0:2382:1853","b:2:3207-0:2382:1853","b:2:2868-0:2382:1853","b:2:4097-0:2382:1853","b:2:2865-0:2382:1853","b:2:3212-0:2382:1853","b:5:848-0:2382:1853","0:2385","0:2387"]}},"1:6219:6012":{"id":"1:6219:6012","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6220:6307","1:6221:6308","1:6222:9570","1:6223:57793","1:6225:57796","1:6227:1626","1:6228:57794","1:6230:57795"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"1:10416:6013","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3672:3582":{"id":"2:3672:3582","crate_id":2,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3674:183","2:3675:757"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:13342:4889":{"id":"2:13342:4889","crate_id":2,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13344:3170","2:13345:61741","2:13346:61746","2:13347:61742","2:13348:61744","2:13349:61743","2:13350:61745"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2427":{"id":"0:2427","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[361,9],"end":[361,14]},"visibility":{"restricted":{"parent":"0:1000:1632","path":"::prog"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstChar","id":"0:2424:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2428:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1359:2046":{"id":"0:1359:2046","crate_id":0,"name":"Item","span":{"filename":"src/re_trait.rs","begin":[64,4],"end":[64,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}}}}},"0:2347":{"id":"0:2347","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[17,9],"end":[17,14]},"visibility":{"restricted":{"parent":"0:1000:1632","path":"::prog"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Program","id":"0:2331:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2348:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1367:2673":{"id":"0:1367:2673","crate_id":0,"name":"RegularExpression","span":{"filename":"src/re_trait.rs","begin":[104,0],"end":[161,1]},"visibility":"public","docs":"`RegularExpression` describes types that can implement regex searching.\n\nThis trait is my attempt at reducing code duplication and to standardize\nthe internal API. Specific duplication that is avoided are the `find`\nand `capture` iterators, which are slightly tricky.\n\nIt's not clear whether this trait is worth it, and it also isn't\nclear whether it's useful as a public trait or not. Methods like\n`next_after_empty` reak of bad design, but the rest of the methods seem\nsomewhat reasonable. One particular thing this trait would expose would be\nthe ability to start the search of a regex anywhere in a haystack, which\nisn't possible in the current public API.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:1368:2810","0:1369:2811","0:1370:3842","0:1371:2812","0:1372:2814","0:1373:2815","0:1374:2816","0:1375:2817","0:1376:3643","0:1377:3700"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:572","0:581"]}},"b:2:3207-0:3038:1615":{"id":"b:2:3207-0:3038:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3038:1615","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1377:3700":{"id":"0:1377:3700","crate_id":0,"name":"captures_iter","span":{"filename":"src/re_trait.rs","begin":[158,4],"end":[160,5]},"visibility":"default","docs":"Returns an iterator over all non-overlapping successive leftmost-first\nmatches with captures.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Text","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1367:2673","args":null}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2935:1606","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13771:3721":{"id":"2:13771:3721","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"self::pattern":"2:13332:1596","prim@char":"1:15883:4458","str::rsplitn":"2:13774:58810"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:49893:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9534:3266-0:2613:1613":{"id":"a:2:9534:3266-0:2613:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2613:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1493:3700":{"id":"0:1493:3700","crate_id":0,"name":"captures_iter","span":{"filename":"src/re_unicode.rs","begin":[345,4],"end":[350,5]},"visibility":"public","docs":"Returns an iterator over all the non-overlapping capture groups matched\nin `text`. This is operationally the same as `find_iter`, except it\nyields information about capturing group matches.\n\n# Example\n\nWe can use this to find all movie titles and their release years in\nsome text, where the movie is formatted like \"'Title' (xxxx)\":\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"'(?P<title>[^']+)'\\s+\\((?P<year>\\d{4})\\)\")\n               .unwrap();\nlet text = \"'Citizen Kane' (1941), 'The Wizard of Oz' (1939), 'M' (1931).\";\nfor caps in re.captures_iter(text) {\n    println!(\"Movie: {:?}, Released: {:?}\",\n             &caps[\"title\"], &caps[\"year\"]);\n}\n// Output:\n// Movie: Citizen Kane, Released: 1941\n// Movie: The Wizard of Oz, Released: 1939\n// Movie: M, Released: 1931\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3020:1606","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23175:6548":{"id":"2:23175:6548","crate_id":2,"name":"SimdPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:23176:6382","2:23177:1260","2:23178:1285"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3829:138":{"id":"2:3829:138","crate_id":2,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3831:691"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"Try","id":"2:3824:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13786:62918":{"id":"2:13786:62918","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"str::matches":"2:13783:1773","self::pattern":"2:13332:1596","`DoubleEndedIterator`":"2:8717:121","prim@char":"1:15883:4458"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:50011:4910","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13357:4890","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:2585:3575":{"id":"b:2:3207-0:2585:3575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2585:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2516:1866":{"id":"0:2516:1866","crate_id":0,"name":"size_limit","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the approximate size limit of the compiled regular expression.\n\nThis roughly corresponds to the number of bytes occupied by a single\ncompiled program. If the program exceeds this number, then a\ncompilation error is returned.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2519:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1539":{"id":"0:1539","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[772,0],"end":[772,50]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"name":"ExactSizeIterator","id":"2:8742:3864","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2972:1607","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3174:136":{"id":"2:3174:136","crate_id":2,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3176:685"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:448:664":{"id":"0:448:664","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[34,4],"end":[44,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1049":{"id":"0:1049","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[242,0],"end":[248,1]},"visibility":{"restricted":{"parent":"0:1000:1632","path":"::prog"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8673:152","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Program","id":"0:2331:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"items":["0:1051:2046","0:1052:3413","0:1053:773"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13723:2413":{"id":"2:13723:2413","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:11205:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11205:218","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:1139":{"id":"0:1139","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[104,0],"end":[111,1]},"visibility":{"restricted":{"parent":"0:1068:1622","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:13271:3583","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2613:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1140:127","0:1141:3606"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2426:1831":{"id":"0:2426:1831","crate_id":0,"name":"c","span":{"filename":"src/prog.rs","begin":[367,4],"end":[367,15]},"visibility":"public","docs":"The character to test.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"char"}},"0:2616":{"id":"0:2616","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[77,9],"end":[77,14]},"visibility":{"restricted":{"parent":"0:1068:1622","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2613:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2617:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2868-0:2331:1650":{"id":"b:2:2868-0:2331:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Program","id":"0:2331:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3201-0:543:1642":{"id":"b:2:3201-0:543:1642","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecBuilder","id":"0:543:1642","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2996":{"id":"0:2996","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[818,9],"end":[818,14]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2991:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2999:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1054":{"id":"0:1054","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[298,0],"end":[306,1]},"visibility":{"restricted":{"parent":"0:1000:1632","path":"::prog"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:2349:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1055:2277"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:3376:224-0:2038:2696":{"id":"a:2:3376:224-0:2038:2696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecNoSyncStr","id":"0:2038:2696","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:1654:3798":{"id":"0:1654:3798","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1225,4],"end":[1227,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1608","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:630:1864":{"id":"0:630:1864","crate_id":0,"name":"capture_name_idx","span":{"filename":"src/exec.rs","begin":[1255,4],"end":[1257,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arc","id":"5:6739:69","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"HashMap","id":"1:1261:144","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9534:3266-0:2396:1647":{"id":"a:2:9534:3266-0:2396:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2396:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2435:414":{"id":"0:2435:414","crate_id":0,"name":"clone","span":{"filename":"src/prog.rs","begin":[371,9],"end":[371,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"InstRanges","id":"0:2431:1649","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3376:224-0:2967:1613":{"id":"a:2:3376:224-0:2967:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2967:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9534:3266-0:1565:1608":{"id":"a:2:9534:3266-0:1565:1608","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1608","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:8874:158":{"id":"2:8874:158","crate_id":2,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8875:2046","2:8876:928","2:8877:5407","2:8880:3859","2:8881:500","2:8883:3711","2:8886:5408","2:8887:5409","2:8888:5410","2:8889:5411","2:8891:3010","2:8893:5412","2:8894:5413","2:8896:847","2:8899:5414","2:8906:5415","2:8908:5416","2:8911:1928","2:8912:2104","2:8913:5417","2:8915:5418","2:8917:5419","2:8920:1321","2:8921:2073","2:8922:5420","2:8926:5421","2:8929:5422","2:8930:5423","2:8931:5424","2:8933:3984","2:8934:1932","2:8936:5425","2:8939:5426","2:8941:5427","2:8951:5428","2:8966:5429","2:8968:5430","2:8972:5431","2:8981:5432","2:8984:5433","2:8986:5434","2:8989:282","2:8996:300","2:9003:2536","2:9010:5435","2:9019:5436","2:9029:1021","2:9036:5437","2:9043:2064","2:9044:2062","2:9045:4810","2:9057:4809","2:9064:4808","2:9076:4807","2:9083:2024","2:9084:5438","2:9089:3039","2:9092:2577","2:9095:5439","2:9096:5440","2:9098:3481","2:9100:5441","2:9102:421","2:9105:5442","2:9108:1004","2:9111:5443","2:9114:608","2:9117:5444","2:9120:913","2:9122:832","2:9124:797","2:9126:716","2:9128:700","2:9130:5445","2:9131:5446","2:9139:5447"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:49":{"id":"0:49","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[634,4],"end":[634,10]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::re_unicode::SplitN","name":"SplitN","id":"0:2991:1617","glob":false}},"0:2442":{"id":"0:2442","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[418,9],"end":[418,14]},"visibility":{"restricted":{"parent":"0:1000:1632","path":"::prog"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstBytes","id":"0:2438:1849","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2443:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:822:2916":{"id":"0:822:2916","crate_id":0,"name":"imp","span":{"filename":"src/literal/imp.rs","begin":[1,0],"end":[402,1]},"visibility":{"restricted":{"parent":"0:820:819","path":"::literal"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"perf-literal\")]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2217:1646","0:2245:3187","0:2273:3155"],"is_stripped":true}},"2:24072:6383":{"id":"2:24072:6383","crate_id":2,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:24073:6382"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sealed","id":"2:24068:6013","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Copy","id":"2:3374:107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2865-0:2778:2926":{"id":"b:2:2865-0:2778:2926","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2778:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2376:1827":{"id":"0:2376:1827","crate_id":0,"name":"goto","span":{"filename":"src/prog.rs","begin":[312,4],"end":[312,21]},"visibility":"public","docs":"The next location to execute in the program.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"0:3046:664":{"id":"0:3046:664","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[1212,9],"end":[1212,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:737:1815":{"id":"0:737:1815","crate_id":0,"name":"is_empty","span":{"filename":"src/input.rs","begin":[51,4],"end":[53,5]},"visibility":"public","docs":"Returns whether the UTF-8 width of the character at this position\nis zero.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:2349:1648":{"id":"b:2:2868-0:2349:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:2349:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9533:3267-0:2982:1616":{"id":"a:2:9533:3267-0:2982:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2982:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2375:1852":{"id":"0:2375:1852","crate_id":0,"name":"InstSave","span":{"filename":"src/prog.rs","begin":[310,0],"end":[316,1]},"visibility":"public","docs":"Representation of the Save instruction.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:2376:1827","0:2377:1792"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:3376:224-0:2375:1852","a:2:3405:4927-0:2375:1852","a:2:9533:3267-0:2375:1852","a:2:9534:3266-0:2375:1852","a:2:3364:215-0:2375:1852","b:2:3201-0:2375:1852","b:2:3197-0:2375:1852","b:2:3207-0:2375:1852","b:2:2868-0:2375:1852","b:2:4097-0:2375:1852","b:2:2865-0:2375:1852","b:2:3212-0:2375:1852","b:5:848-0:2375:1852","0:2378","0:2380"]}},"0:447":{"id":"0:447","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[33,0],"end":[45,1]},"visibility":{"restricted":{"parent":"0:438:1599","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10570:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:448:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9533:3267-0:3057:2164":{"id":"a:2:9533:3267-0:3057:2164","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SparseSet","id":"0:3057:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3364:215-0:2991:1617":{"id":"a:2:3364:215-0:2991:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2991:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3207-0:2217:1646":{"id":"b:2:3207-0:2217:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:2217:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:14540:5468":{"id":"2:14540:5468","crate_id":2,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14541:60331","2:14542:60332","2:14543:60333","2:14544:60334","2:14545:60335","2:14546:60336","2:14547:3984"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:52":{"id":"0:52","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[634,12],"end":[634,29]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::re_unicode::SubCaptureMatches","name":"SubCaptureMatches","id":"0:3007:1618","glob":false}},"0:2982:1616":{"id":"0:2982:1616","crate_id":0,"name":"Split","span":{"filename":"src/re_unicode.rs","begin":[781,0],"end":[784,1]},"visibility":"public","docs":"Yields all substrings delimited by a regular expression match.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the string being split.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:3376:224-0:2982:1616","a:2:3405:4927-0:2982:1616","a:2:9533:3267-0:2982:1616","a:2:9534:3266-0:2982:1616","a:2:3364:215-0:2982:1616","b:2:3201-0:2982:1616","b:2:3197-0:2982:1616","b:2:3207-0:2982:1616","b:2:2868-0:2982:1616","b:2:4097-0:2982:1616","b:2:8677-0:2982:1616","b:2:2865-0:2982:1616","b:2:3212-0:2982:1616","0:2987","0:1543","0:1548"]}},"0:2346:2172":{"id":"0:2346:2172","crate_id":0,"name":"dfa_size_limit","span":{"filename":"src/prog.rs","begin":[74,4],"end":[74,29]},"visibility":"public","docs":"A limit on the size of the cache that the DFA is allowed to use while\nmatching.\n\nThe cache limit specifies approximately how much space we're willing to\ngive to the state cache. Once the state cache exceeds the size, it is\nwiped and all states must be re-computed.\n\nNote that this value does not impact correctness. It can be set to 0\nand the DFA will run just fine. (It will only ever store exactly one\nstate in the cache, and will likely run very slowly, but it will work.)\n\nAlso note that this limit is *per thread of execution*. That is,\nif the same regex is used to search text across multiple threads\nsimultaneously, then the DFA cache is not shared. Instead, copies are\nmade.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"0:2455:2787":{"id":"0:2455:2787","crate_id":0,"name":"ignore_whitespace","span":{"filename":"src/re_builder.rs","begin":[13,4],"end":[13,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"0:1707:3413":{"id":"0:1707:3413","crate_id":0,"name":"IntoIter","span":{"filename":"src/sparse.rs","begin":[80,4],"end":[80,43]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:11385:3414","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}},"2:3535:4870":{"id":"2:3535:4870","crate_id":2,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3537:1248"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3212-0:3000:1605":{"id":"b:2:3212-0:3000:1605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3000:1605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3201-0:173:1640":{"id":"b:2:3201-0:173:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Compiler","id":"0:173:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2213":{"id":"0:2213","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[345,43],"end":[345,53]},"visibility":{"restricted":{"parent":"0:702:1629","path":"::input"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["lt","le","gt","ge"],"trait":{"name":"PartialOrd","id":"2:2963:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2214:1004"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:873:784":{"id":"0:873:784","crate_id":0,"name":"iter","span":{"filename":"src/literal/imp.rs","begin":[121,4],"end":[129,5]},"visibility":"public","docs":"Returns an iterator over all literals to be matched.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LiteralIter","id":"0:2245:3187","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9533:3267-0:1565:1608":{"id":"a:2:9533:3267-0:1565:1608","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1608","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:810:685":{"id":"0:810:685","crate_id":0,"name":"from","span":{"filename":"src/input.rs","begin":[401,4],"end":[403,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["c",{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"char"}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6183:63568":{"id":"5:6183:63568","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:8472:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1611:2046":{"id":"0:1611:2046","crate_id":0,"name":"Item","span":{"filename":"src/re_unicode.rs","begin":[1088,4],"end":[1088,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:2571:926":{"id":"0:2571:926","crate_id":0,"name":"new","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Create a new regular expression builder with the given pattern.\n\nIf the pattern is invalid, then an error will be returned when\n`build` is called.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["patterns",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2585:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:3165:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8673:152","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"S"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2582:1866":{"id":"0:2582:1866","crate_id":0,"name":"size_limit","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the approximate size limit of the compiled regular expression.\n\nThis roughly corresponds to the number of bytes occupied by a single\ncompiled program. If the program exceeds this number, then a\ncompilation error is returned.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2585:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2475":{"id":"0:2475","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":{"restricted":{"parent":"0:2462:1620","path":"::re_builder::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2488:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2476:926","0:2477:2790","0:2478:2783","0:2479:2784","0:2480:2785","0:2481:2786","0:2482:2787","0:2483:1575","0:2484:2782","0:2485:1866","0:2486:2172","0:2487:2789"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2029":{"id":"0:2029","crate_id":0,"name":null,"span":{"filename":"src/exec.rs","begin":[34,9],"end":[34,14]},"visibility":{"restricted":{"parent":"0:451:1626","path":"::exec"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Exec","id":"0:2026:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2030:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2868-0:2944:1610":{"id":"b:2:2868-0:2944:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2202:414":{"id":"0:2202:414","crate_id":0,"name":"clone","span":{"filename":"src/input.rs","begin":[345,9],"end":[345,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3212-0:2944:1610":{"id":"b:2:3212-0:2944:1610","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3376:224-0:2424:1850":{"id":"a:2:3376:224-0:2424:1850","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstChar","id":"0:2424:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13708:1815":{"id":"2:13708:1815","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3364:215-0:2982:1616":{"id":"a:2:3364:215-0:2982:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:3364:215","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2982:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1135":{"id":"0:1135","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[87,0],"end":[92,1]},"visibility":{"restricted":{"parent":"0:1068:1622","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2613:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1136:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:9533:3267-0:3020:1606":{"id":"a:2:9533:3267-0:3020:1606","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:3020:1606","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13706":{"id":"2:13706","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:12785:1353","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:13707:798","2:13708:1815","2:13709:62908","2:13710:62909","2:13712:62910","2:13715:2813","2:13716:62911","2:13717:310","2:13718:11352","2:13719:1826","2:13721:11340","2:13723:2413","2:13725:58778","2:13727:6152","2:13728:62912","2:13729:58797","2:13730:58798","2:13731:3215","2:13732:6440","2:13733:1620","2:13734:34992","2:13735:34982","2:13736:7020","2:13737:62913","2:13738:34977","2:13739:2433","2:13742:58812","2:13745:58813","2:13748:2536","2:13752:5404","2:13756:1929","2:13759:34859","2:13762:58807","2:13765:62914","2:13768:62915","2:13771:3721","2:13774:58810","2:13777:62916","2:13780:62917","2:13783:1773","2:13786:62918","2:13789:62919","2:13792:62920","2:13795:62921","2:13797:62922","2:13799:62923","2:13801:62924","2:13802:62925","2:13803:62926","2:13806:62927","2:13809:17735","2:13812:58814","2:13815:62928","2:13818:62929","2:13821:62930","2:13824:2778","2:13826:2039","2:13827:57615","2:13828:57616","2:13829:57617","2:13830:62931","2:13832:2603","2:13833:4784"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2865-0:3047:1612":{"id":"b:2:2865-0:3047:1612","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3047:1612","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1305:3984":{"id":"0:1305:3984","crate_id":0,"name":"by_ref","span":{"filename":"src/re_bytes.rs","begin":[1153,4],"end":[1155,5]},"visibility":"default","docs":"Return a `Replacer` that borrows and wraps this `Replacer`.\n\nThis is useful when you want to take a generic `Replacer` (which might\nnot be cloneable) and use it without consuming it, so it can be used\nmore than once.\n\n# Example\n\n```\nuse regex::bytes::{Regex, Replacer};\n\nfn replace_all_twice<R: Replacer>(\n    re: Regex,\n    src: &[u8],\n    mut rep: R,\n) -> Vec<u8> {\n    let dst = re.replace_all(src, rep.by_ref());\n    let dst = re.replace_all(&dst, rep.by_ref());\n    dst.into_owned()\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2684:1615","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2865-0:3007:1618":{"id":"b:2:2865-0:3007:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3007:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3201-0:2217:1646":{"id":"b:2:3201-0:2217:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:2217:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:739:1818":{"id":"0:739:1818","crate_id":0,"name":"next_pos","span":{"filename":"src/input.rs","begin":[61,4],"end":[63,5]},"visibility":"public","docs":"Returns the byte offset of the next position in the input.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3207-0:2198:1643":{"id":"b:2:3207-0:2198:1643","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2738:798":{"id":"0:2738:798","crate_id":0,"name":"len","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Returns the total number of regular expressions in this set.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:187:1895":{"id":"0:187:1895","crate_id":0,"name":"only_utf8","span":{"filename":"src/compile.rs","begin":[100,4],"end":[103,5]},"visibility":"public","docs":"When disabled, the program compiled may match arbitrary bytes.\n\nWhen enabled (the default), all compiled programs exclusively match\nvalid UTF-8 bytes.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2370:1558":{"id":"0:2370:1558","crate_id":0,"name":"0","span":{"filename":"src/prog.rs","begin":[295,10],"end":[295,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"InstBytes","id":"0:2438:1849","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:2703:1575":{"id":"0:2703:1575","crate_id":0,"name":"unicode","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2778:2926","0:2783:4108","0:2790:4142","0:2795:4141"],"is_stripped":false}},"0:184:926":{"id":"0:184:926","crate_id":0,"name":"new","span":{"filename":"src/compile.rs","begin":[58,4],"end":[70,5]},"visibility":"public","docs":"Create a new regular expression compiler.\n\nVarious options can be set before calling `compile` on an expression.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1525":{"id":"0:1525","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[712,0],"end":[742,1]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":"Auxiliary methods.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2967:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1526:312","0:1527:2936","0:1528:3839","0:1529:3683"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:850:3797":{"id":"5:850:3797","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"b:2:4097-0:2991:1617":{"id":"b:2:4097-0:2991:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2991:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13732:6440":{"id":"2:13732:6440","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:15883:4458"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49765:4898","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1172:3811":{"id":"0:1172:3811","crate_id":0,"name":"shortest_match","span":{"filename":"src/re_bytes.rs","begin":[556,4],"end":[558,5]},"visibility":"public","docs":"Returns the end location of a match in the text given.\n\nThis method may have the same performance characteristics as\n`is_match`, except it provides an end location for a match. In\nparticular, the location returned *may be shorter* than the proper end\nof the leftmost-first match.\n\n# Example\n\nTypically, `a+` would match the entire first sequence of `a` in some\ntext, but `shortest_match` can give up as soon as it sees the first\n`a`.\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet text = b\"aaaaa\";\nlet pos = Regex::new(r\"a+\").unwrap().shortest_match(text);\nassert_eq!(pos, Some(1));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3197-0:2488:3495":{"id":"b:2:3197-0:2488:3495","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2488:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1732":{"id":"0:1732","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[762,32],"end":[762,43]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::exec::ExecBuilder","name":"ExecBuilder","id":"0:543:1642","glob":false}},"0:2401:2000":{"id":"0:2401:2000","crate_id":0,"name":"StartText","span":{"filename":"src/prog.rs","begin":[347,4],"end":[347,13]},"visibility":"default","docs":"Start of input.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"plain","variant_inner":null}},"a:2:9533:3267-0:2396:1647":{"id":"a:2:9533:3267-0:2396:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2396:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:761:926":{"id":"0:761:926","crate_id":0,"name":"new","span":{"filename":"src/input.rs","begin":[144,4],"end":[146,5]},"visibility":"public","docs":"Return a new character input reader for the given string.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:2174:1644","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9533:3267-0:2446:2672":{"id":"a:2:9533:3267-0:2446:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexOptions","id":"0:2446:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1150:1919":{"id":"0:1150:1919","crate_id":0,"name":"captures","span":{"filename":"src/re_bytes.rs","begin":[255,4],"end":[262,5]},"visibility":"public","docs":"Returns the capture groups corresponding to the leftmost-first\nmatch in `text`. Capture group `0` always corresponds to the entire\nmatch. If no match is found, then `None` is returned.\n\nYou should only use `captures` if you need access to the location of\ncapturing group matches. Otherwise, `find` is faster for discovering\nthe location of the overall match.\n\n# Examples\n\nSay you have some text with movie names and their release years,\nlike \"'Citizen Kane' (1941)\". It'd be nice if we could search for text\nlooking like that, while also extracting the movie name and its release\nyear separately.\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(r\"'([^']+)'\\s+\\((\\d{4})\\)\").unwrap();\nlet text = b\"Not my favorite movie: 'Citizen Kane' (1941).\";\nlet caps = re.captures(text).unwrap();\nassert_eq!(caps.get(1).unwrap().as_bytes(), &b\"Citizen Kane\"[..]);\nassert_eq!(caps.get(2).unwrap().as_bytes(), &b\"1941\"[..]);\nassert_eq!(caps.get(0).unwrap().as_bytes(), &b\"'Citizen Kane' (1941)\"[..]);\n// You can also access the groups by index using the Index notation.\n// Note that this will panic on an invalid index.\nassert_eq!(&caps[1], b\"Citizen Kane\");\nassert_eq!(&caps[2], b\"1941\");\nassert_eq!(&caps[0], b\"'Citizen Kane' (1941)\");\n# }\n```\n\nNote that the full match is at capture group `0`. Each subsequent\ncapture group is indexed by the order of its opening `(`.\n\nWe can make this example a bit clearer by using *named* capture groups:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(r\"'(?P<title>[^']+)'\\s+\\((?P<year>\\d{4})\\)\")\n               .unwrap();\nlet text = b\"Not my favorite movie: 'Citizen Kane' (1941).\";\nlet caps = re.captures(text).unwrap();\nassert_eq!(caps.name(\"title\").unwrap().as_bytes(), b\"Citizen Kane\");\nassert_eq!(caps.name(\"year\").unwrap().as_bytes(), b\"1941\");\nassert_eq!(caps.get(0).unwrap().as_bytes(), &b\"'Citizen Kane' (1941)\"[..]);\n// You can also access the groups by name using the Index notation.\n// Note that this will panic on an invalid group name.\nassert_eq!(&caps[\"title\"], b\"Citizen Kane\");\nassert_eq!(&caps[\"year\"], b\"1941\");\nassert_eq!(&caps[0], b\"'Citizen Kane' (1941)\");\n\n# }\n```\n\nHere we name the capture groups, which we can access with the `name`\nmethod or the `Index` notation with a `&str`. Note that the named\ncapture groups are still accessible with `get` or the `Index` notation\nwith a `usize`.\n\nThe `0`th capture group is always unnamed, so it must always be\naccessed with `get(0)` or `[0]`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1243:1608","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:183":{"id":"0:183","crate_id":0,"name":null,"span":{"filename":"src/compile.rs","begin":[54,0],"end":[845,1]},"visibility":{"restricted":{"parent":"0:101:1624","path":"::compile"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Compiler","id":"0:173:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:184:926","0:185:1866","0:186:1620","0:187:1895","0:188:1625","0:189:1905","0:190:1624"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2868-0:2991:1617":{"id":"b:2:2868-0:2991:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2991:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13832:2603":{"id":"2:13832:2603","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:5446:2603"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:50097:4722","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1512:3811":{"id":"0:1512:3811","crate_id":0,"name":"shortest_match","span":{"filename":"src/re_unicode.rs","begin":[614,4],"end":[616,5]},"visibility":"public","docs":"Returns the end location of a match in the text given.\n\nThis method may have the same performance characteristics as\n`is_match`, except it provides an end location for a match. In\nparticular, the location returned *may be shorter* than the proper end\nof the leftmost-first match.\n\n# Example\n\nTypically, `a+` would match the entire first sequence of `a` in some\ntext, but `shortest_match` can give up as soon as it sees the first\n`a`.\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet text = \"aaaaa\";\nlet pos = Regex::new(r\"a+\").unwrap().shortest_match(text);\nassert_eq!(pos, Some(1));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:6500-0:2967:1613":{"id":"b:5:6500-0:2967:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10570:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:6498:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2967:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:6502:1410"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3405:4927":{"id":"2:3405:4927","crate_id":2,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13733:1620":{"id":"2:13733:1620","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:49775:1833","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:848-0:2026:1641":{"id":"b:5:848-0:2026:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Exec","id":"0:2026:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:850:3797","5:851:2605","5:852:5449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3207-0:2396:1647":{"id":"b:2:3207-0:2396:1647","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2396:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:561:2705":{"id":"0:561:2705","crate_id":0,"name":"nfa","span":{"filename":"src/exec.rs","begin":[181,4],"end":[184,5]},"visibility":"public","docs":"Sets the matching engine to use the NFA algorithm no matter what\noptimizations are possible.\n\nThis overrides whatever was previously set via the `automatic` or\n`bounded_backtracking` methods.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2343:1916":{"id":"0:2343:1916","crate_id":0,"name":"is_anchored_end","span":{"filename":"src/prog.rs","begin":[54,4],"end":[54,29]},"visibility":"public","docs":"Whether the regex must match at the end of the input.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"0:1055:2277":{"id":"0:1055:2277","crate_id":0,"name":"is_match","span":{"filename":"src/prog.rs","begin":[300,4],"end":[305,5]},"visibility":"public","docs":"Returns true if and only if this is a match instruction.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:848-0:2349:1648":{"id":"b:5:848-0:2349:1648","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:2349:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:850:3797","5:851:2605","5:852:5449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3212-0:2038:2696":{"id":"b:2:3212-0:2038:2696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecNoSyncStr","id":"0:2038:2696","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3405:4927-0:2012:128":{"id":"a:2:3405:4927-0:2012:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1475":{"id":"0:1475","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[145,0],"end":[150,1]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10563:110","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2967:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1476:664"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1371:2812":{"id":"0:1371:2812","crate_id":0,"name":"next_after_empty","span":{"filename":"src/re_trait.rs","begin":[122,4],"end":[122,69]},"visibility":"default","docs":"Returns the position of the next character after `i`.\n\nFor example, a haystack with type `&[u8]` probably returns `i+1`,\nwhereas a haystack with type `&str` probably returns `i` plus the\nlength of the next UTF-8 sequence.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Text","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1367:2673","args":null}}}}}],["i",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:9534:3266-0:2967:1613":{"id":"a:2:9534:3266-0:2967:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2967:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2519:3495":{"id":"0:2519:3495","crate_id":0,"name":"RegexBuilder","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"A configurable builder for a regular expression.\n\nA builder can be used to configure how the regex is built, for example, by\nsetting the default flags (which can be overridden in the expression\nitself) or setting various limits.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:2506","a:2:3376:224-0:2519:3495","a:2:3405:4927-0:2519:3495","a:2:9533:3267-0:2519:3495","a:2:9534:3266-0:2519:3495","a:2:3364:215-0:2519:3495","b:2:3201-0:2519:3495","b:2:3197-0:2519:3495","b:2:3207-0:2519:3495","b:2:2868-0:2519:3495","b:2:4097-0:2519:3495","b:2:2865-0:2519:3495","b:2:3212-0:2519:3495","0:2522"]}},"2:3530:4869":{"id":"2:3530:4869","crate_id":2,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3532:1245"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3376:224-0:2438:1849":{"id":"a:2:3376:224-0:2438:1849","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstBytes","id":"0:2438:1849","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3405:4927-0:2038:2696":{"id":"a:2:3405:4927-0:2038:2696","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecNoSyncStr","id":"0:2038:2696","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:10572:5368":{"id":"2:10572:5368","crate_id":2,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10573:664"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9533:3267-0:3007:1618":{"id":"a:2:9533:3267-0:3007:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:3007:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2962":{"id":"0:2962","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[28,33],"end":[28,42]},"visibility":{"restricted":{"parent":"0:1404:1603","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:3372:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2414:414":{"id":"0:2414:414","crate_id":0,"name":"clone","span":{"filename":"src/prog.rs","begin":[340,9],"end":[340,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2396:1647","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2339:1891":{"id":"0:2339:1891","crate_id":0,"name":"is_bytes","span":{"filename":"src/prog.rs","begin":[43,4],"end":[43,22]},"visibility":"public","docs":"When true, this program uses byte range instructions instead of Unicode\nrange instructions.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"b:2:3212-0:173:1640":{"id":"b:2:3212-0:173:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Compiler","id":"0:173:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:578:2815":{"id":"0:578:2815","crate_id":0,"name":"is_match_at","span":{"filename":"src/exec.rs","begin":[401,4],"end":[403,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2627:1606":{"id":"0:2627:1606","crate_id":0,"name":"CaptureMatches","span":{"filename":"src/re_bytes.rs","begin":[716,0],"end":[718,2]},"visibility":"public","docs":"An iterator that yields all non-overlapping capture groups matching a\nparticular regular expression.\n\nThe iterator stops when no more matches can be found.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the matched byte string.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":[]}},"5:6168:3785":{"id":"5:6168:3785","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8472:220"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2352:1558":{"id":"0:2352:1558","crate_id":0,"name":"0","span":{"filename":"src/prog.rs","begin":[276,10],"end":[276,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"0:3060":{"id":"0:3060","crate_id":0,"name":null,"span":{"filename":"src/sparse.rs","begin":[15,9],"end":[15,14]},"visibility":{"restricted":{"parent":"0:1681:1634","path":"::sparse"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SparseSet","id":"0:3057:2164","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:3061:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2897:4141":{"id":"0:2897:4141","crate_id":0,"name":"SetMatchesIter","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"A borrowed iterator over the set of matches from a regex set.\n\nThe lifetime `'a` refers to the lifetime of a `SetMatches` value.\n\nThis will always produces matches in ascending order of index, where the\nindex corresponds to the index of the regex that matched with respect to\nits position when initially building the set.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":[]}},"0:2836:2277":{"id":"0:2836:2277","crate_id":0,"name":"is_match","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Returns true if and only if one of the regexes in this set matches\nthe text given.\n\nThis method should be preferred if you only need to test whether any\nof the regexes in the set should match, but don't care about *which*\nregexes matched. This is because the underlying matching engine will\nquit immediately after seeing the first match instead of continuing to\nfind all matches.\n\nNote that as with searches using `Regex`, the expression is unanchored\nby default. That is, if the regex does not start with `^` or `\\A`, or\nend with `$` or `\\z`, then it is permitted to match anywhere in the\ntext.\n\n# Example\n\nTests whether a set matches some text:\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[r\"\\w+\", r\"\\d+\"]).unwrap();\nassert!(set.is_match(\"foo\"));\nassert!(!set.is_match(\"☃\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3212-0:3029:1611":{"id":"b:2:3212-0:3029:1611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3029:1611","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:8673:152":{"id":"2:8673:152","crate_id":2,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8674:2046","2:8675:3413","2:8676:773"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:4097-0:2382:1853":{"id":"b:2:4097-0:2382:1853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstSplit","id":"0:2382:1853","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:3405:4927-0:2519:3495":{"id":"a:2:3405:4927-0:2519:3495","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:3405:4927","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2519:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3207-0:2331:1650":{"id":"b:2:3207-0:2331:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Program","id":"0:2331:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3201-0:2438:1849":{"id":"b:2:3201-0:2438:1849","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstBytes","id":"0:2438:1849","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3201-0:2382:1853":{"id":"b:2:3201-0:2382:1853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstSplit","id":"0:2382:1853","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1514:2815":{"id":"0:1514:2815","crate_id":0,"name":"is_match_at","span":{"filename":"src/re_unicode.rs","begin":[638,4],"end":[640,5]},"visibility":"public","docs":"Returns the same as is_match, but starts the search at the given\noffset.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3376:224-0:2972:1607":{"id":"a:2:3376:224-0:2972:1607","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2972:1607","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2885:4108":{"id":"0:2885:4108","crate_id":0,"name":"SetMatches","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"A set of matches returned by a regex set.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":[]}},"0:2377:1792":{"id":"0:2377:1792","crate_id":0,"name":"slot","span":{"filename":"src/prog.rs","begin":[315,4],"end":[315,19]},"visibility":"public","docs":"The capture slot (there are two slots for every capture in a regex,\nincluding the zeroth capture for the entire match).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"0:2483:1575":{"id":"0:2483:1575","crate_id":0,"name":"unicode","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the value for the Unicode (`u`) flag.\n\nEnabled by default. When disabled, character classes such as `\\w` only\nmatch ASCII word characters instead of all Unicode word characters.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2488:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2865-0:2026:1641":{"id":"b:2:2865-0:2026:1641","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Exec","id":"0:2026:1641","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2371":{"id":"0:2371","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[267,9],"end":[267,14]},"visibility":{"restricted":{"parent":"0:1000:1632","path":"::prog"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:2349:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2372:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:4097-0:3047:1612":{"id":"b:2:4097-0:3047:1612","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3047:1612","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3053:414":{"id":"0:3053:414","crate_id":0,"name":"clone","span":{"filename":"src/re_unicode.rs","begin":[1300,9],"end":[1300,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:3047:1612","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:4097-0:3038:1615":{"id":"b:2:4097-0:3038:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3038:1615","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:764:226":{"id":"0:764:226","crate_id":0,"name":"Target","span":{"filename":"src/input.rs","begin":[150,4],"end":[150,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"0:2372:414":{"id":"0:2372:414","crate_id":0,"name":"clone","span":{"filename":"src/prog.rs","begin":[267,9],"end":[267,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:2349:1648","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13824:2778":{"id":"2:13824:2778","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:13272:127","`FromStr`":"2:13271:3583"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47933:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:13271:3583","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:13271:3583","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10576:5370":{"id":"2:10576:5370","crate_id":2,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10577:664"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:1474:664":{"id":"0:1474:664","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[140,4],"end":[142,5]},"visibility":"default","docs":"Shows the original regular expression.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2334:1919":{"id":"0:2334:1919","crate_id":0,"name":"captures","span":{"filename":"src/prog.rs","begin":[27,4],"end":[27,37]},"visibility":"public","docs":"The ordered sequence of all capture groups extracted from the AST.\nUnnamed groups are `None`.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7891:239","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}},"2:3870:4738":{"id":"2:3870:4738","crate_id":2,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"a:2:9534:3266-0:2914:3584":{"id":"a:2:9534:3266-0:2914:3584","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCapturesPosIter","id":"0:2914:3584","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2396:1647":{"id":"0:2396:1647","crate_id":0,"name":"EmptyLook","span":{"filename":"src/prog.rs","begin":[341,0],"end":[358,1]},"visibility":"public","docs":"The set of zero-width match instructions.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:2397:1995","0:2399:1999","0:2401:2000","0:2403:2001","0:2405:2002","0:2407:2009","0:2409:2011","0:2411:2013"],"impls":["a:2:3376:224-0:2396:1647","a:2:3405:4927-0:2396:1647","a:2:9533:3267-0:2396:1647","a:2:9534:3266-0:2396:1647","a:2:3364:215-0:2396:1647","b:2:3201-0:2396:1647","b:2:3197-0:2396:1647","b:2:3207-0:2396:1647","b:2:2868-0:2396:1647","b:2:4097-0:2396:1647","b:2:2865-0:2396:1647","b:2:3212-0:2396:1647","b:5:848-0:2396:1647","0:2413","0:2415","0:2416","0:2418","0:2419","0:2421","0:2422"]}},"0:2431:1649":{"id":"0:2431:1649","crate_id":0,"name":"InstRanges","span":{"filename":"src/prog.rs","begin":[372,0],"end":[378,1]},"visibility":"public","docs":"Representation of the Ranges instruction.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:2432:1827","0:2433:1988"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:1056","a:2:3376:224-0:2431:1649","a:2:3405:4927-0:2431:1649","a:2:9533:3267-0:2431:1649","a:2:9534:3266-0:2431:1649","a:2:3364:215-0:2431:1649","b:2:3201-0:2431:1649","b:2:3197-0:2431:1649","b:2:3207-0:2431:1649","b:2:2868-0:2431:1649","b:2:4097-0:2431:1649","b:2:2865-0:2431:1649","b:2:3212-0:2431:1649","b:5:848-0:2431:1649","0:2434","0:2436"]}},"0:1533:2046":{"id":"0:1533:2046","crate_id":0,"name":"Item","span":{"filename":"src/re_unicode.rs","begin":[754,4],"end":[754,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}}},"b:2:4097-0:2880:2926":{"id":"b:2:4097-0:2880:2926","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:4095:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2880:2926","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:4099:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:10846:5551":{"id":"2:10846:5551","crate_id":2,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10847:147","2:10848:36093","2:10849:56377"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9533:3267-0:2389:1851":{"id":"a:2:9533:3267-0:2389:1851","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:9533:3267","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstEmptyLook","id":"0:2389:1851","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:9534:3266-0:2552:3575":{"id":"a:2:9534:3266-0:2552:3575","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2552:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2865-0:2174:1644":{"id":"b:2:2865-0:2174:1644","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:2174:1644","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3207-0:3029:1611":{"id":"b:2:3207-0:3029:1611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3177:233","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3029:1611","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3210:128","2:3211:1431"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3197-0:2217:1646":{"id":"b:2:3197-0:2217:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:2217:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3200:2138"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2575:2783":{"id":"0:2575:2783","crate_id":0,"name":"case_insensitive","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the value for the case insensitive (`i`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2585:3575","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2447:2748":{"id":"0:2447:2748","crate_id":0,"name":"pats","span":{"filename":"src/re_builder.rs","begin":[5,4],"end":[5,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:7891:239","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"0:55:1620":{"id":"0:55:1620","crate_id":0,"name":"bytes","span":{"filename":"src/lib.rs","begin":[725,0],"end":[725,13]},"visibility":"public","docs":"Match regular expressions on arbitrary bytes.\n\nThis module provides a nearly identical API to the one found in the\ntop-level of this crate. There are two important differences:\n\n1. Matching is done on `&[u8]` instead of `&str`. Additionally, `Vec<u8>`\nis used where `String` would have been used.\n2. Unicode support can be disabled even when disabling it would result in\nmatching invalid UTF-8 bytes.\n\n# Example: match null terminated string\n\nThis shows how to find all null-terminated strings in a slice of bytes:\n\n```rust\n# use regex::bytes::Regex;\nlet re = Regex::new(r\"(?-u)(?P<cstr>[^\\x00]+)\\x00\").unwrap();\nlet text = b\"foo\\x00bar\\x00baz\\x00\";\n\n// Extract all of the strings without the null terminator from each match.\n// The unwrap is OK here since a match requires the `cstr` capture to match.\nlet cstrs: Vec<&[u8]> =\n    re.captures_iter(text)\n      .map(|c| c.name(\"cstr\").unwrap().as_bytes())\n      .collect();\nassert_eq!(vec![&b\"foo\"[..], &b\"bar\"[..], &b\"baz\"[..]], cstrs);\n```\n\n# Example: selectively enable Unicode support\n\nThis shows how to match an arbitrary byte pattern followed by a UTF-8 encoded\nstring (e.g., to extract a title from a Matroska file):\n\n```rust\n# use std::str;\n# use regex::bytes::Regex;\nlet re = Regex::new(\n    r\"(?-u)\\x7b\\xa9(?:[\\x80-\\xfe]|[\\x40-\\xff].)(?u:(.*))\"\n).unwrap();\nlet text = b\"\\x12\\xd0\\x3b\\x5f\\x7b\\xa9\\x85\\xe2\\x98\\x83\\x80\\x98\\x54\\x76\\x68\\x65\";\nlet caps = re.captures(text).unwrap();\n\n// Notice that despite the `.*` at the end, it will only match valid UTF-8\n// because Unicode mode was enabled with the `u` flag. Without the `u` flag,\n// the `.*` would match the rest of the bytes.\nlet mat = caps.get(1).unwrap();\nassert_eq!((7, 10), (mat.start(), mat.end()));\n\n// If there was a match, Unicode mode guarantees that `title` is valid UTF-8.\nlet title = str::from_utf8(&caps[1]).unwrap();\nassert_eq!(\"☃\", title);\n```\n\nIn general, if the Unicode flag is enabled in a capture group and that capture\nis part of the overall match, then the capture is *guaranteed* to be valid\nUTF-8.\n\n# Syntax\n\nThe supported syntax is pretty much the same as the syntax for Unicode\nregular expressions with a few changes that make sense for matching arbitrary\nbytes:\n\n1. The `u` flag can be disabled even when disabling it might cause the regex to\nmatch invalid UTF-8. When the `u` flag is disabled, the regex is said to be in\n\"ASCII compatible\" mode.\n2. In ASCII compatible mode, neither Unicode scalar values nor Unicode\ncharacter classes are allowed.\n3. In ASCII compatible mode, Perl character classes (`\\w`, `\\d` and `\\s`)\nrevert to their typical ASCII definition. `\\w` maps to `[[:word:]]`, `\\d` maps\nto `[[:digit:]]` and `\\s` maps to `[[:space:]]`.\n4. In ASCII compatible mode, word boundaries use the ASCII compatible `\\w` to\ndetermine whether a byte is a word byte or not.\n5. Hexadecimal notation can be used to specify arbitrary bytes instead of\nUnicode codepoints. For example, in ASCII compatible mode, `\\xFF` matches the\nliteral byte `\\xFF`, while in Unicode mode, `\\xFF` is a Unicode codepoint that\nmatches its UTF-8 encoding of `\\xC3\\xBF`. Similarly for octal notation when\nenabled.\n6. In ASCII compatible mode, `.` matches any *byte* except for `\\n`. When the\n`s` flag is additionally enabled, `.` matches any byte.\n\n# Performance\n\nIn general, one should expect performance on `&[u8]` to be roughly similar to\nperformance on `&str`.","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:56","0:57","0:58","0:59"],"is_stripped":false}},"a:2:3376:224-0:173:1640":{"id":"a:2:3376:224-0:173:1640","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Compiler","id":"0:173:1640","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:743:3116":{"id":"0:743:3116","crate_id":0,"name":"previous_char","span":{"filename":"src/input.rs","begin":[79,4],"end":[79,49]},"visibility":"default","docs":"Return the Unicode character occurring previous to `at`.\n\nIf no such character could be decoded, then `Char` is absent.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["at",{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:2164:1645","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Char","id":"0:2198:1643","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:3376:224-0:2488:3495":{"id":"a:2:3376:224-0:2488:3495","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3376:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2488:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:633:2921":{"id":"0:633:2921","crate_id":0,"name":"searcher_str","span":{"filename":"src/exec.rs","begin":[1272,4],"end":[1274,5]},"visibility":"public","docs":"Get a searcher that isn't Sync and can match on &str.","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ExecNoSyncStr","id":"0:2038:2696","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1520:2817":{"id":"0:1520:2817","crate_id":0,"name":"captures_read_at","span":{"filename":"src/re_unicode.rs","begin":[683,4],"end":[693,5]},"visibility":"public","docs":"Returns the same as captures, but starts the search at the given\noffset and populates the capture locations given.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["locs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:3000:1605","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47808:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2944:1610","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3201-0:2446:2672":{"id":"b:2:3201-0:2446:2672","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3174:136","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexOptions","id":"0:2446:2672","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3203:685"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2865-0:3038:1615":{"id":"b:2:2865-0:3038:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2859:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:3038:1615","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:2867:3346"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1642:3798":{"id":"0:1642:3798","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1170,4],"end":[1170,72]},"visibility":"default","docs":"Appends text to `dst` to replace the current match.\n\nThe current match is represented by `caps`, which is guaranteed to\nhave a match at capture group `0`.\n\nFor example, a no-op replacement would be\n`dst.push_str(caps.get(0).unwrap().as_str())`.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1565:1608","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:13815:62928":{"id":"2:13815:62928","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"self::pattern":"2:13332:1596","prim@char":"1:15883:4458"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:13342:4889","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13357:4890","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2258:3169":{"id":"0:2258:3169","crate_id":0,"name":"Packed","span":{"filename":"src/literal/imp.rs","begin":[227,4],"end":[227,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"variant_kind":"tuple","variant_inner":["0:2260:1558"]}},"0:1480:127":{"id":"0:1480:127","crate_id":0,"name":"Err","span":{"filename":"src/re_unicode.rs","begin":[160,4],"end":[160,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Error","id":"0:2012:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:3212-0:2519:3495":{"id":"b:2:3212-0:2519:3495","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2519:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2476:926":{"id":"0:2476:926","crate_id":0,"name":"new","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Create a new regular expression builder with the given pattern.\n\nIf the pattern is invalid, then an error will be returned when\n`build` is called.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["pattern",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2488:3495","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2868-0:3029:1611":{"id":"b:2:2868-0:3029:1611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:3369:3987","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2862:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:3029:1611","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2870:1798"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:6498:228":{"id":"5:6498:228","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6499:1410"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:2364:1558":{"id":"0:2364:1558","crate_id":0,"name":"0","span":{"filename":"src/prog.rs","begin":[288,9],"end":[288,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"InstChar","id":"0:2424:1850","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"b:2:3212-0:2613:1613":{"id":"b:2:3212-0:2613:1613","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3171:150","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3181:232","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2613:1613","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3215:128","2:3216:1430"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2395:664":{"id":"0:2395:664","crate_id":0,"name":"fmt","span":{"filename":"src/prog.rs","begin":[330,16],"end":[330,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10523:135","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10512:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6164:63566":{"id":"5:6164:63566","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:444:2038","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8217:5469","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:444:2038","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8217:5469","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:640:1864":{"id":"0:640:1864","crate_id":0,"name":"capture_name_idx","span":{"filename":"src/exec.rs","begin":[1311,4],"end":[1313,5]},"visibility":"public","docs":"Return a reference to named groups mapping (from group name to\ngroup position).","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arc","id":"5:6739:69","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"HashMap","id":"1:1261:144","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:8472:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:3057:2164":{"id":"0:3057:2164","crate_id":0,"name":"SparseSet","span":{"filename":"src/sparse.rs","begin":[16,0],"end":[25,1]},"visibility":"public","docs":"A sparse set used for representing ordered NFA states.\n\nThis supports constant time addition and membership testing. Clearing an\nentire set can also be done in constant time. Iteration yields elements\nin the order in which they were inserted.\n\nThe data structure is based on: https://research.swtch.com/sparse\nNote though that we don't actually use uninitialized memory. We generally\nreuse allocations, so the initial allocation cost is bareable. However,\nits other properties listed above are extremely useful.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:1691","a:2:3376:224-0:3057:2164","a:2:3405:4927-0:3057:2164","a:2:9533:3267-0:3057:2164","a:2:9534:3266-0:3057:2164","a:2:3364:215-0:3057:2164","b:2:3201-0:3057:2164","b:2:3197-0:3057:2164","b:2:3207-0:3057:2164","b:2:2868-0:3057:2164","b:2:4097-0:3057:2164","b:2:2865-0:3057:2164","b:2:3212-0:3057:2164","b:5:848-0:3057:2164","0:3060","0:1699","0:1701","0:1704"]}},"0:3029:1611":{"id":"0:3029:1611","crate_id":0,"name":"Matches","span":{"filename":"src/re_unicode.rs","begin":[1143,0],"end":[1143,69]},"visibility":"public","docs":"An iterator over all non-overlapping matches for a particular string.\n\nThe iterator yields a `Match` value. The iterator stops when no more\nmatches can be found.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the matched string.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:3376:224-0:3029:1611","a:2:3405:4927-0:3029:1611","a:2:9533:3267-0:3029:1611","a:2:9534:3266-0:3029:1611","a:2:3364:215-0:3029:1611","b:2:3201-0:3029:1611","b:2:3197-0:3029:1611","b:2:3207-0:3029:1611","b:2:2868-0:3029:1611","b:2:4097-0:3029:1611","b:2:8677-0:3029:1611","b:2:2865-0:3029:1611","b:2:3212-0:3029:1611","0:3034","0:1632","0:1638"]}},"0:1697:2433":{"id":"0:1697:2433","crate_id":0,"name":"contains","span":{"filename":"src/sparse.rs","begin":[54,4],"end":[57,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["value",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1758":{"id":"0:1758","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[765,43],"end":[765,53]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::prog::InstRanges","name":"InstRanges","id":"0:2431:1649","glob":false}},"0:0:1653":{"id":"0:0:1653","crate_id":0,"name":"regex","span":{"filename":"src/lib.rs","begin":[1,0],"end":[766,1]},"visibility":"public","docs":"This crate provides a library for parsing, compiling, and executing regular\nexpressions. Its syntax is similar to Perl-style regular expressions, but lacks\na few features like look around and backreferences. In exchange, all searches\nexecute in linear time with respect to the size of the regular expression and\nsearch text.\n\nThis crate's documentation provides some simple examples, describes\n[Unicode support](#unicode) and exhaustively lists the\n[supported syntax](#syntax).\n\nFor more specific details on the API for regular expressions, please see the\ndocumentation for the [`Regex`](struct.Regex.html) type.\n\n# Usage\n\nThis crate is [on crates.io](https://crates.io/crates/regex) and can be\nused by adding `regex` to your dependencies in your project's `Cargo.toml`.\n\n```toml\n[dependencies]\nregex = \"1\"\n```\n\n# Example: find a date\n\nGeneral use of regular expressions in this package involves compiling an\nexpression and then using it to search, split or replace text. For example,\nto confirm that some text resembles a date:\n\n```rust\nuse regex::Regex;\nlet re = Regex::new(r\"^\\d{4}-\\d{2}-\\d{2}$\").unwrap();\nassert!(re.is_match(\"2014-01-01\"));\n```\n\nNotice the use of the `^` and `$` anchors. In this crate, every expression\nis executed with an implicit `.*?` at the beginning and end, which allows\nit to match anywhere in the text. Anchors can be used to ensure that the\nfull text matches an expression.\n\nThis example also demonstrates the utility of\n[raw strings](https://doc.rust-lang.org/stable/reference/tokens.html#raw-string-literals)\nin Rust, which\nare just like regular strings except they are prefixed with an `r` and do\nnot process any escape sequences. For example, `\"\\\\d\"` is the same\nexpression as `r\"\\d\"`.\n\n# Example: Avoid compiling the same regex in a loop\n\nIt is an anti-pattern to compile the same regular expression in a loop\nsince compilation is typically expensive. (It takes anywhere from a few\nmicroseconds to a few **milliseconds** depending on the size of the\nregex.) Not only is compilation itself expensive, but this also prevents\noptimizations that reuse allocations internally to the matching engines.\n\nIn Rust, it can sometimes be a pain to pass regular expressions around if\nthey're used from inside a helper function. Instead, we recommend using the\n[`lazy_static`](https://crates.io/crates/lazy_static) crate to ensure that\nregular expressions are compiled exactly once.\n\nFor example:\n\n```rust\nuse lazy_static::lazy_static;\nuse regex::Regex;\n\nfn some_helper_function(text: &str) -> bool {\n    lazy_static! {\n        static ref RE: Regex = Regex::new(\"...\").unwrap();\n    }\n    RE.is_match(text)\n}\n\nfn main() {}\n```\n\nSpecifically, in this example, the regex will be compiled when it is used for\nthe first time. On subsequent uses, it will reuse the previous compilation.\n\n# Example: iterating over capture groups\n\nThis crate provides convenient iterators for matching an expression\nrepeatedly against a search string to find successive non-overlapping\nmatches. For example, to find all dates in a string and be able to access\nthem by their component pieces:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(\\d{4})-(\\d{2})-(\\d{2})\").unwrap();\nlet text = \"2012-03-14, 2013-01-01 and 2014-07-05\";\nfor cap in re.captures_iter(text) {\n    println!(\"Month: {} Day: {} Year: {}\", &cap[2], &cap[3], &cap[1]);\n}\n// Output:\n// Month: 03 Day: 14 Year: 2012\n// Month: 01 Day: 01 Year: 2013\n// Month: 07 Day: 05 Year: 2014\n# }\n```\n\nNotice that the year is in the capture group indexed at `1`. This is\nbecause the *entire match* is stored in the capture group at index `0`.\n\n# Example: replacement with named capture groups\n\nBuilding on the previous example, perhaps we'd like to rearrange the date\nformats. This can be done with text replacement. But to make the code\nclearer, we can *name*  our capture groups and use those names as variables\nin our replacement text:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?P<y>\\d{4})-(?P<m>\\d{2})-(?P<d>\\d{2})\").unwrap();\nlet before = \"2012-03-14, 2013-01-01 and 2014-07-05\";\nlet after = re.replace_all(before, \"$m/$d/$y\");\nassert_eq!(after, \"03/14/2012, 01/01/2013 and 07/05/2014\");\n# }\n```\n\nThe `replace` methods are actually polymorphic in the replacement, which\nprovides more flexibility than is seen here. (See the documentation for\n`Regex::replace` for more details.)\n\nNote that if your regex gets complicated, you can use the `x` flag to\nenable insignificant whitespace mode, which also lets you write comments:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?x)\n  (?P<y>\\d{4}) # the year\n  -\n  (?P<m>\\d{2}) # the month\n  -\n  (?P<d>\\d{2}) # the day\n\").unwrap();\nlet before = \"2012-03-14, 2013-01-01 and 2014-07-05\";\nlet after = re.replace_all(before, \"$m/$d/$y\");\nassert_eq!(after, \"03/14/2012, 01/01/2013 and 07/05/2014\");\n# }\n```\n\nIf you wish to match against whitespace in this mode, you can still use `\\s`,\n`\\n`, `\\t`, etc. For escaping a single space character, you can escape it\ndirectly with `\\ `, use its hex character code `\\x20` or temporarily disable\nthe `x` flag, e.g., `(?-x: )`.\n\n# Example: match multiple regular expressions simultaneously\n\nThis demonstrates how to use a `RegexSet` to match multiple (possibly\noverlapping) regular expressions in a single scan of the search text:\n\n```rust\nuse regex::RegexSet;\n\nlet set = RegexSet::new(&[\n    r\"\\w+\",\n    r\"\\d+\",\n    r\"\\pL+\",\n    r\"foo\",\n    r\"bar\",\n    r\"barfoo\",\n    r\"foobar\",\n]).unwrap();\n\n// Iterate over and collect all of the matches.\nlet matches: Vec<_> = set.matches(\"foobar\").into_iter().collect();\nassert_eq!(matches, vec![0, 2, 3, 4, 6]);\n\n// You can also test whether a particular regex matched:\nlet matches = set.matches(\"foobar\");\nassert!(!matches.matched(5));\nassert!(matches.matched(6));\n```\n\n# Pay for what you use\n\nWith respect to searching text with a regular expression, there are three\nquestions that can be asked:\n\n1. Does the text match this expression?\n2. If so, where does it match?\n3. Where did the capturing groups match?\n\nGenerally speaking, this crate could provide a function to answer only #3,\nwhich would subsume #1 and #2 automatically. However, it can be significantly\nmore expensive to compute the location of capturing group matches, so it's best\nnot to do it if you don't need to.\n\nTherefore, only use what you need. For example, don't use `find` if you\nonly need to test if an expression matches a string. (Use `is_match`\ninstead.)\n\n# Unicode\n\nThis implementation executes regular expressions **only** on valid UTF-8\nwhile exposing match locations as byte indices into the search string. (To\nrelax this restriction, use the [`bytes`](bytes/index.html) sub-module.)\n\nOnly simple case folding is supported. Namely, when matching\ncase-insensitively, the characters are first mapped using the \"simple\" case\nfolding rules defined by Unicode.\n\nRegular expressions themselves are **only** interpreted as a sequence of\nUnicode scalar values. This means you can use Unicode characters directly\nin your expression:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?i)Δ+\").unwrap();\nlet mat = re.find(\"ΔδΔ\").unwrap();\nassert_eq!((mat.start(), mat.end()), (0, 6));\n# }\n```\n\nMost features of the regular expressions in this crate are Unicode aware. Here\nare some examples:\n\n* `.` will match any valid UTF-8 encoded Unicode scalar value except for `\\n`.\n  (To also match `\\n`, enable the `s` flag, e.g., `(?s:.)`.)\n* `\\w`, `\\d` and `\\s` are Unicode aware. For example, `\\s` will match all forms\n  of whitespace categorized by Unicode.\n* `\\b` matches a Unicode word boundary.\n* Negated character classes like `[^a]` match all Unicode scalar values except\n  for `a`.\n* `^` and `$` are **not** Unicode aware in multi-line mode. Namely, they only\n  recognize `\\n` and not any of the other forms of line terminators defined\n  by Unicode.\n\nUnicode general categories, scripts, script extensions, ages and a smattering\nof boolean properties are available as character classes. For example, you can\nmatch a sequence of numerals, Greek or Cherokee letters:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"[\\pN\\p{Greek}\\p{Cherokee}]+\").unwrap();\nlet mat = re.find(\"abcΔᎠβⅠᏴγδⅡxyz\").unwrap();\nassert_eq!((mat.start(), mat.end()), (3, 23));\n# }\n```\n\nFor a more detailed breakdown of Unicode support with respect to\n[UTS#18](https://unicode.org/reports/tr18/),\nplease see the\n[UNICODE](https://github.com/rust-lang/regex/blob/master/UNICODE.md)\ndocument in the root of the regex repository.\n\n# Opt out of Unicode support\n\nThe `bytes` sub-module provides a `Regex` type that can be used to match\non `&[u8]`. By default, text is interpreted as UTF-8 just like it is with\nthe main `Regex` type. However, this behavior can be disabled by turning\noff the `u` flag, even if doing so could result in matching invalid UTF-8.\nFor example, when the `u` flag is disabled, `.` will match any byte instead\nof any Unicode scalar value.\n\nDisabling the `u` flag is also possible with the standard `&str`-based `Regex`\ntype, but it is only allowed where the UTF-8 invariant is maintained. For\nexample, `(?-u:\\w)` is an ASCII-only `\\w` character class and is legal in an\n`&str`-based `Regex`, but `(?-u:\\xFF)` will attempt to match the raw byte\n`\\xFF`, which is invalid UTF-8 and therefore is illegal in `&str`-based\nregexes.\n\nFinally, since Unicode support requires bundling large Unicode data\ntables, this crate exposes knobs to disable the compilation of those\ndata tables, which can be useful for shrinking binary size and reducing\ncompilation times. For details on how to do that, see the section on [crate\nfeatures](#crate-features).\n\n# Syntax\n\nThe syntax supported in this crate is documented below.\n\nNote that the regular expression parser and abstract syntax are exposed in\na separate crate, [`regex-syntax`](https://docs.rs/regex-syntax).\n\n## Matching one character\n\n<pre class=\"rust\">\n.             any character except new line (includes new line with s flag)\n\\d            digit (\\p{Nd})\n\\D            not digit\n\\pN           One-letter name Unicode character class\n\\p{Greek}     Unicode character class (general category or script)\n\\PN           Negated one-letter name Unicode character class\n\\P{Greek}     negated Unicode character class (general category or script)\n</pre>\n\n### Character classes\n\n<pre class=\"rust\">\n[xyz]         A character class matching either x, y or z (union).\n[^xyz]        A character class matching any character except x, y and z.\n[a-z]         A character class matching any character in range a-z.\n[[:alpha:]]   ASCII character class ([A-Za-z])\n[[:^alpha:]]  Negated ASCII character class ([^A-Za-z])\n[x[^xyz]]     Nested/grouping character class (matching any character except y and z)\n[a-y&&xyz]    Intersection (matching x or y)\n[0-9&&[^4]]   Subtraction using intersection and negation (matching 0-9 except 4)\n[0-9--4]      Direct subtraction (matching 0-9 except 4)\n[a-g~~b-h]    Symmetric difference (matching `a` and `h` only)\n[\\[\\]]        Escaping in character classes (matching [ or ])\n</pre>\n\nAny named character class may appear inside a bracketed `[...]` character\nclass. For example, `[\\p{Greek}[:digit:]]` matches any Greek or ASCII\ndigit. `[\\p{Greek}&&\\pL]` matches Greek letters.\n\nPrecedence in character classes, from most binding to least:\n\n1. Ranges: `a-cd` == `[a-c]d`\n2. Union: `ab&&bc` == `[ab]&&[bc]`\n3. Intersection: `^a-z&&b` == `^[a-z&&b]`\n4. Negation\n\n## Composites\n\n<pre class=\"rust\">\nxy    concatenation (x followed by y)\nx|y   alternation (x or y, prefer x)\n</pre>\n\n## Repetitions\n\n<pre class=\"rust\">\nx*        zero or more of x (greedy)\nx+        one or more of x (greedy)\nx?        zero or one of x (greedy)\nx*?       zero or more of x (ungreedy/lazy)\nx+?       one or more of x (ungreedy/lazy)\nx??       zero or one of x (ungreedy/lazy)\nx{n,m}    at least n x and at most m x (greedy)\nx{n,}     at least n x (greedy)\nx{n}      exactly n x\nx{n,m}?   at least n x and at most m x (ungreedy/lazy)\nx{n,}?    at least n x (ungreedy/lazy)\nx{n}?     exactly n x\n</pre>\n\n## Empty matches\n\n<pre class=\"rust\">\n^     the beginning of text (or start-of-line with multi-line mode)\n$     the end of text (or end-of-line with multi-line mode)\n\\A    only the beginning of text (even with multi-line mode enabled)\n\\z    only the end of text (even with multi-line mode enabled)\n\\b    a Unicode word boundary (\\w on one side and \\W, \\A, or \\z on other)\n\\B    not a Unicode word boundary\n</pre>\n\n## Grouping and flags\n\n<pre class=\"rust\">\n(exp)          numbered capture group (indexed by opening parenthesis)\n(?P&lt;name&gt;exp)  named (also numbered) capture group (allowed chars: [_0-9a-zA-Z.\\[\\]])\n(?:exp)        non-capturing group\n(?flags)       set flags within current group\n(?flags:exp)   set flags for exp (non-capturing)\n</pre>\n\nFlags are each a single character. For example, `(?x)` sets the flag `x`\nand `(?-x)` clears the flag `x`. Multiple flags can be set or cleared at\nthe same time: `(?xy)` sets both the `x` and `y` flags and `(?x-y)` sets\nthe `x` flag and clears the `y` flag.\n\nAll flags are by default disabled unless stated otherwise. They are:\n\n<pre class=\"rust\">\ni     case-insensitive: letters match both upper and lower case\nm     multi-line mode: ^ and $ match begin/end of line\ns     allow . to match \\n\nU     swap the meaning of x* and x*?\nu     Unicode support (enabled by default)\nx     ignore whitespace and allow line comments (starting with `#`)\n</pre>\n\nFlags can be toggled within a pattern. Here's an example that matches\ncase-insensitively for the first part but case-sensitively for the second part:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?i)a+(?-i)b+\").unwrap();\nlet cap = re.captures(\"AaAaAbbBBBb\").unwrap();\nassert_eq!(&cap[0], \"AaAaAbb\");\n# }\n```\n\nNotice that the `a+` matches either `a` or `A`, but the `b+` only matches\n`b`.\n\nMulti-line mode means `^` and `$` no longer match just at the beginning/end of\nthe input, but at the beginning/end of lines:\n\n```\n# use regex::Regex;\nlet re = Regex::new(r\"(?m)^line \\d+\").unwrap();\nlet m = re.find(\"line one\\nline 2\\n\").unwrap();\nassert_eq!(m.as_str(), \"line 2\");\n```\n\nNote that `^` matches after new lines, even at the end of input:\n\n```\n# use regex::Regex;\nlet re = Regex::new(r\"(?m)^\").unwrap();\nlet m = re.find_iter(\"test\\n\").last().unwrap();\nassert_eq!((m.start(), m.end()), (5, 5));\n```\n\nHere is an example that uses an ASCII word boundary instead of a Unicode\nword boundary:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?-u:\\b).+(?-u:\\b)\").unwrap();\nlet cap = re.captures(\"$$abc$$\").unwrap();\nassert_eq!(&cap[0], \"abc\");\n# }\n```\n\n## Escape sequences\n\n<pre class=\"rust\">\n\\*          literal *, works for any punctuation character: \\.+*?()|[]{}^$\n\\a          bell (\\x07)\n\\f          form feed (\\x0C)\n\\t          horizontal tab\n\\n          new line\n\\r          carriage return\n\\v          vertical tab (\\x0B)\n\\123        octal character code (up to three digits) (when enabled)\n\\x7F        hex character code (exactly two digits)\n\\x{10FFFF}  any hex character code corresponding to a Unicode code point\n\\u007F      hex character code (exactly four digits)\n\\u{7F}      any hex character code corresponding to a Unicode code point\n\\U0000007F  hex character code (exactly eight digits)\n\\U{7F}      any hex character code corresponding to a Unicode code point\n</pre>\n\n## Perl character classes (Unicode friendly)\n\nThese classes are based on the definitions provided in\n[UTS#18](https://www.unicode.org/reports/tr18/#Compatibility_Properties):\n\n<pre class=\"rust\">\n\\d     digit (\\p{Nd})\n\\D     not digit\n\\s     whitespace (\\p{White_Space})\n\\S     not whitespace\n\\w     word character (\\p{Alphabetic} + \\p{M} + \\d + \\p{Pc} + \\p{Join_Control})\n\\W     not word character\n</pre>\n\n## ASCII character classes\n\n<pre class=\"rust\">\n[[:alnum:]]    alphanumeric ([0-9A-Za-z])\n[[:alpha:]]    alphabetic ([A-Za-z])\n[[:ascii:]]    ASCII ([\\x00-\\x7F])\n[[:blank:]]    blank ([\\t ])\n[[:cntrl:]]    control ([\\x00-\\x1F\\x7F])\n[[:digit:]]    digits ([0-9])\n[[:graph:]]    graphical ([!-~])\n[[:lower:]]    lower case ([a-z])\n[[:print:]]    printable ([ -~])\n[[:punct:]]    punctuation ([!-/:-@\\[-`{-~])\n[[:space:]]    whitespace ([\\t\\n\\v\\f\\r ])\n[[:upper:]]    upper case ([A-Z])\n[[:word:]]     word characters ([0-9A-Za-z_])\n[[:xdigit:]]   hex digit ([0-9A-Fa-f])\n</pre>\n\n# Crate features\n\nBy default, this crate tries pretty hard to make regex matching both as fast\nas possible and as correct as it can be, within reason. This means that there\nis a lot of code dedicated to performance, the handling of Unicode data and the\nUnicode data itself. Overall, this leads to more dependencies, larger binaries\nand longer compile times.  This trade off may not be appropriate in all cases,\nand indeed, even when all Unicode and performance features are disabled, one\nis still left with a perfectly serviceable regex engine that will work well\nin many cases.\n\nThis crate exposes a number of features for controlling that trade off. Some\nof these features are strictly performance oriented, such that disabling them\nwon't result in a loss of functionality, but may result in worse performance.\nOther features, such as the ones controlling the presence or absence of Unicode\ndata, can result in a loss of functionality. For example, if one disables the\n`unicode-case` feature (described below), then compiling the regex `(?i)a`\nwill fail since Unicode case insensitivity is enabled by default. Instead,\ncallers must use `(?i-u)a` instead to disable Unicode case folding. Stated\ndifferently, enabling or disabling any of the features below can only add or\nsubtract from the total set of valid regular expressions. Enabling or disabling\na feature will never modify the match semantics of a regular expression.\n\nAll features below are enabled by default.\n\n### Ecosystem features\n\n* **std** -\n  When enabled, this will cause `regex` to use the standard library. Currently,\n  disabling this feature will always result in a compilation error. It is\n  intended to add `alloc`-only support to regex in the future.\n\n### Performance features\n\n* **perf** -\n  Enables all performance related features. This feature is enabled by default\n  and will always cover all features that improve performance, even if more\n  are added in the future.\n* **perf-dfa** -\n  Enables the use of a lazy DFA for matching. The lazy DFA is used to compile\n  portions of a regex to a very fast DFA on an as-needed basis. This can\n  result in substantial speedups, usually by an order of magnitude on large\n  haystacks. The lazy DFA does not bring in any new dependencies, but it can\n  make compile times longer.\n* **perf-inline** -\n  Enables the use of aggressive inlining inside match routines. This reduces\n  the overhead of each match. The aggressive inlining, however, increases\n  compile times and binary size.\n* **perf-literal** -\n  Enables the use of literal optimizations for speeding up matches. In some\n  cases, literal optimizations can result in speedups of _several_ orders of\n  magnitude. Disabling this drops the `aho-corasick` and `memchr` dependencies.\n* **perf-cache** -\n  This feature used to enable a faster internal cache at the cost of using\n  additional dependencies, but this is no longer an option. A fast internal\n  cache is now used unconditionally with no additional dependencies. This may\n  change in the future.\n\n### Unicode features\n\n* **unicode** -\n  Enables all Unicode features. This feature is enabled by default, and will\n  always cover all Unicode features, even if more are added in the future.\n* **unicode-age** -\n  Provide the data for the\n  [Unicode `Age` property](https://www.unicode.org/reports/tr44/tr44-24.html#Character_Age).\n  This makes it possible to use classes like `\\p{Age:6.0}` to refer to all\n  codepoints first introduced in Unicode 6.0\n* **unicode-bool** -\n  Provide the data for numerous Unicode boolean properties. The full list\n  is not included here, but contains properties like `Alphabetic`, `Emoji`,\n  `Lowercase`, `Math`, `Uppercase` and `White_Space`.\n* **unicode-case** -\n  Provide the data for case insensitive matching using\n  [Unicode's \"simple loose matches\" specification](https://www.unicode.org/reports/tr18/#Simple_Loose_Matches).\n* **unicode-gencat** -\n  Provide the data for\n  [Unicode general categories](https://www.unicode.org/reports/tr44/tr44-24.html#General_Category_Values).\n  This includes, but is not limited to, `Decimal_Number`, `Letter`,\n  `Math_Symbol`, `Number` and `Punctuation`.\n* **unicode-perl** -\n  Provide the data for supporting the Unicode-aware Perl character classes,\n  corresponding to `\\w`, `\\s` and `\\d`. This is also necessary for using\n  Unicode-aware word boundary assertions. Note that if this feature is\n  disabled, the `\\s` and `\\d` character classes are still available if the\n  `unicode-bool` and `unicode-gencat` features are enabled, respectively.\n* **unicode-script** -\n  Provide the data for\n  [Unicode scripts and script extensions](https://www.unicode.org/reports/tr24/).\n  This includes, but is not limited to, `Arabic`, `Cyrillic`, `Hebrew`,\n  `Latin` and `Thai`.\n* **unicode-segment** -\n  Provide the data necessary to provide the properties used to implement the\n  [Unicode text segmentation algorithms](https://www.unicode.org/reports/tr29/).\n  This enables using classes like `\\p{gcb=Extend}`, `\\p{wb=Katakana}` and\n  `\\p{sb=ATerm}`.\n\n\n# Untrusted input\n\nThis crate can handle both untrusted regular expressions and untrusted\nsearch text.\n\nUntrusted regular expressions are handled by capping the size of a compiled\nregular expression.\n(See [`RegexBuilder::size_limit`](struct.RegexBuilder.html#method.size_limit).)\nWithout this, it would be trivial for an attacker to exhaust your system's\nmemory with expressions like `a{100}{100}{100}`.\n\nUntrusted search text is allowed because the matching engine(s) in this\ncrate have time complexity `O(mn)` (with `m ~ regex` and `n ~ search\ntext`), which means there's no way to cause exponential blow-up like with\nsome other regular expression engines. (We pay for this by disallowing\nfeatures like arbitrary look-ahead and backreferences.)\n\nWhen a DFA is used, pathological cases with exponential state blow-up are\navoided by constructing the DFA lazily or in an \"online\" manner. Therefore,\nat most one new state can be created for each byte of input. This satisfies\nour time complexity guarantees, but can lead to memory growth\nproportional to the size of the input. As a stopgap, the DFA is only\nallowed to store a fixed number of states. When the limit is reached, its\nstates are wiped and continues on, possibly duplicating previous work. If\nthe limit is reached too frequently, it gives up and hands control off to\nanother matching engine with fixed memory requirements.\n(The DFA size limit can also be tweaked. See\n[`RegexBuilder::dfa_size_limit`](struct.RegexBuilder.html#method.dfa_size_limit).)","links":{},"attrs":["#![deny(missing_docs)]","#![warn(missing_debug_implementations)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:55:1620","0:3","0:10","0:13","0:16","0:19","0:22","0:25","0:28","0:31","0:34","0:37","0:40","0:43","0:46","0:49","0:52","0:6","0:7","0:8"],"is_stripped":false}},"a:2:9534:3266-0:2031:2692":{"id":"a:2:9534:3266-0:2031:2692","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:9534:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecNoSync","id":"0:2031:2692","args":{"angle_bracketed":{"args":[{"lifetime":"'c"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:848-0:2217:1646":{"id":"b:5:848-0:2217:1646","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2884:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:844:227","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:2217:1646","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:850:3797","5:851:2605","5:852:5449"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}}},"paths":{"6:4028:9999":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:12143:8229":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"2:32592:4651":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"17:10598:8220":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:50524:6636":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"2:3177:233":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"16:7369:7156":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:24506:10592":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"18:739:7903":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"20:1920:2668":{"crate_id":20,"path":["regex_syntax","ast","parse","ParserBuilder"],"kind":"struct"},"20:2097:4622":{"crate_id":20,"path":["regex_syntax","ast","Span"],"kind":"struct"},"6:1748:9896":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"20:2280:7522":{"crate_id":20,"path":["regex_syntax","ast","HexLiteralKind"],"kind":"enum"},"16:5855:7072":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"16:6331:6989":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:50512:6635":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"2:3518:4866":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:2359:9480":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"1:10550:9497":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"20:2317:7523":{"crate_id":20,"path":["regex_syntax","ast","ClassPerl"],"kind":"struct"},"21:1481:2298":{"crate_id":21,"path":["aho_corasick","nfa","State"],"kind":"struct"},"16:3478:7332":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"2:48320:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:1926:2030":{"crate_id":2,"path":["core","mem"],"kind":"module"},"22:292:3149":{"crate_id":22,"path":["memchr","memchr","memchr3"],"kind":"function"},"2:24986:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"2:51831:6517":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"17:13452:8798":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"2:10811:147":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"17:13094:8717":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"5:5906:2021":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"5:8271:3413":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"21:1336:6239":{"crate_id":21,"path":["aho_corasick","buffer","Buffer"],"kind":"struct"},"17:11985:8420":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"2:46588:4722":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"17:13899:8936":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"17:11474:8313":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"17:12348:8493":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"16:5443:7051":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"6:4416:10140":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"12:1121:6170":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"1:5636:6338":{"crate_id":1,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"2:49679:5983":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"12:1183:6971":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"17:10240:7400":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"22:698:5911":{"crate_id":22,"path":["memchr","cow","CowBytes"],"kind":"struct"},"9:27:6888":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"14:216:47505":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"17:11031:49158":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"16:4439:8983":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"6:5455:10355":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"17:9539:7467":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"6:4075:10020":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"22:904:63833":{"crate_id":22,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:46645:5851":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:14369:6643":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"21:1625:7565":{"crate_id":21,"path":["aho_corasick","packed","api","SearchKind"],"kind":"enum"},"5:1740:6163":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"20:2663:2057":{"crate_id":20,"path":["regex_syntax","ast","RepetitionRange"],"kind":"enum"},"2:51853:6520":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"6:1551:9773":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:11882:6187":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"1:11409:2298":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"17:12170:8450":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"21:1527:5867":{"crate_id":21,"path":["aho_corasick","nfa","Builder"],"kind":"struct"},"12:1162:6970":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"1:1418:6160":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:10678:130":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"5:3407:6768":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"16:7721:7166":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"1:12565:6245":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"17:10039:8198":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"16:3155:7326":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:3174:136":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"1:1405:6159":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"20:3090:1979":{"crate_id":20,"path":["regex_syntax","hir","Literal"],"kind":"enum"},"18:668:5915":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"17:13138:8722":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"2:14420:203":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"2:3824:229":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"5:3366:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"17:9958:63821":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"20:2745:7540":{"crate_id":20,"path":["regex_syntax","ast","Flags"],"kind":"struct"},"1:11842:183":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"1:4178:6054":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"16:6089:7199":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:10034:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:10718:9346":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"2:49113:9390":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"20:2999:128":{"crate_id":20,"path":["regex_syntax","hir","Error"],"kind":"struct"},"2:51901:6505":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"5:8549:5471":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"6:5178:10219":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"5:5166:664":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"22:853:143":{"crate_id":22,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"22:1024:5905":{"crate_id":22,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"16:5948:7319":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"1:10217:8098":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"21:1393:7924":{"crate_id":21,"path":["aho_corasick","dfa","ByteClass"],"kind":"struct"},"2:5224:3022":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"1:15898:4470":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"12:979:6168":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"6:580:9730":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"6:612:9746":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"2:52120:9410":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"22:929:63834":{"crate_id":22,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"1:1387:5508":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"5:5488:6024":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"2:9792:1121":{"crate_id":2,"path":["core","result"],"kind":"module"},"16:6907:7217":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"20:2415:7527":{"crate_id":20,"path":["regex_syntax","ast","ClassUnicodeKind"],"kind":"enum"},"1:9558:7787":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"16:6643:7358":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:32446:6705":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"5:8494:6748":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"17:11907:8401":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"21:1706:7568":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","Teddy"],"kind":"struct"},"2:47302:4663":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"16:3908:8976":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"2:50508:6633":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"20:2362:7526":{"crate_id":20,"path":["regex_syntax","ast","ClassAsciiKind"],"kind":"enum"},"17:13247:8750":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"16:7684:7165":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"1:15849:1776":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"6:5426:10347":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"20:3013:4615":{"crate_id":20,"path":["regex_syntax","hir","ErrorKind"],"kind":"enum"},"16:7826:6460":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"2:48832:134":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"20:2787:6322":{"crate_id":20,"path":["regex_syntax","ast","Flag"],"kind":"enum"},"1:15854:13997":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"13:121:47471":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"5:1663:3414":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:53411:6499":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"11:0:4434":{"crate_id":11,"path":["adler"],"kind":"module"},"6:4098:10033":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"1:14968:6193":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"5:8249:6775":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"17:10586:8219":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"2:50417:4916":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:10719:6048":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:3432:4849":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"17:10988:8271":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"17:10489:8210":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"2:46655:5852":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:51999:6500":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:11201:6289":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"6:4340:10106":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"21:1825:64448":{"crate_id":21,"path":["aho_corasick","prefilter","Candidate"],"kind":"enum"},"21:1853:5867":{"crate_id":21,"path":["aho_corasick","prefilter","Builder"],"kind":"struct"},"17:10082:7491":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"17:11494:8323":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"20:2215:1979":{"crate_id":20,"path":["regex_syntax","ast","Literal"],"kind":"struct"},"17:13345:8772":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:56664:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"9:809:2298":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"16:4803:8994":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"16:6691:7215":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"9:1056:6899":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"5:6498:228":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"6:5216:10238":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:47840:2046":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"21:1252:4770":{"crate_id":21,"path":["aho_corasick","ahocorasick","FindOverlappingIter"],"kind":"struct"},"1:10703:6269":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"16:2861:7321":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:46675:5843":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"2:46124:4879":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"12:933:6164":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"2:3841:4877":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"6:5331:10299":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"17:10253:7403":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"5:3104:3797":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"2:10576:5370":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"18:152:4801":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"12:843:6159":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"5:7960:7758":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"6:586:9733":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"20:3357:2668":{"crate_id":20,"path":["regex_syntax","parser","ParserBuilder"],"kind":"struct"},"1:14886:60792":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"1:997:5938":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"16:7449:7163":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"12:379:6977":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"16:5238:47576":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"17:10445:8139":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"2:22879:61738":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"16:5326:7042":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"5:5388:202":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:14359:5519":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"1:8939:4593":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"1:1447:6161":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:32988:4654":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:13607:6192":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"6:6902:10567":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"16:5348:7043":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:51446:6503":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"22:843:5915":{"crate_id":22,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"21:1686:1640":{"crate_id":21,"path":["aho_corasick","packed","teddy","compile","Compiler"],"kind":"struct"},"16:6595:7168":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"2:13124:4895":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:3376:224":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"9:749:6841":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"21:1778:7950":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddyFat2Mask256"],"kind":"struct"},"5:3105:62493":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"17:12222:8457":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"1:15324:56300":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:24364:3023":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"20:2932:7992":{"crate_id":20,"path":["regex_syntax","hir","print","Writer"],"kind":"struct"},"1:4485:6018":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"2:4783:6024":{"crate_id":2,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"6:5390:10332":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"12:353:9670":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"2:24311:9350":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"1:11836:6183":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"2:51755:6525":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:6745:5998":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"18:678:143":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:46916:4677":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:52537:6506":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"16:3007:7324":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:46370:3022":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"21:1670:7567":{"crate_id":21,"path":["aho_corasick","packed","rabinkarp","RabinKarp"],"kind":"struct"},"9:996:6905":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"5:1276:6803":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"17:12557:8527":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"17:10291:7440":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"1:11190:6287":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:46171:198":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"5:8232:6774":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"5:3462:6139":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"16:4198:8977":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"16:547:7063":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"17:12417:8507":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"20:2945:8068":{"crate_id":20,"path":["regex_syntax","hir","translate","Translator"],"kind":"struct"},"5:3441:6769":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"1:973:5936":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"1:12014:6128":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"1:4258:6053":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"22:995:5903":{"crate_id":22,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:46768:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"6:6688:10564":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"2:9535:2663":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"2:50573:6693":{"crate_id":2,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"16:5396:7046":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"1:6339:6106":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"17:13602:8838":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"20:2401:4616":{"crate_id":20,"path":["regex_syntax","ast","ClassUnicode"],"kind":"struct"},"1:11341:4747":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"17:1311:7498":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:50312:6427":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"16:4411:8982":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"17:10913:8265":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"2:39108:6190":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"16:5721:7067":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"17:11810:8390":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"17:11784:8385":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"1:3371:6045":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"2:3870:4738":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"6:5998:10424":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"17:8902:49150":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"6:6914:10569":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"17:10093:7492":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:3382:4736":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"17:9796:63827":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"1:15908:4480":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:50374:6430":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"2:14148:189":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"1:8732:6319":{"crate_id":1,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"21:1316:2666":{"crate_id":21,"path":["aho_corasick","ahocorasick","MatchKind"],"kind":"enum"},"17:10390:7451":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:10554:6812":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"2:5345:410":{"crate_id":2,"path":["core","char"],"kind":"module"},"2:56599:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"17:10788:8258":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"2:47293:4586":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"17:11822:8393":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"17:11628:8345":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"6:1704:9879":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:12228:5979":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"2:49689:5981":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"6:1733:6299":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:3676:4871":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"12:472:11053":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"2:47004:4701":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"17:2512:7478":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:46785:6682":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:5706:13998":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"5:444:2038":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"6:4135:10052":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:11177:6335":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"17:9326:7444":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"1:11966:6125":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"21:1879:7917":{"crate_id":21,"path":["aho_corasick","prefilter","ByteSet"],"kind":"struct"},"2:3501:4862":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"17:13708:8881":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"1:5738:6344":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"20:1997:7991":{"crate_id":20,"path":["regex_syntax","ast","print","Printer"],"kind":"struct"},"17:12360:8495":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"17:13774:8904":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"17:13472:8805":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"6:4315:10093":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:32792:61835":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"2:10582:5372":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"6:5274:10269":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"5:6340:5477":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"1:12125:6235":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"18:782:7898":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"2:5727:6550":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"6:5260:10258":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"17:11937:8410":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"17:13147:8723":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"21:1517:7937":{"crate_id":21,"path":["aho_corasick","nfa","IterTransitionsMut"],"kind":"struct"},"17:11282:49160":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"14:47:9250":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:46801:6683":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"17:11701:8360":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:3447:4850":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"2:51801:6513":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"6:1669:9854":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"17:681:8098":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"1:6100:6304":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"17:12892:8571":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"2:49670:5980":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"2:11682:4912":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:53581:6502":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"17:10028:8197":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"1:8281:204":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"1:11288:6011":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"2:52167:9411":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:56625:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:10789:6198":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"17:12527:8524":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"12:2280:6171":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"1:696:5332":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"17:9587:63829":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"17:12620:8545":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"17:13584:8835":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"1:10921:6059":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"1:15904:4476":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"6:5582:10400":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:24240:6654":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"6:4379:10128":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"2:48582:5370":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"17:4008:8102":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"17:12157:8449":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"1:11034:6087":{"crate_id":1,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"18:645:5913":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"2:10584:5373":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"2:14057:139":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"20:2297:1985":{"crate_id":20,"path":["regex_syntax","ast","Class"],"kind":"enum"},"1:15633:7799":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"1:14470:60794":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"1:3070:6262":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"17:9676:63825":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"6:4218:10069":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"2:49775:1833":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"17:13167:8729":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"2:10512:207":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"6:6016:10431":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:46603:5850":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"21:1239:4769":{"crate_id":21,"path":["aho_corasick","ahocorasick","FindIter"],"kind":"struct"},"6:3987:9978":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"21:1363:7550":{"crate_id":21,"path":["aho_corasick","dfa","DFA"],"kind":"enum"},"16:6310:7206":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"5:5609:4580":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"1:6645:6003":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"16:5273:8178":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"6:513:7986":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"1:15865:56295":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"17:8849:7466":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"5:5682:1322":{"crate_id":5,"path":["alloc","slice"],"kind":"module"},"1:14064:6056":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"2:46631:5849":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"6:5488:10363":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"17:10464:7449":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"6:4308:10092":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"6:6135:10472":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"16:5516:7055":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"12:787:6162":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:3181:232":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"2:21:676":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"16:6717:7216":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"16:4573:8986":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"5:3905:7742":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"5:8406:6779":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"1:6241:6104":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"17:9836:63824":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"16:2813:7339":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"2:3392:5358":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"3:0:436":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"6:1680:9862":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"20:346:7501":{"crate_id":20,"path":["regex_syntax","ast","visitor","ClassInduct"],"kind":"enum"},"2:3168:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"1:5563:6073":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"17:13735:8893":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"16:6407:7208":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"6:4526:10186":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"2:50536:6632":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:10695:119":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"1:15886:4460":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"2:52301:6526":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"2:46728:5846":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"2:52379:6514":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"17:9183:7427":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"21:1764:7948":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddySlim2Mask128"],"kind":"struct"},"17:13016:8674":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"20:2771:7542":{"crate_id":20,"path":["regex_syntax","ast","FlagsItemKind"],"kind":"enum"},"18:829:5904":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"20:1944:7507":{"crate_id":20,"path":["regex_syntax","ast","parse","ParserI"],"kind":"struct"},"21:0:1651":{"crate_id":21,"path":["aho_corasick"],"kind":"module"},"16:7100:7223":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"20:540:1843":{"crate_id":20,"path":["regex_syntax","hir"],"kind":"module"},"1:7782:7771":{"crate_id":1,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"2:3272:128":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"16:7200:7172":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"16:4351:8980":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"16:7309:7158":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"22:965:4769":{"crate_id":22,"path":["memchr","memmem","FindIter"],"kind":"struct"},"5:1626:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"17:9004:49152":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"2:3442:4851":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:5730:6343":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"21:1589:3204":{"crate_id":21,"path":["aho_corasick","packed","api","Config"],"kind":"struct"},"17:13961:8949":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"1:8217:6783":{"crate_id":1,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"5:8483:6747":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"2:22862:61339":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"6:5301:10276":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:53715:9457":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"5:4694:240":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"1:15065:6154":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"1:1991:146":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"6:6665:10553":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:3102:6013":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"16:3314:7076":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"17:12469:8514":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"6:4434:10149":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"1:5154:6286":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"5:3948:6048":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"20:2331:7524":{"crate_id":20,"path":["regex_syntax","ast","ClassPerlKind"],"kind":"enum"},"2:11589:4911":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"22:1071:5909":{"crate_id":22,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"17:13975:8952":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"22:1012:3170":{"crate_id":22,"path":["memchr","memmem","Searcher"],"kind":"struct"},"21:1714:1641":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","Exec"],"kind":"enum"},"20:3161:4618":{"crate_id":20,"path":["regex_syntax","hir","ClassBytes"],"kind":"struct"},"2:50106:4904":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:2277:6409":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:8974:9488":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"1:1088:5760":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"1:10517:6142":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"1:4140:6273":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"18:169:4802":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:3373:221":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"2:51500:6524":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"5:2843:6808":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"6:4160:10065":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"16:6482:7354":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"1:15192:6285":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"6:1606:9806":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"17:13073:8712":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"16:4271:8978":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"2:13357:4890":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:2922:125":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"5:8373:4565":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"19:0:1000":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"16:5412:7049":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"6:5419:10345":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"21:1571:2666":{"crate_id":21,"path":["aho_corasick","packed","api","MatchKind"],"kind":"enum"},"17:10318:7452":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:53832:9464":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"12:0:4435":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"16:7768:7161":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:11477:4895":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"6:1662:9850":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"17:10147:8202":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"16:2937:7345":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"16:6490:7211":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"1:5746:6346":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"2:3491:4860":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"2:10574:5369":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"6:88:41895":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"20:2021:4615":{"crate_id":20,"path":["regex_syntax","ast","ErrorKind"],"kind":"enum"},"16:6656:7359":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"20:3373:128":{"crate_id":20,"path":["regex_syntax","unicode","Error"],"kind":"enum"},"1:10443:5934":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"1:4752:6083":{"crate_id":1,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"12:895:6962":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"5:3106:10585":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"9:722:6840":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"6:527:9696":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"6:5210:10237":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:10610:8221":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"2:48568:5369":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:2147:674":{"crate_id":2,"path":["core","mem","forget"],"kind":"function"},"1:11507:6219":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"1:1610:6172":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:5269:4731":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"17:10364:7479":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"6:3981:9976":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"6:3960:9968":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"1:15071:6155":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"2:48446:4581":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:46721:5845":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"2:4896:5517":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:15881:4456":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"1:10963:4685":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:3530:4869":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"12:2398:9673":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"1:13928:7795":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"16:7079:7221":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"22:812:7898":{"crate_id":22,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"13:233:9669":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:24072:6383":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"2:3103:6405":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"16:5941:7197":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"16:4599:8987":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"2:3459:4852":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"16:0:4438":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:23138:6553":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"16:7637:7230":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:47024:4680":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:47015:4692":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"9:686:6837":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"6:3877:9907":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"20:3124:4616":{"crate_id":20,"path":["regex_syntax","hir","ClassUnicode"],"kind":"struct"},"2:2953:179":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"2:24348:10589":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:46735:5847":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"12:777:3413":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"2:32692:61839":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"16:5902:7195":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"21:703:984":{"crate_id":21,"path":["aho_corasick","packed"],"kind":"module"},"2:3535:4870":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"14:11:9250":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"20:2148:7502":{"crate_id":20,"path":["regex_syntax","ast","Ast"],"kind":"enum"},"5:7067:1518":{"crate_id":5,"path":["alloc","vec"],"kind":"module"},"2:53741:9459":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"6:5398:10333":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"12:952:6166":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"16:6468:7210":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"17:12070:8434":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"6:6954:10580":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:3672:3582":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"1:11905:57737":{"crate_id":1,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"21:1861:3169":{"crate_id":21,"path":["aho_corasick","prefilter","Packed"],"kind":"struct"},"2:51671:9404":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:2765:584":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"6:6034:10440":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:46754:5848":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"17:12758:8562":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"1:1477:6166":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"2:46231:200":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:6576:6012":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"1:3755:6201":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"1:5575:6076":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"5:3395:3414":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"2:48893:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"1:4467:5363":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"1:8446:4582":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:10523:135":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"7:85:46830":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"16:5217:7083":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"17:10187:8204":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"2:24169:6653":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"16:7063:7220":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"17:2543:7448":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"20:2202:2021":{"crate_id":20,"path":["regex_syntax","ast","Concat"],"kind":"struct"},"2:46356:6460":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"16:4689:8990":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"2:50220:6424":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"6:4242:10071":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:46297:4558":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"17:10503:7454":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"5:3960:6784":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"22:914:7903":{"crate_id":22,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:13342:4889":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"6:6153:10482":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:51552:6516":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"17:3743:7419":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:48871:128":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"18:857:5906":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"17:9291:8087":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"16:3177:7327":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"6:1727:9889":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"16:6549:7171":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"1:7248:187":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"1:14630:9497":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"17:11547:8330":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"5:853:109":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"12:1881:146":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"9:234:6864":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"2:50540:122":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"6:3883:9908":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"1:5278:6293":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"2:46692:4722":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"22:1032:5906":{"crate_id":22,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"17:12383:8504":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"2:49957:4909":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"16:5530:7056":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"2:5321:4734":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"2:50735:6642":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"16:5745:7068":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:23435:6480":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:12072:4587":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"2:49518:6621":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"2:3829:138":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:8096:5936":{"crate_id":1,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"8:0:4431":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"20:2861:135":{"crate_id":20,"path":["regex_syntax","error","Formatter"],"kind":"struct"},"17:8954:7429":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"1:11088:6091":{"crate_id":1,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"17:11563:8335":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"17:12957:8622":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"2:13013:6623":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"18:774:7898":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"20:3180:2041":{"crate_id":20,"path":["regex_syntax","hir","ClassBytesRange"],"kind":"struct"},"17:13794:8907":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"2:50504:6630":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"2:51356:9401":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"21:1934:7977":{"crate_id":21,"path":["aho_corasick","prefilter","StartBytesOne"],"kind":"struct"},"2:4865:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"1:5567:6074":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"12:2032:3414":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"1:6479:10453":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"2:48362:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"6:5439:10351":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"22:153:4801":{"crate_id":22,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"2:52725:6483":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:4036:6060":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"2:24539:6670":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"2:50169:6417":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"6:4179:10066":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"1:13413:11059":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"17:13763:8900":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"16:5923:7196":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"2:25151:6657":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"17:13747:8896":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"17:9786:8188":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"17:12455:8512":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"1:6481:10455":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"6:6214:10524":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"21:1403:7925":{"crate_id":21,"path":["aho_corasick","dfa","Premultiplied"],"kind":"struct"},"17:10899:8261":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"17:11142:8279":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"20:3236:2014":{"crate_id":20,"path":["regex_syntax","hir","Group"],"kind":"struct"},"1:5431:6100":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"6:6856:10565":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"21:1178:6013":{"crate_id":21,"path":["aho_corasick","state_id","private","Sealed"],"kind":"trait"},"6:4055:10011":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:10166:8203":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:14253:61916":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"2:46878:4675":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"17:13785:8905":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"17:10266:7437":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"17:13196:8737":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"2:50520:6638":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"6:6080:10459":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:24527:6671":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"17:11335:7425":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"2:47808:178":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"6:4321:10096":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"21:1843:5914":{"crate_id":21,"path":["aho_corasick","prefilter","PrefilterState"],"kind":"struct"},"1:12567:7794":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"1:1483:6167":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"1:8453:4583":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"1:15315:9581":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:49657:5963":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"17:9431:8090":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"1:11270:6306":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"5:3554:5471":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"1:11952:6122":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"17:12406:8505":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"5:3402:6137":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"16:7264:196":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"17:13539:8824":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"2:46944:4147":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:8715:4586":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"2:14540:5468":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"21:1451:128":{"crate_id":21,"path":["aho_corasick","error","Error"],"kind":"struct"},"17:13029:8681":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"16:2959:7323":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"2:24821:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"2:10566:110":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"1:5860:6295":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"1:2651:182":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"2:53473:6519":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:50097:4722":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"16:5257:8177":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"6:6007:10430":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:10438:5867":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"5:8472:220":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:48404:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"6:1712:9880":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:14:2652":{"crate_id":2,"path":["core","write"],"kind":"macro"},"2:52615:6494":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:24423:9357":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:2909:129":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"2:10851:5552":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"2:53684:9454":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"6:6027:10436":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"11:54:6960":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"17:12026:8424":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"17:12209:8455":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"1:7436:6179":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"1:5497:6069":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"2:24461:41313":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"17:11945:8412":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"2:53657:6487":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:10250:6609":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"2:5147:4724":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"2:32640:61836":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"20:3427:1847":{"crate_id":20,"path":["regex_syntax","utf8","Utf8Sequence"],"kind":"enum"},"17:607:8097":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"2:46363:6461":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"1:12228:7800":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"17:11256:8283":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:10846:5551":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"5:3428:6138":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"1:9434:7786":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"18:661:5914":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"17:10975:8270":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"17:11234:7468":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"12:1147:6171":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"17:9160:7469":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"17:9240:7404":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"20:2122:7518":{"crate_id":20,"path":["regex_syntax","ast","WithComments"],"kind":"struct"},"6:4088:10026":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:56612:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"12:2392:2014":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"17:9275:8178":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"6:6250:10543":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"20:1980:7510":{"crate_id":20,"path":["regex_syntax","ast","parse","NestLimiter"],"kind":"struct"},"20:332:7500":{"crate_id":20,"path":["regex_syntax","ast","visitor","ClassFrame"],"kind":"enum"},"6:4410:10139":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:1108:9475":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:49857:4913":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"5:7207:7754":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"17:12442:8510":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"20:3478:1848":{"crate_id":20,"path":["regex_syntax","utf8","Utf8Sequences"],"kind":"struct"},"2:47857:5508":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:24068:6013":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"20:2698:2016":{"crate_id":20,"path":["regex_syntax","ast","GroupKind"],"kind":"enum"},"12:559:144":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"22:708:7546":{"crate_id":22,"path":["memchr","cow","Imp"],"kind":"enum"},"1:15889:4463":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"6:5311:10283":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:12077:213":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"1:3405:6040":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"5:4372:5508":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"6:4277:10073":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"18:849:5905":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"16:7281:7159":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"16:4381:8981":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:4998:4741":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"20:2561:7535":{"crate_id":20,"path":["regex_syntax","ast","ClassSetBinaryOpKind"],"kind":"enum"},"2:46848:7761":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"6:618:9749":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"17:9920:8190":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"5:8361:4564":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"6:1567:9781":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"17:13215:8738":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2:56242:6472":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"16:5668:7062":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"6:1634:9825":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"18:621:7546":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"1:7939:5936":{"crate_id":1,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"2:50072:4894":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"16:4903:8997":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"17:9756:63826":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"5:1533:6170":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:14072:151":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"2:25019:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:50043:4906":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"5:1710:6160":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"1:13394:9482":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"17:11409:8294":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"21:1278:7547":{"crate_id":21,"path":["aho_corasick","ahocorasick","StreamChunkIter"],"kind":"struct"},"21:1342:7913":{"crate_id":21,"path":["aho_corasick","classes","ByteClasses"],"kind":"struct"},"20:2912:1979":{"crate_id":20,"path":["regex_syntax","hir","literal","Literal"],"kind":"struct"},"17:13180:8734":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"1:5708:6341":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:2181:583":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"17:13515:8819":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"5:7358:7742":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"2:74:1449":{"crate_id":2,"path":["core","u32"],"kind":"module"},"2:46986:4690":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"20:2811:7512":{"crate_id":20,"path":["regex_syntax","either","Either"],"kind":"enum"},"1:3044:6252":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"16:4743:8992":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"6:1576:9787":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"20:1893:1845":{"crate_id":20,"path":["regex_syntax","is_word_byte"],"kind":"function"},"5:5:1518":{"crate_id":5,"path":["alloc","vec"],"kind":"macro"},"1:9653:7789":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"5:8241:5473":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"2:49699:5982":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:11068:7428":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"17:10394:7477":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:56677:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"16:5498:7054":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"6:5982:10412":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"6:6184:10507":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:24920:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:11985:6126":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"16:6931:7368":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"20:3053:1975":{"crate_id":20,"path":["regex_syntax","hir","HirKind"],"kind":"enum"},"5:4581:6792":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"1:14429:6247":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"17:10660:49341":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"16:7121:7225":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"17:10516:8211":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"2:2044:6024":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"17:11797:8389":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"16:7379:7176":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"16:3743:8974":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"15:230:6992":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"4:0:4430":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"17:10104:7493":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"6:1544:9771":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:49597:5974":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"17:11354:7424":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"1:11292:10440":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"1:11960:3413":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"2:50011:4910":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:14394:10671":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"1:1113:13996":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"20:3302:2057":{"crate_id":20,"path":["regex_syntax","hir","RepetitionRange"],"kind":"enum"},"5:0:283":{"crate_id":5,"path":["alloc"],"kind":"module"},"17:10476:7453":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"1:9427:11598":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"17:13369:8777":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"1:15897:4469":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"16:4467:8984":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"2:51653:6496":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:53535:6484":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"5:5976:1353":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"22:820:5913":{"crate_id":22,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"21:1598:7564":{"crate_id":21,"path":["aho_corasick","packed","api","ForceAlgorithm"],"kind":"enum"},"6:4081:10023":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"6:4012:9994":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"5:1256:11057":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"17:11591:8339":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"1:4146:6275":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:3654:4878":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"6:6097:10461":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"12:2040:5473":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"2:52691:6501":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:14417:9576":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"17:11085:7472":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:46995:4691":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"17:11725:8362":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"2:2213:1057":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"2:50384:6431":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:10511:13995":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"1:10428:56302":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"21:1771:7949":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddySlim2Mask256"],"kind":"struct"},"2:50516:6634":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"17:11956:8415":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"20:2718:2019":{"crate_id":20,"path":["regex_syntax","ast","CaptureName"],"kind":"struct"},"12:2059:6137":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"1:8777:4595":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"6:6114:10466":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"5:2376:6822":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"5:6562:5473":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"2:2963:186":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:10914:1977":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"1:853:5946":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"1:11944:3414":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"17:12746:8286":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"1:9394:7785":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"2:51400:6523":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"20:3107:1985":{"crate_id":20,"path":["regex_syntax","hir","Class"],"kind":"enum"},"1:10643:6245":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"16:6130:7201":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"20:2986:7540":{"crate_id":20,"path":["regex_syntax","hir","translate","Flags"],"kind":"struct"},"1:14142:5501":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"2:8682:4672":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"2:9154:3581":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:11890:10669":{"crate_id":1,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"21:1663:4889":{"crate_id":21,"path":["aho_corasick","packed","pattern","Pattern"],"kind":"struct"},"2:3526:4868":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"17:10058:7497":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"21:1746:7945":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddySlim1Mask128"],"kind":"struct"},"2:53756:9460":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:11238:6085":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:2152:6139":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"12:466:11052":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"6:4485:10171":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:3042:6251":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"17:13233:8746":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"16:5784:7069":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"5:4509:3414":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"6:4020:9996":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:48589:5371":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:12067:164":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"1:11314:6001":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"1:4476:58746":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"16:3402:7081":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"17:10136:8189":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:47874:4754":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"17:0:4439":{"crate_id":17,"path":["object"],"kind":"module"},"2:46594:9380":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"17:13840:8921":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"1:11022:6086":{"crate_id":1,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"1:4383:6024":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"2:11627:5984":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:14061:6054":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"1:7834:5936":{"crate_id":1,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"2:8742:3864":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"16:4660:8989":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"1:6573:6010":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"9:692:6839":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"16:7184:7370":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"20:1870:4633":{"crate_id":20,"path":["regex_syntax","utf8","ScalarRange"],"kind":"struct"},"9:41:6889":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"17:12921:8591":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:0:493":{"crate_id":2,"path":["core"],"kind":"module"},"17:12318:8474":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"2:5143:2662":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"1:14634:6101":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"20:2938:8067":{"crate_id":20,"path":["regex_syntax","hir","translate","TranslatorBuilder"],"kind":"struct"},"16:5698:7066":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"2:23238:6113":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"5:6759:4580":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"1:10303:7792":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"17:510:8095":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"1:13859:6183":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"16:5289:7153":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"16:5374:7045":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"20:2001:7992":{"crate_id":20,"path":["regex_syntax","ast","print","Writer"],"kind":"struct"},"6:4142:10054":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"1:14931:6134":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"2:47976:3414":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"1:8295:6124":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"1:859:5947":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"1:11868:6186":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"16:3340:7077":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"18:0:1569":{"crate_id":18,"path":["memchr"],"kind":"module"},"6:6931:10574":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:3430:969":{"crate_id":2,"path":["core","ops"],"kind":"module"},"6:3896:9917":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:4161:6388":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"1:5519:6071":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"6:4061:10013":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:12195:5978":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"6:4373:10125":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"1:14960:9578":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"1:11196:6288":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"5:2619:6809":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"5:8308:3413":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"17:10127:7452":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"17:10962:8269":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"22:300:3150":{"crate_id":22,"path":["memchr","memmem"],"kind":"module"},"17:11017:128":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"6:1626:9820":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:11518:6220":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"6:4509:10178":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"7:38:46823":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"1:11501:3414":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:10801:143":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"1:11071:6090":{"crate_id":1,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"2:9157:4670":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"21:1268:4771":{"crate_id":21,"path":["aho_corasick","ahocorasick","StreamFindIter"],"kind":"struct"},"2:23387:19108":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"17:11890:8395":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"12:1238:6973":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"2:3743:4872":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"17:13522:8820":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"1:2911:6246":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"20:2953:55718":{"crate_id":20,"path":["regex_syntax","hir","translate","HirFrame"],"kind":"enum"},"2:24788:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"22:288:1569":{"crate_id":22,"path":["memchr","memchr","memchr"],"kind":"function"},"2:11385:3414":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"17:13421:8790":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"17:9259:8177":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"2:50237:6425":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"17:12048:8433":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:47865:3413":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:12278:5970":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"2:47043:4694":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:11245:6342":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"17:13481:8806":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"1:14399:10673":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"2:52425:6518":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"6:4516:10181":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"1:14067:6052":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"2:3475:4856":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"5:8287:6746":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"1:2126:5473":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"17:13404:8783":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"20:2519:7532":{"crate_id":20,"path":["regex_syntax","ast","ClassSetRange"],"kind":"struct"},"6:4532:10188":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:46773:6681":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:14795:7797":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"2:23228:6013":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"2:48859:108":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"2:13560:110":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"18:651:5910":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"1:2361:9481":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"5:984:6773":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"20:3392:55721":{"crate_id":20,"path":["regex_syntax","unicode","ClassQuery"],"kind":"enum"},"2:22847:61339":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"22:836:5914":{"crate_id":22,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:23049:6547":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"17:12015:8423":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"5:7477:3413":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"2:49142:2298":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"16:2883:7340":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"1:13245:6300":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"2:50063:4896":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:10794:6199":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:11516:5977":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:11105:6203":{"crate_id":1,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"1:5978:6303":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"6:1740:9892":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"17:11615:8343":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"5:8389:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"1:1460:6164":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"18:712:4806":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"20:3406:63835":{"crate_id":20,"path":["regex_syntax","unicode","CanonicalClassQuery"],"kind":"enum"},"6:5541:10374":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:13408:6420":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"17:11102:49159":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"2:51530:6512":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"12:1666:6983":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"17:8929:49151":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:48152:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"17:11314:7445":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"16:2905:7322":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"17:11754:8373":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:50191:6418":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"20:3282:2035":{"crate_id":20,"path":["regex_syntax","hir","RepetitionKind"],"kind":"enum"},"6:593:9736":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"20:2255:7521":{"crate_id":20,"path":["regex_syntax","ast","SpecialLiteralKind"],"kind":"enum"},"18:704:7898":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"5:6851:6024":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"5:5962:7752":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"5:7753:5478":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"16:5566:7057":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"20:2891:4625":{"crate_id":20,"path":["regex_syntax","hir","interval","IntervalSetIter"],"kind":"struct"},"6:5547:10375":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:6717:4679":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"17:12512:8520":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"21:1887:7918":{"crate_id":21,"path":["aho_corasick","prefilter","RareByteOffsets"],"kind":"struct"},"1:5553:6072":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"16:6012:7152":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"6:5366:10320":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"1:1105:9474":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"2:3437:4854":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:11256:6298":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"16:5639:7059":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"2:46972:9387":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"16:7051:7219":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"6:6937:10575":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:3907:4880":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"5:8314:3413":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"17:12607:8544":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"1:10648:6081":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"2:47331:4668":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:4351:4664":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"18:896:5909":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"6:1912:43268":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"1:6219:6012":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"21:1225:7546":{"crate_id":21,"path":["aho_corasick","ahocorasick","Imp"],"kind":"enum"},"12:2072:6139":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"2:47074:4697":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"22:0:1569":{"crate_id":22,"path":["memchr"],"kind":"module"},"6:4270:6305":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"2:49807:4911":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"16:6949:7369":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"2:52221:9413":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"17:11530:8328":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"1:5513:6070":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"2:52455:6521":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:8433:11058":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"17:294:8093":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"1:12053:4585":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"22:869:5916":{"crate_id":22,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"5:2284:6771":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:2286:6410":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:3058:6256":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"6:3920:9935":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:49911:4912":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"20:2453:7529":{"crate_id":20,"path":["regex_syntax","ast","ClassBracketed"],"kind":"struct"},"1:2917:6033":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"2:9534:3266":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"14:244:9254":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"14:189:9250":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"16:3243:7330":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"2:11668:1617":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"16:5649:7061":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"6:6120:10468":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"21:1752:7946":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddySlim1Mask256"],"kind":"struct"},"9:963:6904":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"2:3405:4927":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"20:2592:7537":{"crate_id":20,"path":["regex_syntax","ast","AssertionKind"],"kind":"enum"},"17:13557:8828":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:49356:5965":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"5:4665:7744":{"crate_id":5,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"1:9143:6110":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"21:1947:7979":{"crate_id":21,"path":["aho_corasick","prefilter","StartBytesThree"],"kind":"struct"},"5:1729:6162":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"6:1721:9886":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:13660:8880":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"17:10223:7408":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"21:1566:7943":{"crate_id":21,"path":["aho_corasick","nfa","AllBytesIter"],"kind":"struct"},"6:1526:9763":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"17:12282:8468":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"2:50674:203":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"17:10643:8224":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"1:10278:7790":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"1:2420:7800":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:5152:4725":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"17:9826:7452":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"5:3825:3414":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"5:3838:5508":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"1:14453:119":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"2:46714:4903":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"17:13352:8774":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"1:15887:4461":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:10245:6608":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:11434:1616":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"5:8436:6780":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"12:1103:6169":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"2:51977:6497":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"2:23437:6382":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"20:2579:7536":{"crate_id":20,"path":["regex_syntax","ast","Assertion"],"kind":"struct"},"1:15888:4462":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:53871:9465":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"21:1537:1640":{"crate_id":21,"path":["aho_corasick","nfa","Compiler"],"kind":"struct"},"1:7093:9486":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"6:6129:10471":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"1:11894:57726":{"crate_id":1,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"2:49759:4899":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"12:2419:4564":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"1:0:1344":{"crate_id":1,"path":["std"],"kind":"module"},"1:10973:4698":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"9:603:10807":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"6:6925:10573":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:11696:5986":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"20:2135:7519":{"crate_id":20,"path":["regex_syntax","ast","Comment"],"kind":"struct"},"17:10949:8268":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"17:13281:8753":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"6:5288:10270":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"17:10831:7452":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"1:3459:6047":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"17:9033:49153":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"2:5298:4733":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"20:2484:7531":{"crate_id":20,"path":["regex_syntax","ast","ClassSetItem"],"kind":"enum"},"2:3370:4737":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"2:47115:4700":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"17:13917:8942":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:24332:6569":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:15253:6293":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"5:981:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"1:7314:120":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"1:7484:6182":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"17:12196:8453":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"17:13377:8779":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"22:170:4802":{"crate_id":22,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"22:949:7898":{"crate_id":22,"path":["memchr","memmem","x86","avx","std","Forward"],"kind":"struct"},"18:744:63831":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:12796:3041":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"9:927:46927":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"12:815:6163":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"6:4038:10005":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:23768:19127":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"17:9873:8189":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"17:13953:8946":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2:50748:159":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"5:5948:7750":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"17:9087:49155":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"22:986:3213":{"crate_id":22,"path":["memchr","memmem","Finder"],"kind":"struct"},"5:1719:6161":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"5:7731:5477":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2:3853:6468":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"21:1656:7575":{"crate_id":21,"path":["aho_corasick","packed","pattern","PatternIter"],"kind":"struct"},"12:1703:6985":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"1:12082:214":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:3463:4855":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"2:25085:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"17:9930:63822":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"17:11305:8286":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"2:52875:6507":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"20:3136:4617":{"crate_id":20,"path":["regex_syntax","hir","ClassUnicodeIter"],"kind":"struct"},"2:49130:147":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"20:3217:2002":{"crate_id":20,"path":["regex_syntax","hir","WordBoundary"],"kind":"enum"},"5:5910:4892":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:5278:4732":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"1:3060:6257":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:9161:4671":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"20:2872:4624":{"crate_id":20,"path":["regex_syntax","hir","interval","IntervalSet"],"kind":"struct"},"1:12087:6134":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"21:1493:7935":{"crate_id":21,"path":["aho_corasick","nfa","Dense"],"kind":"struct"},"5:1547:6172":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"17:13612:8843":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"16:7702:7164":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:8717:121":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"17:10422:8208":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"5:6739:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"16:2754:7078":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"17:12585:8533":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"6:4230:10070":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:47907:4755":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"16:4840:8995":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"17:10068:7437":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"5:69:5470":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"17:9746:8187":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"6:157:41961":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"16:7471:7151":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"17:10571:7431":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:48808:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"20:3249:2016":{"crate_id":20,"path":["regex_syntax","hir","GroupKind"],"kind":"enum"},"17:13565:8830":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"1:8288:6123":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"1:15900:4472":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"1:15388:7001":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:50765:6546":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"2:47064:4696":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"2:10563:110":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"21:1615:3170":{"crate_id":21,"path":["aho_corasick","packed","api","Searcher"],"kind":"struct"},"21:1184:4772":{"crate_id":21,"path":["aho_corasick","state_id","StateID"],"kind":"trait"},"21:1785:7951":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddySlim3Mask128"],"kind":"struct"},"17:13428:8791":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"18:694:5916":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"5:844:227":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"6:4402:10136":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:39144:6812":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:51570:9403":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:50528:6637":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"12:764:5508":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:4489:3413":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:2141:6137":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"2:52045:6485":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"21:1925:7976":{"crate_id":21,"path":["aho_corasick","prefilter","StartBytesBuilder"],"kind":"struct"},"16:5998:7137":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:47311:4664":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"17:13271:8752":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"18:811:3213":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:4219:6057":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"12:880:5471":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"1:14404:6081":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"20:2189:2025":{"crate_id":20,"path":["regex_syntax","ast","Alternation"],"kind":"struct"},"2:32632:4653":{"crate_id":2,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"5:1296:6804":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"17:9988:49204":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"22:895:7899":{"crate_id":22,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"17:11130:8278":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"5:7312:5473":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"16:6141:7202":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:8632:4674":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"17:10775:8256":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"1:7599:6188":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"17:12117:8442":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:11196:6013":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"17:9064:49154":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"6:5229:10239":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"16:7741:7232":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"1:5425:6098":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"16:3770:8975":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"5:8449:6781":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"21:1801:7953":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddyFat3Mask256"],"kind":"struct"},"16:7754:7233":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"16:6173:7203":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"6:5478:10361":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:3506:4864":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"17:13037:8683":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"6:4425:10143":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:4146:6389":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"1:8187:5936":{"crate_id":1,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"1:9563:7788":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"5:1055:1857":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"1:15377:7001":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"11:46:9677":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"2:47105:4699":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"6:601:9741":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"12:1256:6172":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"16:3461:7333":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"1:14801:7798":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"5:8566:5472":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"16:3051:7382":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"1:7062:9486":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:1592:6170":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"17:12700:8553":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"17:2484:49242":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"2:2859:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"1:10980:1833":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"1:10228:9582":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"2:4841:6449":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"2:10572:5368":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"2:3248:116":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"17:13306:8762":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:5214:4730":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"5:2396:6805":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2:8449:4576":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"9:1075:6907":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"1:1431:5473":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"16:7090:7222":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"1:15896:4468":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"1:1456:6163":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"1:5505:6068":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:50206:6421":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"20:2842:128":{"crate_id":20,"path":["regex_syntax","error","Error"],"kind":"enum"},"17:2314:7480":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"6:0:803":{"crate_id":6,"path":["libc"],"kind":"module"},"1:6723:6002":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"1:10799:4615":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"1:8000:7771":{"crate_id":1,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"16:6679:7361":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"2:23291:6382":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"18:837:3170":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"21:1793:7952":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddySlim3Mask256"],"kind":"struct"},"21:1838:7960":{"crate_id":21,"path":["aho_corasick","prefilter","PrefilterObj"],"kind":"struct"},"6:634:9759":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"12:114:11051":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"20:1957:7508":{"crate_id":20,"path":["regex_syntax","ast","parse","GroupState"],"kind":"enum"},"1:1489:6168":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"2:46187:196":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:49618:5964":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:11048:6089":{"crate_id":1,"path":["std","net","ip","IpAddr"],"kind":"enum"},"1:11449:6216":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"16:3297:7384":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"2:24854:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"17:9361:8088":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"22:1004:5904":{"crate_id":22,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"16:7355:7155":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"16:4495:8985":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"22:887:4806":{"crate_id":22,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"17:13873:8927":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"16:3576:8108":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"9:1020:6906":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"16:2772:7346":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"2:47992:3413":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"15:248:6993":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"2:53794:9462":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"5:5861:7742":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"1:6924:4746":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"5:777:9329":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"16:6060:7193":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"2:48278:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"16:6873:4754":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"1:5759:6347":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"1:6467:6071":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"20:3173:4619":{"crate_id":20,"path":["regex_syntax","hir","ClassBytesIter"],"kind":"struct"},"6:6057:10458":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"6:1558:9776":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"16:7868:128":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"17:10622:8222":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"2:10570:120":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"6:3972:9971":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"5:2005:5471":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"5:1684:3413":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"5:8226:3413":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"17:9466:8091":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"1:3803:128":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"17:9636:8185":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"1:2397:9482":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"20:2436:7528":{"crate_id":20,"path":["regex_syntax","ast","ClassUnicodeOpKind"],"kind":"enum"},"2:57952:9472":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"1:4180:6055":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"16:7131:7226":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"17:12003:8421":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"2:51422:6511":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:49993:1611":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"1:10993:4906":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"17:11212:7470":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"6:4440:10150":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:9655:4889":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"2:2263:6407":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"2:46667:4904":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:10416:6013":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"20:2643:2035":{"crate_id":20,"path":["regex_syntax","ast","RepetitionKind"],"kind":"enum"},"16:6381:7167":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"17:10340:7481":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"16:3103:7336":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"17:12130:8445":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"16:6159:7157":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:47095:4698":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"6:6229:10531":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"1:11134:4622":{"crate_id":1,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"2:10039:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"17:10558:8217":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"1:11432:6215":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:53695:9455":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"6:6243:10540":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"20:2533:7533":{"crate_id":20,"path":["regex_syntax","ast","ClassSetUnion"],"kind":"struct"},"14:250:9255":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"2:12328:7767":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"2:51708:9405":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"18:136:4800":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:53704:9456":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:37928:180":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"21:1413:7926":{"crate_id":21,"path":["aho_corasick","dfa","PremultipliedByteClass"],"kind":"struct"},"12:162:6974":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"16:3366:7337":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"1:15884:4459":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"20:1928:4610":{"crate_id":20,"path":["regex_syntax","ast","parse","Parser"],"kind":"struct"},"17:12634:8546":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"16:5959:7085":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"1:5151:6285":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"10:0:4433":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"17:12660:8548":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"21:1467:7551":{"crate_id":21,"path":["aho_corasick","nfa","NFA"],"kind":"struct"},"2:48841:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"2:23380:6013":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"21:1901:7969":{"crate_id":21,"path":["aho_corasick","prefilter","RareBytesOne"],"kind":"struct"},"2:49789:1616":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"5:4709:7746":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"20:0:1652":{"crate_id":20,"path":["regex_syntax"],"kind":"module"},"16:7247:7187":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"2:8022:4684":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"22:137:4800":{"crate_id":22,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:9439:11536":{"crate_id":1,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"16:7659:7231":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"17:11769:8379":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"1:12558:129":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"2:46858:9386":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"2:48001:180":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"13:0:4429":{"crate_id":13,"path":["std_detect"],"kind":"module"},"1:15902:4474":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"6:6979:10583":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"20:2109:6824":{"crate_id":20,"path":["regex_syntax","ast","Position"],"kind":"struct"},"2:3512:4865":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"16:7169:7170":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"17:11968:8417":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"17:9948:8191":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"5:7891:239":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:8127:6555":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"9:776:6886":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"2:52023:6482":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"16:6630:7357":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"18:729:63833":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:50349:6428":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"17:10211:8206":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"2:46329:4874":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"2:52661:6498":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"17:12770:8569":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"17:13257:8751":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"1:13783:6184":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"2:24887:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"17:13361:8775":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"1:15023:6146":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:49352:6739":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"6:521:9693":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"5:1673:5508":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"22:976:5902":{"crate_id":22,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:11359:6205":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"6:4346:10108":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:11205:218":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:49121:5553":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:15906:4478":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"16:5869:191":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:53333:6515":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:53081:6527":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:9533:3267":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"6:5293:10271":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"16:3199:7328":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"20:2630:7538":{"crate_id":20,"path":["regex_syntax","ast","RepetitionOp"],"kind":"struct"},"17:10851:8259":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"5:1760:6801":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"16:5887:7074":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"6:5204:10234":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:47320:4666":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"16:6286:6990":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:5078:4723":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"1:10902:6061":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"17:9561:7446":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"16:3494:8104":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"17:12250:8461":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:3453:4853":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:9512:6282":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"2:53223:6495":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:15053:6148":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"1:10930:6035":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"1:13744:6182":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"1:9267:11139":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"1:8863:4591":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"6:4005:9990":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"6:5567:10389":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:3611:3334":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"17:12731:8559":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"1:4410:6032":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"17:13495:8813":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"21:1457:4615":{"crate_id":21,"path":["aho_corasick","error","ErrorKind"],"kind":"enum"},"1:8545:4594":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"1:14894:6234":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"1:11250:6345":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"5:1751:196":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"16:6026:7150":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"18:611:5911":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"2:8636:4673":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"5:6775:6753":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2:25052:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"2:6640:4689":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"2:53619:6522":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"2:46336:6390":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:50727:6641":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"17:10455:7450":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"1:15894:4466":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"1:6649:6005":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"9:469:10797":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"6:5405:10334":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"1:10942:6036":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"17:10545:8215":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"2:11710:5985":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"16:5460:7052":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"17:9883:63828":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"17:11457:8309":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"6:3907:9925":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"20:2467:7530":{"crate_id":20,"path":["regex_syntax","ast","ClassSet"],"kind":"enum"},"17:11002:8272":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"20:2928:7991":{"crate_id":20,"path":["regex_syntax","hir","print","Printer"],"kind":"struct"},"12:2253:6169":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:3369:3987":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"17:11653:8347":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"5:7551:7742":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:8197:4659":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"2:51468:6491":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2:47052:4695":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"5:4765:7746":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:15883:4458":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"1:1031:4720":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"16:3265:7331":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"1:8610:163":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"21:1444:5867":{"crate_id":21,"path":["aho_corasick","dfa","Builder"],"kind":"struct"},"20:3387:4611":{"crate_id":20,"path":["regex_syntax","unicode","UnicodeWordError"],"kind":"struct"},"6:4454:10158":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:46253:199":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:25118:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"1:6647:6004":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"2:2884:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"16:3521:8972":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"20:2758:7541":{"crate_id":20,"path":["regex_syntax","ast","FlagsItem"],"kind":"struct"},"2:2391:4740":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"17:13463:8802":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"6:533:9699":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"16:3029:7325":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"0:55:1620":{"crate_id":0,"path":["regex","bytes"],"kind":"module"},"2:32626:4652":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"12:399:6976":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"1:14665:6187":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"6:4356:10114":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"12:183:6978":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"1:1452:6162":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"17:10304:7443":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"17:11514:8324":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"1:10986:1616":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"17:9206:49157":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:12573:8531":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:49607:5975":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"21:1908:7971":{"crate_id":21,"path":["aho_corasick","prefilter","RareBytesTwo"],"kind":"struct"},"1:1397:3413":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"12:2036:3413":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:53675:9453":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"6:4362:10117":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:53809:9463":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"2:50088:4903":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:3600:4739":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:46211:197":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"5:3814:161":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"20:3366:4610":{"crate_id":20,"path":["regex_syntax","parser","Parser"],"kind":"struct"},"17:12543:8525":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"2:51601:6504":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"20:3462:1846":{"crate_id":20,"path":["regex_syntax","utf8","Utf8Range"],"kind":"struct"},"6:3933:9945":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"18:754:63834":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"6:4493:10173":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"20:2684:2014":{"crate_id":20,"path":["regex_syntax","ast","Group"],"kind":"struct"},"1:2123:3413":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"2:3614:131":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:25520:6577":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"20:2007:128":{"crate_id":20,"path":["regex_syntax","ast","Error"],"kind":"struct"},"2:23426:6013":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"1:2481:5758":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"17:10874:8260":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"16:6050:7198":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"2:4095:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:49587:5976":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:46954:4687":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:12596:9564":{"crate_id":1,"path":["std","sys","unix","fs","TimespecDebugAdapter"],"kind":"struct"},"12:2269:6170":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"16:6858:7365":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"2:22881:61736":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"2:3479:4858":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:14379:6014":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"6:3993:9981":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"5:4308:7742":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"1:15232:6286":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"16:5685:7065":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"1:10468:5501":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:11554:5987":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:37952:4806":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"5:8420:6682":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:14779:7796":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"1:14437:130":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"22:879:7898":{"crate_id":22,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:50561:6237":{"crate_id":2,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"2:13362:4888":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"18:766:7908":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"16:6557:7213":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"18:790:4769":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"2:48929:5367":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"2:46963:4688":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"16:5605:7058":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"1:14912:10675":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"20:2732:7539":{"crate_id":20,"path":["regex_syntax","ast","SetFlags"],"kind":"struct"},"16:7141:7227":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"14:0:4436":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"17:9646:63823":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"17:10530:8212":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"17:12237:8460":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"6:4198:10067":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"16:4316:8979":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"16:3129:7335":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"2:52069:6486":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:3835:4875":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:47984:5508":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"6:5974:10407":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"2:14107:61915":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"2:49105:5554":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"5:8217:5469":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"21:1383:5765":{"crate_id":21,"path":["aho_corasick","dfa","Standard"],"kind":"struct"},"16:3221:7329":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"5:1152:7742":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"1:7422:6178":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"6:4116:10042":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"6:1588:9796":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"18:866:5907":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"17:10407:7476":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:48194:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:24477:41322":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:22834:4806":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"6:4208:10068":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"1:3801:207":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"21:1215:2664":{"crate_id":21,"path":["aho_corasick","ahocorasick","AhoCorasick"],"kind":"struct"},"2:48068:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"21:1297:7548":{"crate_id":21,"path":["aho_corasick","ahocorasick","StreamChunk"],"kind":"enum"},"22:941:7908":{"crate_id":22,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"6:1531:9765":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"17:13507:8816":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"2:23962:6112":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:13761:11599":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"2:24440:41321":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"17:11168:8280":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"2:13351:3170":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:2130:5471":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"2:50532:6631":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"20:2900:2667":{"crate_id":20,"path":["regex_syntax","hir","literal","Literals"],"kind":"struct"},"17:12482:8515":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"1:13481:6231":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"1:15903:4475":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"17:13155:8724":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"12:1682:6984":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"12:432:6975":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"18:637:7898":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"17:12093:8440":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"1:12030:6129":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"2:13271:3583":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"6:672:42295":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:47286:4661":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"17:11640:8346":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"5:1072:3414":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"17:10925:8266":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"2:49569:5973":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"6:607:9744":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"16:2792:7080":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:50684:9400":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"2:23102:6378":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"14:194:47499":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"17:9517:1833":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"17:542:7089":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"17:9131:49156":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"1:15907:4479":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"2:10513:5363":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"1:12106:6234":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"2:48110:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:5753:784":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:53779:9461":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"2:24415:9356":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"20:1894:7504":{"crate_id":20,"path":["regex_syntax","ast","parse","Primitive"],"kind":"enum"},"2:13089:6626":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"14:231:6750":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"1:783:7789":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"2:3496:4861":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"12:2412:9675":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"18:820:5903":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"1:14460:6035":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"17:13129:8718":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:23763:6384":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"2:47084:4682":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"12:750:3414":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"22:1060:5908":{"crate_id":22,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"20:2546:7534":{"crate_id":20,"path":["regex_syntax","ast","ClassSetBinaryOp"],"kind":"struct"},"16:6433:7209":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"21:1308:2665":{"crate_id":21,"path":["aho_corasick","ahocorasick","AhoCorasickBuilder"],"kind":"struct"},"6:5186:10221":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"21:1817:7958":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","Mask256"],"kind":"struct"},"2:4853:6450":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"2:48826:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"20:1991:7989":{"crate_id":20,"path":["regex_syntax","ast","print","PrinterBuilder"],"kind":"struct"},"2:24400:6565":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"5:1518:6171":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:7139:188":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"21:1503:2215":{"crate_id":21,"path":["aho_corasick","nfa","Transitions"],"kind":"enum"},"16:6099:7200":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"17:4157:7432":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"5:383:5523":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"17:13859:8925":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"2:49578:5972":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"16:5176:9000":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"1:1146:11594":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"2:5529:5838":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"21:1916:7974":{"crate_id":21,"path":["aho_corasick","prefilter","RareBytesThree"],"kind":"struct"},"14:56:8309":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"1:2326:604":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:46894:4676":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"17:11671:8356":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"5:7935:7754":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"2:23151:6013":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"2:3467:4859":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:10711:6046":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"2:3484:4863":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"1:7456:6180":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"6:4067:10015":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:8505:2072":{"crate_id":2,"path":["core","iter","sources","repeat","repeat"],"kind":"function"},"17:11381:8290":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:48945:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"2:3171:150":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:56651:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:4538:10191":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"5:8279:196":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"20:3382:4628":{"crate_id":20,"path":["regex_syntax","unicode","CaseFoldError"],"kind":"struct"},"5:8257:62408":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"5:1502:6169":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"6:4474:10165":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:48236:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"1:11491:6217":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"2:14183:9349":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:4492:6038":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"1:15882:4457":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"5:3436:6136":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"2:51690:6481":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:2147:6138":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"2:11409:5508":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"2:2502:5518":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"2:2862:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"17:13887:8934":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"2:8874:158":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"17:13323:8767":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2:5034:4742":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"6:5247:10249":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"5:4281:5473":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"5:4036:7742":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:7470:6181":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"20:3198:1994":{"crate_id":20,"path":["regex_syntax","hir","Anchor"],"kind":"enum"},"16:6604:7214":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"1:10665:6082":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"2:7159:4702":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:10578:5371":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"17:11181:8282":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"17:12431:8509":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"1:2135:6136":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:50692:192":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"1:6477:10451":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"2:51376:9402":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:2510:5759":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"1:1261:144":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"17:12302:8469":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:46934:4686":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"17:13595:8836":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"12:928:6161":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"1:14862:6185":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:23175:6548":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"21:1940:7978":{"crate_id":21,"path":["aho_corasick","prefilter","StartBytesTwo"],"kind":"struct"},"2:46698:5844":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"21:1423:6201":{"crate_id":21,"path":["aho_corasick","dfa","Repr"],"kind":"struct"},"20:2229:7520":{"crate_id":20,"path":["regex_syntax","ast","LiteralKind"],"kind":"enum"},"2:8669:137":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:51947:6493":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"20:2922:7989":{"crate_id":20,"path":["regex_syntax","hir","print","PrinterBuilder"],"kind":"struct"},"2:39184:5359":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"17:13293:8756":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"5:3110:62490":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"6:4446:10153":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"21:1894:7968":{"crate_id":21,"path":["aho_corasick","prefilter","RareByteOffset"],"kind":"struct"},"2:3471:4857":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"2:24513:6710":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"2:53730:9458":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:1374:3414":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"16:6980:7218":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"2:6900:62071":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"2:49939:4908":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"16:4975:8999":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:8497:4584":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"12:1784:7740":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"6:5433:10348":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"6:6908:10568":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"6:4464:10164":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:3812:4873":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"15:269:6997":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"6:539:9701":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"21:1758:7947":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddyFat1Mask256"],"kind":"struct"},"2:47849:3414":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"2:49765:4898":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"2:24388:6564":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"12:1203:6972":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"17:10801:7422":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"17:11603:8340":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"6:5240:10247":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:49747:4902":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"18:885:5908":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"21:1809:7957":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","Mask128"],"kind":"struct"},"5:3114:62491":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:51631:6492":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"16:6342:7207":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"6:4287:10080":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"16:4775:8993":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"6:4296:10085":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"1:6841:6016":{"crate_id":1,"path":["std","os","net","tcp","TcpStreamExt"],"kind":"trait"},"6:3966:9969":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:4256:6052":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"1:15899:4471":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:7936:3010":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"17:11713:8361":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"17:13331:8770":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"12:2045:5471":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"17:10115:7494":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"16:2839:7320":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"2:49839:4914":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:2917:185":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:7602:6189":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"17:12716:8555":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"6:1694:9873":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"17:10198:8205":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:22902:61733":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"17:11689:8357":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"16:6533:7352":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:15038:6147":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"2:46415:6589":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"16:7238:7173":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"1:15170:6092":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:46615:6585":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"17:13573:8831":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"2:4:985":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"2:48026:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"16:4942:8998":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"1:15901:4473":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"17:11013:8273":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"17:11742:8370":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"1:14874:6186":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"1:15905:4477":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"15:0:4437":{"crate_id":15,"path":["addr2line"],"kind":"module"},"16:7295:7160":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"17:11922:8405":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"0:0:1653":{"crate_id":0,"path":["regex"],"kind":"module"},"20:3040:1844":{"crate_id":20,"path":["regex_syntax","hir","Hir"],"kind":"struct"},"2:3364:215":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"17:13817:8920":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"1:10999:6085":{"crate_id":1,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"21:1358:7923":{"crate_id":21,"path":["aho_corasick","classes","ByteClassBuilder"],"kind":"struct"},"21:1868:7963":{"crate_id":21,"path":["aho_corasick","prefilter","RareBytesBuilder"],"kind":"struct"},"22:290:3148":{"crate_id":22,"path":["memchr","memchr","memchr2"],"kind":"function"},"17:299:8094":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"1:7539:6184":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"6:1537:9768":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:50397:4915":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"6:4148:10056":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"2:39148:6387":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"1:3381:7769":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"20:3268:2027":{"crate_id":20,"path":["regex_syntax","hir","Repetition"],"kind":"struct"},"16:6075:7154":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"16:5427:7050":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"17:10048:8199":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"5:7048:6741":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"16:7323:7175":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"2:47933:207":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"22:957:7898":{"crate_id":22,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"1:10534:14996":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"17:12674:8551":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"18:801:5902":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"6:4127:10047":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:3372:222":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"16:7782:7162":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"2:50363:6429":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:12772:6737":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"21:1350:7921":{"crate_id":21,"path":["aho_corasick","classes","ByteClassRepresentatives"],"kind":"struct"},"1:10417:5948":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"6:6943:10576":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:50081:4893":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:15339:10676":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"2:22900:61735":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"6:6671:10555":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"16:4871:8996":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"6:6643:10552":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"1:7739:11597":{"crate_id":1,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"12:971:6167":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"17:12496:8518":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"1:2654:181":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:13332:1596":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"1:10527:6173":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"21:1645:7566":{"crate_id":21,"path":["aho_corasick","packed","pattern","Patterns"],"kind":"struct"},"1:3284:6044":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"2:8673:152":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"17:12687:8552":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"1:7734:5935":{"crate_id":1,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"12:2404:63818":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"1:1601:6171":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"2:57973:9473":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"6:5447:10353":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:24953:5941":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"20:3143:1993":{"crate_id":20,"path":["regex_syntax","hir","ClassUnicodeRange"],"kind":"struct"},"1:15895:4467":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:50285:6426":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"16:2981:7334":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"17:13908:8940":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:11154:6334":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"2:49152:9395":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"16:7110:7224":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"2:50777:5522":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:48575:5368":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"6:5378:10325":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"17:9716:63830":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"16:7155:7228":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"16:7208:7229":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"21:1560:7942":{"crate_id":21,"path":["aho_corasick","nfa","QueuedSet"],"kind":"struct"},"16:4628:8988":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"2:14456:142":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"6:5149:10195":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"17:9706:8186":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"6:1621:9818":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:3620:133":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:49160:9396":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:4143:6274":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"17:13549:8827":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"6:565:9721":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"16:2733:7079":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"17:13440:8797":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"22:1041:5907":{"crate_id":22,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:46925:4678":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"20:3323:4620":{"crate_id":20,"path":["regex_syntax","hir","HirInfo"],"kind":"struct"},"17:9579:129":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"6:626:9754":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"6:6896:10566":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"12:940:6165":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"1:4428:6034":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"1:11264:6287":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"9:900:9678":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"6:1764:9901":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"1:8646:9488":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"16:5362:7044":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"5:2266:7743":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"17:1236:8099":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:3587:117":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"17:10814:7423":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"2:49644:4675":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:4829:6204":{"crate_id":1,"path":["std","net","ip","display_buffer","IpDisplayBuffer"],"kind":"struct"},"22:826:5910":{"crate_id":22,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"6:161:41962":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"20:1969:7509":{"crate_id":20,"path":["regex_syntax","ast","parse","ClassState"],"kind":"enum"},"1:1466:6165":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"1:14647:56303":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"1:10638:6109":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"17:11579:8336":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"2:13073:6625":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:2914:6248":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"6:4256:10072":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:46275:201":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"6:6268:10546":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:3165:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"6:545:9704":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"1:10655:6247":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"6:1600:9804":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:46903:4685":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"16:6190:7204":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"7:0:1496":{"crate_id":7,"path":["unwind"],"kind":"module"},"1:2119:3414":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:2188:4648":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"6:6205:10521":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"1:8195:2298":{"crate_id":1,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"1:10496:13993":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"21:1679:5867":{"crate_id":21,"path":["aho_corasick","packed","teddy","compile","Builder"],"kind":"struct"},"21:1607:5867":{"crate_id":21,"path":["aho_corasick","packed","api","Builder"],"kind":"struct"},"16:6035:7192":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"6:4110:10039":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"17:9396:8089":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:15893:4465":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"1:1441:5471":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"16:5303:7041":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:3374:107":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"1:11854:6185":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"2:23232:6111":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"17:12183:8452":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"2:49733:4905":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"20:2615:2027":{"crate_id":20,"path":["regex_syntax","ast","Repetition"],"kind":"struct"},"16:4716:8991":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"12:2052:6136":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"6:4332:10102":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"17:13755:8899":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"5:2328:6806":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"21:1694:6382":{"crate_id":21,"path":["aho_corasick","packed","teddy","compile","Mask"],"kind":"struct"},"2:28330:6478":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"6:6967:10581":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"17:10015:8196":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"22:919:63831":{"crate_id":22,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:3617:132":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"9:0:4432":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:1578:6169":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"18:720:7899":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"16:7792:7190":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:8376:1977":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"12:2066:6138":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"5:4017:5471":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"5:1701:6159":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"21:1548:7940":{"crate_id":21,"path":["aho_corasick","nfa","fill_failure_transitions_leftmost","QueuedState"],"kind":"struct"},"2:52198:9412":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"12:856:6160":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"17:13529:8821":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"2:56638:241":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"16:6518:7169":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"17:13938:8945":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"1:15890:4464":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"1:2422:9483":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"20:2973:8071":{"crate_id":20,"path":["regex_syntax","hir","translate","TranslatorI"],"kind":"struct"},"2:50053:4907":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"2:46097:4881":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"5:1909:7742":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"12:869:5473":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"17:10937:8267":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"9:157:6856":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"16:3686:8973":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"1:11998:6127":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"16:7415:7174":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"16:3077:7383":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"2:10580:191":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:47916:5291":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"2:47925:190":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"2:3522:4867":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"6:571:9724":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"16:6277:7205":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"17:12262:8462":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"1:4217:6056":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"21:1635:4769":{"crate_id":21,"path":["aho_corasick","packed","api","FindIter"],"kind":"struct"},"6:4392:10133":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"16:7025:7086":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"16:6504:7212":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"17:12646:8547":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"1:8860:4590":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"5:8466:10587":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"1:11912:10670":{"crate_id":1,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"6:4386:10130":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"17:10435:7410":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:49893:1617":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"6:4048:10008":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:47033:4693":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"20:2348:7525":{"crate_id":20,"path":["regex_syntax","ast","ClassAscii"],"kind":"struct"},"21:1955:1610":{"crate_id":21,"path":["aho_corasick","Match"],"kind":"struct"},"2:13050:6624":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"17:13721:8887":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"1:9526:6283":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"17:11433:8308":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"2:23974:61337":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"3:321:207":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"}},"external_crates":{"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"aho_corasick","html_root_url":null},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"memchr","html_root_url":null},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"20":{"name":"regex_syntax","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":21}