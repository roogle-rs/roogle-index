{"root":"0:0:1661","crate_version":"1.7.1","includes_private":false,"index":{"0:525:3102":{"id":"0:525:3102","crate_id":0,"name":"is_end","span":{"filename":"src/input.rs","begin":[27,4],"end":[29,5]},"visibility":"public","docs":"Returns true iff this position is past the end of the input.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:24-0:2078:1630":{"id":"0:24-0:2078:1630","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[729,4],"end":[729,40]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::re_builder::bytes","name":"bytes","id":"0:2078:1630","glob":true}},"0:1832:421":{"id":"0:1832:421","crate_id":0,"name":"cmp","span":{"filename":"src/input.rs","begin":[345,55],"end":[345,58]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:38661:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:610":{"id":"0:610","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[427,0],"end":[432,1]},"visibility":{"restricted":{"parent":"0:512:1639","path":"::input"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ge","le","gt","lt"],"trait":{"name":"PartialOrd","id":"2:2343:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"primitive","inner":"char"},"items":["0:611:1015"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2672:217-0:2255:1628":{"id":"a:2:2672:217-0:2255:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2255:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2527-0:2047:1659":{"id":"b:2:2527-0:2047:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstRanges","id":"0:2047:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2686:225-0:1833:1656":{"id":"a:2:2686:225-0:1833:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:1833:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3328-0:2229:1627":{"id":"b:2:3328-0:2229:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2229:1627","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2062:2674":{"id":"0:2062:2674","crate_id":0,"name":"RegexOptions","span":{"filename":"src/re_builder.rs","begin":[4,0],"end":[16,1]},"visibility":"public","docs":"The set of user configurable options for compiling zero or more regexes.","links":{},"attrs":["#[allow(missing_docs)]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:2063:2750","0:2064:1876","0:2065:2180","0:2066:2791","0:2067:2785","0:2068:2786","0:2069:2787","0:2070:2788","0:2071:2789","0:2072:1589","0:2073:2784"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":[]}},"a:2:8140:3268-0:2255:1628":{"id":"a:2:8140:3268-0:2255:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2255:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3328-0:1833:1656":{"id":"b:2:3328-0:1833:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:1833:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2068:2786":{"id":"0:2068:2786","crate_id":0,"name":"multi_line","span":{"filename":"src/re_builder.rs","begin":[10,4],"end":[10,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"0:815:2110":{"id":"0:815:2110","crate_id":0,"name":"range","span":{"filename":"src/re_bytes.rs","begin":[43,4],"end":[45,5]},"visibility":"public","docs":"Returns the range over the starting and ending byte offsets of the\nmatch in the haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Range","id":"2:46913:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2260":{"id":"0:2260","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1086,9],"end":[1086,14]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2255:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2263:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2114:1589":{"id":"0:2114:1589","crate_id":0,"name":"unicode","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the value for the Unicode (`u`) flag.\n\nEnabled by default. When disabled, character classes such as `\\w` only\nmatch ASCII word characters instead of all Unicode word characters.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2119:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:916:2056":{"id":"0:916:2056","crate_id":0,"name":"Item","span":{"filename":"src/re_bytes.rs","begin":[822,4],"end":[822,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}}},"a:2:2736:4882-0:2096:3498":{"id":"a:2:2736:4882-0:2096:3498","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2096:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2216":{"id":"0:2216","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[715,9],"end":[715,14]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2211:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2219:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:8139:3269-0:2432:2928":{"id":"a:2:8139:3269-0:2432:2928","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2432:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2505:414":{"id":"0:2505:414","crate_id":0,"name":"clone","span":{"filename":"src/re_unicode.rs","begin":[28,15],"end":[28,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:2351:4111":{"id":"b:2:2537-0:2351:4111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2351:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1141:3703":{"id":"0:1141:3703","crate_id":0,"name":"captures_iter","span":{"filename":"src/re_unicode.rs","begin":[345,4],"end":[350,5]},"visibility":"public","docs":"Returns an iterator over all the non-overlapping capture groups matched\nin `text`. This is operationally the same as `find_iter`, except it\nyields information about capturing group matches.\n\n# Example\n\nWe can use this to find all movie titles and their release years in\nsome text, where the movie is formatted like \"'Title' (xxxx)\":\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"'(?P<title>[^']+)'\\s+\\((?P<year>\\d{4})\\)\")\n               .unwrap();\nlet text = \"'Citizen Kane' (1941), 'The Wizard of Oz' (1939), 'M' (1931).\";\nfor caps in re.captures_iter(text) {\n    println!(\"Movie: {:?}, Released: {:?}\",\n             &caps[\"title\"], &caps[\"year\"]);\n}\n// Output:\n// Movie: Citizen Kane, Released: 1941\n// Movie: The Wizard of Oz, Released: 1939\n// Movie: M, Released: 1931\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2572:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2356":{"id":"0:2356","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2287:1589","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2351:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2357:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2531-0:2519:1623":{"id":"b:2:2531-0:2519:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2519:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8140:3268-0:2524:1617":{"id":"a:2:8140:3268-0:2524:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2524:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2672:217-0:2559:1628":{"id":"a:2:2672:217-0:2559:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2559:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2542-0:2144:3578":{"id":"b:2:2542-0:2144:3578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2144:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8140:3268-0:2346:2928":{"id":"a:2:8140:3268-0:2346:2928","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2346:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:8140:3268-0:2572:1616":{"id":"a:2:8140:3268-0:2572:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2572:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2284":{"id":"0:2284","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1249,16],"end":[1249,21]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2277:1622","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2286:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:753":{"id":"0:753","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[77,0],"end":[159,1]},"visibility":{"restricted":{"parent":"0:742:1642","path":"::prog"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Program","id":"0:1947:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:754:924","0:755:1337","0:756:3396","0:757:1927","0:758:1993","0:759:1905","0:760:2483"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2235-0:1628:127":{"id":"b:2:2235-0:1628:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2542-0:1780:1655":{"id":"b:2:2542-0:1780:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:1780:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2537-0:2197:1623":{"id":"b:2:2537-0:2197:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2197:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2736:4882-0:2496:1620":{"id":"a:2:2736:4882-0:2496:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11881:36834":{"id":"2:11881:36834","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:11521:1606","str::split":"2:11869:1939","prim@char":"1:11843:410","str::split_terminator":"2:11878:36833"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:50794:4876","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11541:4853","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:546:3118":{"id":"0:546:3118","crate_id":0,"name":"previous_char","span":{"filename":"src/input.rs","begin":[113,4],"end":[115,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["at",{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:1780:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:598:1855":{"id":"0:598:1855","crate_id":0,"name":"is_word_byte","span":{"filename":"src/input.rs","begin":[386,4],"end":[391,5]},"visibility":"public","docs":"Returns true iff the byte is a word byte.\n\nIf the byte is absent, then false is returned.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11828:2815":{"id":"2:11828:2815","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11089:3043"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2316:2056":{"id":"0:2316:2056","crate_id":0,"name":"Item","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"b:2:2531-0:2197:1623":{"id":"b:2:2531-0:2197:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2197:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1306:3801":{"id":"0:1306:3801","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1235,4],"end":[1237,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1213:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:2534:1626":{"id":"b:2:2537-0:2534:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2534:1626","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11884:3724":{"id":"2:11884:3724","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:11843:410","self::pattern":"2:11521:1606","str::rsplitn":"2:11887:30589"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:50830:1627","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2736:4882-0:2202:1621":{"id":"a:2:2736:4882-0:2202:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2202:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2012:1657":{"id":"0:2012:1657","crate_id":0,"name":"EmptyLook","span":{"filename":"src/prog.rs","begin":[341,0],"end":[358,1]},"visibility":"public","docs":"The set of zero-width match instructions.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:2013:2005","0:2015:2009","0:2017:2010","0:2019:2011","0:2021:2012","0:2023:2019","0:2025:2021","0:2027:2023"],"impls":["a:2:2736:4882-0:2012:1657","a:2:8139:3269-0:2012:1657","a:2:8140:3268-0:2012:1657","a:2:2686:225-0:2012:1657","a:2:2672:217-0:2012:1657","b:2:2542-0:2012:1657","b:2:2537-0:2012:1657","b:2:3328-0:2012:1657","b:2:2531-0:2012:1657","b:2:2527-0:2012:1657","b:2:2235-0:2012:1657","b:2:2238-0:2012:1657","b:5:683-0:2012:1657","0:2035","0:2029","0:2038","0:2034","0:2031","0:2037","0:2032"]}},"b:5:683-0:2559:1628":{"id":"b:5:683-0:2559:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2559:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["5:685:3800","5:686:2614","5:687:5400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:683-0:1833:1656":{"id":"b:5:683-0:1833:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:1833:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:685:3800","5:686:2614","5:687:5400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:389:1589":{"id":"0:389:1589","crate_id":0,"name":"unicode","span":{"filename":"src/exec.rs","begin":[223,4],"end":[226,5]},"visibility":"public","docs":"Set the Unicode flag.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2736:4882-0:2255:1628":{"id":"a:2:2736:4882-0:2255:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[{"region_predicate":{"lifetime":"'t","bounds":[{"outlives":"'c"}]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2255:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2173:657":{"id":"0:2173:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8140:3268-0:1965:1658":{"id":"a:2:8140:3268-0:1965:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:1965:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:822:657":{"id":"0:822:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[82,4],"end":[84,5]},"visibility":"default","docs":"Shows the original regular expression.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1300":{"id":"0:1300","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1224,0],"end":[1232,1]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"name":"Replacer","id":"0:1289:1624","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"items":["0:1302:3801","0:1303:3798"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1127":{"id":"0:1127","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[159,0],"end":[166,1]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:11482:3586","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2519:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1128:126","0:1129:3609"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11908:36840":{"id":"2:11908:36840","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2672:217-0:2268:1625":{"id":"a:2:2672:217-0:2268:1625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2268:1625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:841:3703":{"id":"0:841:3703","crate_id":0,"name":"captures_iter","span":{"filename":"src/re_bytes.rs","begin":[290,4],"end":[295,5]},"visibility":"public","docs":"Returns an iterator over all the non-overlapping capture groups matched\nin `text`. This is operationally the same as `find_iter`, except it\nyields information about capturing group matches.\n\n# Example\n\nWe can use this to find all movie titles and their release years in\nsome text, where the movie is formatted like \"'Title' (xxxx)\":\n\n```rust\n# use std::str; use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(r\"'(?P<title>[^']+)'\\s+\\((?P<year>\\d{4})\\)\")\n               .unwrap();\nlet text = b\"'Citizen Kane' (1941), 'The Wizard of Oz' (1939), 'M' (1931).\";\nfor caps in re.captures_iter(text) {\n    let title = str::from_utf8(&caps[\"title\"]).unwrap();\n    let year = str::from_utf8(&caps[\"year\"]).unwrap();\n    println!(\"Movie: {:?}, Released: {:?}\", title, year);\n}\n// Output:\n// Movie: Citizen Kane, Released: 1941\n// Movie: The Wizard of Oz, Released: 1939\n// Movie: M, Released: 1931\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2211:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:557:542":{"id":"0:557:542","crate_id":0,"name":"deref","span":{"filename":"src/input.rs","begin":[152,4],"end":[154,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2140:2784":{"id":"0:2140:2784","crate_id":0,"name":"octal","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Whether to support octal syntax or not.\n\nOctal syntax is a little-known way of uttering Unicode codepoints in\na regular expression. For example, `a`, `\\x61`, `\\u0061` and\n`\\141` are all equivalent regular expressions, where the last example\nshows octal syntax.\n\nWhile supporting octal syntax isn't in and of itself a problem, it does\nmake good error messages harder. That is, in PCRE based regex engines,\nsyntax like `\\0` invokes a backreference, which is explicitly\nunsupported in Rust's regex engine. However, many users expect it to\nbe supported. Therefore, when octal support is disabled, the error\nmessage will explicitly mention that backreferences aren't supported.\n\nOctal syntax is disabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2144:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8140:3268-0:2197:1623":{"id":"a:2:8140:3268-0:2197:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2197:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2449:4144":{"id":"0:2449:4144","crate_id":0,"name":"SetMatchesIter","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"A borrowed iterator over the set of matches from a regex set.\n\nThe lifetime `'a` refers to the lifetime of a `SetMatches` value.\n\nThis will always produces matches in ascending order of index, where the\nindex corresponds to the index of the regex that matched with respect to\nits position when initially building the set.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:2736:4882-0:2449:4144","a:2:8139:3269-0:2449:4144","a:2:8140:3268-0:2449:4144","a:2:2686:225-0:2449:4144","a:2:2672:217-0:2449:4144","b:2:2542-0:2449:4144","b:2:2537-0:2449:4144","b:2:3328-0:2449:4144","b:2:7092-0:2449:4144","b:2:2531-0:2449:4144","b:2:2527-0:2449:4144","b:2:2235-0:2449:4144","b:2:2238-0:2449:4144","b:5:683-0:2449:4144","0:2456","0:2421","0:2453","0:2424","0:2416"]}},"0:830":{"id":"0:830","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[114,0],"end":[531,1]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":"Core regular expression methods.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2197:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:831:924","0:832:2285","0:833:2545","0:835:3646","0:838:1929","0:841:3703","0:844:1939","0:847:3724","0:850:2493","0:853:3794","0:856:3788"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1218":{"id":"0:1218","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[928,0],"end":[1000,1]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1213:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1220:1836","0:1222:903","0:1224:781","0:1226:1637","0:1227:797"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2007:2055":{"id":"0:2007:2055","crate_id":0,"name":"look","span":{"filename":"src/prog.rs","begin":[336,4],"end":[336,23]},"visibility":"public","docs":"The type of zero-width assertion to check.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2012:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:775:770":{"id":"0:775:770","crate_id":0,"name":"into_iter","span":{"filename":"src/prog.rs","begin":[245,4],"end":[247,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:7088:149","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:820:681":{"id":"0:820:681","crate_id":0,"name":"from","span":{"filename":"src/re_bytes.rs","begin":[61,4],"end":[63,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["m",{"kind":"resolved_path","inner":{"name":"Match","id":"0:2174:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Range","id":"2:46913:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:859":{"id":"0:859","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[534,0],"end":[651,1]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":"Advanced or \"lower level\" search methods.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2197:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:860:3814","0:861:2816","0:862:2817","0:863:2818","0:866:3830","0:868:2819"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2537-0:1814:1653":{"id":"b:2:2537-0:1814:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:874:312":{"id":"0:874:312","crate_id":0,"name":"as_str","span":{"filename":"src/re_bytes.rs","begin":[656,4],"end":[658,5]},"visibility":"public","docs":"Returns the original string of this regex.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2235-0:2248:1615":{"id":"b:2:2235-0:2248:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2248:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8139:3269-0:2268:1625":{"id":"a:2:8139:3269-0:2268:1625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2268:1625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:2382":{"id":"0:2382","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2373:1630","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2432:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2383:924","0:2386:2781","0:2388:2285","0:2390:1783","0:2392:797","0:2393:1825","0:2394:3579"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1179":{"id":"0:1179","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[753,0],"end":[770,1]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_collect","map_while","intersperse_with","count","next_chunk","cmp","min_by","by_ref","eq_by","unzip","fold","zip","collect_into","lt","scan","ge","for_each","advance_by","any","min_by_key","all","max","cloned","is_sorted","cycle","reduce","position","last","partition","flat_map","skip","filter","nth","max_by","is_sorted_by","array_chunks","ne","try_reduce","partition_in_place","flatten","filter_map","partial_cmp","step_by","find","max_by_key","sum","le","size_hint","collect","product","map","find_map","is_sorted_by_key","is_partitioned","fuse","skip_while","chain","rev","take","eq","__iterator_get_unchecked","cmp_by","try_find","try_fold","peekable","inspect","take_while","intersperse","copied","min","enumerate","partial_cmp_by","rposition","gt","try_for_each"],"trait":{"name":"Iterator","id":"2:7202:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2524:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["0:1181:2056","0:1182:938","0:1185:3862","0:1186:494"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2138:2789":{"id":"0:2138:2789","crate_id":0,"name":"ignore_whitespace","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the value for the ignore whitespace (`x`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2144:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1868:3190":{"id":"0:1868:3190","crate_id":0,"name":"Single","span":{"filename":"src/literal/imp.rs","begin":[225,4],"end":[225,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:1870:1569"]},"discriminant":null}},"a:2:2736:4882-0:2432:2928":{"id":"a:2:2736:4882-0:2432:2928","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2432:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2672:217-0:2437:4111":{"id":"a:2:2672:217-0:2437:4111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2437:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2736:4882-0:2449:4144":{"id":"a:2:2736:4882-0:2449:4144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2449:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1981:1842":{"id":"0:1981:1842","crate_id":0,"name":"Ranges","span":{"filename":"src/prog.rs","begin":[291,4],"end":[291,22]},"visibility":"default","docs":"Ranges requires the regex program to match the character at the current\nposition in the input with one of the ranges specified in InstRanges.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:1983:1569"]},"discriminant":null}},"a:2:2686:225-0:2096:3498":{"id":"a:2:2686:225-0:2096:3498","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2096:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1248":{"id":"0:1248","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1062,0],"end":[1070,1]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":"Get a group by name.\n\n`'t` is the lifetime of the matched text and `'i` is the lifetime\nof the group name (the index).\n\nThe text can't outlive the `Captures` object if this method is\nused, because of how `Index` is defined (normally `a[i]` is part\nof `a` and can't outlive it); to do that, use `name` instead.\n\n# Panics\n\nIf there is no group named by the given value.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"'i","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"2:2991:3585","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'i","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1213:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1251:183","0:1252:755"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1865:1843":{"id":"0:1865:1843","crate_id":0,"name":"Bytes","span":{"filename":"src/literal/imp.rs","begin":[224,4],"end":[224,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:1867:1569"]},"discriminant":null}},"0:2029":{"id":"0:2029","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[340,9],"end":[340,14]},"visibility":{"restricted":{"parent":"0:742:1642","path":"::prog"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2012:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2030:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3328-0:2358:4145":{"id":"b:2:3328-0:2358:4145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2358:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2527-0:1947:1660":{"id":"b:2:2527-0:1947:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Program","id":"0:1947:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2686:225-0:2432:2928":{"id":"a:2:2686:225-0:2432:2928","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2432:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1055:2817":{"id":"0:1055:2817","crate_id":0,"name":"is_match_at","span":{"filename":"src/re_trait.rs","begin":[132,4],"end":[132,67]},"visibility":"default","docs":"Returns whether the regex matches the text given.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Text","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1049:2675","args":null}}}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2122":{"id":"0:2122","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":{"restricted":{"parent":"0:2101:1589","path":"::re_builder::unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2119:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2123:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:7092-0:2202:1621":{"id":"b:2:7092-0:2202:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7202:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7088:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2202:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:7094:2056","2:7095:3416","2:7096:770"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:2606":{"id":"0:2606","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1300,16],"end":[1300,21]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2599:1622","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2608:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2571:657":{"id":"0:2571:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[1081,16],"end":[1081,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8139:3269-0:2096:3498":{"id":"a:2:8139:3269-0:2096:3498","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2096:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:549:797":{"id":"0:549:797","crate_id":0,"name":"len","span":{"filename":"src/input.rs","begin":[129,4],"end":[131,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2119:3498":{"id":"0:2119:3498","crate_id":0,"name":"RegexBuilder","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"A configurable builder for a regular expression.\n\nA builder can be used to configure how the regex is built, for example, by\nsetting the default flags (which can be overridden in the expression\nitself) or setting various limits.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:2106","a:2:2736:4882-0:2119:3498","a:2:8139:3269-0:2119:3498","a:2:8140:3268-0:2119:3498","a:2:2686:225-0:2119:3498","a:2:2672:217-0:2119:3498","b:2:2542-0:2119:3498","b:2:2537-0:2119:3498","b:2:3328-0:2119:3498","b:2:2531-0:2119:3498","b:2:2527-0:2119:3498","b:2:2235-0:2119:3498","b:2:2238-0:2119:3498","0:2122"]}},"0:2421":{"id":"0:2421","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2373:1630","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["nth_back","rfold","advance_back_by","try_rfold","rfind"],"trait":{"name":"DoubleEndedIterator","id":"2:7125:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2449:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2423:4151"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2238-0:2169:3578":{"id":"b:2:2238-0:2169:3578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2169:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:977":{"id":"0:977","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1092,0],"end":[1100,1]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_collect","map_while","intersperse_with","count","next_chunk","cmp","min_by","by_ref","eq_by","unzip","fold","zip","collect_into","lt","scan","ge","for_each","advance_by","any","min_by_key","all","max","cloned","is_sorted","cycle","reduce","position","last","partition","flat_map","skip","filter","nth","max_by","is_sorted_by","array_chunks","ne","try_reduce","partition_in_place","flatten","filter_map","partial_cmp","step_by","find","max_by_key","sum","le","size_hint","collect","product","map","find_map","is_sorted_by_key","is_partitioned","fuse","skip_while","chain","rev","take","eq","__iterator_get_unchecked","cmp_by","try_find","try_fold","peekable","inspect","take_while","intersperse","copied","min","enumerate","partial_cmp_by","rposition","gt","try_for_each"],"trait":{"name":"Iterator","id":"2:7202:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2255:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:980:2056","0:981:938"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:632:2719":{"id":"0:632:2719","crate_id":0,"name":"suffixes","span":{"filename":"src/literal/imp.rs","begin":[52,4],"end":[55,5]},"visibility":"public","docs":"Returns a matcher for literal suffixes from the given set.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["lits",{"kind":"resolved_path","inner":{"name":"Literals","id":"20:2633:2669","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2235-0:2144:3578":{"id":"b:2:2235-0:2144:3578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2144:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2686:225-0:2211:1616":{"id":"a:2:2686:225-0:2211:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2211:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"a:2:2686:225-0:2248:1615":{"id":"a:2:2686:225-0:2248:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2248:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:5553:1422":{"id":"5:5553:1422","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2686:225-0:2268:1625":{"id":"a:2:2686:225-0:2268:1625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2268:1625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2408:770":{"id":"0:2408:770","crate_id":0,"name":"into_iter","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:7088:149","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2542-0:2534:1626":{"id":"b:2:2542-0:2534:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2534:1626","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2736:4882-0:2559:1628":{"id":"a:2:2736:4882-0:2559:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[{"region_predicate":{"lifetime":"'t","bounds":[{"outlives":"'c"}]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2559:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2537-0:2169:3578":{"id":"b:2:2537-0:2169:3578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2169:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2172":{"id":"0:2172","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":{"restricted":{"parent":"0:2149:1611","path":"::re_builder::set_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2169:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2173:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:8140:3268-0:2559:1628":{"id":"a:2:8140:3268-0:2559:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2559:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1268":{"id":"0:1268","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1107,0],"end":[1107,59]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7472:3584","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2559:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1308":{"id":"0:1308","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1244,0],"end":[1252,1]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"name":"Replacer","id":"0:1289:1624","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1309:3801","0:1310:3798"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:683-0:2496:1620":{"id":"b:5:683-0:2496:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["5:685:3800","5:686:2614","5:687:5400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:635:2545":{"id":"0:635:2545","crate_id":0,"name":"find","span":{"filename":"src/literal/imp.rs","begin":[79,4],"end":[92,5]},"visibility":"public","docs":"Find the position of a literal in `haystack` if it exists.","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2453":{"id":"0:2453","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2373:1630","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2449:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2455:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2238-0:2174:1620":{"id":"b:2:2238-0:2174:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2174:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2736:4882-0:2238:1617":{"id":"a:2:2736:4882-0:2238:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2238:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2531-0:2346:2928":{"id":"b:2:2531-0:2346:2928","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2346:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11878:36833":{"id":"2:11878:36833","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:11521:1606","str::split":"2:11869:1939","prim@char":"1:11843:410","`DoubleEndedIterator`":"2:7125:120","str::rsplit_terminator":"2:11881:36834"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:50776:4877","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2186:657":{"id":"0:2186:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[20,22],"end":[20,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2184":{"id":"0:2184","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[20,22],"end":[20,27]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2174:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2186:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:7092-0:2363:4144":{"id":"b:2:7092-0:2363:4144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7202:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7088:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2363:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:7094:2056","2:7095:3416","2:7096:770"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"a:2:2672:217-0:2519:1623":{"id":"a:2:2672:217-0:2519:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2519:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:885":{"id":"0:885","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[706,0],"end":[706,49]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7472:3584","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2202:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2297:924":{"id":"0:2297:924","crate_id":0,"name":"new","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Create a new regex set with the given regular expressions.\n\nThis takes an iterator of `S`, where `S` is something that can produce\na `&str`. If any of the strings in the iterator are not valid regular\nexpressions, then an error is returned.\n\n# Example\n\nCreate a new regex set from an iterator of strings:\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[r\"\\w+\", r\"\\d+\"]).unwrap();\nassert!(set.is_match(\"foo\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["exprs",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48878:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2346:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2495:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:7088:149","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"S"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2531-0:2277:1622":{"id":"b:2:2531-0:2277:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2277:1622","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2686:225-0:2351:4111":{"id":"a:2:2686:225-0:2351:4111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2351:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2238-0:931:1618":{"id":"b:2:2238-0:931:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:931:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3328-0:2351:4111":{"id":"b:2:3328-0:2351:4111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2351:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:547:1840":{"id":"0:547:1840","crate_id":0,"name":"is_empty_match","span":{"filename":"src/input.rs","begin":[117,4],"end":[119,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["at",{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:1780:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["empty",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"InstEmptyLook","id":"0:2005:1861","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8139:3269-0:85:1650":{"id":"a:2:8139:3269-0:85:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Compiler","id":"0:85:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2736:4882-0:1833:1656":{"id":"a:2:2736:4882-0:1833:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:1833:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1640":{"id":"0:1640","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[5,16],"end":[5,25]},"visibility":{"restricted":{"parent":"0:324:1609","path":"::error"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2301:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1641:602"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2672:217-0:2047:1659":{"id":"a:2:2672:217-0:2047:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstRanges","id":"0:2047:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2238-0:2047:1659":{"id":"b:2:2238-0:2047:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstRanges","id":"0:2047:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2372:657":{"id":"0:2372:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:99:1905":{"id":"0:99:1905","crate_id":0,"name":"only_utf8","span":{"filename":"src/compile.rs","begin":[100,4],"end":[103,5]},"visibility":"public","docs":"When disabled, the program compiled may match arbitrary bytes.\n\nWhen enabled (the default), all compiled programs exclusively match\nvalid UTF-8 bytes.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:5-0:2101:1589":{"id":"0:5-0:2101:1589","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[630,0],"end":[630,38]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::re_builder::unicode","name":"unicode","id":"0:2101:1589","glob":true}},"b:2:2527-0:2534:1626":{"id":"b:2:2527-0:2534:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2534:1626","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2686:225-0:2449:4144":{"id":"a:2:2686:225-0:2449:4144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2449:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2537-0:2559:1628":{"id":"b:2:2537-0:2559:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2559:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1202:2056":{"id":"0:1202:2056","crate_id":0,"name":"Item","span":{"filename":"src/re_unicode.rs","begin":[825,4],"end":[825,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}},"b:2:2527-0:2202:1621":{"id":"b:2:2527-0:2202:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2202:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:940:903":{"id":"0:940:903","crate_id":0,"name":"name","span":{"filename":"src/re_bytes.rs","begin":[944,4],"end":[946,5]},"visibility":"public","docs":"Returns the match for the capture group named `name`. If `name` isn't a\nvalid capture group or didn't match anything, then `None` is returned.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["name",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2174:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2527-0:2363:4144":{"id":"b:2:2527-0:2363:4144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2363:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11861:2545":{"id":"2:11861:2545","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:48736:176","prim@char":"1:11843:410","self::pattern":"2:11521:1606"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2531-0:2559:1628":{"id":"b:2:2531-0:2559:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2559:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2599-0:1628:127":{"id":"b:2:2599-0:1628:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:2592:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:3377:17170","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2601:5709"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"E"}}},"0:2324:2056":{"id":"0:2324:2056","crate_id":0,"name":"Item","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"a:2:8140:3268-0:1814:1653":{"id":"a:2:8140:3268-0:1814:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2531-0:2238:1617":{"id":"b:2:2531-0:2238:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2238:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2542-0:2169:3578":{"id":"b:2:2542-0:2169:3578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2169:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2092:2784":{"id":"0:2092:2784","crate_id":0,"name":"octal","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Whether to support octal syntax or not.\n\nOctal syntax is a little-known way of uttering Unicode codepoints in\na regular expression. For example, `a`, `\\x61`, `\\u0061` and\n`\\141` are all equivalent regular expressions, where the last example\nshows octal syntax.\n\nWhile supporting octal syntax isn't in and of itself a problem, it does\nmake good error messages harder. That is, in PCRE based regex engines,\nsyntax like `\\0` invokes a backreference, which is explicitly\nunsupported in Rust's regex engine. However, many users expect it to\nbe supported. Therefore, when octal support is disabled, the error\nmessage will explicitly mention that backreferences aren't supported.\n\nOctal syntax is disabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2096:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:882:2056":{"id":"0:882:2056","crate_id":0,"name":"Item","span":{"filename":"src/re_bytes.rs","begin":[698,4],"end":[698,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2174:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}},"b:2:3328-0:1790:1654":{"id":"b:2:3328-0:1790:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:1790:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2235-0:2255:1628":{"id":"b:2:2235-0:2255:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2255:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8139:3269-0:2363:4144":{"id":"a:2:8139:3269-0:2363:4144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2363:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:459:2927":{"id":"0:459:2927","crate_id":0,"name":"into_regex_set","span":{"filename":"src/exec.rs","begin":[1282,4],"end":[1284,5]},"visibility":"public","docs":"Build a RegexSet from this executor.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"re_set::unicode::RegexSet","id":"0:2346:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:762:227":{"id":"0:762:227","crate_id":0,"name":"Target","span":{"filename":"src/prog.rs","begin":[162,4],"end":[162,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:1965:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:2088:2787":{"id":"0:2088:2787","crate_id":0,"name":"dot_matches_new_line","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the value for the any character (`s`) flag, where in `.` matches\nanything when `s` is set and matches anything except for new line when\nit is not set (the default).\n\nN.B. \"matches anything\" means \"any byte\" when Unicode is disabled and\nmeans \"any valid UTF-8 encoding of any Unicode scalar value\" when\nUnicode is enabled.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2096:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:984":{"id":"0:984","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1102,0],"end":[1102,59]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7472:3584","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2255:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2537-0:2047:1659":{"id":"b:2:2537-0:2047:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstRanges","id":"0:2047:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2736:4882-0:2174:1620":{"id":"a:2:2736:4882-0:2174:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2174:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2373:1630":{"id":"0:2373:1630","crate_id":0,"name":"bytes","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2432:2928","0:2437:4111","0:2444:4145","0:2449:4144"],"is_stripped":false}},"0:2548":{"id":"0:2548","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[818,9],"end":[818,14]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2543:1627","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2551:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:327":{"id":"0:327","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[21,0],"end":[31,1]},"visibility":{"restricted":{"parent":"0:324:1609","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["type_id","provide","source","cause","description"],"trait":{"name":"Error","id":"2:2592:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:328:2651"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1870:1569":{"id":"0:1870:1569","crate_id":0,"name":"0","span":{"filename":"src/literal/imp.rs","begin":[225,11],"end":[225,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}},"b:2:2537-0:1965:1658":{"id":"b:2:2537-0:1965:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:1965:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2100:657":{"id":"0:2100:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:2444:4145":{"id":"b:2:2537-0:2444:4145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2444:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1863:1987":{"id":"0:1863:1987","crate_id":0,"name":"Empty","span":{"filename":"src/literal/imp.rs","begin":[223,4],"end":[223,9]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:2409":{"id":"0:2409","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2373:1630","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["try_collect","map_while","intersperse_with","count","next_chunk","cmp","min_by","by_ref","eq_by","unzip","fold","zip","collect_into","lt","scan","ge","for_each","advance_by","any","min_by_key","all","max","cloned","is_sorted","cycle","reduce","position","last","partition","flat_map","skip","filter","nth","max_by","is_sorted_by","array_chunks","ne","try_reduce","partition_in_place","flatten","filter_map","partial_cmp","step_by","find","max_by_key","sum","le","size_hint","collect","product","map","find_map","is_sorted_by_key","is_partitioned","fuse","skip_while","chain","rev","take","eq","__iterator_get_unchecked","cmp_by","try_find","try_fold","peekable","inspect","take_while","intersperse","copied","min","enumerate","partial_cmp_by","rposition","gt","try_for_each"],"trait":{"name":"Iterator","id":"2:7202:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2444:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2410:2056","0:2411:938","0:2412:3862"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:8140:3268-0:2534:1626":{"id":"a:2:8140:3268-0:2534:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2534:1626","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:8139:3269-0:1780:1655":{"id":"a:2:8139:3269-0:1780:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:1780:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3328-0:2277:1622":{"id":"b:2:3328-0:2277:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2277:1622","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2672:217-0:2524:1617":{"id":"a:2:2672:217-0:2524:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2524:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2531-0:2552:1615":{"id":"b:2:2531-0:2552:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2552:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3328-0:2552:1615":{"id":"b:2:3328-0:2552:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2552:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:526:410":{"id":"0:526:410","crate_id":0,"name":"char","span":{"filename":"src/input.rs","begin":[35,4],"end":[37,5]},"visibility":"public","docs":"Returns the character at this position.\n\nIf this position is just before or after the input, then an absent\ncharacter is returned.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2033:657":{"id":"0:2033:657","crate_id":0,"name":"fmt","span":{"filename":"src/prog.rs","begin":[340,22],"end":[340,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2531-0:2255:1628":{"id":"b:2:2531-0:2255:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2255:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2542-0:1790:1654":{"id":"b:2:2542-0:1790:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:1790:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1204:3862":{"id":"0:1204:3862","crate_id":0,"name":"size_hint","span":{"filename":"src/re_unicode.rs","begin":[847,4],"end":[849,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:591":{"id":"0:591","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[348,0],"end":[355,1]},"visibility":{"restricted":{"parent":"0:512:1639","path":"::input"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:592:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2672:217-0:2096:3498":{"id":"a:2:2672:217-0:2096:3498","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2096:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1110:1354":{"id":"0:1110:1354","crate_id":0,"name":"start","span":{"filename":"src/re_unicode.rs","begin":[38,4],"end":[40,5]},"visibility":"public","docs":"Returns the starting byte offset of the match in the haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2086:2785":{"id":"0:2086:2785","crate_id":0,"name":"case_insensitive","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the value for the case insensitive (`i`) flag.\n\nWhen enabled, letters in the pattern will match both upper case and\nlower case variants.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2096:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:891:2056":{"id":"0:891:2056","crate_id":0,"name":"Item","span":{"filename":"src/re_bytes.rs","begin":[721,4],"end":[721,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:931:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}},"0:2335":{"id":"0:2335","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2287:1589","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["nth_back","rfold","advance_back_by","try_rfold","rfind"],"trait":{"name":"DoubleEndedIterator","id":"2:7125:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2363:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2337:4151"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:8139:3269-0:2524:1617":{"id":"a:2:8139:3269-0:2524:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2524:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:9-0:2552:1615":{"id":"0:9-0:2552:1615","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[635,12],"end":[635,28]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::re_unicode::CaptureLocations","name":"CaptureLocations","id":"0:2552:1615","glob":false}},"0:2148:657":{"id":"0:2148:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2435":{"id":"0:2435","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2373:1630","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2432:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2436:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2235-0:2572:1616":{"id":"b:2:2235-0:2572:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2572:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2580:657":{"id":"0:2580:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[1116,9],"end":[1116,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1947:1660":{"id":"0:1947:1660","crate_id":0,"name":"Program","span":{"filename":"src/prog.rs","begin":[18,0],"end":[75,1]},"visibility":"public","docs":"Program is a sequence of instructions and various facts about thos\ninstructions.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:1948:1871","0:1949:1783","0:1950:1929","0:1951:1874","0:1952:1354","0:1953:1880","0:1954:1905","0:1955:1901","0:1956:1912","0:1957:1916","0:1958:1821","0:1959:1926","0:1960:2015","0:1961:1824","0:1962:2180"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:753","a:2:2736:4882-0:1947:1660","a:2:8139:3269-0:1947:1660","a:2:8140:3268-0:1947:1660","a:2:2686:225-0:1947:1660","a:2:2672:217-0:1947:1660","b:2:2542-0:1947:1660","b:2:2537-0:1947:1660","b:2:3328-0:1947:1660","b:2:2531-0:1947:1660","b:2:2527-0:1947:1660","b:2:2235-0:1947:1660","b:2:2238-0:1947:1660","b:5:683-0:1947:1660","0:1963","0:771","0:761","0:764"]}},"0:2406:3416":{"id":"0:2406:3416","crate_id":0,"name":"IntoIter","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2449:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}},"0:1194:2056":{"id":"0:1194:2056","crate_id":0,"name":"Item","span":{"filename":"src/re_unicode.rs","begin":[787,4],"end":[787,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}},"0:1307:3798":{"id":"0:1307:3798","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1239,4],"end":[1241,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:688:110","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1129:3609":{"id":"0:1129:3609","crate_id":0,"name":"from_str","span":{"filename":"src/re_unicode.rs","begin":[163,4],"end":[165,5]},"visibility":"default","docs":"Attempts to parse a string into a regular expression","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48878:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2519:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:593":{"id":"0:593","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[357,0],"end":[392,1]},"visibility":{"restricted":{"parent":"0:512:1639","path":"::input"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:594:2117","0:595:3128","0:597:3131","0:598:1855"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2527-0:2572:1616":{"id":"b:2:2527-0:2572:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2572:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2533:681":{"id":"2:2533:681","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:647:797":{"id":"0:647:797","crate_id":0,"name":"len","span":{"filename":"src/literal/imp.rs","begin":[147,4],"end":[156,5]},"visibility":"public","docs":"Returns the number of prefixes in this machine.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2542-0:2524:1617":{"id":"b:2:2542-0:2524:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2524:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2531-0:1642:1651":{"id":"b:2:2531-0:1642:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Exec","id":"0:1642:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1166:3830":{"id":"0:1166:3830","crate_id":0,"name":"captures_read","span":{"filename":"src/re_unicode.rs","begin":[669,4],"end":[675,5]},"visibility":"public","docs":"This is like `captures`, but uses\n[`CaptureLocations`](struct.CaptureLocations.html)\ninstead of\n[`Captures`](struct.Captures.html) in order to amortize allocations.\n\nTo create a `CaptureLocations` value, use the\n`Regex::capture_locations` method.\n\nThis returns the overall match if this was successful, which is always\nequivalence to the `0`th capture group.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["locs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2552:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1642:1651":{"id":"0:1642:1651","crate_id":0,"name":"Exec","span":{"filename":"src/exec.rs","begin":[35,0],"end":[47,1]},"visibility":"public","docs":"`Exec` manages the execution of a regular expression.\n\nIn particular, this manages the various compiled forms of a single regular\nexpression and the choice of which matching engine to use to execute a\nregular expression.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:455","a:2:2736:4882-0:1642:1651","a:2:8139:3269-0:1642:1651","a:2:8140:3268-0:1642:1651","a:2:2686:225-0:1642:1651","a:2:2672:217-0:1642:1651","b:2:2542-0:1642:1651","b:2:2537-0:1642:1651","b:2:3328-0:1642:1651","b:2:2531-0:1642:1651","b:2:2527-0:1642:1651","b:2:2235-0:1642:1651","b:2:2238-0:1642:1651","b:5:683-0:1642:1651","0:1645","0:465"]}},"0:2383:924":{"id":"0:2383:924","crate_id":0,"name":"new","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Create a new regex set with the given regular expressions.\n\nThis takes an iterator of `S`, where `S` is something that can produce\na `&str`. If any of the strings in the iterator are not valid regular\nexpressions, then an error is returned.\n\n# Example\n\nCreate a new regex set from an iterator of strings:\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[r\"\\w+\", r\"\\d+\"]).unwrap();\nassert!(set.is_match(\"foo\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["exprs",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48878:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2432:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2495:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:7088:149","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"S"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2091:1589":{"id":"0:2091:1589","crate_id":0,"name":"unicode","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the value for the Unicode (`u`) flag.\n\nEnabled by default. When disabled, character classes such as `\\w` only\nmatch ASCII word characters instead of all Unicode word characters.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2096:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2196:602":{"id":"0:2196:602","crate_id":0,"name":"eq","span":{"filename":"src/re_bytes.rs","begin":[20,33],"end":[20,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2174:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2415":{"id":"0:2415","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2373:1630","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7472:3584","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2444:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2238-0:2519:1623":{"id":"b:2:2238-0:2519:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2519:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2533:657":{"id":"0:2533:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[750,16],"end":[750,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2084:924":{"id":"0:2084:924","crate_id":0,"name":"new","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Create a new regular expression builder with the given pattern.\n\nIf the pattern is invalid, then an error will be returned when\n`build` is called.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["pattern",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2096:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1841:657":{"id":"0:1841:657","crate_id":0,"name":"fmt","span":{"filename":"src/literal/imp.rs","begin":[12,16],"end":[12,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:643:781":{"id":"0:643:781","crate_id":0,"name":"iter","span":{"filename":"src/literal/imp.rs","begin":[121,4],"end":[129,5]},"visibility":"public","docs":"Returns an iterator over all literals to be matched.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LiteralIter","id":"0:1861:3189","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1983:1569":{"id":"0:1983:1569","crate_id":0,"name":"0","span":{"filename":"src/prog.rs","begin":[291,11],"end":[291,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"InstRanges","id":"0:2047:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"b:2:2235-0:1965:1658":{"id":"b:2:2235-0:1965:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:1965:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:833:2545":{"id":"0:833:2545","crate_id":0,"name":"find","span":{"filename":"src/re_bytes.rs","begin":[166,4],"end":[168,5]},"visibility":"public","docs":"Returns the start and end byte range of the leftmost-first match in\n`text`. If no match exists, then `None` is returned.\n\nNote that this should only be used if you want to discover the position\nof the match. Testing the existence of a match is faster if you use\n`is_match`.\n\n# Example\n\nFind the start and end location of the first word with exactly 13\nASCII word bytes:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet text = b\"I categorically deny having triskaidekaphobia.\";\nlet mat = Regex::new(r\"\\b\\w{13}\\b\").unwrap().find(text).unwrap();\nassert_eq!((mat.start(), mat.end()), (2, 15));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2174:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3328-0:2220:1626":{"id":"b:2:3328-0:2220:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2220:1626","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:860:3814":{"id":"0:860:3814","crate_id":0,"name":"shortest_match","span":{"filename":"src/re_bytes.rs","begin":[556,4],"end":[558,5]},"visibility":"public","docs":"Returns the end location of a match in the text given.\n\nThis method may have the same performance characteristics as\n`is_match`, except it provides an end location for a match. In\nparticular, the location returned *may be shorter* than the proper end\nof the leftmost-first match.\n\n# Example\n\nTypically, `a+` would match the entire first sequence of `a` in some\ntext, but `shortest_match` can give up as soon as it sees the first\n`a`.\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet text = b\"aaaaa\";\nlet pos = Regex::new(r\"a+\").unwrap().shortest_match(text);\nassert_eq!(pos, Some(1));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2736:4882-0:1790:1654":{"id":"a:2:2736:4882-0:1790:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:1790:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2235-0:931:1618":{"id":"b:2:2235-0:931:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:931:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2686:225-0:1780:1655":{"id":"a:2:2686:225-0:1780:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:1780:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2506":{"id":"0:2506","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[28,22],"end":[28,27]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2508:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2556:414":{"id":"0:2556:414","crate_id":0,"name":"clone","span":{"filename":"src/re_unicode.rs","begin":[869,9],"end":[869,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2552:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8140:3268-0:2543:1627":{"id":"a:2:8140:3268-0:2543:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2543:1627","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1220:1836":{"id":"0:1220:1836","crate_id":0,"name":"get","span":{"filename":"src/re_unicode.rs","begin":[948,4],"end":[950,5]},"visibility":"public","docs":"Returns the match associated with the capture group at index `i`. If\n`i` does not correspond to a capture group, or if the capture group\ndid not participate in the match, then `None` is returned.\n\n# Examples\n\nGet the text of the match with a default of an empty string if this\ngroup didn't participate in the match:\n\n```rust\n# use regex::Regex;\nlet re = Regex::new(r\"[a-z]+(?:([0-9]+)|([A-Z]+))\").unwrap();\nlet caps = re.captures(\"abc123\").unwrap();\n\nlet text1 = caps.get(1).map_or(\"\", |m| m.as_str());\nlet text2 = caps.get(2).map_or(\"\", |m| m.as_str());\nassert_eq!(text1, \"123\");\nassert_eq!(text2, \"\");\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:605:602":{"id":"0:605:602","crate_id":0,"name":"eq","span":{"filename":"src/input.rs","begin":[408,4],"end":[410,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"char"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1317:3801":{"id":"0:1317:3801","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1265,4],"end":[1267,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1213:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:17-0:2519:1623":{"id":"0:17-0:2519:1623","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[636,41],"end":[636,46]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::re_unicode::Regex","name":"Regex","id":"0:2519:1623","glob":false}},"0:529:1825":{"id":"0:529:1825","crate_id":0,"name":"is_empty","span":{"filename":"src/input.rs","begin":[51,4],"end":[53,5]},"visibility":"public","docs":"Returns whether the UTF-8 width of the character at this position\nis zero.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:683-0:2047:1659":{"id":"b:5:683-0:2047:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstRanges","id":"0:2047:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:685:3800","5:686:2614","5:687:5400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8139:3269-0:2238:1617":{"id":"a:2:8139:3269-0:2238:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2238:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1966:1620":{"id":"0:1966:1620","crate_id":0,"name":"Match","span":{"filename":"src/prog.rs","begin":[276,4],"end":[276,16]},"visibility":"default","docs":"Match indicates that the program has reached a match state.\n\nThe number in the match corresponds to the Nth logical regular\nexpression in this program. This index is always 0 for normal regex\nprograms. Values greater than 0 appear when compiling regex sets, and\neach match instruction gets its own unique value. The value corresponds\nto the Nth regex in the set.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:1968:1569"]},"discriminant":null}},"0:2117:2180":{"id":"0:2117:2180","crate_id":0,"name":"dfa_size_limit","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the approximate size of the cache used by the DFA.\n\nThis roughly corresponds to the number of bytes that the DFA will\nuse while searching.\n\nNote that this is a *per thread* limit. There is no way to set a global\nlimit. In particular, if a regex is used from multiple threads\nsimultaneously, then each thread may use up to the number of bytes\nspecified here.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2119:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2686:225-0:2197:1623":{"id":"a:2:2686:225-0:2197:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2197:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1138:1929":{"id":"0:1138:1929","crate_id":0,"name":"captures","span":{"filename":"src/re_unicode.rs","begin":[311,4],"end":[318,5]},"visibility":"public","docs":"Returns the capture groups corresponding to the leftmost-first\nmatch in `text`. Capture group `0` always corresponds to the entire\nmatch. If no match is found, then `None` is returned.\n\nYou should only use `captures` if you need access to the location of\ncapturing group matches. Otherwise, `find` is faster for discovering\nthe location of the overall match.\n\n# Examples\n\nSay you have some text with movie names and their release years,\nlike \"'Citizen Kane' (1941)\". It'd be nice if we could search for text\nlooking like that, while also extracting the movie name and its release\nyear separately.\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"'([^']+)'\\s+\\((\\d{4})\\)\").unwrap();\nlet text = \"Not my favorite movie: 'Citizen Kane' (1941).\";\nlet caps = re.captures(text).unwrap();\nassert_eq!(caps.get(1).unwrap().as_str(), \"Citizen Kane\");\nassert_eq!(caps.get(2).unwrap().as_str(), \"1941\");\nassert_eq!(caps.get(0).unwrap().as_str(), \"'Citizen Kane' (1941)\");\n// You can also access the groups by index using the Index notation.\n// Note that this will panic on an invalid index.\nassert_eq!(&caps[1], \"Citizen Kane\");\nassert_eq!(&caps[2], \"1941\");\nassert_eq!(&caps[0], \"'Citizen Kane' (1941)\");\n# }\n```\n\nNote that the full match is at capture group `0`. Each subsequent\ncapture group is indexed by the order of its opening `(`.\n\nWe can make this example a bit clearer by using *named* capture groups:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"'(?P<title>[^']+)'\\s+\\((?P<year>\\d{4})\\)\")\n               .unwrap();\nlet text = \"Not my favorite movie: 'Citizen Kane' (1941).\";\nlet caps = re.captures(text).unwrap();\nassert_eq!(caps.name(\"title\").unwrap().as_str(), \"Citizen Kane\");\nassert_eq!(caps.name(\"year\").unwrap().as_str(), \"1941\");\nassert_eq!(caps.get(0).unwrap().as_str(), \"'Citizen Kane' (1941)\");\n// You can also access the groups by name using the Index notation.\n// Note that this will panic on an invalid group name.\nassert_eq!(&caps[\"title\"], \"Citizen Kane\");\nassert_eq!(&caps[\"year\"], \"1941\");\nassert_eq!(&caps[0], \"'Citizen Kane' (1941)\");\n\n# }\n```\n\nHere we name the capture groups, which we can access with the `name`\nmethod or the `Index` notation with a `&str`. Note that the named\ncapture groups are still accessible with `get` or the `Index` notation\nwith a `usize`.\n\nThe `0`th capture group is always unnamed, so it must always be\naccessed with `get(0)` or `[0]`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1213:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2165:2784":{"id":"0:2165:2784","crate_id":0,"name":"octal","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Whether to support octal syntax or not.\n\nOctal syntax is a little-known way of uttering Unicode codepoints in\na regular expression. For example, `a`, `\\x61`, `\\u0061` and\n`\\141` are all equivalent regular expressions, where the last example\nshows octal syntax.\n\nWhile supporting octal syntax isn't in and of itself a problem, it does\nmake good error messages harder. That is, in PCRE based regex engines,\nsyntax like `\\0` invokes a backreference, which is explicitly\nunsupported in Rust's regex engine. However, many users expect it to\nbe supported. Therefore, when octal support is disabled, the error\nmessage will explicitly mention that backreferences aren't supported.\n\nOctal syntax is disabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2169:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2542-0:2437:4111":{"id":"b:2:2542-0:2437:4111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2437:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2736:4882-0:931:1618":{"id":"a:2:2736:4882-0:931:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:931:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:5288:2493":{"id":"5:5288:2493","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7158:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8139:3269-0:2211:1616":{"id":"a:2:8139:3269-0:2211:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2211:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2736:4882-0:2599:1622":{"id":"a:2:2736:4882-0:2599:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2599:1622","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2244:414":{"id":"0:2244:414","crate_id":0,"name":"clone","span":{"filename":"src/re_bytes.rs","begin":[818,9],"end":[818,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2238:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2268:1625":{"id":"0:2268:1625","crate_id":0,"name":"ReplacerRef","span":{"filename":"src/re_bytes.rs","begin":[1162,0],"end":[1162,49]},"visibility":"public","docs":"By-reference adaptor for a `Replacer`\n\nReturned by [`Replacer::by_ref`](trait.Replacer.html#method.by_ref).","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:2736:4882-0:2268:1625","a:2:8139:3269-0:2268:1625","a:2:8140:3268-0:2268:1625","a:2:2686:225-0:2268:1625","a:2:2672:217-0:2268:1625","b:2:2542-0:2268:1625","b:2:2537-0:2268:1625","b:2:3328-0:2268:1625","b:2:2531-0:2268:1625","b:2:2527-0:2268:1625","b:2:2235-0:2268:1625","b:2:2238-0:2268:1625","0:2273","0:993"]}},"a:2:8139:3269-0:2599:1622":{"id":"a:2:8139:3269-0:2599:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2599:1622","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2238-0:2202:1621":{"id":"b:2:2238-0:2202:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2202:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2238-0:2144:3578":{"id":"b:2:2238-0:2144:3578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2144:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2420:3862":{"id":"0:2420:3862","crate_id":0,"name":"size_hint","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1315":{"id":"0:1315","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1264,0],"end":[1272,1]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"name":"Replacer","id":"0:1289:1624","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:688:110","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}},"items":["0:1317:3801","0:1318:3798"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2277:1622":{"id":"0:2277:1622","crate_id":0,"name":"NoExpand","span":{"filename":"src/re_bytes.rs","begin":[1250,0],"end":[1250,38]},"visibility":"public","docs":"`NoExpand` indicates literal byte string replacement.\n\nIt can be used with `replace` and `replace_all` to do a literal byte string\nreplacement without expanding `$name` to their corresponding capture\ngroups. This can be both convenient (to avoid escaping `$`, for example)\nand performant (since capture groups don't need to be found).\n\n`'t` is the lifetime of the literal text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":["0:2280:1569"]},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:2736:4882-0:2277:1622","a:2:8139:3269-0:2277:1622","a:2:8140:3268-0:2277:1622","a:2:2686:225-0:2277:1622","a:2:2672:217-0:2277:1622","b:2:2542-0:2277:1622","b:2:2537-0:2277:1622","b:2:3328-0:2277:1622","b:2:2531-0:2277:1622","b:2:2527-0:2277:1622","b:2:2235-0:2277:1622","b:2:2238-0:2277:1622","b:5:683-0:2277:1622","0:2284","0:1024","0:2281"]}},"0:972:183":{"id":"0:972:183","crate_id":0,"name":"Output","span":{"filename":"src/re_bytes.rs","begin":[1068,4],"end":[1068,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"a:2:2686:225-0:1814:1653":{"id":"a:2:2686:225-0:1814:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2320:3416":{"id":"0:2320:3416","crate_id":0,"name":"IntoIter","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2363:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}},"b:2:2542-0:2202:1621":{"id":"b:2:2542-0:2202:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2202:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2542:657":{"id":"0:2542:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[780,9],"end":[780,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:554":{"id":"0:554","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[149,0],"end":[155,1]},"visibility":{"restricted":{"parent":"0:512:1639","path":"::input"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:2908:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:1790:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:556:227","0:557:542"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2736:4882-0:2444:4145":{"id":"a:2:2736:4882-0:2444:4145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2444:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2672:217-0:1213:1618":{"id":"a:2:2672:217-0:1213:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1213:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:5551-0:1628:127":{"id":"b:5:5551-0:1628:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9012:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5549:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5553:1422"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1821:716":{"id":"0:1821:716","crate_id":0,"name":"hash","span":{"filename":"src/input.rs","begin":[345,22],"end":[345,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["state",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"__H"}}}]],"output":{"kind":"tuple","inner":[]},"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:9244:144","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8139:3269-0:2229:1627":{"id":"a:2:8139:3269-0:2229:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2229:1627","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:910:3862":{"id":"0:910:3862","crate_id":0,"name":"size_hint","span":{"filename":"src/re_bytes.rs","begin":[805,4],"end":[807,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2586":{"id":"0:2586","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1142,9],"end":[1142,14]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2581:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2589:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2166:1876":{"id":"0:2166:1876","crate_id":0,"name":"size_limit","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the approximate size limit of the compiled regular expression.\n\nThis roughly corresponds to the number of bytes occupied by a single\ncompiled program. If the program exceeds this number, then a\ncompilation error is returned.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2169:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2255:1628":{"id":"0:2255:1628","crate_id":0,"name":"SubCaptureMatches","span":{"filename":"src/re_bytes.rs","begin":[1087,0],"end":[1090,1]},"visibility":"public","docs":"An iterator that yields all capturing matches in the order in which they\nappear in the regex.\n\nIf a particular capture group didn't participate in the match, then `None`\nis yielded for that capture. The first match always corresponds to the\noverall match of the regex.\n\nThe lifetime `'c` corresponds to the lifetime of the `Captures` value, and\nthe lifetime `'t` corresponds to the originally matched text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:2736:4882-0:2255:1628","a:2:8139:3269-0:2255:1628","a:2:8140:3268-0:2255:1628","a:2:2686:225-0:2255:1628","a:2:2672:217-0:2255:1628","b:2:2542-0:2255:1628","b:2:2537-0:2255:1628","b:2:3328-0:2255:1628","b:2:7092-0:2255:1628","b:2:2531-0:2255:1628","b:2:2527-0:2255:1628","b:2:2235-0:2255:1628","b:2:2238-0:2255:1628","b:5:683-0:2255:1628","0:977","0:984","0:2264","0:2260"]}},"0:2280:1569":{"id":"0:2280:1569","crate_id":0,"name":"0","span":{"filename":"src/re_bytes.rs","begin":[1250,24],"end":[1250,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}},"0:2327":{"id":"0:2327","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2287:1589","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["nth_back","rfold","advance_back_by","try_rfold","rfind"],"trait":{"name":"DoubleEndedIterator","id":"2:7125:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2358:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2328:4151"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:458:2925":{"id":"0:458:2925","crate_id":0,"name":"into_regex","span":{"filename":"src/exec.rs","begin":[1277,4],"end":[1279,5]},"visibility":"public","docs":"Build a Regex from this executor.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"re_unicode::Regex","id":"0:2519:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2672:217-0:2444:4145":{"id":"a:2:2672:217-0:2444:4145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2444:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1321":{"id":"0:1321","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1282,0],"end":[1290,1]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:2939:2290","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1213:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],"output":{"kind":"generic","inner":"T"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2495:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"name":"Replacer","id":"0:1289:1624","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"generic","inner":"F"},"items":["0:1324:3801"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2235-0:2590:1625":{"id":"b:2:2235-0:2590:1625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2590:1625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2527-0:2543:1627":{"id":"b:2:2527-0:2543:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2543:1627","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2590:1625":{"id":"0:2590:1625","crate_id":0,"name":"ReplacerRef","span":{"filename":"src/re_unicode.rs","begin":[1213,0],"end":[1213,49]},"visibility":"public","docs":"By-reference adaptor for a `Replacer`\n\nReturned by [`Replacer::by_ref`](trait.Replacer.html#method.by_ref).","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:2736:4882-0:2590:1625","a:2:8139:3269-0:2590:1625","a:2:8140:3268-0:2590:1625","a:2:2686:225-0:2590:1625","a:2:2672:217-0:2590:1625","b:2:2542-0:2590:1625","b:2:2537-0:2590:1625","b:2:3328-0:2590:1625","b:2:2531-0:2590:1625","b:2:2527-0:2590:1625","b:2:2235-0:2590:1625","b:2:2238-0:2590:1625","0:1295","0:2595"]}},"b:2:2537-0:2202:1621":{"id":"b:2:2537-0:2202:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2202:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2235-0:2363:4144":{"id":"b:2:2235-0:2363:4144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2363:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:778":{"id":"0:778","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[380,0],"end":[415,1]},"visibility":{"restricted":{"parent":"0:742:1642","path":"::prog"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"InstRanges","id":"0:2047:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:779:1783","0:781:3483"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11842:30575":{"id":"2:11842:30575","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:11843:30576"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:455":{"id":"0:455","crate_id":0,"name":null,"span":{"filename":"src/exec.rs","begin":[1260,0],"end":[1314,1]},"visibility":{"restricted":{"parent":"0:333:1636","path":"::exec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Exec","id":"0:1642:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:456:2921","0:457:2923","0:458:2925","0:459:2927","0:460:2930","0:461:2932","0:462:2935","0:463:2938","0:464:1874"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:944:1637":{"id":"0:944:1637","crate_id":0,"name":"expand","span":{"filename":"src/re_bytes.rs","begin":[978,4],"end":[980,5]},"visibility":"public","docs":"Expands all instances of `$name` in `replacement` to the corresponding\ncapture group `name`, and writes them to the `dst` buffer given.\n\n`name` may be an integer corresponding to the index of the capture\ngroup (counted by order of opening parenthesis where `0` is the\nentire match) or it can be a name (consisting of letters, digits or\nunderscores) corresponding to a named capture group.\n\nIf `name` isn't a valid capture group (whether the name doesn't exist\nor isn't a valid index), then it is replaced with the empty string.\n\nThe longest possible name consisting of the characters `[_0-9A-Za-z]`\nis used. e.g., `$1a` looks up the capture group named `1a` and not the\ncapture group at index `1`. To exert more precise control over the\nname, or to refer to a capture group name that uses characters outside\nof `[_0-9A-Za-z]`, use braces, e.g., `${1}a` or `${foo[bar].baz}`. When\nusing braces, any sequence of valid UTF-8 bytes is permitted. If the\nsequence does not refer to a capture group name in the corresponding\nregex, then it is replaced with an empty string.\n\nTo write a literal `$` use `$$`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["replacement",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:6601:241","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11899:36837":{"id":"2:11899:36837","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:11521:1606","`DoubleEndedIterator`":"2:7125:120","prim@char":"1:11843:410","str::matches":"2:11896:1783"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:50948:4873","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11541:4853","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1227:797":{"id":"0:1227:797","crate_id":0,"name":"len","span":{"filename":"src/re_unicode.rs","begin":[997,4],"end":[999,5]},"visibility":"public","docs":"Returns the total number of capture groups (even if they didn't match).\n\nThis is always at least `1`, since every regex has at least one capture\ngroup that corresponds to the full match.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2240:1808":{"id":"2:2240:1808","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2363:4144":{"id":"0:2363:4144","crate_id":0,"name":"SetMatchesIter","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"A borrowed iterator over the set of matches from a regex set.\n\nThe lifetime `'a` refers to the lifetime of a `SetMatches` value.\n\nThis will always produces matches in ascending order of index, where the\nindex corresponds to the index of the regex that matched with respect to\nits position when initially building the set.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:2736:4882-0:2363:4144","a:2:8139:3269-0:2363:4144","a:2:8140:3268-0:2363:4144","a:2:2686:225-0:2363:4144","a:2:2672:217-0:2363:4144","b:2:2542-0:2363:4144","b:2:2537-0:2363:4144","b:2:3328-0:2363:4144","b:2:7092-0:2363:4144","b:2:2531-0:2363:4144","b:2:2527-0:2363:4144","b:2:2235-0:2363:4144","b:2:2238-0:2363:4144","b:5:683-0:2363:4144","0:2338","0:2367","0:2335","0:2370","0:2330"]}},"b:2:2235-0:1780:1655":{"id":"b:2:2235-0:1780:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:1780:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2005:1861":{"id":"0:2005:1861","crate_id":0,"name":"InstEmptyLook","span":{"filename":"src/prog.rs","begin":[331,0],"end":[337,1]},"visibility":"public","docs":"Representation of the `EmptyLook` instruction.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:2006:1837","0:2007:2055"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":[]}},"0:2085:2792":{"id":"0:2085:2792","crate_id":0,"name":"build","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Consume the builder and compile the regular expression.\n\nNote that calling `as_str` on the resulting `Regex` will produce the\npattern given to `new` verbatim. Notably, it will not incorporate any\nof the flags set on this builder.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48878:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2197:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:2268:1625":{"id":"b:2:2238-0:2268:1625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2268:1625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2527-0:2096:3498":{"id":"b:2:2527-0:2096:3498","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2096:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1817":{"id":"0:1817","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[345,9],"end":[345,14]},"visibility":{"restricted":{"parent":"0:512:1639","path":"::input"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1818:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:101:1915":{"id":"0:101:1915","crate_id":0,"name":"reverse","span":{"filename":"src/compile.rs","begin":[119,4],"end":[122,5]},"visibility":"public","docs":"When set, the machine returned is suitable for matching text in\nreverse. In particular, all concatenations are flipped.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2006:1837":{"id":"0:2006:1837","crate_id":0,"name":"goto","span":{"filename":"src/prog.rs","begin":[334,4],"end":[334,21]},"visibility":"public","docs":"The next location to execute in the program if this instruction\nsucceeds.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"a:2:8140:3268-0:2144:3578":{"id":"a:2:8140:3268-0:2144:3578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2144:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2537-0:2220:1626":{"id":"b:2:2537-0:2220:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2220:1626","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1654:2698":{"id":"0:1654:2698","crate_id":0,"name":"ExecNoSyncStr","span":{"filename":"src/exec.rs","begin":[62,0],"end":[62,45]},"visibility":"public","docs":"`ExecNoSyncStr` is like `ExecNoSync`, but matches on &str instead of &[u8].","links":{"u8":"1:11860:1464"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":[]}},"b:2:2527-0:2496:1620":{"id":"b:2:2527-0:2496:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:945:797":{"id":"0:945:797","crate_id":0,"name":"len","span":{"filename":"src/re_bytes.rs","begin":[987,4],"end":[989,5]},"visibility":"public","docs":"Returns the total number of capture groups (even if they didn't match).\n\nThis is always at least `1`, since every regex has at least one capture\ngroup that corresponds to the full match.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8139:3269-0:2449:4144":{"id":"a:2:8139:3269-0:2449:4144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2449:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:981:938":{"id":"0:981:938","crate_id":0,"name":"next","span":{"filename":"src/re_bytes.rs","begin":[1095,4],"end":[1099,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2174:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:7092-0:2581:1621":{"id":"b:2:7092-0:2581:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7202:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7088:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2581:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:7094:2056","2:7095:3416","2:7096:770"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:2309":{"id":"0:2309","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2287:1589","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2351:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2310:4113","0:2311:1823","0:2312:797","0:2313:781"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2238-0:1780:1655":{"id":"b:2:2238-0:1780:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:1780:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8140:3268-0:1213:1618":{"id":"a:2:8140:3268-0:1213:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1213:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:551":{"id":"0:551","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[142,0],"end":[147,1]},"visibility":{"restricted":{"parent":"0:512:1639","path":"::input"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:1790:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:553:924"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:567:1826":{"id":"0:567:1826","crate_id":0,"name":"prefix_at","span":{"filename":"src/input.rs","begin":[207,4],"end":[213,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefixes",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:1833:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["at",{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:1780:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:1780:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:569:797":{"id":"0:569:797","crate_id":0,"name":"len","span":{"filename":"src/input.rs","begin":[215,4],"end":[217,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8139:3269-0:2220:1626":{"id":"a:2:8139:3269-0:2220:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2220:1626","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2019:2011":{"id":"0:2019:2011","crate_id":0,"name":"EndText","span":{"filename":"src/prog.rs","begin":[349,4],"end":[349,11]},"visibility":"default","docs":"End of input.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"b:2:2238-0:2363:4144":{"id":"b:2:2238-0:2363:4144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2363:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1112:2110":{"id":"0:1112:2110","crate_id":0,"name":"range","span":{"filename":"src/re_unicode.rs","begin":[51,4],"end":[53,5]},"visibility":"public","docs":"Returns the range over the starting and ending byte offsets of the\nmatch in the haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Range","id":"2:46913:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:683-0:2277:1622":{"id":"b:5:683-0:2277:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2277:1622","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["5:685:3800","5:686:2614","5:687:5400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8140:3268-0:2437:4111":{"id":"a:2:8140:3268-0:2437:4111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2437:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2050":{"id":"0:2050","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[371,9],"end":[371,14]},"visibility":{"restricted":{"parent":"0:742:1642","path":"::prog"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstRanges","id":"0:2047:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2051:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11848:34446":{"id":"2:11848:34446","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:11847:34437"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:51009:4857","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11849:10356":{"id":"2:11849:10356","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:50980:4869","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2531-0:1965:1658":{"id":"b:2:2531-0:1965:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:1965:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2672:217-0:2543:1627":{"id":"a:2:2672:217-0:2543:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2543:1627","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1952:1354":{"id":"0:1952:1354","crate_id":0,"name":"start","span":{"filename":"src/prog.rs","begin":[35,4],"end":[35,22]},"visibility":"public","docs":"A pointer to the start instruction. This can vary depending on how\nthe program was compiled. For example, programs for use with the DFA\nengine have a `.*?` inserted at the beginning of unanchored regular\nexpressions. The actual starting point of the program is after the\n`.*?`.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"0:2168:2791":{"id":"0:2168:2791","crate_id":0,"name":"nest_limit","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the nesting limit for this parser.\n\nThe nesting limit controls how deep the abstract syntax tree is allowed\nto be. If the AST exceeds the given limit (e.g., with too many nested\ngroups), then an error is returned by the parser.\n\nThe purpose of this limit is to act as a heuristic to prevent stack\noverflow for consumers that do structural induction on an `Ast` using\nexplicit recursion. While this crate never does this (instead using\nconstant stack space and moving the call stack to the heap), other\ncrates may.\n\nThis limit is not checked until the entire Ast is parsed. Therefore,\nif callers want to put a limit on the amount of heap space used, then\nthey should impose a limit on the length, in bytes, of the concrete\npattern string. In particular, this is viable since this parser\nimplementation will limit itself to heap space proportional to the\nlength of the pattern string.\n\nNote that a nest limit of `0` will return a nest limit error for most\npatterns but not all. For example, a nest limit of `0` permits `a` but\nnot `ab`, since `ab` requires a concatenation, which results in a nest\ndepth of `1`. In general, a nest limit is not something that manifests\nin an obvious way in the concrete syntax, therefore, it should not be\nused in a granular way.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2169:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2253":{"id":"0:2253","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[859,16],"end":[859,21]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2248:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2254:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:611:1015":{"id":"0:611:1015","crate_id":0,"name":"partial_cmp","span":{"filename":"src/input.rs","begin":[429,4],"end":[431,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:38661:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2078:1630":{"id":"0:2078:1630","crate_id":0,"name":"bytes","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2096:3498"],"is_stripped":false}},"2:2601:5709":{"id":"2:2601:5709","crate_id":2,"name":"provide","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["demand",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Demand","id":"2:3389:8321","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:988:3801":{"id":"0:988:3801","crate_id":0,"name":"replace_append","span":{"filename":"src/re_bytes.rs","begin":[1119,4],"end":[1119,73]},"visibility":"default","docs":"Appends text to `dst` to replace the current match.\n\nThe current match is represented by `caps`, which is guaranteed to\nhave a match at capture group `0`.\n\nFor example, a no-op replacement would be\n`dst.extend(&caps[0])`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:931:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:6601:241","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2040:1860":{"id":"0:2040:1860","crate_id":0,"name":"InstChar","span":{"filename":"src/prog.rs","begin":[362,0],"end":[368,1]},"visibility":"public","docs":"Representation of the Char instruction.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:2041:1837","0:2042:1841"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":[]}},"b:2:2238-0:2277:1622":{"id":"b:2:2238-0:2277:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2277:1622","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2414:4151":{"id":"0:2414:4151","crate_id":0,"name":"next_back","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2542-0:2119:3498":{"id":"b:2:2542-0:2119:3498","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2119:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1130":{"id":"0:1130","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[169,0],"end":[589,1]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":"Core regular expression methods.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2519:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1131:924","0:1132:2285","0:1133:2545","0:1135:3646","0:1138:1929","0:1141:3703","0:1144:1939","0:1147:3724","0:1150:2493","0:1153:3794","0:1156:3788"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:26-0:790:1632":{"id":"0:26-0:790:1632","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[731,4],"end":[731,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::re_bytes","name":"re_bytes","id":"0:790:1632","glob":true}},"0:2602:1569":{"id":"0:2602:1569","crate_id":0,"name":"0","span":{"filename":"src/re_unicode.rs","begin":[1301,24],"end":[1301,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}},"2:11836:2422":{"id":"2:11836:2422","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9702:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9702:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:2047:1659":{"id":"0:2047:1659","crate_id":0,"name":"InstRanges","span":{"filename":"src/prog.rs","begin":[372,0],"end":[378,1]},"visibility":"public","docs":"Representation of the Ranges instruction.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:2048:1837","0:2049:1998"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":["0:778","a:2:2736:4882-0:2047:1659","a:2:8139:3269-0:2047:1659","a:2:8140:3268-0:2047:1659","a:2:2686:225-0:2047:1659","a:2:2672:217-0:2047:1659","b:2:2542-0:2047:1659","b:2:2537-0:2047:1659","b:2:3328-0:2047:1659","b:2:2531-0:2047:1659","b:2:2527-0:2047:1659","b:2:2235-0:2047:1659","b:2:2238-0:2047:1659","b:5:683-0:2047:1659","0:2050","0:2052"]}},"b:2:2537-0:2496:1620":{"id":"b:2:2537-0:2496:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3328-0:2444:4145":{"id":"b:2:3328-0:2444:4145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2444:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1176:3842":{"id":"0:1176:3842","crate_id":0,"name":"captures_len","span":{"filename":"src/re_unicode.rs","begin":[724,4],"end":[726,5]},"visibility":"public","docs":"Returns the number of captures.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2527-0:2449:4144":{"id":"b:2:2527-0:2449:4144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2449:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1211:797":{"id":"0:1211:797","crate_id":0,"name":"len","span":{"filename":"src/re_unicode.rs","begin":[895,4],"end":[897,5]},"visibility":"public","docs":"Returns the total number of capture groups (even if they didn't match).\n\nThis is always at least `1` since every regex has at least `1`\ncapturing group that corresponds to the entire match.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2531-0:2496:1620":{"id":"b:2:2531-0:2496:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2164:1589":{"id":"0:2164:1589","crate_id":0,"name":"unicode","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the value for the Unicode (`u`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2169:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1961:1824":{"id":"0:1961:1824","crate_id":0,"name":"prefixes","span":{"filename":"src/prog.rs","begin":[58,4],"end":[58,33]},"visibility":"public","docs":"A possibly empty machine for very quickly matching prefix literals.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:1833:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"a:2:2672:217-0:2238:1617":{"id":"a:2:2672:217-0:2238:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2238:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1010":{"id":"0:1010","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1203,0],"end":[1211,1]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"name":"Replacer","id":"0:987:1624","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:688:110","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}}},"items":["0:1012:3801","0:1013:3798"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3328-0:2519:1623":{"id":"b:2:3328-0:2519:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2519:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2273":{"id":"0:2273","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1161,9],"end":[1161,14]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2268:1625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:2276:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11939:2049":{"id":"2:11939:2049","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8140:3268-0:367:1652":{"id":"a:2:8140:3268-0:367:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecBuilder","id":"0:367:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1955:1901":{"id":"0:1955:1901","crate_id":0,"name":"is_bytes","span":{"filename":"src/prog.rs","begin":[43,4],"end":[43,22]},"visibility":"public","docs":"When true, this program uses byte range instructions instead of Unicode\nrange instructions.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"0:831:924":{"id":"0:831:924","crate_id":0,"name":"new","span":{"filename":"src/re_bytes.rs","begin":[119,4],"end":[121,5]},"visibility":"public","docs":"Compiles a regular expression. Once compiled, it can be used repeatedly\nto search, split or replace text in a string.\n\nIf an invalid expression is given, then an error is returned.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["re",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48878:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2197:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2736:4882-0:2346:2928":{"id":"a:2:2736:4882-0:2346:2928","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2346:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1185:3862":{"id":"0:1185:3862","crate_id":0,"name":"size_hint","span":{"filename":"src/re_unicode.rs","begin":[763,4],"end":[765,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3328-0:1780:1655":{"id":"b:2:3328-0:1780:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:1780:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2235-0:2096:3498":{"id":"b:2:2235-0:2096:3498","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2096:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:683-0:1642:1651":{"id":"b:5:683-0:1642:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Exec","id":"0:1642:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:685:3800","5:686:2614","5:687:5400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1052:3845":{"id":"0:1052:3845","crate_id":0,"name":"locations","span":{"filename":"src/re_trait.rs","begin":[113,4],"end":[115,5]},"visibility":"default","docs":"Allocates fresh space for all capturing groups in this regex.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Locations","id":"0:2459:1619","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:10-0:2572:1616":{"id":"0:10-0:2572:1616","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[635,30],"end":[635,44]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::re_unicode::CaptureMatches","name":"CaptureMatches","id":"0:2572:1616","glob":false}},"0:609:1015":{"id":"0:609:1015","crate_id":0,"name":"partial_cmp","span":{"filename":"src/input.rs","begin":[422,4],"end":[424,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"char"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Ordering","id":"2:38661:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:905":{"id":"0:905","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[782,0],"end":[808,1]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_collect","map_while","intersperse_with","count","next_chunk","cmp","min_by","by_ref","eq_by","unzip","fold","zip","collect_into","lt","scan","ge","for_each","advance_by","any","min_by_key","all","max","cloned","is_sorted","cycle","reduce","position","last","partition","flat_map","skip","filter","nth","max_by","is_sorted_by","array_chunks","ne","try_reduce","partition_in_place","flatten","filter_map","partial_cmp","step_by","find","max_by_key","sum","le","size_hint","collect","product","map","find_map","is_sorted_by_key","is_partitioned","fuse","skip_while","chain","rev","take","eq","__iterator_get_unchecked","cmp_by","try_find","try_fold","peekable","inspect","take_while","intersperse","copied","min","enumerate","partial_cmp_by","rposition","gt","try_for_each"],"trait":{"name":"Iterator","id":"2:7202:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2229:1627","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:908:2056","0:909:938","0:910:3862"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1058:3646":{"id":"0:1058:3646","crate_id":0,"name":"find_iter","span":{"filename":"src/re_trait.rs","begin":[152,4],"end":[154,5]},"visibility":"default","docs":"Returns an iterator over all non-overlapping successive leftmost-first\nmatches.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Text","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1049:2675","args":null}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2476:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2672:217-0:2599:1622":{"id":"a:2:2672:217-0:2599:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2599:1622","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2392:797":{"id":"0:2392:797","crate_id":0,"name":"len","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Returns the total number of regular expressions in this set.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11825:36828":{"id":"2:11825:36828","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:11823:36827"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2139:1589":{"id":"0:2139:1589","crate_id":0,"name":"unicode","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the value for the Unicode (`u`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2144:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2418:2056":{"id":"0:2418:2056","crate_id":0,"name":"Item","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"0:2167:2180":{"id":"0:2167:2180","crate_id":0,"name":"dfa_size_limit","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the approximate size of the cache used by the DFA.\n\nThis roughly corresponds to the number of bytes that the DFA will\nuse while searching.\n\nNote that this is a *per thread* limit. There is no way to set a global\nlimit. In particular, if a regex is used from multiple threads\nsimultaneously, then each thread may use up to the number of bytes\nspecified here.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2169:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1209":{"id":"0:1209","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[880,0],"end":[909,1]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2552:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1210:1836","0:1211:797"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:996:3801":{"id":"0:996:3801","crate_id":0,"name":"replace_append","span":{"filename":"src/re_bytes.rs","begin":[1165,4],"end":[1167,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:931:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:6601:241","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1629:2013":{"id":"0:1629:2013","crate_id":0,"name":"Syntax","span":{"filename":"src/error.rs","begin":[8,4],"end":[8,18]},"visibility":"default","docs":"A syntax error.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:1631:1569"]},"discriminant":null}},"0:2312:797":{"id":"0:2312:797","crate_id":0,"name":"len","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"The total number of regexes in the set that created these matches.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2398:797":{"id":"0:2398:797","crate_id":0,"name":"len","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"The total number of regexes in the set that created these matches.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11922:28555":{"id":"2:11922:28555","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11843:410","self::pattern":"2:11521:1606"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8140:3268-0:1628:127":{"id":"a:2:8140:3268-0:1628:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:827":{"id":"0:827","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[104,0],"end":[111,1]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:11482:3586","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2197:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:828:126","0:829:3609"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2235-0:2496:1620":{"id":"b:2:2235-0:2496:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2237:657":{"id":"0:2237:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[776,9],"end":[776,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:999":{"id":"0:999","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1173,0],"end":[1181,1]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"name":"Replacer","id":"0:987:1624","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"items":["0:1001:3801","0:1002:3798"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2537-0:1790:1654":{"id":"b:2:2537-0:1790:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:1790:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:980:2056":{"id":"0:980:2056","crate_id":0,"name":"Item","span":{"filename":"src/re_bytes.rs","begin":[1093,4],"end":[1093,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2174:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}}}},"a:2:2686:225-0:2169:3578":{"id":"a:2:2686:225-0:2169:3578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2169:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2067:2785":{"id":"0:2067:2785","crate_id":0,"name":"case_insensitive","span":{"filename":"src/re_builder.rs","begin":[9,4],"end":[9,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"b:2:2542-0:1814:1653":{"id":"b:2:2542-0:1814:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2038":{"id":"0:2038","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[340,40],"end":[340,42]},"visibility":{"restricted":{"parent":"0:742:1642","path":"::prog"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2306:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2012:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2179":{"id":"0:2179","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[20,9],"end":[20,13]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2684:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2174:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2531":{"id":"0:2531","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[750,16],"end":[750,21]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2524:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["0:2533:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3328-0:2096:3498":{"id":"b:2:3328-0:2096:3498","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2096:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11845:8461":{"id":"2:11845:8461","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:11843:410"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:50702:4861","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:813:1354":{"id":"0:813:1354","crate_id":0,"name":"start","span":{"filename":"src/re_bytes.rs","begin":[30,4],"end":[32,5]},"visibility":"public","docs":"Returns the starting byte offset of the match in the haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2456":{"id":"0:2456","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2373:1630","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2449:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2458:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1177:3686":{"id":"0:1177:3686","crate_id":0,"name":"capture_locations","span":{"filename":"src/re_unicode.rs","begin":[730,4],"end":[732,5]},"visibility":"public","docs":"Returns an empty set of capture locations that can be reused in\nmultiple calls to `captures_read` or `captures_read_at`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2552:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:102:1634":{"id":"0:102:1634","crate_id":0,"name":"compile","span":{"filename":"src/compile.rs","begin":[129,4],"end":[137,5]},"visibility":"public","docs":"Compile a regular expression given its AST.\n\nThe compiler is guaranteed to succeed unless the program exceeds the\nspecified size limit. If the size limit is exceeded, then compilation\nstops and returns an error.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["exprs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Hir","id":"20:2773:1854","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"result::Result","id":"2:48878:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Program","id":"0:1947:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1789:657":{"id":"0:1789:657","crate_id":0,"name":"fmt","span":{"filename":"src/input.rs","begin":[12,22],"end":[12,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2542-0:1965:1658":{"id":"b:2:2542-0:1965:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:1965:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2238-0:2229:1627":{"id":"b:2:2238-0:2229:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2229:1627","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2527-0:2255:1628":{"id":"b:2:2527-0:2255:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2255:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:902":{"id":"0:902","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[768,0],"end":[768,47]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7472:3584","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2220:1626","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2326:3862":{"id":"0:2326:3862","crate_id":0,"name":"size_hint","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2551:657":{"id":"0:2551:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[818,9],"end":[818,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8140:3268-0:2268:1625":{"id":"a:2:8140:3268-0:2268:1625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2268:1625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:8140:3268-0:2277:1622":{"id":"a:2:8140:3268-0:2277:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2277:1622","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:8139:3269-0:2437:4111":{"id":"a:2:8139:3269-0:2437:4111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2437:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1156:3788":{"id":"0:1156:3788","crate_id":0,"name":"replacen","span":{"filename":"src/re_unicode.rs","begin":[534,4],"end":[588,5]},"visibility":"public","docs":"Replaces at most `limit` non-overlapping matches in `text` with the\nreplacement provided. If `limit` is 0, then all non-overlapping matches\nare replaced.\n\nSee the documentation for `replace` for details on how to access\ncapturing group matches in the replacement string.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["limit",{"kind":"primitive","inner":"usize"}],["rep",{"kind":"generic","inner":"R"}]],"output":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:688:110","args":{"angle_bracketed":{"args":[{"lifetime":"'t"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Replacer","id":"0:1289:1624","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2530:414":{"id":"0:2530:414","crate_id":0,"name":"clone","span":{"filename":"src/re_unicode.rs","begin":[750,9],"end":[750,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2524:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2736:4882-0:2363:4144":{"id":"a:2:2736:4882-0:2363:4144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2363:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:683-0:2346:2928":{"id":"b:5:683-0:2346:2928","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2346:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:685:3800","5:686:2614","5:687:5400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1049:2675":{"id":"0:1049:2675","crate_id":0,"name":"RegularExpression","span":{"filename":"src/re_trait.rs","begin":[104,0],"end":[161,1]},"visibility":"public","docs":"`RegularExpression` describes types that can implement regex searching.\n\nThis trait is my attempt at reducing code duplication and to standardize\nthe internal API. Specific duplication that is avoided are the `find`\nand `capture` iterators, which are slightly tricky.\n\nIt's not clear whether this trait is worth it, and it also isn't\nclear whether it's useful as a public trait or not. Methods like\n`next_after_empty` reak of bad design, but the rest of the methods seem\nsomewhat reasonable. One particular thing this trait would expose would be\nthe ability to start the search of a regex anywhere in a haystack, which\nisn't possible in the current public API.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:1050:2812","0:1051:2813","0:1052:3845","0:1053:2814","0:1054:2816","0:1055:2817","0:1056:2818","0:1057:2819","0:1058:3646","0:1059:3703"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:644:2965":{"id":"0:644:2965","crate_id":0,"name":"lcp","span":{"filename":"src/literal/imp.rs","begin":[132,4],"end":[134,5]},"visibility":"public","docs":"Returns a matcher for the longest common prefix of this matcher.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Memmem","id":"0:1889:3157","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2440":{"id":"0:2440","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2373:1630","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2437:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2441:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2229:1627":{"id":"0:2229:1627","crate_id":0,"name":"SplitN","span":{"filename":"src/re_bytes.rs","begin":[777,0],"end":[780,1]},"visibility":"public","docs":"Yields at most `N` substrings delimited by a regular expression match.\n\nThe last substring will be whatever remains after splitting.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the byte string being split.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:2736:4882-0:2229:1627","a:2:8139:3269-0:2229:1627","a:2:8140:3268-0:2229:1627","a:2:2686:225-0:2229:1627","a:2:2672:217-0:2229:1627","b:2:2542-0:2229:1627","b:2:2537-0:2229:1627","b:2:3328-0:2229:1627","b:2:7092-0:2229:1627","b:2:2531-0:2229:1627","b:2:2527-0:2229:1627","b:2:2235-0:2229:1627","b:2:2238-0:2229:1627","0:905","0:911","0:2234"]}},"0:2442":{"id":"0:2442","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2373:1630","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2437:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2443:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2537-0:2519:1623":{"id":"b:2:2537-0:2519:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2519:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2069:2787":{"id":"0:2069:2787","crate_id":0,"name":"dot_matches_new_line","span":{"filename":"src/re_builder.rs","begin":[11,4],"end":[11,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"b:2:3328-0:2437:4111":{"id":"b:2:3328-0:2437:4111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2437:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1638:414":{"id":"0:1638:414","crate_id":0,"name":"clone","span":{"filename":"src/error.rs","begin":[5,9],"end":[5,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2283:414":{"id":"0:2283:414","crate_id":0,"name":"clone","span":{"filename":"src/re_bytes.rs","begin":[1249,9],"end":[1249,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2277:1622","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:2119:3498":{"id":"b:2:2537-0:2119:3498","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2119:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2401:3416":{"id":"0:2401:3416","crate_id":0,"name":"IntoIter","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2444:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:1053:2814":{"id":"0:1053:2814","crate_id":0,"name":"next_after_empty","span":{"filename":"src/re_trait.rs","begin":[122,4],"end":[122,69]},"visibility":"default","docs":"Returns the position of the next character after `i`.\n\nFor example, a haystack with type `&[u8]` probably returns `i+1`,\nwhereas a haystack with type `&str` probably returns `i` plus the\nlength of the next UTF-8 sequence.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Text","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1049:2675","args":null}}}}}],["i",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:8140:3268-0:2519:1623":{"id":"a:2:8140:3268-0:2519:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2519:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2595":{"id":"0:2595","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1212,9],"end":[1212,14]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2590:1625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:2598:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2235-0:2599:1622":{"id":"b:2:2235-0:2599:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2599:1622","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2429:657":{"id":"0:2429:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2605:414":{"id":"0:2605:414","crate_id":0,"name":"clone","span":{"filename":"src/re_unicode.rs","begin":[1300,9],"end":[1300,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2599:1622","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:4-0:2149:1611":{"id":"0:4-0:2149:1611","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[628,0],"end":[628,42]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::re_builder::set_unicode","name":"set_unicode","id":"0:2149:1611","glob":true}},"b:2:2527-0:1780:1655":{"id":"b:2:2527-0:1780:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:1780:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2346:2928":{"id":"0:2346:2928","crate_id":0,"name":"RegexSet","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Match multiple (possibly overlapping) regular expressions in a single scan.\n\nA regex set corresponds to the union of two or more regular expressions.\nThat is, a regex set will match text where at least one of its\nconstituent regular expressions matches. A regex set as its formulated here\nprovides a touch more power: it will also report *which* regular\nexpressions in the set match. Indeed, this is the key difference between\nregex sets and a single `Regex` with many alternates, since only one\nalternate can match at a time.\n\nFor example, consider regular expressions to match email addresses and\ndomains: `[a-z]+@[a-z]+\\.(com|org|net)` and `[a-z]+\\.(com|org|net)`. If a\nregex set is constructed from those regexes, then searching the text\n`foo@example.com` will report both regexes as matching. Of course, one\ncould accomplish this by compiling each regex on its own and doing two\nsearches over the text. The key advantage of using a regex set is that it\nwill report the matching regexes using a *single pass through the text*.\nIf one has hundreds or thousands of regexes to match repeatedly (like a URL\nrouter for a complex web application or a user agent matcher), then a regex\nset can realize huge performance gains.\n\n# Example\n\nThis shows how the above two regexes (for matching email addresses and\ndomains) might work:\n\n ```rust\n # use regex::RegexSet;\n let set = RegexSet::new(&[\n     r\"[a-z]+@[a-z]+\\.(com|org|net)\",\n     r\"[a-z]+\\.(com|org|net)\",\n ]).unwrap();\n\n // Ask whether any regexes in the set match.\n assert!(set.is_match(\"foo@example.com\"));\n\n // Identify which regexes in the set match.\n let matches: Vec<_> = set.matches(\"foo@example.com\").into_iter().collect();\n assert_eq!(vec![0, 1], matches);\n\n // Try again, but with text that only matches one of the regexes.\n let matches: Vec<_> = set.matches(\"example.com\").into_iter().collect();\n assert_eq!(vec![1], matches);\n\n // Try again, but with text that doesn't match any regex in the set.\n let matches: Vec<_> = set.matches(\"example\").into_iter().collect();\n assert!(matches.is_empty());\n ```\n\nNote that it would be possible to adapt the above example to using `Regex`\nwith an expression like:\n\n```text\n(?P<email>[a-z]+@(?P<email_domain>[a-z]+[.](com|org|net)))|(?P<domain>[a-z]+[.](com|org|net))\n```\n\nAfter a match, one could then inspect the capture groups to figure out\nwhich alternates matched. The problem is that it is hard to make this\napproach scale when there are many regexes since the overlap between each\nalternate isn't always obvious to reason about.\n\n# Limitations\n\nRegex sets are limited to answering the following two questions:\n\n1. Does any regex in the set match?\n2. If so, which regexes in the set match?\n\nAs with the main [`Regex`][crate::Regex] type, it is cheaper to ask (1)\ninstead of (2) since the matching engines can stop after the first match\nis found.\n\nYou cannot directly extract [`Match`][crate::Match] or\n[`Captures`][crate::Captures] objects from a regex set. If you need these\noperations, the recommended approach is to compile each pattern in the set\nindependently and scan the exact same input a second time with those\nindependently compiled patterns:\n\n```rust\nuse regex::{Regex, RegexSet};\n\nlet patterns = [\"foo\", \"bar\"];\n// Both patterns will match different ranges of this string.\nlet text = \"barfoo\";\n\n// Compile a set matching any of our patterns.\nlet set = RegexSet::new(&patterns).unwrap();\n// Compile each pattern independently.\nlet regexes: Vec<_> = set.patterns().iter()\n    .map(|pat| Regex::new(pat).unwrap())\n    .collect();\n\n// Match against the whole set first and identify the individual\n// matching patterns.\nlet matches: Vec<&str> = set.matches(text).into_iter()\n    // Dereference the match index to get the corresponding\n    // compiled pattern.\n    .map(|match_idx| &regexes[match_idx])\n    // To get match locations or any other info, we then have to search\n    // the exact same text again, using our separately-compiled pattern.\n    .map(|pat| pat.find(text).unwrap().as_str())\n    .collect();\n\n// Matches arrive in the order the constituent patterns were declared,\n// not the order they appear in the input.\nassert_eq!(vec![\"foo\", \"bar\"], matches);\n```\n\n# Performance\n\nA `RegexSet` has the same performance characteristics as `Regex`. Namely,\nsearch takes `O(mn)` time, where `m` is proportional to the size of the\nregex set and `n` is proportional to the length of the search text.","links":{"crate::Captures":"0:1213:1618","crate::Regex":"0:2519:1623","crate::Match":"0:2496:1620"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:2296","a:2:2736:4882-0:2346:2928","a:2:8139:3269-0:2346:2928","a:2:8140:3268-0:2346:2928","a:2:2686:225-0:2346:2928","a:2:2672:217-0:2346:2928","b:2:2542-0:2346:2928","b:2:2537-0:2346:2928","b:2:3328-0:2346:2928","b:2:2531-0:2346:2928","b:2:2527-0:2346:2928","b:2:2235-0:2346:2928","b:2:2238-0:2346:2928","b:5:683-0:2346:2928","0:2349","0:2342"]}},"b:2:2537-0:1947:1660":{"id":"b:2:2537-0:1947:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Program","id":"0:1947:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2115:2784":{"id":"0:2115:2784","crate_id":0,"name":"octal","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Whether to support octal syntax or not.\n\nOctal syntax is a little-known way of uttering Unicode codepoints in\na regular expression. For example, `a`, `\\x61`, `\\u0061` and\n`\\141` are all equivalent regular expressions, where the last example\nshows octal syntax.\n\nWhile supporting octal syntax isn't in and of itself a problem, it does\nmake good error messages harder. That is, in PCRE based regex engines,\nsyntax like `\\0` invokes a backreference, which is explicitly\nunsupported in Rust's regex engine. However, many users expect it to\nbe supported. Therefore, when octal support is disabled, the error\nmessage will explicitly mention that backreferences aren't supported.\n\nOctal syntax is disabled by default.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2119:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11914:36843":{"id":"2:11914:36843","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:1642:1651":{"id":"b:2:2537-0:1642:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Exec","id":"0:1642:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2137:2788":{"id":"0:2137:2788","crate_id":0,"name":"swap_greed","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the value for the greedy swap (`U`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2144:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:594:2117":{"id":"0:594:2117","crate_id":0,"name":"is_none","span":{"filename":"src/input.rs","begin":[360,4],"end":[362,5]},"visibility":"public","docs":"Returns true iff the character is absent.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2552:1615":{"id":"0:2552:1615","crate_id":0,"name":"CaptureLocations","span":{"filename":"src/re_unicode.rs","begin":[870,0],"end":[870,49]},"visibility":"public","docs":"CaptureLocations is a low level representation of the raw offsets of each\nsubmatch.\n\nYou can think of this as a lower level\n[`Captures`](struct.Captures.html), where this type does not support\nnamed capturing groups directly and it does not borrow the text that these\noffsets were matched on.\n\nPrimarily, this type is useful when using the lower level `Regex` APIs\nsuch as `read_captures`, which permits amortizing the allocation in which\ncapture match locations are stored.\n\nIn order to build a value of this type, you'll need to call the\n`capture_locations` method on the `Regex` being used to execute the search.\nThe value returned can then be reused in subsequent searches.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:1209","a:2:2736:4882-0:2552:1615","a:2:8139:3269-0:2552:1615","a:2:8140:3268-0:2552:1615","a:2:2686:225-0:2552:1615","a:2:2672:217-0:2552:1615","b:2:2542-0:2552:1615","b:2:2537-0:2552:1615","b:2:3328-0:2552:1615","b:2:2531-0:2552:1615","b:2:2527-0:2552:1615","b:2:2235-0:2552:1615","b:2:2238-0:2552:1615","b:5:683-0:2552:1615","0:2555","0:2557"]}},"0:12-0:1213:1618":{"id":"0:12-0:1213:1618","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[635,60],"end":[635,68]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::re_unicode::Captures","name":"Captures","id":"0:1213:1618","glob":false}},"0:2539":{"id":"0:2539","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[780,9],"end":[780,14]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2534:1626","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2542:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2542-0:2432:2928":{"id":"b:2:2542-0:2432:2928","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2432:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2342":{"id":"0:2342","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2287:1589","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2346:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2343:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2537-0:931:1618":{"id":"b:2:2537-0:931:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:931:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1224:781":{"id":"0:1224:781","crate_id":0,"name":"iter","span":{"filename":"src/re_unicode.rs","begin":[963,4],"end":[965,5]},"visibility":"public","docs":"An iterator that yields all capturing matches in the order in which\nthey appear in the regex. If a particular capture group didn't\nparticipate in the match, then `None` is yielded for that capture.\n\nThe first match always corresponds to the overall match of the regex.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'c","mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2559:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2531-0:931:1618":{"id":"b:2:2531-0:931:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:931:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2238-0:2351:4111":{"id":"b:2:2238-0:2351:4111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2351:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2321:2056":{"id":"0:2321:2056","crate_id":0,"name":"Item","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"b:2:2238-0:2543:1627":{"id":"b:2:2238-0:2543:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2543:1627","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:876:3842":{"id":"0:876:3842","crate_id":0,"name":"captures_len","span":{"filename":"src/re_bytes.rs","begin":[666,4],"end":[668,5]},"visibility":"public","docs":"Returns the number of captures.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:811":{"id":"0:811","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[27,0],"end":[58,1]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2174:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:813:1354","0:814:598","0:815:2110","0:816:2815"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2437:4111":{"id":"0:2437:4111","crate_id":0,"name":"SetMatches","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"A set of matches returned by a regex set.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:2395","a:2:2736:4882-0:2437:4111","a:2:8139:3269-0:2437:4111","a:2:8140:3268-0:2437:4111","a:2:2686:225-0:2437:4111","a:2:2672:217-0:2437:4111","b:2:2542-0:2437:4111","b:2:2537-0:2437:4111","b:2:3328-0:2437:4111","b:2:2531-0:2437:4111","b:2:2527-0:2437:4111","b:2:2235-0:2437:4111","b:2:2238-0:2437:4111","b:5:683-0:2437:4111","0:2440","0:2400","0:2404","0:2442"]}},"b:2:3328-0:2496:1620":{"id":"b:2:3328-0:2496:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:540:2815":{"id":"0:540:2815","crate_id":0,"name":"as_bytes","span":{"filename":"src/input.rs","begin":[101,4],"end":[101,32]},"visibility":"default","docs":"Return the given input as a sequence of bytes.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:8-0:1107:1614":{"id":"0:8-0:1107:1614","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[635,4],"end":[635,10]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::re_unicode::escape","name":"escape","id":"0:1107:1614","glob":false}},"0:2350:414":{"id":"0:2350:414","crate_id":0,"name":"clone","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2346:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8139:3269-0:1965:1658":{"id":"a:2:8139:3269-0:1965:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:1965:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2041:1837":{"id":"0:2041:1837","crate_id":0,"name":"goto","span":{"filename":"src/prog.rs","begin":[365,4],"end":[365,21]},"visibility":"public","docs":"The next location to execute in the program if this instruction\nsucceeds.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"b:2:7092-0:2559:1628":{"id":"b:2:7092-0:2559:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7202:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7088:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2559:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:7094:2056","2:7095:3416","2:7096:770"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"b:2:2537-0:2590:1625":{"id":"b:2:2537-0:2590:1625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2590:1625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2542-0:2197:1623":{"id":"b:2:2542-0:2197:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2197:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2672:217-0:1780:1655":{"id":"a:2:2672:217-0:1780:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:1780:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1969:1834":{"id":"0:1969:1834","crate_id":0,"name":"Save","span":{"filename":"src/prog.rs","begin":[279,4],"end":[279,18]},"visibility":"default","docs":"Save causes the program to save the current location of the input in\nthe slot indicated by InstSave.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:1971:1569"]},"discriminant":null}},"b:2:3328-0:2346:2928":{"id":"b:2:3328-0:2346:2928","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2346:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2542-0:2449:4144":{"id":"b:2:2542-0:2449:4144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2449:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1954:1905":{"id":"0:1954:1905","crate_id":0,"name":"only_utf8","span":{"filename":"src/prog.rs","begin":[40,4],"end":[40,23]},"visibility":"public","docs":"When true, this program can only match valid UTF-8.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"b:2:3328-0:1947:1660":{"id":"b:2:3328-0:1947:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Program","id":"0:1947:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2161:2787":{"id":"0:2161:2787","crate_id":0,"name":"dot_matches_new_line","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the value for the any character (`s`) flag, where in `.` matches\nanything when `s` is set and matches anything except for new line when\nit is not set (the default).\n\nN.B. \"matches anything\" means \"any byte\" for `regex::bytes::RegexSet`\nexpressions and means \"any Unicode scalar value\" for `regex::RegexSet`\nexpressions.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2169:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:683-0:2449:4144":{"id":"b:5:683-0:2449:4144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2449:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["5:685:3800","5:686:2614","5:687:5400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2736:4882-0:1780:1655":{"id":"a:2:2736:4882-0:1780:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:1780:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11925:30593":{"id":"2:11925:30593","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11843:410","self::pattern":"2:11521:1606"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11541:4853","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2527-0:2248:1615":{"id":"b:2:2527-0:2248:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2248:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2235-0:1947:1660":{"id":"b:2:2235-0:1947:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Program","id":"0:1947:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11937:2780":{"id":"2:11937:2780","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:11483:126","`FromStr`":"2:11482:3586"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48878:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"name":"FromStr","id":"2:11482:3586","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11482:3586","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:592:657":{"id":"0:592:657","crate_id":0,"name":"fmt","span":{"filename":"src/input.rs","begin":[349,4],"end":[354,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2736:4882-0:2220:1626":{"id":"a:2:2736:4882-0:2220:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2220:1626","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2542-0:2268:1625":{"id":"b:2:2542-0:2268:1625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2268:1625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:685:3800":{"id":"5:685:3800","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"b:2:2531-0:2211:1616":{"id":"b:2:2531-0:2211:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2211:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2686:225-0:2202:1621":{"id":"a:2:2686:225-0:2202:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2202:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"a:2:8140:3268-0:2229:1627":{"id":"a:2:8140:3268-0:2229:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2229:1627","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2531-0:367:1652":{"id":"b:2:2531-0:367:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecBuilder","id":"0:367:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:607:602":{"id":"0:607:602","crate_id":0,"name":"eq","span":{"filename":"src/input.rs","begin":[415,4],"end":[417,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:997:3798":{"id":"0:997:3798","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_bytes.rs","begin":[1168,4],"end":[1170,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:688:110","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:1642:1651":{"id":"b:2:2238-0:1642:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Exec","id":"0:1642:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1820":{"id":"0:1820","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[345,22],"end":[345,26]},"visibility":{"restricted":{"parent":"0:512:1639","path":"::input"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:9230:140","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1821:716"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1814:1653":{"id":"0:1814:1653","crate_id":0,"name":"Char","span":{"filename":"src/input.rs","begin":[346,0],"end":[346,21]},"visibility":"public","docs":"An inline representation of `Option<char>`.\n\nThis eliminates the need to do case analysis on `Option<char>` to determine\nordinality with other characters.\n\n(The `Option<char>` is not related to encoding. Instead, it is used in the\nmatching engines to represent the beginning and ending boundaries of the\nsearch text.)","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:593","a:2:2736:4882-0:1814:1653","a:2:8139:3269-0:1814:1653","a:2:8140:3268-0:1814:1653","a:2:2686:225-0:1814:1653","a:2:2672:217-0:1814:1653","b:2:2542-0:1814:1653","b:2:2537-0:1814:1653","b:2:3328-0:1814:1653","b:2:2531-0:1814:1653","b:2:2527-0:1814:1653","b:2:2235-0:1814:1653","b:2:2238-0:1814:1653","b:5:683-0:1814:1653","0:1826","0:1819","0:608","0:599","0:591","0:1824","0:604","0:606","0:1823","0:601","0:1820","0:1829","0:1817","0:1831","0:1827","0:610"]}},"0:2307:1825":{"id":"0:2307:1825","crate_id":0,"name":"is_empty","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Returns `true` if this set contains no regular expressions.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2672:217-0:2229:1627":{"id":"a:2:2672:217-0:2229:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2229:1627","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:8140:3268-0:2590:1625":{"id":"a:2:8140:3268-0:2590:1625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2590:1625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2736:4882-0:1947:1660":{"id":"a:2:2736:4882-0:1947:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Program","id":"0:1947:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:946":{"id":"0:946","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[992,0],"end":[996,1]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:931:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:948:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2318":{"id":"0:2318","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2287:1589","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7088:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2351:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"items":["0:2320:3416","0:2321:2056","0:2322:770"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1632:2097":{"id":"0:1632:2097","crate_id":0,"name":"CompiledTooBig","span":{"filename":"src/error.rs","begin":[11,4],"end":[11,25]},"visibility":"default","docs":"The compiled program exceeded the set size limit.\nThe argument is the size limit imposed.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:1634:1569"]},"discriminant":null}},"b:2:2527-0:2197:1623":{"id":"b:2:2527-0:2197:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2197:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8140:3268-0:2238:1617":{"id":"a:2:8140:3268-0:2238:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2238:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:8139:3269-0:1642:1651":{"id":"a:2:8139:3269-0:1642:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Exec","id":"0:1642:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:8140:3268-0:1780:1655":{"id":"a:2:8140:3268-0:1780:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:1780:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2537-0:2581:1621":{"id":"b:2:2537-0:2581:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2581:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11902:36838":{"id":"2:11902:36838","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:11521:1606","`DoubleEndedIterator`":"2:7125:120","prim@char":"1:11843:410","str::rmatch_indices":"2:11905:36839"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:50876:4871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1189":{"id":"0:1189","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[774,0],"end":[774,46]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7472:3584","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2524:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2238-0:1947:1660":{"id":"b:2:2238-0:1947:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Program","id":"0:1947:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2354":{"id":"0:2354","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2287:1589","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2351:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2355:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2235-0:2444:4145":{"id":"b:2:2235-0:2444:4145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2444:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1313:3801":{"id":"0:1313:3801","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1255,4],"end":[1257,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1213:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:683-0:2174:1620":{"id":"b:5:683-0:2174:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2174:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["5:685:3800","5:686:2614","5:687:5400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:377":{"id":"0:377","crate_id":0,"name":null,"span":{"filename":"src/exec.rs","begin":[129,0],"end":[382,1]},"visibility":{"restricted":{"parent":"0:333:1636","path":"::exec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"ExecBuilder","id":"0:367:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:378:924","0:379:2743","0:383:2751","0:384:2757","0:385:2707","0:386:2769","0:387:1630","0:388:1905","0:389:1589","0:394:2792"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2531-0:2581:1621":{"id":"b:2:2531-0:2581:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2581:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11821:1825":{"id":"2:11821:1825","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3328-0:1965:1658":{"id":"b:2:3328-0:1965:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:1965:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2242":{"id":"0:2242","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[818,9],"end":[818,14]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2238:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["0:2244:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2672:217-0:1790:1654":{"id":"a:2:2672:217-0:1790:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:1790:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1008:3801":{"id":"0:1008:3801","crate_id":0,"name":"replace_append","span":{"filename":"src/re_bytes.rs","begin":[1194,4],"end":[1196,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:931:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:6601:241","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1057:2819":{"id":"0:1057:2819","crate_id":0,"name":"captures_read_at","span":{"filename":"src/re_trait.rs","begin":[143,4],"end":[148,32]},"visibility":"default","docs":"Returns the leftmost-first match location if one exists, and also\nfills in any matching capture slot locations.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["locs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Locations","id":"0:2459:1619","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Text","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1049:2675","args":null}}}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2599:1622":{"id":"0:2599:1622","crate_id":0,"name":"NoExpand","span":{"filename":"src/re_unicode.rs","begin":[1301,0],"end":[1301,37]},"visibility":"public","docs":"`NoExpand` indicates literal string replacement.\n\nIt can be used with `replace` and `replace_all` to do a literal string\nreplacement without expanding `$name` to their corresponding capture\ngroups. This can be both convenient (to avoid escaping `$`, for example)\nand performant (since capture groups don't need to be found).\n\n`'t` is the lifetime of the literal text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":["0:2602:1569"]},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:2736:4882-0:2599:1622","a:2:8139:3269-0:2599:1622","a:2:8140:3268-0:2599:1622","a:2:2686:225-0:2599:1622","a:2:2672:217-0:2599:1622","b:2:2542-0:2599:1622","b:2:2537-0:2599:1622","b:2:3328-0:2599:1622","b:2:2531-0:2599:1622","b:2:2527-0:2599:1622","b:2:2235-0:2599:1622","b:2:2238-0:2599:1622","b:5:683-0:2599:1622","0:2606","0:2603","0:1325"]}},"0:6-0:2287:1589":{"id":"0:6-0:2287:1589","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[632,0],"end":[632,34]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::re_set::unicode","name":"unicode","id":"0:2287:1589","glob":true}},"0:1120:681":{"id":"0:1120:681","crate_id":0,"name":"from","span":{"filename":"src/re_unicode.rs","begin":[75,4],"end":[77,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["m",{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Range","id":"2:46913:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11943:36850":{"id":"2:11943:36850","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4500:36850"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:51025:4866","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2736:4882-0:2047:1659":{"id":"a:2:2736:4882-0:2047:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstRanges","id":"0:2047:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:8139:3269-0:2047:1659":{"id":"a:2:8139:3269-0:2047:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstRanges","id":"0:2047:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2095:2791":{"id":"0:2095:2791","crate_id":0,"name":"nest_limit","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the nesting limit for this parser.\n\nThe nesting limit controls how deep the abstract syntax tree is allowed\nto be. If the AST exceeds the given limit (e.g., with too many nested\ngroups), then an error is returned by the parser.\n\nThe purpose of this limit is to act as a heuristic to prevent stack\noverflow for consumers that do structural induction on an `Ast` using\nexplicit recursion. While this crate never does this (instead using\nconstant stack space and moving the call stack to the heap), other\ncrates may.\n\nThis limit is not checked until the entire Ast is parsed. Therefore,\nif callers want to put a limit on the amount of heap space used, then\nthey should impose a limit on the length, in bytes, of the concrete\npattern string. In particular, this is viable since this parser\nimplementation will limit itself to heap space proportional to the\nlength of the pattern string.\n\nNote that a nest limit of `0` will return a nest limit error for most\npatterns but not all. For example, a nest limit of `0` permits `a` but\nnot `ab`, since `ab` requires a concatenation, which results in a nest\ndepth of `1`. In general, a nest limit is not something that manifests\nin an obvious way in the concrete syntax, therefore, it should not be\nused in a granular way.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2096:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:973:755":{"id":"0:973:755","crate_id":0,"name":"index","span":{"filename":"src/re_bytes.rs","begin":[1070,4],"end":[1074,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["name",{"kind":"borrowed_ref","inner":{"lifetime":"'i","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:2144:3578":{"id":"b:2:2537-0:2144:3578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2144:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:866:3830":{"id":"0:866:3830","crate_id":0,"name":"captures_read","span":{"filename":"src/re_bytes.rs","begin":[611,4],"end":[617,5]},"visibility":"public","docs":"This is like `captures`, but uses\n[`CaptureLocations`](struct.CaptureLocations.html)\ninstead of\n[`Captures`](struct.Captures.html) in order to amortize allocations.\n\nTo create a `CaptureLocations` value, use the\n`Regex::capture_locations` method.\n\nThis returns the overall match if this was successful, which is always\nequivalence to the `0`th capture group.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["locs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2248:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2174:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2200":{"id":"0:2200","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[77,9],"end":[77,14]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2197:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2201:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2337:4151":{"id":"0:2337:4151","crate_id":0,"name":"next_back","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2332:2056":{"id":"0:2332:2056","crate_id":0,"name":"Item","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"a:2:2686:225-0:2144:3578":{"id":"a:2:2686:225-0:2144:3578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2144:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2306:797":{"id":"0:2306:797","crate_id":0,"name":"len","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Returns the total number of regular expressions in this set.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1122:657":{"id":"0:1122:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[140,4],"end":[142,5]},"visibility":"default","docs":"Shows the original regular expression.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2235-0:2524:1617":{"id":"b:2:2235-0:2524:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2524:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2686:225-0:2572:1616":{"id":"a:2:2686:225-0:2572:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2572:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:11869:1939":{"id":"2:11869:1939","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:11521:1606","`DoubleEndedIterator`":"2:7125:120","prim@char":"1:11843:410","str::split_whitespace":"2:11847:34437","str::rsplit":"2:11875:30586"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:50726:1626","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2234":{"id":"0:2234","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[776,9],"end":[776,14]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2229:1627","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2237:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:8140:3268-0:931:1618":{"id":"a:2:8140:3268-0:931:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:931:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2686:225-0:2229:1627":{"id":"a:2:2686:225-0:2229:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2229:1627","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"a:2:2686:225-0:2277:1622":{"id":"a:2:2686:225-0:2277:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2277:1622","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:570:2815":{"id":"0:570:2815","crate_id":0,"name":"as_bytes","span":{"filename":"src/input.rs","begin":[219,4],"end":[221,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8140:3268-0:1833:1656":{"id":"a:2:8140:3268-0:1833:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:1833:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2025:2021":{"id":"0:2025:2021","crate_id":0,"name":"WordBoundaryAscii","span":{"filename":"src/prog.rs","begin":[355,4],"end":[355,21]},"visibility":"default","docs":"ASCII word boundary.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:1628:127":{"id":"0:1628:127","crate_id":0,"name":"Error","span":{"filename":"src/error.rs","begin":[6,0],"end":[19,1]},"visibility":"public","docs":"An error that occurred during parsing or compiling a regular expression.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":true,"variants":["0:1629:2013","0:1632:2097"],"impls":["a:2:2736:4882-0:1628:127","a:2:8139:3269-0:1628:127","a:2:8140:3268-0:1628:127","a:2:2686:225-0:1628:127","a:2:2672:217-0:1628:127","b:2:2542-0:1628:127","b:2:2537-0:1628:127","b:2:3328-0:1628:127","b:2:2531-0:1628:127","b:2:2527-0:1628:127","b:2:2235-0:1628:127","b:2:2599-0:1628:127","b:2:2238-0:1628:127","b:5:683-0:1628:127","b:5:5551-0:1628:127","0:329","0:331","0:1639","0:327","0:1637","0:1640"]}},"b:2:2531-0:1780:1655":{"id":"b:2:2531-0:1780:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:1780:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:779:1783":{"id":"0:779:1783","crate_id":0,"name":"matches","span":{"filename":"src/prog.rs","begin":[382,4],"end":[405,5]},"visibility":"public","docs":"Tests whether the given input character matches this instruction.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["c",{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1123":{"id":"0:1123","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[145,0],"end":[150,1]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2519:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1124:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2531-0:2096:3498":{"id":"b:2:2531-0:2096:3498","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2096:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2264":{"id":"0:2264","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1086,16],"end":[1086,21]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2255:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2267:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2537-0:2248:1615":{"id":"b:2:2537-0:2248:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2248:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2581:1621":{"id":"0:2581:1621","crate_id":0,"name":"Matches","span":{"filename":"src/re_unicode.rs","begin":[1143,0],"end":[1143,69]},"visibility":"public","docs":"An iterator over all non-overlapping matches for a particular string.\n\nThe iterator yields a `Match` value. The iterator stops when no more\nmatches can be found.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the matched string.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:2736:4882-0:2581:1621","a:2:8139:3269-0:2581:1621","a:2:8140:3268-0:2581:1621","a:2:2686:225-0:2581:1621","a:2:2672:217-0:2581:1621","b:2:2542-0:2581:1621","b:2:2537-0:2581:1621","b:2:3328-0:2581:1621","b:2:7092-0:2581:1621","b:2:2531-0:2581:1621","b:2:2527-0:2581:1621","b:2:2235-0:2581:1621","b:2:2238-0:2581:1621","0:1280","0:1286","0:2586"]}},"a:2:2736:4882-0:2590:1625":{"id":"a:2:2736:4882-0:2590:1625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2590:1625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"5:5286":{"id":"5:5286","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5197:1368","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:5287:37499","5:5288:2493","5:5291:3788","5:5294:37500","5:5302:37501","5:5303:37502","5:5304:2082","5:5305:30439","5:5306:30438"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:379:2743":{"id":"0:379:2743","crate_id":0,"name":"new_many","span":{"filename":"src/exec.rs","begin":[144,4],"end":[152,5]},"visibility":"public","docs":"Like new, but compiles the union of the given regular expressions.\n\nNote that when compiling 2 or more regular expressions, capture groups\nare completely unsupported. (This means both `find` and `captures`\nwon't work.)","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["res",{"kind":"generic","inner":"I"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2495:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:7088:149","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"S"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:921:494":{"id":"0:921:494","crate_id":0,"name":"count","span":{"filename":"src/re_bytes.rs","begin":[835,4],"end":[837,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:2346:2928":{"id":"b:2:2238-0:2346:2928","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2346:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2021:2012":{"id":"0:2021:2012","crate_id":0,"name":"WordBoundary","span":{"filename":"src/prog.rs","begin":[351,4],"end":[351,16]},"visibility":"default","docs":"Word character on one side and non-word character on other.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"b:2:2238-0:1965:1658":{"id":"b:2:2238-0:1965:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:1965:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2057:598":{"id":"0:2057:598","crate_id":0,"name":"end","span":{"filename":"src/prog.rs","begin":[426,4],"end":[426,15]},"visibility":"public","docs":"The end (inclusive) of this byte range.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"5:5291:3788":{"id":"5:5291:3788","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7158:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2158:2792":{"id":"0:2158:2792","crate_id":0,"name":"build","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Consume the builder and compile the regular expressions into a set.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48878:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2346:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3328-0:2255:1628":{"id":"b:2:3328-0:2255:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2255:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3328-0:2268:1625":{"id":"b:2:3328-0:2268:1625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2268:1625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8139:3269-0:2119:3498":{"id":"a:2:8139:3269-0:2119:3498","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2119:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2672:217-0:931:1618":{"id":"a:2:2672:217-0:931:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:931:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:683-0:1628:127":{"id":"b:5:683-0:1628:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:685:3800","5:686:2614","5:687:5400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1998:1863":{"id":"0:1998:1863","crate_id":0,"name":"InstSplit","span":{"filename":"src/prog.rs","begin":[320,0],"end":[327,1]},"visibility":"public","docs":"Representation of the Split instruction.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:1999:1839","0:2000:1838"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":[]}},"0:2109:2785":{"id":"0:2109:2785","crate_id":0,"name":"case_insensitive","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the value for the case insensitive (`i`) flag.\n\nWhen enabled, letters in the pattern will match both upper case and\nlower case variants.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2119:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:19-0:2590:1625":{"id":"0:19-0:2590:1625","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[636,58],"end":[636,69]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::re_unicode::ReplacerRef","name":"ReplacerRef","id":"0:2590:1625","glob":false}},"2:11941:30437":{"id":"2:11941:30437","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11942:30436":{"id":"2:11942:30436","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2143:2791":{"id":"0:2143:2791","crate_id":0,"name":"nest_limit","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the nesting limit for this parser.\n\nThe nesting limit controls how deep the abstract syntax tree is allowed\nto be. If the AST exceeds the given limit (e.g., with too many nested\ngroups), then an error is returned by the parser.\n\nThe purpose of this limit is to act as a heuristic to prevent stack\noverflow for consumers that do structural induction on an `Ast` using\nexplicit recursion. While this crate never does this (instead using\nconstant stack space and moving the call stack to the heap), other\ncrates may.\n\nThis limit is not checked until the entire Ast is parsed. Therefore,\nif callers want to put a limit on the amount of heap space used, then\nthey should impose a limit on the length, in bytes, of the concrete\npattern string. In particular, this is viable since this parser\nimplementation will limit itself to heap space proportional to the\nlength of the pattern string.\n\nNote that a nest limit of `0` will return a nest limit error for most\npatterns but not all. For example, a nest limit of `0` permits `a` but\nnot `ab`, since `ab` requires a concatenation, which results in a nest\ndepth of `1`. In general, a nest limit is not something that manifests\nin an obvious way in the concrete syntax, therefore, it should not be\nused in a granular way.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2144:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2531-0:2268:1625":{"id":"b:2:2531-0:2268:1625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2268:1625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:613-0:614:2918":{"id":"0:613-0:614:2918","crate_id":0,"name":null,"span":{"filename":"src/literal/mod.rs","begin":[1,0],"end":[1,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::imp","name":"imp","id":"0:614:2918","glob":true}},"0:2410:2056":{"id":"0:2410:2056","crate_id":0,"name":"Item","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"b:2:2537-0:2524:1617":{"id":"b:2:2537-0:2524:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2524:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2238-0:1814:1653":{"id":"b:2:2238-0:1814:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:683-0:2519:1623":{"id":"b:5:683-0:2519:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2519:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:685:3800","5:686:2614","5:687:5400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2537-0:2572:1616":{"id":"b:2:2537-0:2572:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2572:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11838:30552":{"id":"2:11838:30552","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9702:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9702:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2531-0:2012:1657":{"id":"b:2:2531-0:2012:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2012:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:683-0:1947:1660":{"id":"b:5:683-0:1947:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Program","id":"0:1947:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:685:3800","5:686:2614","5:687:5400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2238-0:2012:1657":{"id":"b:2:2238-0:2012:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2012:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2527-0:2211:1616":{"id":"b:2:2527-0:2211:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2211:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1290:3801":{"id":"0:1290:3801","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1170,4],"end":[1170,72]},"visibility":"default","docs":"Appends text to `dst` to replace the current match.\n\nThe current match is represented by `caps`, which is guaranteed to\nhave a match at capture group `0`.\n\nFor example, a no-op replacement would be\n`dst.push_str(caps.get(0).unwrap().as_str())`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1213:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2397:1823":{"id":"0:2397:1823","crate_id":0,"name":"matched","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Whether the regex at the given index matched.\n\nThe index for a regex is determined by its insertion order upon the\ninitial construction of a `RegexSet`, starting at `0`.\n\n# Panics\n\nIf `regex_index` is greater than or equal to `self.len()`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["regex_index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:774:3416":{"id":"0:774:3416","crate_id":0,"name":"IntoIter","span":{"filename":"src/prog.rs","begin":[244,4],"end":[244,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Iter","id":"2:9845:3417","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:1965:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"a:2:8139:3269-0:1947:1660":{"id":"a:2:8139:3269-0:1947:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Program","id":"0:1947:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2031":{"id":"0:2031","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[340,16],"end":[340,20]},"visibility":{"restricted":{"parent":"0:742:1642","path":"::prog"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2684:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2012:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2070:2788":{"id":"0:2070:2788","crate_id":0,"name":"swap_greed","span":{"filename":"src/re_builder.rs","begin":[12,4],"end":[12,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"b:2:2527-0:2358:4145":{"id":"b:2:2527-0:2358:4145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2358:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1115":{"id":"0:1115","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[68,0],"end":[72,1]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"items":["0:1117:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1131:924":{"id":"0:1131:924","crate_id":0,"name":"new","span":{"filename":"src/re_unicode.rs","begin":[174,4],"end":[176,5]},"visibility":"public","docs":"Compiles a regular expression. Once compiled, it can be used repeatedly\nto search, split or replace text in a string.\n\nIf an invalid expression is given, then an error is returned.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["re",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48878:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2519:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3328-0:2202:1621":{"id":"b:2:3328-0:2202:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2202:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:683-0:2351:4111":{"id":"b:5:683-0:2351:4111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2351:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:685:3800","5:686:2614","5:687:5400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1304":{"id":"0:1304","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1234,0],"end":[1242,1]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"name":"Replacer","id":"0:1289:1624","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"items":["0:1306:3801","0:1307:3798"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2049:1998":{"id":"0:2049:1998","crate_id":0,"name":"ranges","span":{"filename":"src/prog.rs","begin":[377,4],"end":[377,35]},"visibility":"public","docs":"The set of Unicode scalar value ranges to test.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Box","id":"5:288:2048","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"tuple","inner":[{"kind":"primitive","inner":"char"},{"kind":"primitive","inner":"char"}]}}}],"bindings":[]}}}}},"b:2:3328-0:2012:1657":{"id":"b:2:3328-0:2012:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2012:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:757:1927":{"id":"0:757:1927","crate_id":0,"name":"needs_dotstar","span":{"filename":"src/prog.rs","begin":[128,4],"end":[130,5]},"visibility":"public","docs":"Returns true if the current configuration demands that an implicit\n`.*?` be prepended to the instruction sequence.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:2255:1628":{"id":"b:2:2537-0:2255:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2255:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2436:414":{"id":"0:2436:414","crate_id":0,"name":"clone","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2432:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2527-0:2552:1615":{"id":"b:2:2527-0:2552:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2552:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11934:36849":{"id":"2:11934:36849","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11843:410","self::pattern":"2:11521:1606"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11541:4853","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1786:414":{"id":"0:1786:414","crate_id":0,"name":"clone","span":{"filename":"src/input.rs","begin":[12,9],"end":[12,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:1780:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1962:2180":{"id":"0:1962:2180","crate_id":0,"name":"dfa_size_limit","span":{"filename":"src/prog.rs","begin":[74,4],"end":[74,29]},"visibility":"public","docs":"A limit on the size of the cache that the DFA is allowed to use while\nmatching.\n\nThe cache limit specifies approximately how much space we're willing to\ngive to the state cache. Once the state cache exceeds the size, it is\nwiped and all states must be re-computed.\n\nNote that this value does not impact correctness. It can be set to 0\nand the DFA will run just fine. (It will only ever store exactly one\nstate in the cache, and will likely run very slowly, but it will work.)\n\nAlso note that this limit is *per thread of execution*. That is,\nif the same regex is used to search text across multiple threads\nsimultaneously, then the DFA cache is not shared. Instead, copies are\nmade.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"0:760:2483":{"id":"0:760:2483","crate_id":0,"name":"approximate_size","span":{"filename":"src/prog.rs","begin":[147,4],"end":[158,5]},"visibility":"public","docs":"Return the approximate heap usage of this instruction sequence in\nbytes.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2106":{"id":"0:2106","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":{"restricted":{"parent":"0:2101:1589","path":"::re_builder::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2119:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2107:924","0:2108:2792","0:2109:2785","0:2110:2786","0:2111:2787","0:2112:2788","0:2113:2789","0:2114:1589","0:2115:2784","0:2116:1876","0:2117:2180","0:2118:2791"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2496:1620":{"id":"0:2496:1620","crate_id":0,"name":"Match","span":{"filename":"src/re_unicode.rs","begin":[29,0],"end":[33,1]},"visibility":"public","docs":"Match represents a single match of a regex in a haystack.\n\nThe lifetime parameter `'t` refers to the lifetime of the matched text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:1108","a:2:2736:4882-0:2496:1620","a:2:8139:3269-0:2496:1620","a:2:8140:3268-0:2496:1620","a:2:2686:225-0:2496:1620","a:2:2672:217-0:2496:1620","b:2:2542-0:2496:1620","b:2:2537-0:2496:1620","b:2:3328-0:2496:1620","b:2:2531-0:2496:1620","b:2:2527-0:2496:1620","b:2:2235-0:2496:1620","b:2:2238-0:2496:1620","b:5:683-0:2496:1620","0:2511","0:1118","0:2501","0:2503","0:2506","0:1115","0:2516","0:2514","0:2509"]}},"b:5:683-0:1790:1654":{"id":"b:5:683-0:1790:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:1790:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["5:685:3800","5:686:2614","5:687:5400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1182:938":{"id":"0:1182:938","crate_id":0,"name":"next","span":{"filename":"src/re_unicode.rs","begin":[756,4],"end":[761,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2672:217-0:2552:1615":{"id":"a:2:2672:217-0:2552:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2552:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2542-0:2358:4145":{"id":"b:2:2542-0:2358:4145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2358:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2399:781":{"id":"0:2399:781","crate_id":0,"name":"iter","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Returns an iterator over indexes in the regex that matched.\n\nThis will always produces matches in ascending order of index, where\nthe index corresponds to the index of the regex that matched with\nrespect to its position when initially building the set.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2449:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2099":{"id":"0:2099","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":{"restricted":{"parent":"0:2078:1630","path":"::re_builder::bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2096:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2100:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11820:797":{"id":"2:11820:797","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:11843:410"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:331":{"id":"0:331","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[51,0],"end":[71,1]},"visibility":{"restricted":{"parent":"0:324:1609","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:332:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:565:1840":{"id":"0:565:1840","crate_id":0,"name":"is_empty_match","span":{"filename":"src/input.rs","begin":[175,4],"end":[205,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["at",{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:1780:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["empty",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"InstEmptyLook","id":"0:2005:1861","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2286:657":{"id":"0:2286:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[1249,16],"end":[1249,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2343:657":{"id":"0:2343:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3328-0:2144:3578":{"id":"b:2:3328-0:2144:3578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2144:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2672:217-0:2496:1620":{"id":"a:2:2672:217-0:2496:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3328-0:2572:1616":{"id":"b:2:3328-0:2572:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2572:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2527-0:2351:4111":{"id":"b:2:2527-0:2351:4111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2351:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:553:924":{"id":"0:553:924","crate_id":0,"name":"new","span":{"filename":"src/input.rs","begin":[144,4],"end":[146,5]},"visibility":"public","docs":"Return a new character input reader for the given string.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:1790:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:832:2285":{"id":"0:832:2285","crate_id":0,"name":"is_match","span":{"filename":"src/re_bytes.rs","begin":[142,4],"end":[144,5]},"visibility":"public","docs":"Returns true if and only if there is a match for the regex in the\nstring given.\n\nIt is recommended to use this method if all you need to do is test\na match, since the underlying matching engine may be able to do less\nwork.\n\n# Example\n\nTest if some text contains at least one word with exactly 13 ASCII word\nbytes:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet text = b\"I categorically deny having triskaidekaphobia.\";\nassert!(Regex::new(r\"\\b\\w{13}\\b\").unwrap().is_match(text));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2527-0:2432:2928":{"id":"b:2:2527-0:2432:2928","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2432:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2527-0:2524:1617":{"id":"b:2:2527-0:2524:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2524:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:18-0:1289:1624":{"id":"0:18-0:1289:1624","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[636,48],"end":[636,56]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::re_unicode::Replacer","name":"Replacer","id":"0:1289:1624","glob":false}},"2:11844:3217":{"id":"2:11844:3217","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:11843:410"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:50696:4862","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2527-0:1642:1651":{"id":"b:2:2527-0:1642:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Exec","id":"0:1642:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:96:924":{"id":"0:96:924","crate_id":0,"name":"new","span":{"filename":"src/compile.rs","begin":[58,4],"end":[70,5]},"visibility":"public","docs":"Create a new regular expression compiler.\n\nVarious options can be set before calling `compile` on an expression.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:367:1652":{"id":"b:2:2537-0:367:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecBuilder","id":"0:367:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2238-0:1790:1654":{"id":"b:2:2238-0:1790:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:1790:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1989":{"id":"0:1989","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[267,16],"end":[267,21]},"visibility":{"restricted":{"parent":"0:742:1642","path":"::prog"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:1965:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1990:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2142:2180":{"id":"0:2142:2180","crate_id":0,"name":"dfa_size_limit","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the approximate size of the cache used by the DFA.\n\nThis roughly corresponds to the number of bytes that the DFA will\nuse while searching.\n\nNote that this is a *per thread* limit. There is no way to set a global\nlimit. In particular, if a regex is used from multiple threads\nsimultaneously, then each thread may use up to the number of bytes\nspecified here.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2144:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2527-0:2144:3578":{"id":"b:2:2527-0:2144:3578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2144:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:383:2751":{"id":"0:383:2751","crate_id":0,"name":"new_options","span":{"filename":"src/exec.rs","begin":[155,4],"end":[162,5]},"visibility":"public","docs":"Create a regex execution builder.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["opts",{"kind":"resolved_path","inner":{"name":"RegexOptions","id":"0:2062:2674","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8139:3269-0:2169:3578":{"id":"a:2:8139:3269-0:2169:3578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2169:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:920:3862":{"id":"0:920:3862","crate_id":0,"name":"size_hint","span":{"filename":"src/re_bytes.rs","begin":[831,4],"end":[833,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2558:657":{"id":"0:2558:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[869,16],"end":[869,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:556:227":{"id":"0:556:227","crate_id":0,"name":"Target","span":{"filename":"src/input.rs","begin":[150,4],"end":[150,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"0:781:3483":{"id":"0:781:3483","crate_id":0,"name":"num_chars","span":{"filename":"src/prog.rs","begin":[409,4],"end":[414,5]},"visibility":"public","docs":"Return the number of distinct characters represented by all of the\nranges.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2055:1837":{"id":"0:2055:1837","crate_id":0,"name":"goto","span":{"filename":"src/prog.rs","begin":[422,4],"end":[422,21]},"visibility":"public","docs":"The next location to execute in the program if this instruction\nsucceeds.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"a:2:2686:225-0:367:1652":{"id":"a:2:2686:225-0:367:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecBuilder","id":"0:367:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:539:1825":{"id":"0:539:1825","crate_id":0,"name":"is_empty","span":{"filename":"src/input.rs","begin":[96,4],"end":[98,5]},"visibility":"default","docs":"Whether the input is empty.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:909:938":{"id":"0:909:938","crate_id":0,"name":"next","span":{"filename":"src/re_bytes.rs","begin":[785,4],"end":[803,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1163:2818":{"id":"0:1163:2818","crate_id":0,"name":"find_at","span":{"filename":"src/re_unicode.rs","begin":[648,4],"end":[657,5]},"visibility":"public","docs":"Returns the same as find, but starts the search at the given\noffset.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2736:4882-0:2351:4111":{"id":"a:2:2736:4882-0:2351:4111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2351:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1993:1802":{"id":"0:1993:1802","crate_id":0,"name":"slot","span":{"filename":"src/prog.rs","begin":[315,4],"end":[315,19]},"visibility":"public","docs":"The capture slot (there are two slots for every capture in a regex,\nincluding the zeroth capture for the entire match).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"0:936":{"id":"0:936","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[918,0],"end":[990,1]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:931:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:938:1836","0:940:903","0:942:781","0:944:1637","0:945:797"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1631:1569":{"id":"0:1631:1569","crate_id":0,"name":"0","span":{"filename":"src/error.rs","begin":[8,11],"end":[8,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:1111:598":{"id":"0:1111:598","crate_id":0,"name":"end","span":{"filename":"src/re_unicode.rs","begin":[44,4],"end":[46,5]},"visibility":"public","docs":"Returns the ending byte offset of the match in the haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2054:1859":{"id":"0:2054:1859","crate_id":0,"name":"InstBytes","span":{"filename":"src/prog.rs","begin":[419,0],"end":[427,1]},"visibility":"public","docs":"Representation of the Bytes instruction.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:2055:1837","0:2056:1354","0:2057:598"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":[]}},"0:924":{"id":"0:924","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[842,0],"end":[842,46]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7472:3584","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2238:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1228":{"id":"0:1228","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1002,0],"end":[1006,1]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1213:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1230:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3328-0:2197:1623":{"id":"b:2:3328-0:2197:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2197:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:597:3131":{"id":"0:597:3131","crate_id":0,"name":"is_word_char","span":{"filename":"src/input.rs","begin":[375,4],"end":[381,5]},"visibility":"public","docs":"Returns true iff the character is a word character.\n\nIf the character is absent, then false is returned.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1788":{"id":"0:1788","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[12,22],"end":[12,27]},"visibility":{"restricted":{"parent":"0:512:1639","path":"::input"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:1780:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1789:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:888":{"id":"0:888","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[720,0],"end":[730,1]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_collect","map_while","intersperse_with","count","next_chunk","cmp","min_by","by_ref","eq_by","unzip","fold","zip","collect_into","lt","scan","ge","for_each","advance_by","any","min_by_key","all","max","cloned","is_sorted","cycle","reduce","position","last","partition","flat_map","skip","filter","nth","max_by","is_sorted_by","array_chunks","ne","try_reduce","partition_in_place","flatten","filter_map","partial_cmp","step_by","find","max_by_key","sum","le","size_hint","collect","product","map","find_map","is_sorted_by_key","is_partitioned","fuse","skip_while","chain","rev","take","eq","__iterator_get_unchecked","cmp_by","try_find","try_fold","peekable","inspect","take_while","intersperse","copied","min","enumerate","partial_cmp_by","rposition","gt","try_for_each"],"trait":{"name":"Iterator","id":"2:7202:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2211:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:891:2056","0:892:938"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:8139:3269-0:2519:1623":{"id":"a:2:8139:3269-0:2519:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2519:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:966:755":{"id":"0:966:755","crate_id":0,"name":"index","span":{"filename":"src/re_bytes.rs","begin":[1048,4],"end":[1052,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1226:1637":{"id":"0:1226:1637","crate_id":0,"name":"expand","span":{"filename":"src/re_unicode.rs","begin":[988,4],"end":[990,5]},"visibility":"public","docs":"Expands all instances of `$name` in `replacement` to the corresponding\ncapture group `name`, and writes them to the `dst` buffer given.\n\n`name` may be an integer corresponding to the index of the capture\ngroup (counted by order of opening parenthesis where `0` is the\nentire match) or it can be a name (consisting of letters, digits or\nunderscores) corresponding to a named capture group.\n\nIf `name` isn't a valid capture group (whether the name doesn't exist\nor isn't a valid index), then it is replaced with the empty string.\n\nThe longest possible name consisting of the characters `[_0-9A-Za-z]`\nis used. e.g., `$1a` looks up the capture group named `1a` and not the\ncapture group at index `1`. To exert more precise control over the\nname, or to refer to a capture group name that uses characters outside\nof `[_0-9A-Za-z]`, use braces, e.g., `${1}a` or `${foo[bar].baz}`. When\nusing braces, any sequence of characters is permitted. If the sequence\ndoes not refer to a capture group name in the corresponding regex, then\nit is replaced with an empty string.\n\nTo write a literal `$` use `$$`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["replacement",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1256":{"id":"0:1256","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1087,0],"end":[1103,1]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_collect","map_while","intersperse_with","count","next_chunk","cmp","min_by","by_ref","eq_by","unzip","fold","zip","collect_into","lt","scan","ge","for_each","advance_by","any","min_by_key","all","max","cloned","is_sorted","cycle","reduce","position","last","partition","flat_map","skip","filter","nth","max_by","is_sorted_by","array_chunks","ne","try_reduce","partition_in_place","flatten","filter_map","partial_cmp","step_by","find","max_by_key","sum","le","size_hint","collect","product","map","find_map","is_sorted_by_key","is_partitioned","fuse","skip_while","chain","rev","take","eq","__iterator_get_unchecked","cmp_by","try_find","try_fold","peekable","inspect","take_while","intersperse","copied","min","enumerate","partial_cmp_by","rposition","gt","try_for_each"],"trait":{"name":"Iterator","id":"2:7202:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2559:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1259:2056","0:1260:938","0:1263:3862","0:1264:494"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2686:225-0:2358:4145":{"id":"a:2:2686:225-0:2358:4145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2358:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1003":{"id":"0:1003","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1183,0],"end":[1191,1]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"name":"Replacer","id":"0:987:1624","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:6601:241","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}},"items":["0:1005:3801","0:1006:3798"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1871:3165":{"id":"0:1871:3165","crate_id":0,"name":"AC","span":{"filename":"src/literal/imp.rs","begin":[226,4],"end":[226,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:1873:1569"]},"discriminant":null}},"2:11910:36841":{"id":"2:11910:36841","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5294:37500":{"id":"5:5294:37500","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7158:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:2346:2928":{"id":"b:2:2537-0:2346:2928","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2346:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2516":{"id":"0:2516","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[28,33],"end":[28,42]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2301:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2518:602"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2073:2784":{"id":"0:2073:2784","crate_id":0,"name":"octal","span":{"filename":"src/re_builder.rs","begin":[15,4],"end":[15,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"a:2:2686:225-0:1628:127":{"id":"a:2:2686:225-0:1628:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:922":{"id":"0:922","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[840,0],"end":[840,50]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"name":"ExactSizeIterator","id":"2:7148:3867","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2238:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2361":{"id":"0:2361","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2287:1589","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2358:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2362:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:465":{"id":"0:465","crate_id":0,"name":null,"span":{"filename":"src/exec.rs","begin":[1316,0],"end":[1321,1]},"visibility":{"restricted":{"parent":"0:333:1636","path":"::exec"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Exec","id":"0:1642:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:466:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:856:3788":{"id":"0:856:3788","crate_id":0,"name":"replacen","span":{"filename":"src/re_bytes.rs","begin":[485,4],"end":[530,5]},"visibility":"public","docs":"Replaces at most `limit` non-overlapping matches in `text` with the\nreplacement provided. If `limit` is 0, then all non-overlapping matches\nare replaced.\n\nSee the documentation for `replace` for details on how to access\ncapturing group matches in the replacement text.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["limit",{"kind":"primitive","inner":"usize"}],["rep",{"kind":"generic","inner":"R"}]],"output":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:688:110","args":{"angle_bracketed":{"args":[{"lifetime":"'t"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Replacer","id":"0:987:1624","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:883:938":{"id":"0:883:938","crate_id":0,"name":"next","span":{"filename":"src/re_bytes.rs","begin":[700,4],"end":[703,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2174:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2672:217-0:2363:4144":{"id":"a:2:2672:217-0:2363:4144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2363:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1990:657":{"id":"0:1990:657","crate_id":0,"name":"fmt","span":{"filename":"src/prog.rs","begin":[267,16],"end":[267,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2564":{"id":"0:2564","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1081,9],"end":[1081,14]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2559:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2567:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2194":{"id":"0:2194","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[20,33],"end":[20,42]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2301:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2174:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2174:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2196:602"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2736:4882-0:1814:1653":{"id":"a:2:2736:4882-0:1814:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2163:2789":{"id":"0:2163:2789","crate_id":0,"name":"ignore_whitespace","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the value for the ignore whitespace (`x`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2169:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2000:1838":{"id":"0:2000:1838","crate_id":0,"name":"goto2","span":{"filename":"src/prog.rs","begin":[326,4],"end":[326,22]},"visibility":"public","docs":"The second instruction to try. A match resulting from following goto1\nhas precedence over a match resulting from following goto2.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"b:2:2235-0:2534:1626":{"id":"b:2:2235-0:2534:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2534:1626","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:5551-0:2519:1623":{"id":"b:5:5551-0:2519:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9012:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5549:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2519:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5553:1422"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2568":{"id":"0:2568","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1081,16],"end":[1081,21]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2559:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2571:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2155:924":{"id":"0:2155:924","crate_id":0,"name":"new","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Create a new regular expression builder with the given pattern.\n\nIf the pattern is invalid, then an error will be returned when\n`build` is called.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["patterns",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2169:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2495:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:7088:149","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"S"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2048:1837":{"id":"0:2048:1837","crate_id":0,"name":"goto","span":{"filename":"src/prog.rs","begin":[375,4],"end":[375,21]},"visibility":"public","docs":"The next location to execute in the program if this instruction\nsucceeds.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"b:2:2542-0:2559:1628":{"id":"b:2:2542-0:2559:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2559:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2238-0:2534:1626":{"id":"b:2:2238-0:2534:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2534:1626","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1324:3801":{"id":"0:1324:3801","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1287,4],"end":[1289,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1213:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2542-0:2346:2928":{"id":"b:2:2542-0:2346:2928","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2346:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2531-0:2572:1616":{"id":"b:2:2531-0:2572:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2572:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11919:36846":{"id":"2:11919:36846","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11843:410","self::pattern":"2:11521:1606"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3328-0:1814:1653":{"id":"b:2:3328-0:1814:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:824:657":{"id":"0:824:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[89,4],"end":[91,5]},"visibility":"default","docs":"Shows the original regular expression.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:963":{"id":"0:963","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1045,0],"end":[1053,1]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":"Get a group by index.\n\n`'t` is the lifetime of the matched text.\n\nThe text can't outlive the `Captures` object if this method is\nused, because of how `Index` is defined (normally `a[i]` is part\nof `a` and can't outlive it); to do that, use `get()` instead.\n\n# Panics\n\nIf there is no group at the given index.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"2:2991:3585","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:931:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:965:183","0:966:755"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1801:657":{"id":"0:1801:657","crate_id":0,"name":"fmt","span":{"filename":"src/input.rs","begin":[139,22],"end":[139,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2672:217-0:2277:1622":{"id":"a:2:2672:217-0:2277:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2277:1622","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2304:1783":{"id":"0:2304:1783","crate_id":0,"name":"matches","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Returns the set of regular expressions that match in the given text.\n\nThe set returned contains the index of each regular expression that\nmatches in the given text. The index is in correspondence with the\norder of regular expressions given to `RegexSet`'s constructor.\n\nThe set can also be used to iterate over the matched indices.\n\nNote that as with searches using `Regex`, the expression is unanchored\nby default. That is, if the regex does not start with `^` or `\\A`, or\nend with `$` or `\\z`, then it is permitted to match anywhere in the\ntext.\n\n# Example\n\nTests which regular expressions match the given text:\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[\n    r\"\\w+\",\n    r\"\\d+\",\n    r\"\\pL+\",\n    r\"foo\",\n    r\"bar\",\n    r\"barfoo\",\n    r\"foobar\",\n]).unwrap();\nlet matches: Vec<_> = set.matches(\"foobar\").into_iter().collect();\nassert_eq!(matches, vec![0, 2, 3, 4, 6]);\n\n// You can also test whether a particular regex matched:\nlet matches = set.matches(\"foobar\");\nassert!(!matches.matched(5));\nassert!(matches.matched(6));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2351:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1051:2813":{"id":"0:1051:2813","crate_id":0,"name":"slots_len","span":{"filename":"src/re_trait.rs","begin":[110,4],"end":[110,33]},"visibility":"default","docs":"The number of capture slots in the compiled regular expression. This is\nalways two times the number of capture groups (two slots per group).","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:2736:4882-0:2534:1626":{"id":"a:2:2736:4882-0:2534:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2534:1626","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1283:2056":{"id":"0:1283:2056","crate_id":0,"name":"Item","span":{"filename":"src/re_unicode.rs","begin":[1146,4],"end":[1146,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}},"0:387:1630":{"id":"0:387:1630","crate_id":0,"name":"bytes","span":{"filename":"src/exec.rs","begin":[208,4],"end":[211,5]},"visibility":"public","docs":"Compiles byte based programs for use with the NFA matching engines.\n\nBy default, the NFA engines match on Unicode scalar values. They can\nbe made to use byte based programs instead. In general, the byte based\nprograms are slower because of a less efficient encoding of character\nclasses.\n\nNote that this does not impact DFA matching engines, which always\nexecute on bytes.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:100:1635":{"id":"0:100:1635","crate_id":0,"name":"dfa","span":{"filename":"src/compile.rs","begin":[112,4],"end":[115,5]},"visibility":"public","docs":"When set, the machine returned is suitable for use in the DFA matching\nengine.\n\nIn particular, this ensures that if the regex is not anchored in the\nbeginning, then a preceding `.*?` is included in the program. (The NFA\nbased engines handle the preceding `.*?` explicitly, which is difficult\nor impossible in the DFA engine.)","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2527-0:367:1652":{"id":"b:2:2527-0:367:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecBuilder","id":"0:367:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2235-0:2238:1617":{"id":"b:2:2235-0:2238:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2238:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2413":{"id":"0:2413","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2373:1630","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["nth_back","rfold","advance_back_by","try_rfold","rfind"],"trait":{"name":"DoubleEndedIterator","id":"2:7125:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2444:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2414:4151"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:773:2056":{"id":"0:773:2056","crate_id":0,"name":"Item","span":{"filename":"src/prog.rs","begin":[243,4],"end":[243,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:1965:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"b:5:683-0:2552:1615":{"id":"b:5:683-0:2552:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2552:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:685:3800","5:686:2614","5:687:5400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1825:602":{"id":"0:1825:602","crate_id":0,"name":"eq","span":{"filename":"src/input.rs","begin":[345,28],"end":[345,37]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1244:183":{"id":"0:1244:183","crate_id":0,"name":"Output","span":{"filename":"src/re_unicode.rs","begin":[1041,4],"end":[1041,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"str"}}},"2:11865:5355":{"id":"2:11865:5355","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:48736:176","prim@char":"1:11843:410","self::pattern":"2:11521:1606"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11541:4853","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11890:36835":{"id":"2:11890:36835","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:838:1929":{"id":"0:838:1929","crate_id":0,"name":"captures","span":{"filename":"src/re_bytes.rs","begin":[255,4],"end":[262,5]},"visibility":"public","docs":"Returns the capture groups corresponding to the leftmost-first\nmatch in `text`. Capture group `0` always corresponds to the entire\nmatch. If no match is found, then `None` is returned.\n\nYou should only use `captures` if you need access to the location of\ncapturing group matches. Otherwise, `find` is faster for discovering\nthe location of the overall match.\n\n# Examples\n\nSay you have some text with movie names and their release years,\nlike \"'Citizen Kane' (1941)\". It'd be nice if we could search for text\nlooking like that, while also extracting the movie name and its release\nyear separately.\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(r\"'([^']+)'\\s+\\((\\d{4})\\)\").unwrap();\nlet text = b\"Not my favorite movie: 'Citizen Kane' (1941).\";\nlet caps = re.captures(text).unwrap();\nassert_eq!(caps.get(1).unwrap().as_bytes(), &b\"Citizen Kane\"[..]);\nassert_eq!(caps.get(2).unwrap().as_bytes(), &b\"1941\"[..]);\nassert_eq!(caps.get(0).unwrap().as_bytes(), &b\"'Citizen Kane' (1941)\"[..]);\n// You can also access the groups by index using the Index notation.\n// Note that this will panic on an invalid index.\nassert_eq!(&caps[1], b\"Citizen Kane\");\nassert_eq!(&caps[2], b\"1941\");\nassert_eq!(&caps[0], b\"'Citizen Kane' (1941)\");\n# }\n```\n\nNote that the full match is at capture group `0`. Each subsequent\ncapture group is indexed by the order of its opening `(`.\n\nWe can make this example a bit clearer by using *named* capture groups:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(r\"'(?P<title>[^']+)'\\s+\\((?P<year>\\d{4})\\)\")\n               .unwrap();\nlet text = b\"Not my favorite movie: 'Citizen Kane' (1941).\";\nlet caps = re.captures(text).unwrap();\nassert_eq!(caps.name(\"title\").unwrap().as_bytes(), b\"Citizen Kane\");\nassert_eq!(caps.name(\"year\").unwrap().as_bytes(), b\"1941\");\nassert_eq!(caps.get(0).unwrap().as_bytes(), &b\"'Citizen Kane' (1941)\"[..]);\n// You can also access the groups by name using the Index notation.\n// Note that this will panic on an invalid group name.\nassert_eq!(&caps[\"title\"], b\"Citizen Kane\");\nassert_eq!(&caps[\"year\"], b\"1941\");\nassert_eq!(&caps[0], b\"'Citizen Kane' (1941)\");\n\n# }\n```\n\nHere we name the capture groups, which we can access with the `name`\nmethod or the `Index` notation with a `&str`. Note that the named\ncapture groups are still accessible with `get` or the `Index` notation\nwith a `usize`.\n\nThe `0`th capture group is always unnamed, so it must always be\naccessed with `get(0)` or `[0]`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:931:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2542-0:2211:1616":{"id":"b:2:2542-0:2211:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2211:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2447":{"id":"0:2447","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2373:1630","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2444:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2448:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:630:2781":{"id":"0:630:2781","crate_id":0,"name":"empty","span":{"filename":"src/literal/imp.rs","begin":[41,4],"end":[43,5]},"visibility":"public","docs":"Returns a matcher that never matches and never advances the input.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2527-0:2590:1625":{"id":"b:2:2527-0:2590:1625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2590:1625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:550:2815":{"id":"0:550:2815","crate_id":0,"name":"as_bytes","span":{"filename":"src/input.rs","begin":[133,4],"end":[135,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:7096:770":{"id":"2:7096:770","crate_id":2,"name":"into_iter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"I"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:634:2948":{"id":"0:634:2948","crate_id":0,"name":"complete","span":{"filename":"src/literal/imp.rs","begin":[73,4],"end":[75,5]},"visibility":"public","docs":"Returns true if all matches comprise the entire regular expression.\n\nThis does not necessarily mean that a literal match implies a match\nof the regular expression. For example, the regular expression `^a`\nis comprised of a single complete literal `a`, but the regular\nexpression demands that it only match at the beginning of a string.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2686:225-0:2047:1659":{"id":"a:2:2686:225-0:2047:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstRanges","id":"0:2047:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:8140:3268-0:2211:1616":{"id":"a:2:8140:3268-0:2211:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2211:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2235-0:2449:4144":{"id":"b:2:2235-0:2449:4144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2449:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8139:3269-0:1628:127":{"id":"a:2:8139:3269-0:1628:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2466:3587":{"id":"0:2466:3587","crate_id":0,"name":"SubCapturesPosIter","span":{"filename":"src/re_trait.rs","begin":[58,0],"end":[61,1]},"visibility":"public","docs":"An iterator over capture group positions for a particular match of a\nregular expression.\n\nPositions are byte indices in terms of the original string matched.\n\n`'c` is the lifetime of the captures.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":[]}},"a:2:2672:217-0:1833:1656":{"id":"a:2:2672:217-0:1833:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:1833:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:563:3118":{"id":"0:563:3118","crate_id":0,"name":"previous_char","span":{"filename":"src/input.rs","begin":[171,4],"end":[173,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["at",{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:1780:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3328-0:2119:3498":{"id":"b:2:3328-0:2119:3498","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2119:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:908:2056":{"id":"0:908:2056","crate_id":0,"name":"Item","span":{"filename":"src/re_bytes.rs","begin":[783,4],"end":[783,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}},"0:1050:2812":{"id":"0:1050:2812","crate_id":0,"name":"Text","span":{"filename":"src/re_trait.rs","begin":[106,4],"end":[106,35]},"visibility":"default","docs":"The type of the haystack.","links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}},"0:599":{"id":"0:599","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[394,0],"end":[398,1]},"visibility":{"restricted":{"parent":"0:512:1639","path":"::input"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"char"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:600:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:8140:3268-0:2096:3498":{"id":"a:2:8140:3268-0:2096:3498","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2096:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2130:924":{"id":"0:2130:924","crate_id":0,"name":"new","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Create a new regular expression builder with the given pattern.\n\nIf the pattern is invalid, then an error will be returned when\n`build` is called.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["patterns",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2144:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2495:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:7088:149","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"generic","inner":"S"}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:828:126":{"id":"0:828:126","crate_id":0,"name":"Err","span":{"filename":"src/re_bytes.rs","begin":[105,4],"end":[105,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:2537-0:2363:4144":{"id":"b:2:2537-0:2363:4144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2363:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2238-0:2552:1615":{"id":"b:2:2238-0:2552:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2552:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11928:36847":{"id":"2:11928:36847","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11843:410","self::pattern":"2:11521:1606"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11541:4853","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5302:37501":{"id":"5:5302:37501","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7158:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:873":{"id":"0:873","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[654,0],"end":[684,1]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":"Auxiliary methods.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2197:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:874:312","0:875:2938","0:876:3842","0:877:3686"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2522":{"id":"0:2522","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[135,9],"end":[135,14]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2519:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2523:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2349":{"id":"0:2349","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2287:1589","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2346:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2350:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1027:3798":{"id":"0:1027:3798","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_bytes.rs","begin":[1257,4],"end":[1259,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:688:110","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2527-0:1628:127":{"id":"b:2:2527-0:1628:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:329":{"id":"0:329","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[33,0],"end":[45,1]},"visibility":{"restricted":{"parent":"0:324:1609","path":"::error"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9012:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:330:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2542-0:2552:1615":{"id":"b:2:2542-0:2552:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2552:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2672:217-0:1965:1658":{"id":"a:2:2672:217-0:1965:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:1965:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1210:1836":{"id":"0:1210:1836","crate_id":0,"name":"get","span":{"filename":"src/re_unicode.rs","begin":[886,4],"end":[888,5]},"visibility":"public","docs":"Returns the start and end positions of the Nth capture group. Returns\n`None` if `i` is not a valid capture group or if the capture group did\nnot match anything. The positions returned are *always* byte indices\nwith respect to the original string matched.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11915:36844":{"id":"2:11915:36844","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2101:1589":{"id":"0:2101:1589","crate_id":0,"name":"unicode","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2119:3498"],"is_stripped":false}},"0:1823":{"id":"0:1823","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[345,28],"end":[345,37]},"visibility":{"restricted":{"parent":"0:512:1639","path":"::input"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2682:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2441:414":{"id":"0:2441:414","crate_id":0,"name":"clone","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2437:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2235-0:2277:1622":{"id":"b:2:2235-0:2277:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2277:1622","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2523:414":{"id":"0:2523:414","crate_id":0,"name":"clone","span":{"filename":"src/re_unicode.rs","begin":[135,9],"end":[135,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2519:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2111:2787":{"id":"0:2111:2787","crate_id":0,"name":"dot_matches_new_line","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the value for the any character (`s`) flag, where in `.` matches\nanything when `s` is set and matches anything except for new line when\nit is not set (the default).\n\nN.B. \"matches anything\" means \"any byte\" when Unicode is disabled and\nmeans \"any valid UTF-8 encoding of any Unicode scalar value\" when\nUnicode is enabled.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2119:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8139:3269-0:2144:3578":{"id":"a:2:8139:3269-0:2144:3578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2144:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2537-0:2229:1627":{"id":"b:2:2537-0:2229:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2229:1627","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1213:1618":{"id":"0:1213:1618","crate_id":0,"name":"Captures","span":{"filename":"src/re_unicode.rs","begin":[922,0],"end":[926,1]},"visibility":"public","docs":"Captures represents a group of captured strings for a single match.\n\nThe 0th capture always corresponds to the entire match. Each subsequent\nindex corresponds to the next capture group in the regex. If a capture\ngroup is named, then the matched string is *also* available via the `name`\nmethod. (Note that the 0th capture is always unnamed and so must be\naccessed with the `get` method.)\n\nPositions returned from a capture group are always byte indices.\n\n`'t` is the lifetime of the matched text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:1218","a:2:2736:4882-0:1213:1618","a:2:8139:3269-0:1213:1618","a:2:8140:3268-0:1213:1618","a:2:2686:225-0:1213:1618","a:2:2672:217-0:1213:1618","b:2:2542-0:1213:1618","b:2:2537-0:1213:1618","b:2:3328-0:1213:1618","b:2:2531-0:1213:1618","b:2:2527-0:1213:1618","b:2:2235-0:1213:1618","b:2:2238-0:1213:1618","0:1242","0:1228","0:1248"]}},"0:816:2815":{"id":"0:816:2815","crate_id":0,"name":"as_bytes","span":{"filename":"src/re_bytes.rs","begin":[49,4],"end":[51,5]},"visibility":"public","docs":"Returns the matched text.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2395":{"id":"0:2395","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2373:1630","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2437:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2396:4113","0:2397:1823","0:2398:797","0:2399:781"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:601":{"id":"0:601","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[400,0],"end":[404,1]},"visibility":{"restricted":{"parent":"0:512:1639","path":"::input"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"char"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:602:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2537-0:1833:1656":{"id":"b:2:2537-0:1833:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:1833:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2736:4882-0:2012:1657":{"id":"a:2:2736:4882-0:2012:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2012:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:8140:3268-0:2358:4145":{"id":"a:2:8140:3268-0:2358:4145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2358:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2686:225-0:1790:1654":{"id":"a:2:2686:225-0:1790:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:1790:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2531-0:1833:1656":{"id":"b:2:2531-0:1833:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:1833:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2672:217-0:2534:1626":{"id":"a:2:2672:217-0:2534:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2534:1626","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2672:217-0:2581:1621":{"id":"a:2:2672:217-0:2581:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2581:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:8139:3269-0:2590:1625":{"id":"a:2:8139:3269-0:2590:1625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2590:1625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:2531-0:2590:1625":{"id":"b:2:2531-0:2590:1625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2590:1625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2323":{"id":"0:2323","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2287:1589","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["try_collect","map_while","intersperse_with","count","next_chunk","cmp","min_by","by_ref","eq_by","unzip","fold","zip","collect_into","lt","scan","ge","for_each","advance_by","any","min_by_key","all","max","cloned","is_sorted","cycle","reduce","position","last","partition","flat_map","skip","filter","nth","max_by","is_sorted_by","array_chunks","ne","try_reduce","partition_in_place","flatten","filter_map","partial_cmp","step_by","find","max_by_key","sum","le","size_hint","collect","product","map","find_map","is_sorted_by_key","is_partitioned","fuse","skip_while","chain","rev","take","eq","__iterator_get_unchecked","cmp_by","try_find","try_fold","peekable","inspect","take_while","intersperse","copied","min","enumerate","partial_cmp_by","rposition","gt","try_for_each"],"trait":{"name":"Iterator","id":"2:7202:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2358:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2324:2056","0:2325:938","0:2326:3862"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2245":{"id":"0:2245","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[818,16],"end":[818,21]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2238:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["0:2247:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3328-0:931:1618":{"id":"b:2:3328-0:931:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:931:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8140:3268-0:1947:1660":{"id":"a:2:8140:3268-0:1947:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Program","id":"0:1947:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2531-0:2119:3498":{"id":"b:2:2531-0:2119:3498","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2119:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2686:225-0:2534:1626":{"id":"a:2:2686:225-0:2534:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2534:1626","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:2235-0:2559:1628":{"id":"b:2:2235-0:2559:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2559:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1641:602":{"id":"0:1641:602","crate_id":0,"name":"eq","span":{"filename":"src/error.rs","begin":[5,16],"end":[5,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2686:225-0:1965:1658":{"id":"a:2:2686:225-0:1965:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:1965:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2528":{"id":"0:2528","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[750,9],"end":[750,14]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2524:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["0:2530:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2686:225-0:2119:3498":{"id":"a:2:2686:225-0:2119:3498","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2119:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2527-0:2581:1621":{"id":"b:2:2527-0:2581:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2581:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11841:36831":{"id":"2:11841:36831","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:11849:1368","crate::ops::IndexMut":"2:2995:4835","str::slice_unchecked":"2:11840:36830"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2542-0:2351:4111":{"id":"b:2:2542-0:2351:4111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2351:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1829":{"id":"0:1829","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[345,43],"end":[345,53]},"visibility":{"restricted":{"parent":"0:512:1639","path":"::input"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ge","le","gt","lt"],"trait":{"name":"PartialOrd","id":"2:2343:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1830:1015"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2235-0:367:1652":{"id":"b:2:2235-0:367:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecBuilder","id":"0:367:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2027:2023":{"id":"0:2027:2023","crate_id":0,"name":"NotWordBoundaryAscii","span":{"filename":"src/prog.rs","begin":[357,4],"end":[357,24]},"visibility":"default","docs":"Not ASCII word boundary.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"a:2:8139:3269-0:2444:4145":{"id":"a:2:8139:3269-0:2444:4145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2444:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2672:217-0:2169:3578":{"id":"a:2:2672:217-0:2169:3578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2169:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2458:657":{"id":"0:2458:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:604":{"id":"0:604","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[406,0],"end":[411,1]},"visibility":{"restricted":{"parent":"0:512:1639","path":"::input"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2301:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"char"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:605:602"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:754:924":{"id":"0:754:924","crate_id":0,"name":"new","span":{"filename":"src/prog.rs","begin":[80,4],"end":[98,5]},"visibility":"public","docs":"Creates an empty instruction sequence. Fields are given default\nvalues.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2123:657":{"id":"0:2123:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:332:657":{"id":"0:332:657","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[52,4],"end":[70,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8139:3269-0:2277:1622":{"id":"a:2:8139:3269-0:2277:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2277:1622","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:541":{"id":"0:541","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[104,0],"end":[136,1]},"visibility":{"restricted":{"parent":"0:512:1639","path":"::input"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Input","id":"0:532:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_empty"],"trait":{"name":"Input","id":"0:532:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"T"}}},"items":["0:544:1800","0:545:3116","0:546:3118","0:547:1840","0:548:1826","0:549:797","0:550:2815"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:763:542":{"id":"0:763:542","crate_id":0,"name":"deref","span":{"filename":"src/prog.rs","begin":[165,4],"end":[167,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:2908:116","args":null}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1978:1653":{"id":"0:1978:1653","crate_id":0,"name":"Char","span":{"filename":"src/prog.rs","begin":[288,4],"end":[288,18]},"visibility":"default","docs":"Char requires the regex program to match the character in InstChar at\nthe current position in the input.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:1980:1569"]},"discriminant":null}},"a:2:8140:3268-0:2444:4145":{"id":"a:2:8140:3268-0:2444:4145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2444:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1059:3703":{"id":"0:1059:3703","crate_id":0,"name":"captures_iter","span":{"filename":"src/re_trait.rs","begin":[158,4],"end":[160,5]},"visibility":"default","docs":"Returns an iterator over all non-overlapping successive leftmost-first\nmatches with captures.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Text","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1049:2675","args":null}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2487:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1150:2493":{"id":"0:1150:2493","crate_id":0,"name":"replace","span":{"filename":"src/re_unicode.rs","begin":[506,4],"end":[512,5]},"visibility":"public","docs":"Replaces the leftmost-first match with the replacement provided.\nThe replacement can be a regular string (where `$N` and `$name` are\nexpanded to match capture groups) or a function that takes the matches'\n`Captures` and returns the replaced string.\n\nIf no match is found, then a copy of the string is returned unchanged.\n\n# Replacement string syntax\n\nAll instances of `$name` in the replacement text is replaced with the\ncorresponding capture group `name`.\n\n`name` may be an integer corresponding to the index of the\ncapture group (counted by order of opening parenthesis where `0` is the\nentire match) or it can be a name (consisting of letters, digits or\nunderscores) corresponding to a named capture group.\n\nIf `name` isn't a valid capture group (whether the name doesn't exist\nor isn't a valid index), then it is replaced with the empty string.\n\nThe longest possible name is used. e.g., `$1a` looks up the capture\ngroup named `1a` and not the capture group at index `1`. To exert more\nprecise control over the name, use braces, e.g., `${1}a`.\n\nTo write a literal `$` use `$$`.\n\n# Examples\n\nNote that this function is polymorphic with respect to the replacement.\nIn typical usage, this can just be a normal string:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(\"[^01]+\").unwrap();\nassert_eq!(re.replace(\"1078910\", \"\"), \"1010\");\n# }\n```\n\nBut anything satisfying the `Replacer` trait will work. For example,\na closure of type `|&Captures| -> String` provides direct access to the\ncaptures corresponding to a match. This allows one to access\ncapturing group matches easily:\n\n```rust\n# use regex::Regex;\n# use regex::Captures; fn main() {\nlet re = Regex::new(r\"([^,\\s]+),\\s+(\\S+)\").unwrap();\nlet result = re.replace(\"Springsteen, Bruce\", |caps: &Captures| {\n    format!(\"{} {}\", &caps[2], &caps[1])\n});\nassert_eq!(result, \"Bruce Springsteen\");\n# }\n```\n\nBut this is a bit cumbersome to use all the time. Instead, a simple\nsyntax is supported that expands `$name` into the corresponding capture\ngroup. Here's the last example, but using this expansion technique\nwith named capture groups:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?P<last>[^,\\s]+),\\s+(?P<first>\\S+)\").unwrap();\nlet result = re.replace(\"Springsteen, Bruce\", \"$first $last\");\nassert_eq!(result, \"Bruce Springsteen\");\n# }\n```\n\nNote that using `$2` instead of `$first` or `$1` instead of `$last`\nwould produce the same result. To write a literal `$` use `$$`.\n\nSometimes the replacement string requires use of curly braces to\ndelineate a capture group replacement and surrounding literal text.\nFor example, if we wanted to join two words together with an\nunderscore:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?P<first>\\w+)\\s+(?P<second>\\w+)\").unwrap();\nlet result = re.replace(\"deep fried\", \"${first}_$second\");\nassert_eq!(result, \"deep_fried\");\n# }\n```\n\nWithout the curly braces, the capture group name `first_` would be\nused, and since it doesn't exist, it would be replaced with the empty\nstring.\n\nFinally, sometimes you just want to replace a literal string with no\nregard for capturing group expansion. This can be done by wrapping a\nbyte string with `NoExpand`:\n\n```rust\n# use regex::Regex;\n# fn main() {\nuse regex::NoExpand;\n\nlet re = Regex::new(r\"(?P<last>[^,\\s]+),\\s+(\\S+)\").unwrap();\nlet result = re.replace(\"Springsteen, Bruce\", NoExpand(\"$2 $last\"));\nassert_eq!(result, \"$2 $last\");\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["rep",{"kind":"generic","inner":"R"}]],"output":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:688:110","args":{"angle_bracketed":{"args":[{"lifetime":"'t"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Replacer","id":"0:1289:1624","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2362:657":{"id":"0:2362:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:7092-0:2229:1627":{"id":"b:2:7092-0:2229:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7202:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7088:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2229:1627","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:7094:2056","2:7095:3416","2:7096:770"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"b:2:2238-0:2524:1617":{"id":"b:2:2238-0:2524:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2524:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2141:1876":{"id":"0:2141:1876","crate_id":0,"name":"size_limit","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the approximate size limit of the compiled regular expression.\n\nThis roughly corresponds to the number of bytes occupied by a single\ncompiled program. If the program exceeds this number, then a\ncompilation error is returned.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2144:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2736:4882-0:2572:1616":{"id":"a:2:2736:4882-0:2572:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2572:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1310:3798":{"id":"0:1310:3798","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1249,4],"end":[1251,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:688:110","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2672:217-0:2590:1625":{"id":"a:2:2672:217-0:2590:1625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2590:1625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:466:414":{"id":"0:466:414","crate_id":0,"name":"clone","span":{"filename":"src/exec.rs","begin":[1317,4],"end":[1320,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Exec","id":"0:1642:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:527:1844":{"id":"0:527:1844","crate_id":0,"name":"byte","span":{"filename":"src/input.rs","begin":[40,4],"end":[42,5]},"visibility":"public","docs":"Returns the byte at this position.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:2174:1620":{"id":"b:2:2537-0:2174:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2174:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:823":{"id":"0:823","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[87,0],"end":[92,1]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2197:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:824:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2251":{"id":"0:2251","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[859,9],"end":[859,14]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2248:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2252:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2053:657":{"id":"0:2053:657","crate_id":0,"name":"fmt","span":{"filename":"src/prog.rs","begin":[371,16],"end":[371,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1108":{"id":"0:1108","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[35,0],"end":[66,1]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1110:1354","0:1111:598","0:1112:2110","0:1113:312"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2531-0:1814:1653":{"id":"b:2:2531-0:1814:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1325":{"id":"0:1325","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1303,0],"end":[1311,1]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"name":"Replacer","id":"0:1289:1624","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2599:1622","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1327:3801","0:1328:3798"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2118:2791":{"id":"0:2118:2791","crate_id":0,"name":"nest_limit","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the nesting limit for this parser.\n\nThe nesting limit controls how deep the abstract syntax tree is allowed\nto be. If the AST exceeds the given limit (e.g., with too many nested\ngroups), then an error is returned by the parser.\n\nThe purpose of this limit is to act as a heuristic to prevent stack\noverflow for consumers that do structural induction on an `Ast` using\nexplicit recursion. While this crate never does this (instead using\nconstant stack space and moving the call stack to the heap), other\ncrates may.\n\nThis limit is not checked until the entire Ast is parsed. Therefore,\nif callers want to put a limit on the amount of heap space used, then\nthey should impose a limit on the length, in bytes, of the concrete\npattern string. In particular, this is viable since this parser\nimplementation will limit itself to heap space proportional to the\nlength of the pattern string.\n\nNote that a nest limit of `0` will return a nest limit error for most\npatterns but not all. For example, a nest limit of `0` permits `a` but\nnot `ab`, since `ab` requires a concatenation, which results in a nest\ndepth of `1`. In general, a nest limit is not something that manifests\nin an obvious way in the concrete syntax, therefore, it should not be\nused in a granular way.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"u32"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2119:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:989:3798":{"id":"0:989:3798","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_bytes.rs","begin":[1128,4],"end":[1130,5]},"visibility":"default","docs":"Return a fixed unchanging replacement byte string.\n\nWhen doing replacements, if access to `Captures` is not needed (e.g.,\nthe replacement byte string does not need `$` expansion), then it can\nbe beneficial to avoid finding sub-captures.\n\nIn general, this is called once for every call to `replacen`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:688:110","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2207":{"id":"0:2207","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[694,9],"end":[694,14]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2202:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2210:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2537-0:2211:1616":{"id":"b:2:2537-0:2211:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2211:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2531-0:2174:1620":{"id":"b:2:2531-0:2174:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2174:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2686:225-0:2590:1625":{"id":"a:2:2686:225-0:2590:1625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2590:1625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2543:1627":{"id":"0:2543:1627","crate_id":0,"name":"SplitN","span":{"filename":"src/re_unicode.rs","begin":[819,0],"end":[822,1]},"visibility":"public","docs":"Yields at most `N` substrings delimited by a regular expression match.\n\nThe last substring will be whatever remains after splitting.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the string being split.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:2736:4882-0:2543:1627","a:2:8139:3269-0:2543:1627","a:2:8140:3268-0:2543:1627","a:2:2686:225-0:2543:1627","a:2:2672:217-0:2543:1627","b:2:2542-0:2543:1627","b:2:2537-0:2543:1627","b:2:3328-0:2543:1627","b:2:7092-0:2543:1627","b:2:2531-0:2543:1627","b:2:2527-0:2543:1627","b:2:2235-0:2543:1627","b:2:2238-0:2543:1627","0:2548","0:1199","0:1205"]}},"0:2133:2792":{"id":"0:2133:2792","crate_id":0,"name":"build","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Consume the builder and compile the regular expressions into a set.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48878:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2432:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2407:2056":{"id":"0:2407:2056","crate_id":0,"name":"Item","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"b:2:2531-0:2202:1621":{"id":"b:2:2531-0:2202:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2202:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:538:797":{"id":"0:538:797","crate_id":0,"name":"len","span":{"filename":"src/input.rs","begin":[93,4],"end":[93,27]},"visibility":"default","docs":"The number of bytes in the input.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:2672:217-0:85:1650":{"id":"a:2:2672:217-0:85:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Compiler","id":"0:85:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2089:2788":{"id":"0:2089:2788","crate_id":0,"name":"swap_greed","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the value for the greedy swap (`U`) flag.\n\nWhen enabled, a pattern like `a*` is lazy (tries to find shortest\nmatch) and `a*?` is greedy (tries to find longest match).\n\nBy default, `a*` is greedy and `a*?` is lazy.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2096:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2311:1823":{"id":"0:2311:1823","crate_id":0,"name":"matched","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Whether the regex at the given index matched.\n\nThe index for a regex is determined by its insertion order upon the\ninitial construction of a `RegexSet`, starting at `0`.\n\n# Panics\n\nIf `regex_index` is greater than or equal to `self.len()`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["regex_index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2531-0:2449:4144":{"id":"b:2:2531-0:2449:4144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2449:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2542-0:2572:1616":{"id":"b:2:2542-0:2572:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2572:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11819":{"id":"2:11819","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:11084:1368","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:11820:797","2:11821:1825","2:11822:36826","2:11823:36827","2:11825:36828","2:11828:2815","2:11829:36829","2:11830:310","2:11831:30553","2:11832:1836","2:11834:10672","2:11836:2422","2:11838:30552","2:11840:36830","2:11841:36831","2:11842:30575","2:11843:30576","2:11844:3217","2:11845:8461","2:11846:1630","2:11847:34437","2:11848:34446","2:11849:10356","2:11850:36832","2:11851:34436","2:11852:2442","2:11855:30591","2:11858:30592","2:11861:2545","2:11865:5355","2:11869:1939","2:11872:30584","2:11875:30586","2:11878:36833","2:11881:36834","2:11884:3724","2:11887:30589","2:11890:36835","2:11893:36836","2:11896:1783","2:11899:36837","2:11902:36838","2:11905:36839","2:11908:36840","2:11910:36841","2:11912:36842","2:11914:36843","2:11915:36844","2:11916:36845","2:11919:36846","2:11922:28555","2:11925:30593","2:11928:36847","2:11931:36848","2:11934:36849","2:11937:2780","2:11939:2049","2:11940:30440","2:11941:30437","2:11942:30436","2:11943:36850","2:11945:2612","2:11946:4749"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2542-0:1628:127":{"id":"b:2:2542-0:1628:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3328-0:85:1650":{"id":"b:2:3328-0:85:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Compiler","id":"0:85:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2542-0:367:1652":{"id":"b:2:2542-0:367:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecBuilder","id":"0:367:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:367:1652":{"id":"0:367:1652","crate_id":0,"name":"ExecBuilder","span":{"filename":"src/exec.rs","begin":[113,0],"end":[118,1]},"visibility":"public","docs":"Facilitates the construction of an executor by exposing various knobs\nto control how a regex is executed and what kinds of resources it's\npermitted to use.","links":{},"attrs":["#[allow(missing_debug_implementations)]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:377","a:2:2736:4882-0:367:1652","a:2:8139:3269-0:367:1652","a:2:8140:3268-0:367:1652","a:2:2686:225-0:367:1652","a:2:2672:217-0:367:1652","b:2:2542-0:367:1652","b:2:2537-0:367:1652","b:2:3328-0:367:1652","b:2:2531-0:367:1652","b:2:2527-0:367:1652","b:2:2235-0:367:1652","b:2:2238-0:367:1652"]}},"0:2136:2787":{"id":"0:2136:2787","crate_id":0,"name":"dot_matches_new_line","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the value for the any character (`s`) flag, where in `.` matches\nanything when `s` is set and matches anything except for new line when\nit is not set (the default).\n\nN.B. \"matches anything\" means \"any byte\" for `regex::bytes::RegexSet`\nexpressions and means \"any Unicode scalar value\" for `regex::RegexSet`\nexpressions.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2144:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3328-0:2432:2928":{"id":"b:2:3328-0:2432:2928","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2432:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1265":{"id":"0:1265","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1105,0],"end":[1105,63]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"name":"ExactSizeIterator","id":"2:7148:3867","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2559:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1965:1658":{"id":"0:1965:1658","crate_id":0,"name":"Inst","span":{"filename":"src/prog.rs","begin":[268,0],"end":[296,1]},"visibility":"public","docs":"Inst is an instruction code in a Regex program.\n\nRegrettably, a regex program either contains Unicode codepoint\ninstructions (Char and Ranges) or it contains byte instructions (Bytes).\nA regex program can never contain both.\n\nIt would be worth investigating splitting this into two distinct types and\nthen figuring out how to make the matching engines polymorphic over those\ntypes without sacrificing performance.\n\nOther than the benefit of moving invariants into the type system, another\nbenefit is the decreased size. If we remove the `Char` and `Ranges`\ninstructions from the `Inst` enum, then its size shrinks from 32 bytes to\n24 bytes. (This is because of the removal of a `Box<[]>` in the `Ranges`\nvariant.) Given that byte based machines are typically much bigger than\ntheir Unicode analogues (because they can decode UTF-8 directly), this ends\nup being a pretty significant savings.","links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:1966:1620","0:1969:1834","0:1972:1626","0:1975:1657","0:1978:1653","0:1981:1842","0:1984:1843"],"impls":["0:776","a:2:2736:4882-0:1965:1658","a:2:8139:3269-0:1965:1658","a:2:8140:3268-0:1965:1658","a:2:2686:225-0:1965:1658","a:2:2672:217-0:1965:1658","b:2:2542-0:1965:1658","b:2:2537-0:1965:1658","b:2:3328-0:1965:1658","b:2:2531-0:1965:1658","b:2:2527-0:1965:1658","b:2:2235-0:1965:1658","b:2:2238-0:1965:1658","b:5:683-0:1965:1658","0:1989","0:1987"]}},"0:385:2707":{"id":"0:385:2707","crate_id":0,"name":"nfa","span":{"filename":"src/exec.rs","begin":[181,4],"end":[184,5]},"visibility":"public","docs":"Sets the matching engine to use the NFA algorithm no matter what\noptimizations are possible.\n\nThis overrides whatever was previously set via the `automatic` or\n`bounded_backtracking` methods.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:464:1874":{"id":"0:464:1874","crate_id":0,"name":"capture_name_idx","span":{"filename":"src/exec.rs","begin":[1311,4],"end":[1313,5]},"visibility":"public","docs":"Return a reference to named groups mapping (from group name to\ngroup position).","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Arc","id":"5:5705:69","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"HashMap","id":"1:734:141","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:687:5400":{"id":"5:687:5400","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["target",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2393:1825":{"id":"0:2393:1825","crate_id":0,"name":"is_empty","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Returns `true` if this set contains no regular expressions.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8140:3268-0:2363:4144":{"id":"a:2:8140:3268-0:2363:4144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2363:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:7092-0:2449:4144":{"id":"b:2:7092-0:2449:4144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7202:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7088:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2449:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:7094:2056","2:7095:3416","2:7096:770"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:562:3116":{"id":"0:562:3116","crate_id":0,"name":"next_char","span":{"filename":"src/input.rs","begin":[167,4],"end":[169,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["at",{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:1780:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:928:1836":{"id":"0:928:1836","crate_id":0,"name":"get","span":{"filename":"src/re_bytes.rs","begin":[876,4],"end":[878,5]},"visibility":"public","docs":"Returns the start and end positions of the Nth capture group. Returns\n`None` if `i` is not a valid capture group or if the capture group did\nnot match anything. The positions returned are *always* byte indices\nwith respect to the original string matched.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2235-0:2581:1621":{"id":"b:2:2235-0:2581:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2581:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1117:681":{"id":"0:1117:681","crate_id":0,"name":"from","span":{"filename":"src/re_unicode.rs","begin":[69,4],"end":[71,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["m",{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1203:938":{"id":"0:1203:938","crate_id":0,"name":"next","span":{"filename":"src/re_unicode.rs","begin":[827,4],"end":[845,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2235-0:2174:1620":{"id":"b:2:2235-0:2174:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2174:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2736:4882-0:2543:1627":{"id":"a:2:2736:4882-0:2543:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2543:1627","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2235-0:1833:1656":{"id":"b:2:2235-0:1833:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:1833:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1818:414":{"id":"0:1818:414","crate_id":0,"name":"clone","span":{"filename":"src/input.rs","begin":[345,9],"end":[345,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:814:598":{"id":"0:814:598","crate_id":0,"name":"end","span":{"filename":"src/re_bytes.rs","begin":[36,4],"end":[38,5]},"visibility":"public","docs":"Returns the ending byte offset of the match in the haystack.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2736:4882-0:2248:1615":{"id":"a:2:2736:4882-0:2248:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2248:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2672:217-0:2432:2928":{"id":"a:2:2672:217-0:2432:2928","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2432:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2423:4151":{"id":"0:2423:4151","crate_id":0,"name":"next_back","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1113:312":{"id":"0:1113:312","crate_id":0,"name":"as_str","span":{"filename":"src/re_unicode.rs","begin":[57,4],"end":[59,5]},"visibility":"public","docs":"Returns the matched text.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2403:770":{"id":"0:2403:770","crate_id":0,"name":"into_iter","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:7088:149","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2511":{"id":"0:2511","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[28,29],"end":[28,31]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2306:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2672:217-0:367:1652":{"id":"a:2:2672:217-0:367:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecBuilder","id":"0:367:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:8140:3268-0:2552:1615":{"id":"a:2:8140:3268-0:2552:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2552:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2238-0:1213:1618":{"id":"b:2:2238-0:1213:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1213:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2108:2792":{"id":"0:2108:2792","crate_id":0,"name":"build","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Consume the builder and compile the regular expression.\n\nNote that calling `as_str` on the resulting `Regex` will produce the\npattern given to `new` verbatim. Notably, it will not incorporate any\nof the flags set on this builder.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48878:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2519:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1259:2056":{"id":"0:1259:2056","crate_id":0,"name":"Item","span":{"filename":"src/re_unicode.rs","begin":[1088,4],"end":[1088,34]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}}}},"0:2129":{"id":"0:2129","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":{"restricted":{"parent":"0:2124:1631","path":"::re_builder::set_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2144:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2130:924","0:2133:2792","0:2134:2785","0:2135:2786","0:2136:2787","0:2137:2788","0:2138:2789","0:2139:1589","0:2140:2784","0:2141:1876","0:2142:2180","0:2143:2791"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:765:657":{"id":"0:765:657","crate_id":0,"name":"fmt","span":{"filename":"src/prog.rs","begin":[171,4],"end":[239,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2531-0:2220:1626":{"id":"b:2:2531-0:2220:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2220:1626","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2527-0:2346:2928":{"id":"b:2:2527-0:2346:2928","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2346:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2736:4882-0:2358:4145":{"id":"a:2:2736:4882-0:2358:4145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2358:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2542-0:2444:4145":{"id":"b:2:2542-0:2444:4145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2444:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1186:494":{"id":"0:1186:494","crate_id":0,"name":"count","span":{"filename":"src/re_unicode.rs","begin":[767,4],"end":[769,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1006:3798":{"id":"0:1006:3798","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_bytes.rs","begin":[1188,4],"end":[1190,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:688:110","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1020":{"id":"0:1020","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1231,0],"end":[1239,1]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:2939:2290","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:931:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],"output":{"kind":"generic","inner":"T"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2495:75","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"name":"Replacer","id":"0:987:1624","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"generic","inner":"F"},"items":["0:1023:3801"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2386:2781":{"id":"0:2386:2781","crate_id":0,"name":"empty","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Create a new empty regex set.\n\n# Example\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::empty();\nassert!(set.is_empty());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2432:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2424":{"id":"0:2424","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2373:1630","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7472:3584","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2449:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1260:938":{"id":"0:1260:938","crate_id":0,"name":"next","span":{"filename":"src/re_unicode.rs","begin":[1090,4],"end":[1094,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:917:938":{"id":"0:917:938","crate_id":0,"name":"next","span":{"filename":"src/re_bytes.rs","begin":[824,4],"end":[829,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:2358:4145":{"id":"b:2:2537-0:2358:4145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2358:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1271":{"id":"0:1271","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1121,0],"end":[1131,1]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_collect","map_while","intersperse_with","count","next_chunk","cmp","min_by","by_ref","eq_by","unzip","fold","zip","collect_into","lt","scan","ge","for_each","advance_by","any","min_by_key","all","max","cloned","is_sorted","cycle","reduce","position","last","partition","flat_map","skip","filter","nth","max_by","is_sorted_by","array_chunks","ne","try_reduce","partition_in_place","flatten","filter_map","partial_cmp","step_by","find","max_by_key","sum","le","size_hint","collect","product","map","find_map","is_sorted_by_key","is_partitioned","fuse","skip_while","chain","rev","take","eq","__iterator_get_unchecked","cmp_by","try_find","try_fold","peekable","inspect","take_while","intersperse","copied","min","enumerate","partial_cmp_by","rposition","gt","try_for_each"],"trait":{"name":"Iterator","id":"2:7202:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2572:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1274:2056","0:1275:938"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:614:2918":{"id":"0:614:2918","crate_id":0,"name":"imp","span":{"filename":"src/literal/imp.rs","begin":[1,0],"end":[402,1]},"visibility":{"restricted":{"parent":"0:612:817","path":"::literal"}},"docs":null,"links":{},"attrs":["#[cfg(feature = \"perf-literal\")]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:1833:1656","0:1861:3189","0:1889:3157"],"is_stripped":true}},"b:2:3328-0:2211:1616":{"id":"b:2:3328-0:2211:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2211:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2686:225-0:2255:1628":{"id":"a:2:2686:225-0:2255:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2255:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2238-0:2437:4111":{"id":"b:2:2238-0:2437:4111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2437:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11851:34436":{"id":"2:11851:34436","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:51018:4856","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1787":{"id":"0:1787","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[12,16],"end":[12,20]},"visibility":{"restricted":{"parent":"0:512:1639","path":"::input"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2684:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:1780:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2107:924":{"id":"0:2107:924","crate_id":0,"name":"new","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Create a new regular expression builder with the given pattern.\n\nIf the pattern is invalid, then an error will be returned when\n`build` is called.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["pattern",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2119:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:530:1827":{"id":"0:530:1827","crate_id":0,"name":"pos","span":{"filename":"src/input.rs","begin":[56,4],"end":[58,5]},"visibility":"public","docs":"Returns the byte offset of this position.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2531-0:2169:3578":{"id":"b:2:2531-0:2169:3578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2169:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:929:797":{"id":"0:929:797","crate_id":0,"name":"len","span":{"filename":"src/re_bytes.rs","begin":[885,4],"end":[887,5]},"visibility":"public","docs":"Returns the total number of capture groups (even if they didn't match).\n\nThis is always at least `1` since every regex has at least `1`\ncapturing group that corresponds to the entire match.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:868:2819":{"id":"0:868:2819","crate_id":0,"name":"captures_read_at","span":{"filename":"src/re_bytes.rs","begin":[625,4],"end":[635,5]},"visibility":"public","docs":"Returns the same as `captures_read`, but starts the search at the given\noffset and populates the capture locations given.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["locs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2248:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2174:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2174:1620":{"id":"0:2174:1620","crate_id":0,"name":"Match","span":{"filename":"src/re_bytes.rs","begin":[21,0],"end":[25,1]},"visibility":"public","docs":"Match represents a single match of a regex in a haystack.\n\nThe lifetime parameter `'t` refers to the lifetime of the matched text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:811","a:2:2736:4882-0:2174:1620","a:2:8139:3269-0:2174:1620","a:2:8140:3268-0:2174:1620","a:2:2686:225-0:2174:1620","a:2:2672:217-0:2174:1620","b:2:2542-0:2174:1620","b:2:2537-0:2174:1620","b:2:3328-0:2174:1620","b:2:2531-0:2174:1620","b:2:2527-0:2174:1620","b:2:2235-0:2174:1620","b:2:2238-0:2174:1620","b:5:683-0:2174:1620","0:2187","0:2181","0:2179","0:818","0:2192","0:2189","0:2184","0:2194"]}},"a:2:2736:4882-0:2169:3578":{"id":"a:2:2736:4882-0:2169:3578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2169:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:7095:3416":{"id":"2:7095:3416","crate_id":2,"name":"IntoIter","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"I"}}},"a:2:8140:3268-0:2581:1621":{"id":"a:2:8140:3268-0:2581:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2581:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11858:30592":{"id":"2:11858:30592","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:11843:410","self::pattern":"2:11521:1606"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11541:4853","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1790:1654":{"id":"0:1790:1654","crate_id":0,"name":"CharInput","span":{"filename":"src/input.rs","begin":[140,0],"end":[140,35]},"visibility":"public","docs":"An input reader over characters.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:551","a:2:2736:4882-0:1790:1654","a:2:8139:3269-0:1790:1654","a:2:8140:3268-0:1790:1654","a:2:2686:225-0:1790:1654","a:2:2672:217-0:1790:1654","b:2:2542-0:1790:1654","b:2:2537-0:1790:1654","b:2:3328-0:1790:1654","b:2:2531-0:1790:1654","b:2:2527-0:1790:1654","b:2:2235-0:1790:1654","b:2:2238-0:1790:1654","b:5:683-0:1790:1654","0:1797","0:554","0:558","0:1799","0:1794"]}},"0:1181:2056":{"id":"0:1181:2056","crate_id":0,"name":"Item","span":{"filename":"src/re_unicode.rs","begin":[754,4],"end":[754,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}}}},"2:11945:2612":{"id":"2:11945:2612","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4501:2612"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:51034:4697","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2404":{"id":"0:2404","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2373:1630","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7088:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2437:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"items":["0:2406:3416","0:2407:2056","0:2408:770"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:536:1840":{"id":"0:536:1840","crate_id":0,"name":"is_empty_match","span":{"filename":"src/input.rs","begin":[83,4],"end":[83,73]},"visibility":"default","docs":"Return true if the given empty width instruction matches at the\ninput position given.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["at",{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:1780:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["empty",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"InstEmptyLook","id":"0:2005:1861","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2189":{"id":"0:2189","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[20,29],"end":[20,31]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2306:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2174:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:16-0:2599:1622":{"id":"0:16-0:2599:1622","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[636,31],"end":[636,39]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::re_unicode::NoExpand","name":"NoExpand","id":"0:2599:1622","glob":false}},"0:764":{"id":"0:764","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[170,0],"end":[240,1]},"visibility":{"restricted":{"parent":"0:742:1642","path":"::prog"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Program","id":"0:1947:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:765:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:8139:3269-0:2534:1626":{"id":"a:2:8139:3269-0:2534:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2534:1626","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2238-0:2238:1617":{"id":"b:2:2238-0:2238:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2238:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2235-0:2358:4145":{"id":"b:2:2235-0:2358:4145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2358:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2334:3862":{"id":"0:2334:3862","crate_id":0,"name":"size_hint","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:683-0:2432:2928":{"id":"b:5:683-0:2432:2928","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2432:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:685:3800","5:686:2614","5:687:5400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2736:4882-0:85:1650":{"id":"a:2:2736:4882-0:85:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Compiler","id":"0:85:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:911":{"id":"0:911","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[810,0],"end":[810,48]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7472:3584","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2229:1627","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2672:217-0:2449:4144":{"id":"a:2:2672:217-0:2449:4144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2449:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:534:3116":{"id":"0:534:3116","crate_id":0,"name":"next_char","span":{"filename":"src/input.rs","begin":[74,4],"end":[74,45]},"visibility":"default","docs":"Return the Unicode character occurring next to `at`.\n\nIf no such character could be decoded, then `Char` is absent.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["at",{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:1780:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"a:2:8140:3268-0:2169:3578":{"id":"a:2:8140:3268-0:2169:3578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2169:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:948:657":{"id":"0:948:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[993,4],"end":[995,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1002:3798":{"id":"0:1002:3798","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_bytes.rs","begin":[1178,4],"end":[1180,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:688:110","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:544:1800":{"id":"0:544:1800","crate_id":0,"name":"at","span":{"filename":"src/input.rs","begin":[105,4],"end":[107,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:1780:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1980:1569":{"id":"0:1980:1569","crate_id":0,"name":"0","span":{"filename":"src/prog.rs","begin":[288,9],"end":[288,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"InstChar","id":"0:2040:1860","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:1175:2938":{"id":"0:1175:2938","crate_id":0,"name":"capture_names","span":{"filename":"src/re_unicode.rs","begin":[719,4],"end":[721,5]},"visibility":"public","docs":"Returns an iterator over the capture names.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2524:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1302:3801":{"id":"0:1302:3801","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1225,4],"end":[1227,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1213:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2736:4882-0:2524:1617":{"id":"a:2:2736:4882-0:2524:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2524:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2686:225-0:2437:4111":{"id":"a:2:2686:225-0:2437:4111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2437:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11847:34437":{"id":"2:11847:34437","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:11848:34446"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:51000:4859","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2235-0:2211:1616":{"id":"b:2:2235-0:2211:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2211:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2330":{"id":"0:2330","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2287:1589","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_collect","map_while","intersperse_with","count","next_chunk","cmp","min_by","by_ref","eq_by","unzip","fold","zip","collect_into","lt","scan","ge","for_each","advance_by","any","min_by_key","all","max","cloned","is_sorted","cycle","reduce","position","last","partition","flat_map","skip","filter","nth","max_by","is_sorted_by","array_chunks","ne","try_reduce","partition_in_place","flatten","filter_map","partial_cmp","step_by","find","max_by_key","sum","le","size_hint","collect","product","map","find_map","is_sorted_by_key","is_partitioned","fuse","skip_while","chain","rev","take","eq","__iterator_get_unchecked","cmp_by","try_find","try_fold","peekable","inspect","take_while","intersperse","copied","min","enumerate","partial_cmp_by","rposition","gt","try_for_each"],"trait":{"name":"Iterator","id":"2:7202:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2363:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2332:2056","0:2333:938","0:2334:3862"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2220:1626":{"id":"0:2220:1626","crate_id":0,"name":"Split","span":{"filename":"src/re_bytes.rs","begin":[739,0],"end":[742,1]},"visibility":"public","docs":"Yields all substrings delimited by a regular expression match.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the byte string being split.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:2736:4882-0:2220:1626","a:2:8139:3269-0:2220:1626","a:2:8140:3268-0:2220:1626","a:2:2686:225-0:2220:1626","a:2:2672:217-0:2220:1626","b:2:2542-0:2220:1626","b:2:2537-0:2220:1626","b:2:3328-0:2220:1626","b:2:7092-0:2220:1626","b:2:2531-0:2220:1626","b:2:2527-0:2220:1626","b:2:2235-0:2220:1626","b:2:2238-0:2220:1626","0:897","0:2225","0:902"]}},"0:2248:1615":{"id":"0:2248:1615","crate_id":0,"name":"CaptureLocations","span":{"filename":"src/re_bytes.rs","begin":[860,0],"end":[860,49]},"visibility":"public","docs":"CaptureLocations is a low level representation of the raw offsets of each\nsubmatch.\n\nYou can think of this as a lower level\n[`Captures`](struct.Captures.html), where this type does not support\nnamed capturing groups directly and it does not borrow the text that these\noffsets were matched on.\n\nPrimarily, this type is useful when using the lower level `Regex` APIs\nsuch as `read_captures`, which permits amortizing the allocation in which\ncapture match locations are stored.\n\nIn order to build a value of this type, you'll need to call the\n`capture_locations` method on the `Regex` being used to execute the search.\nThe value returned can then be reused in subsequent searches.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:927","a:2:2736:4882-0:2248:1615","a:2:8139:3269-0:2248:1615","a:2:8140:3268-0:2248:1615","a:2:2686:225-0:2248:1615","a:2:2672:217-0:2248:1615","b:2:2542-0:2248:1615","b:2:2537-0:2248:1615","b:2:3328-0:2248:1615","b:2:2531-0:2248:1615","b:2:2527-0:2248:1615","b:2:2235-0:2248:1615","b:2:2238-0:2248:1615","b:5:683-0:2248:1615","0:2251","0:2253"]}},"b:2:2235-0:2220:1626":{"id":"b:2:2235-0:2220:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2220:1626","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3328-0:2169:3578":{"id":"b:2:3328-0:2169:3578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2169:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1328:3798":{"id":"0:1328:3798","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1308,4],"end":[1310,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:688:110","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:649:2483":{"id":"0:649:2483","crate_id":0,"name":"approximate_size","span":{"filename":"src/literal/imp.rs","begin":[159,4],"end":[168,5]},"visibility":"public","docs":"Return the approximate heap usage of literals in bytes.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1168:2819":{"id":"0:1168:2819","crate_id":0,"name":"captures_read_at","span":{"filename":"src/re_unicode.rs","begin":[683,4],"end":[693,5]},"visibility":"public","docs":"Returns the same as captures, but starts the search at the given\noffset and populates the capture locations given.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["locs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2552:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:818":{"id":"0:818","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[60,0],"end":[64,1]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2174:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Range","id":"2:46913:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"items":["0:820:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5287:37499":{"id":"5:5287:37499","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:288:2048","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6909:5418","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:288:2048","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6909:5418","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2672:217-0:2220:1626":{"id":"a:2:2672:217-0:2220:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2220:1626","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1275:938":{"id":"0:1275:938","crate_id":0,"name":"next","span":{"filename":"src/re_unicode.rs","begin":[1124,4],"end":[1130,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1213:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2432:2928":{"id":"0:2432:2928","crate_id":0,"name":"RegexSet","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Match multiple (possibly overlapping) regular expressions in a single scan.\n\nA regex set corresponds to the union of two or more regular expressions.\nThat is, a regex set will match text where at least one of its\nconstituent regular expressions matches. A regex set as its formulated here\nprovides a touch more power: it will also report *which* regular\nexpressions in the set match. Indeed, this is the key difference between\nregex sets and a single `Regex` with many alternates, since only one\nalternate can match at a time.\n\nFor example, consider regular expressions to match email addresses and\ndomains: `[a-z]+@[a-z]+\\.(com|org|net)` and `[a-z]+\\.(com|org|net)`. If a\nregex set is constructed from those regexes, then searching the text\n`foo@example.com` will report both regexes as matching. Of course, one\ncould accomplish this by compiling each regex on its own and doing two\nsearches over the text. The key advantage of using a regex set is that it\nwill report the matching regexes using a *single pass through the text*.\nIf one has hundreds or thousands of regexes to match repeatedly (like a URL\nrouter for a complex web application or a user agent matcher), then a regex\nset can realize huge performance gains.\n\n# Example\n\nThis shows how the above two regexes (for matching email addresses and\ndomains) might work:\n\n ```rust\n # use regex::bytes::RegexSet;\n let set = RegexSet::new(&[\n     r\"[a-z]+@[a-z]+\\.(com|org|net)\",\n     r\"[a-z]+\\.(com|org|net)\",\n ]).unwrap();\n\n // Ask whether any regexes in the set match.\n assert!(set.is_match(b\"foo@example.com\"));\n\n // Identify which regexes in the set match.\n let matches: Vec<_> = set.matches(b\"foo@example.com\").into_iter().collect();\n assert_eq!(vec![0, 1], matches);\n\n // Try again, but with text that only matches one of the regexes.\n let matches: Vec<_> = set.matches(b\"example.com\").into_iter().collect();\n assert_eq!(vec![1], matches);\n\n // Try again, but with text that doesn't match any regex in the set.\n let matches: Vec<_> = set.matches(b\"example\").into_iter().collect();\n assert!(matches.is_empty());\n ```\n\nNote that it would be possible to adapt the above example to using `Regex`\nwith an expression like:\n\n```text\n(?P<email>[a-z]+@(?P<email_domain>[a-z]+[.](com|org|net)))|(?P<domain>[a-z]+[.](com|org|net))\n```\n\nAfter a match, one could then inspect the capture groups to figure out\nwhich alternates matched. The problem is that it is hard to make this\napproach scale when there are many regexes since the overlap between each\nalternate isn't always obvious to reason about.\n\n# Limitations\n\nRegex sets are limited to answering the following two questions:\n\n1. Does any regex in the set match?\n2. If so, which regexes in the set match?\n\nAs with the main [`Regex`][crate::Regex] type, it is cheaper to ask (1)\ninstead of (2) since the matching engines can stop after the first match\nis found.\n\nYou cannot directly extract [`Match`][crate::Match] or\n[`Captures`][crate::Captures] objects from a regex set. If you need these\noperations, the recommended approach is to compile each pattern in the set\nindependently and scan the exact same input a second time with those\nindependently compiled patterns:\n\n```rust\nuse regex::{Regex, RegexSet};\n\nlet patterns = [\"foo\", \"bar\"];\n// Both patterns will match different ranges of this string.\nlet text = \"barfoo\";\n\n// Compile a set matching any of our patterns.\nlet set = RegexSet::new(&patterns).unwrap();\n// Compile each pattern independently.\nlet regexes: Vec<_> = set.patterns().iter()\n    .map(|pat| Regex::new(pat).unwrap())\n    .collect();\n\n// Match against the whole set first and identify the individual\n// matching patterns.\nlet matches: Vec<&str> = set.matches(text).into_iter()\n    // Dereference the match index to get the corresponding\n    // compiled pattern.\n    .map(|match_idx| &regexes[match_idx])\n    // To get match locations or any other info, we then have to search\n    // the exact same text again, using our separately-compiled pattern.\n    .map(|pat| pat.find(text).unwrap().as_str())\n    .collect();\n\n// Matches arrive in the order the constituent patterns were declared,\n// not the order they appear in the input.\nassert_eq!(vec![\"foo\", \"bar\"], matches);\n```\n\n# Performance\n\nA `RegexSet` has the same performance characteristics as `Regex`. Namely,\nsearch takes `O(mn)` time, where `m` is proportional to the size of the\nregex set and `n` is proportional to the length of the search text.","links":{"crate::Captures":"0:1213:1618","crate::Regex":"0:2519:1623","crate::Match":"0:2496:1620"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:2382","a:2:2736:4882-0:2432:2928","a:2:8139:3269-0:2432:2928","a:2:8140:3268-0:2432:2928","a:2:2686:225-0:2432:2928","a:2:2672:217-0:2432:2928","b:2:2542-0:2432:2928","b:2:2537-0:2432:2928","b:2:3328-0:2432:2928","b:2:2531-0:2432:2928","b:2:2527-0:2432:2928","b:2:2235-0:2432:2928","b:2:2238-0:2432:2928","b:5:683-0:2432:2928","0:2428","0:2435"]}},"0:2254:657":{"id":"0:2254:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[859,16],"end":[859,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2235-0:2351:4111":{"id":"b:2:2235-0:2351:4111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2351:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2531-0:2437:4111":{"id":"b:2:2531-0:2437:4111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2437:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2672:217-0:2144:3578":{"id":"a:2:2672:217-0:2144:3578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2144:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2672:217-0:2174:1620":{"id":"a:2:2672:217-0:2174:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2174:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:914":{"id":"0:914","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[821,0],"end":[838,1]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_collect","map_while","intersperse_with","count","next_chunk","cmp","min_by","by_ref","eq_by","unzip","fold","zip","collect_into","lt","scan","ge","for_each","advance_by","any","min_by_key","all","max","cloned","is_sorted","cycle","reduce","position","last","partition","flat_map","skip","filter","nth","max_by","is_sorted_by","array_chunks","ne","try_reduce","partition_in_place","flatten","filter_map","partial_cmp","step_by","find","max_by_key","sum","le","size_hint","collect","product","map","find_map","is_sorted_by_key","is_partitioned","fuse","skip_while","chain","rev","take","eq","__iterator_get_unchecked","cmp_by","try_find","try_fold","peekable","inspect","take_while","intersperse","copied","min","enumerate","partial_cmp_by","rposition","gt","try_for_each"],"trait":{"name":"Iterator","id":"2:7202:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2238:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["0:916:2056","0:917:938","0:920:3862","0:921:494"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:23:1630":{"id":"0:23:1630","crate_id":0,"name":"bytes","span":{"filename":"src/lib.rs","begin":[728,0],"end":[728,13]},"visibility":"public","docs":"Match regular expressions on arbitrary bytes.\n\nThis module provides a nearly identical API to the one found in the\ntop-level of this crate. There are two important differences:\n\n1. Matching is done on `&[u8]` instead of `&str`. Additionally, `Vec<u8>`\nis used where `String` would have been used.\n2. Unicode support can be disabled even when disabling it would result in\nmatching invalid UTF-8 bytes.\n\n# Example: match null terminated string\n\nThis shows how to find all null-terminated strings in a slice of bytes:\n\n```rust\n# use regex::bytes::Regex;\nlet re = Regex::new(r\"(?-u)(?P<cstr>[^\\x00]+)\\x00\").unwrap();\nlet text = b\"foo\\x00bar\\x00baz\\x00\";\n\n// Extract all of the strings without the null terminator from each match.\n// The unwrap is OK here since a match requires the `cstr` capture to match.\nlet cstrs: Vec<&[u8]> =\n    re.captures_iter(text)\n      .map(|c| c.name(\"cstr\").unwrap().as_bytes())\n      .collect();\nassert_eq!(vec![&b\"foo\"[..], &b\"bar\"[..], &b\"baz\"[..]], cstrs);\n```\n\n# Example: selectively enable Unicode support\n\nThis shows how to match an arbitrary byte pattern followed by a UTF-8 encoded\nstring (e.g., to extract a title from a Matroska file):\n\n```rust\n# use std::str;\n# use regex::bytes::Regex;\nlet re = Regex::new(\n    r\"(?-u)\\x7b\\xa9(?:[\\x80-\\xfe]|[\\x40-\\xff].)(?u:(.*))\"\n).unwrap();\nlet text = b\"\\x12\\xd0\\x3b\\x5f\\x7b\\xa9\\x85\\xe2\\x98\\x83\\x80\\x98\\x54\\x76\\x68\\x65\";\nlet caps = re.captures(text).unwrap();\n\n// Notice that despite the `.*` at the end, it will only match valid UTF-8\n// because Unicode mode was enabled with the `u` flag. Without the `u` flag,\n// the `.*` would match the rest of the bytes.\nlet mat = caps.get(1).unwrap();\nassert_eq!((7, 10), (mat.start(), mat.end()));\n\n// If there was a match, Unicode mode guarantees that `title` is valid UTF-8.\nlet title = str::from_utf8(&caps[1]).unwrap();\nassert_eq!(\"☃\", title);\n```\n\nIn general, if the Unicode flag is enabled in a capture group and that capture\nis part of the overall match, then the capture is *guaranteed* to be valid\nUTF-8.\n\n# Syntax\n\nThe supported syntax is pretty much the same as the syntax for Unicode\nregular expressions with a few changes that make sense for matching arbitrary\nbytes:\n\n1. The `u` flag can be disabled even when disabling it might cause the regex to\nmatch invalid UTF-8. When the `u` flag is disabled, the regex is said to be in\n\"ASCII compatible\" mode.\n2. In ASCII compatible mode, neither Unicode scalar values nor Unicode\ncharacter classes are allowed.\n3. In ASCII compatible mode, Perl character classes (`\\w`, `\\d` and `\\s`)\nrevert to their typical ASCII definition. `\\w` maps to `[[:word:]]`, `\\d` maps\nto `[[:digit:]]` and `\\s` maps to `[[:space:]]`.\n4. In ASCII compatible mode, word boundaries use the ASCII compatible `\\w` to\ndetermine whether a byte is a word byte or not.\n5. Hexadecimal notation can be used to specify arbitrary bytes instead of\nUnicode codepoints. For example, in ASCII compatible mode, `\\xFF` matches the\nliteral byte `\\xFF`, while in Unicode mode, `\\xFF` is a Unicode codepoint that\nmatches its UTF-8 encoding of `\\xC3\\xBF`. Similarly for octal notation when\nenabled.\n6. In ASCII compatible mode, `.` matches any *byte* except for `\\n`. When the\n`s` flag is additionally enabled, `.` matches any byte.\n\n# Performance\n\nIn general, one should expect performance on `&[u8]` to be roughly similar to\nperformance on `&str`.","links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:24-0:2078:1630","0:25-0:2124:1631","0:26-0:790:1632","0:27-0:2373:1630"],"is_stripped":false}},"0:1144:1939":{"id":"0:1144:1939","crate_id":0,"name":"split","span":{"filename":"src/re_unicode.rs","begin":[370,4],"end":[372,5]},"visibility":"public","docs":"Returns an iterator of substrings of `text` delimited by a match of the\nregular expression. Namely, each element of the iterator corresponds to\ntext that *isn't* matched by the regular expression.\n\nThis method will *not* copy the text given.\n\n# Example\n\nTo split a string delimited by arbitrary amounts of spaces or tabs:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"[ \\t]+\").unwrap();\nlet fields: Vec<&str> = re.split(\"a b \\t  c\\td    e\").collect();\nassert_eq!(fields, vec![\"a\", \"b\", \"c\", \"d\", \"e\"]);\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2534:1626","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2501":{"id":"0:2501","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[28,9],"end":[28,13]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2684:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2503":{"id":"0:2503","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[28,15],"end":[28,20]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2505:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2736:4882-0:2519:1623":{"id":"a:2:2736:4882-0:2519:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2519:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2736:4882-0:1213:1618":{"id":"a:2:2736:4882-0:1213:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1213:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2235-0:2197:1623":{"id":"b:2:2235-0:2197:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2197:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1135:3646":{"id":"0:1135:3646","crate_id":0,"name":"find_iter","span":{"filename":"src/re_unicode.rs","begin":[244,4],"end":[246,5]},"visibility":"public","docs":"Returns an iterator for each successive non-overlapping match in\n`text`, returning the start and end byte indices with respect to\n`text`.\n\n# Example\n\nFind the start and end location of every word with exactly 13 Unicode\nword characters:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet text = \"Retroactively relinquishing remunerations is reprehensible.\";\nfor mat in Regex::new(r\"\\b\\w{13}\\b\").unwrap().find_iter(text) {\n    println!(\"{:?}\", mat);\n}\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2581:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1799":{"id":"0:1799","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[139,22],"end":[139,27]},"visibility":{"restricted":{"parent":"0:512:1639","path":"::input"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:1790:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1801:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1222:903":{"id":"0:1222:903","crate_id":0,"name":"name","span":{"filename":"src/re_unicode.rs","begin":[954,4],"end":[956,5]},"visibility":"public","docs":"Returns the match for the capture group named `name`. If `name` isn't a\nvalid capture group or didn't match anything, then `None` is returned.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["name",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5306:30438":{"id":"5:5306:30438","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:11942:30436"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2557":{"id":"0:2557","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[869,16],"end":[869,21]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2552:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2558:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1874:3171":{"id":"0:1874:3171","crate_id":0,"name":"Packed","span":{"filename":"src/literal/imp.rs","begin":[227,4],"end":[227,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:1876:1569"]},"discriminant":null}},"0:462:2935":{"id":"0:462:2935","crate_id":0,"name":"regex_strings","span":{"filename":"src/exec.rs","begin":[1298,4],"end":[1300,5]},"visibility":"public","docs":"The original regular expressions given by the caller that were\ncompiled.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2542-0:1833:1656":{"id":"b:2:2542-0:1833:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:1833:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8139:3269-0:2012:1657":{"id":"a:2:8139:3269-0:2012:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2012:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2537-0:1628:127":{"id":"b:2:2537-0:1628:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:388:1905":{"id":"0:388:1905","crate_id":0,"name":"only_utf8","span":{"filename":"src/exec.rs","begin":[217,4],"end":[220,5]},"visibility":"public","docs":"When disabled, the program compiled may match arbitrary bytes.\n\nWhen enabled (the default), all compiled programs exclusively match\nvalid UTF-8 bytes.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:548:1826":{"id":"0:548:1826","crate_id":0,"name":"prefix_at","span":{"filename":"src/input.rs","begin":[121,4],"end":[127,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefixes",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:1833:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["at",{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:1780:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:1780:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2159:2785":{"id":"0:2159:2785","crate_id":0,"name":"case_insensitive","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the value for the case insensitive (`i`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2169:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2672:217-0:2358:4145":{"id":"a:2:2672:217-0:2358:4145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2358:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2183:414":{"id":"0:2183:414","crate_id":0,"name":"clone","span":{"filename":"src/re_bytes.rs","begin":[20,15],"end":[20,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2174:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2308:3579":{"id":"0:2308:3579","crate_id":0,"name":"patterns","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Returns the patterns that this set will match on.\n\nThis function can be used to determine the pattern for a match. The\nslice returned has exactly as many patterns givens to this regex set,\nand the order of the slice is the same as the order of the patterns\nprovided to the set.\n\n# Example\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[\n    r\"\\w+\",\n    r\"\\d+\",\n    r\"\\pL+\",\n    r\"foo\",\n    r\"bar\",\n    r\"barfoo\",\n    r\"foobar\",\n]).unwrap();\nlet matches: Vec<_> = set\n    .matches(\"foobar\")\n    .into_iter()\n    .map(|match_idx| &set.patterns()[match_idx])\n    .collect();\nassert_eq!(matches, vec![r\"\\w+\", r\"\\pL+\", r\"foo\", r\"bar\", r\"foobar\"]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8139:3269-0:2552:1615":{"id":"a:2:8139:3269-0:2552:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2552:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:7092-0:2572:1616":{"id":"b:2:7092-0:2572:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7202:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7088:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2572:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:7094:2056","2:7095:3416","2:7096:770"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"b:2:2537-0:1780:1655":{"id":"b:2:2537-0:1780:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:1780:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2672:217-0:1628:127":{"id":"a:2:2672:217-0:1628:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1867:1569":{"id":"0:1867:1569","crate_id":0,"name":"0","span":{"filename":"src/literal/imp.rs","begin":[224,10],"end":[224,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}},"0:853:3794":{"id":"0:853:3794","crate_id":0,"name":"replace_all","span":{"filename":"src/re_bytes.rs","begin":[471,4],"end":[477,5]},"visibility":"public","docs":"Replaces all non-overlapping matches in `text` with the replacement\nprovided. This is the same as calling `replacen` with `limit` set to\n`0`.\n\nSee the documentation for `replace` for details on how to access\ncapturing group matches in the replacement text.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["rep",{"kind":"generic","inner":"R"}]],"output":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:688:110","args":{"angle_bracketed":{"args":[{"lifetime":"'t"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Replacer","id":"0:987:1624","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:531:1828":{"id":"0:531:1828","crate_id":0,"name":"next_pos","span":{"filename":"src/input.rs","begin":[61,4],"end":[63,5]},"visibility":"public","docs":"Returns the byte offset of the next position in the input.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8140:3268-0:2220:1626":{"id":"a:2:8140:3268-0:2220:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2220:1626","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2338":{"id":"0:2338","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2287:1589","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7472:3584","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2363:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2370":{"id":"0:2370","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2287:1589","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2363:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2372:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2396:4113":{"id":"0:2396:4113","crate_id":0,"name":"matched_any","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Whether this set contains any matches.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1132:2285":{"id":"0:1132:2285","crate_id":0,"name":"is_match","span":{"filename":"src/re_unicode.rs","begin":[197,4],"end":[199,5]},"visibility":"public","docs":"Returns true if and only if there is a match for the regex in the\nstring given.\n\nIt is recommended to use this method if all you need to do is test\na match, since the underlying matching engine may be able to do less\nwork.\n\n# Example\n\nTest if some text contains at least one word with exactly 13\nUnicode word characters:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet text = \"I categorically deny having triskaidekaphobia.\";\nassert!(Regex::new(r\"\\b\\w{13}\\b\").unwrap().is_match(text));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1124:657":{"id":"0:1124:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[147,4],"end":[149,5]},"visibility":"default","docs":"Shows the original regular expression.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1245:755":{"id":"0:1245:755","crate_id":0,"name":"index","span":{"filename":"src/re_unicode.rs","begin":[1043,4],"end":[1047,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3328-0:367:1652":{"id":"b:2:3328-0:367:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecBuilder","id":"0:367:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1639":{"id":"0:1639","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[5,16],"end":[5,25]},"visibility":{"restricted":{"parent":"0:324:1609","path":"::error"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2682:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2686:225-0:2220:1626":{"id":"a:2:2686:225-0:2220:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2220:1626","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:2149:1611":{"id":"0:2149:1611","crate_id":0,"name":"set_unicode","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2169:3578"],"is_stripped":false}},"0:20-0:2534:1626":{"id":"0:20-0:2534:1626","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[636,71],"end":[636,76]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::re_unicode::Split","name":"Split","id":"0:2534:1626","glob":false}},"b:2:2542-0:2174:1620":{"id":"b:2:2542-0:2174:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2174:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2527-0:931:1618":{"id":"b:2:2527-0:931:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:931:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2302:2285":{"id":"0:2302:2285","crate_id":0,"name":"is_match","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Returns true if and only if one of the regexes in this set matches\nthe text given.\n\nThis method should be preferred if you only need to test whether any\nof the regexes in the set should match, but don't care about *which*\nregexes matched. This is because the underlying matching engine will\nquit immediately after seeing the first match instead of continuing to\nfind all matches.\n\nNote that as with searches using `Regex`, the expression is unanchored\nby default. That is, if the regex does not start with `^` or `\\A`, or\nend with `$` or `\\z`, then it is permitted to match anywhere in the\ntext.\n\n# Example\n\nTests whether a set matches some text:\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[r\"\\w+\", r\"\\d+\"]).unwrap();\nassert!(set.is_match(\"foo\"));\nassert!(!set.is_match(\"☃\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1128:126":{"id":"0:1128:126","crate_id":0,"name":"Err","span":{"filename":"src/re_unicode.rs","begin":[160,4],"end":[160,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:2235-0:2543:1627":{"id":"b:2:2235-0:2543:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2543:1627","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8139:3269-0:2248:1615":{"id":"a:2:8139:3269-0:2248:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2248:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2369:414":{"id":"0:2369:414","crate_id":0,"name":"clone","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2363:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2530:2148":{"id":"2:2530:2148","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2504:132"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:523":{"id":"0:523","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[20,0],"end":[64,1]},"visibility":{"restricted":{"parent":"0:512:1639","path":"::input"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:1780:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:524:1822","0:525:3102","0:526:410","0:527:1844","0:528:797","0:529:1825","0:530:1827","0:531:1828"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2531-0:1790:1654":{"id":"b:2:2531-0:1790:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:1790:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3328-0:2524:1617":{"id":"b:2:3328-0:2524:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2524:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1264:494":{"id":"0:1264:494","crate_id":0,"name":"count","span":{"filename":"src/re_unicode.rs","begin":[1100,4],"end":[1102,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11872:30584":{"id":"2:11872:30584","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:11843:410","self::pattern":"2:11521:1606"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:11345:4858","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8140:3268-0:2012:1657":{"id":"a:2:8140:3268-0:2012:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2012:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1054:2816":{"id":"0:1054:2816","crate_id":0,"name":"shortest_match_at","span":{"filename":"src/re_trait.rs","begin":[125,4],"end":[129,23]},"visibility":"default","docs":"Returns the location of the shortest match.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Text","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1049:2675","args":null}}}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:2210:657":{"id":"0:2210:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[694,9],"end":[694,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2296":{"id":"0:2296","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2287:1589","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2346:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2297:924","0:2300:2781","0:2302:2285","0:2304:1783","0:2306:797","0:2307:1825","0:2308:3579"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2235-0:2432:2928":{"id":"b:2:2235-0:2432:2928","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2432:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1162:2817":{"id":"0:1162:2817","crate_id":0,"name":"is_match_at","span":{"filename":"src/re_unicode.rs","begin":[638,4],"end":[640,5]},"visibility":"public","docs":"Returns the same as is_match, but starts the search at the given\noffset.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1284:938":{"id":"0:1284:938","crate_id":0,"name":"next","span":{"filename":"src/re_unicode.rs","begin":[1148,4],"end":[1151,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1948:1871":{"id":"0:1948:1871","crate_id":0,"name":"insts","span":{"filename":"src/prog.rs","begin":[20,4],"end":[20,24]},"visibility":"public","docs":"A sequence of instructions that represents an NFA.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:6601:241","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:1965:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"b:2:2235-0:2047:1659":{"id":"b:2:2235-0:2047:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstRanges","id":"0:2047:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2197:1623":{"id":"0:2197:1623","crate_id":0,"name":"Regex","span":{"filename":"src/re_bytes.rs","begin":[78,0],"end":[78,23]},"visibility":"public","docs":"A compiled regular expression for matching arbitrary bytes.\n\nIt can be used to search, split or replace text. All searching is done with\nan implicit `.*?` at the beginning and end of an expression. To force an\nexpression to match the whole string (or a prefix or a suffix), you must\nuse an anchor like `^` or `$` (or `\\A` and `\\z`).\n\nLike the `Regex` type in the parent module, matches with this regex return\nbyte offsets into the search text. **Unlike** the parent `Regex` type,\nthese byte offsets may not correspond to UTF-8 sequence boundaries since\nthe regexes in this module can match arbitrary bytes.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:830","0:859","0:873","a:2:2736:4882-0:2197:1623","a:2:8139:3269-0:2197:1623","a:2:8140:3268-0:2197:1623","a:2:2686:225-0:2197:1623","a:2:2672:217-0:2197:1623","b:2:2542-0:2197:1623","b:2:2537-0:2197:1623","b:2:3328-0:2197:1623","b:2:2531-0:2197:1623","b:2:2527-0:2197:1623","b:2:2235-0:2197:1623","b:2:2238-0:2197:1623","b:5:683-0:2197:1623","b:5:5551-0:2197:1623","0:821","0:2200","0:827","0:823"]}},"0:1017:3798":{"id":"0:1017:3798","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_bytes.rs","begin":[1218,4],"end":[1220,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:688:110","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2509":{"id":"0:2509","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[28,29],"end":[28,31]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2683:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1187":{"id":"0:1187","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[772,0],"end":[772,50]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["len","is_empty"],"trait":{"name":"ExactSizeIterator","id":"2:7148:3867","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2524:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2238-0:2096:3498":{"id":"b:2:2238-0:2096:3498","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2096:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2672:217-0:2572:1616":{"id":"a:2:2672:217-0:2572:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2572:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1016:3801":{"id":"0:1016:3801","crate_id":0,"name":"replace_append","span":{"filename":"src/re_bytes.rs","begin":[1214,4],"end":[1216,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:931:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:6601:241","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11822:36826":{"id":"2:11822:36826","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2527-0:1833:1656":{"id":"b:2:2527-0:1833:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:1833:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1161:2816":{"id":"0:1161:2816","crate_id":0,"name":"shortest_match_at","span":{"filename":"src/re_unicode.rs","begin":[624,4],"end":[630,5]},"visibility":"public","docs":"Returns the same as shortest_match, but starts the search at the given\noffset.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3328-0:2238:1617":{"id":"b:2:3328-0:2238:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2238:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2542-0:2012:1657":{"id":"b:2:2542-0:2012:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2012:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8139:3269-0:2197:1623":{"id":"a:2:8139:3269-0:2197:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2197:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2110:2786":{"id":"0:2110:2786","crate_id":0,"name":"multi_line","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the value for the multi-line matching (`m`) flag.\n\nWhen enabled, `^` matches the beginning of lines and `$` matches the\nend of lines.\n\nBy default, they match beginning/end of the input.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2119:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2542-0:2229:1627":{"id":"b:2:2542-0:2229:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2229:1627","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:683-0:2255:1628":{"id":"b:5:683-0:2255:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2255:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["5:685:3800","5:686:2614","5:687:5400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2238-0:1628:127":{"id":"b:2:2238-0:1628:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2072:1589":{"id":"0:2072:1589","crate_id":0,"name":"unicode","span":{"filename":"src/re_builder.rs","begin":[14,4],"end":[14,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"0:1009:3798":{"id":"0:1009:3798","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_bytes.rs","begin":[1198,4],"end":[1200,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:688:110","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2542-0:2220:1626":{"id":"b:2:2542-0:2220:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2220:1626","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8139:3269-0:1833:1656":{"id":"a:2:8139:3269-0:1833:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:1833:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2394:3579":{"id":"0:2394:3579","crate_id":0,"name":"patterns","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Returns the patterns that this set will match on.\n\nThis function can be used to determine the pattern for a match. The\nslice returned has exactly as many patterns givens to this regex set,\nand the order of the slice is the same as the order of the patterns\nprovided to the set.\n\n# Example\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[\n    r\"\\w+\",\n    r\"\\d+\",\n    r\"\\pL+\",\n    r\"foo\",\n    r\"bar\",\n    r\"barfoo\",\n    r\"foobar\",\n]).unwrap();\nlet matches: Vec<_> = set\n    .matches(\"foobar\")\n    .into_iter()\n    .map(|match_idx| &set.patterns()[match_idx])\n    .collect();\nassert_eq!(matches, vec![r\"\\w+\", r\"\\pL+\", r\"foo\", r\"bar\", r\"foobar\"]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2686:225-0:2444:4145":{"id":"a:2:2686:225-0:2444:4145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2444:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2235-0:2437:4111":{"id":"b:2:2235-0:2437:4111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2437:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:683-0:2248:1615":{"id":"b:5:683-0:2248:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2248:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:685:3800","5:686:2614","5:687:5400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1005:3801":{"id":"0:1005:3801","crate_id":0,"name":"replace_append","span":{"filename":"src/re_bytes.rs","begin":[1184,4],"end":[1186,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:931:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:6601:241","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8140:3268-0:2432:2928":{"id":"a:2:8140:3268-0:2432:2928","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2432:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1298:3801":{"id":"0:1298:3801","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1216,4],"end":[1218,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1213:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8139:3269-0:2346:2928":{"id":"a:2:8139:3269-0:2346:2928","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2346:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3328-0:2599:1622":{"id":"b:2:3328-0:2599:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2599:1622","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1191":{"id":"0:1191","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[786,0],"end":[808,1]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_collect","map_while","intersperse_with","count","next_chunk","cmp","min_by","by_ref","eq_by","unzip","fold","zip","collect_into","lt","scan","ge","for_each","advance_by","any","min_by_key","all","max","cloned","is_sorted","cycle","reduce","position","last","partition","flat_map","skip","filter","nth","max_by","is_sorted_by","array_chunks","ne","try_reduce","partition_in_place","flatten","filter_map","partial_cmp","step_by","find","max_by_key","sum","le","size_hint","collect","product","map","find_map","is_sorted_by_key","is_partitioned","fuse","skip_while","chain","rev","take","eq","__iterator_get_unchecked","cmp_by","try_find","try_fold","peekable","inspect","take_while","intersperse","copied","min","enumerate","partial_cmp_by","rposition","gt","try_for_each"],"trait":{"name":"Iterator","id":"2:7202:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2534:1626","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1194:2056","0:1195:938"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:5:683-0:2599:1622":{"id":"b:5:683-0:2599:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2599:1622","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["5:685:3800","5:686:2614","5:687:5400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:755:1337":{"id":"0:755:1337","crate_id":0,"name":"skip","span":{"filename":"src/prog.rs","begin":[102,4],"end":[109,5]},"visibility":"public","docs":"If pc is an index to a no-op instruction (like Save), then return the\nnext pc that is not a no-op instruction.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pc",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2736:4882-0:2197:1623":{"id":"a:2:2736:4882-0:2197:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2197:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1950:1929":{"id":"0:1950:1929","crate_id":0,"name":"captures","span":{"filename":"src/prog.rs","begin":[27,4],"end":[27,37]},"visibility":"public","docs":"The ordered sequence of all capture groups extracted from the AST.\nUnnamed groups are `None`.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:6601:241","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}}},"0:1992:1837":{"id":"0:1992:1837","crate_id":0,"name":"goto","span":{"filename":"src/prog.rs","begin":[312,4],"end":[312,21]},"visibility":"public","docs":"The next location to execute in the program.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"0:2071:2789":{"id":"0:2071:2789","crate_id":0,"name":"ignore_whitespace","span":{"filename":"src/re_builder.rs","begin":[13,4],"end":[13,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"b:2:2542-0:1947:1660":{"id":"b:2:2542-0:1947:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Program","id":"0:1947:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2238-0:2220:1626":{"id":"b:2:2238-0:2220:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2220:1626","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:965:183":{"id":"0:965:183","crate_id":0,"name":"Output","span":{"filename":"src/re_bytes.rs","begin":[1046,4],"end":[1046,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"2:11896:1783":{"id":"2:11896:1783","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:11521:1606","`DoubleEndedIterator`":"2:7125:120","prim@char":"1:11843:410","str::matches":"2:11896:1783"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:50930:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:330:657":{"id":"0:330:657","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[34,4],"end":[44,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2083":{"id":"0:2083","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":{"restricted":{"parent":"0:2078:1630","path":"::re_builder::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2096:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2084:924","0:2085:2792","0:2086:2785","0:2087:2786","0:2088:2787","0:2089:2788","0:2090:2789","0:2091:1589","0:2092:2784","0:2093:1876","0:2094:2180","0:2095:2791"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11893:36836":{"id":"2:11893:36836","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11541:4853","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2390:1783":{"id":"0:2390:1783","crate_id":0,"name":"matches","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Returns the set of regular expressions that match in the given text.\n\nThe set returned contains the index of each regular expression that\nmatches in the given text. The index is in correspondence with the\norder of regular expressions given to `RegexSet`'s constructor.\n\nThe set can also be used to iterate over the matched indices.\n\nNote that as with searches using `Regex`, the expression is unanchored\nby default. That is, if the regex does not start with `^` or `\\A`, or\nend with `$` or `\\z`, then it is permitted to match anywhere in the\ntext.\n\n# Example\n\nTests which regular expressions match the given text:\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[\n    r\"\\w+\",\n    r\"\\d+\",\n    r\"\\pL+\",\n    r\"foo\",\n    r\"bar\",\n    r\"barfoo\",\n    r\"foobar\",\n]).unwrap();\nlet matches: Vec<_> = set.matches(\"foobar\").into_iter().collect();\nassert_eq!(matches, vec![0, 2, 3, 4, 6]);\n\n// You can also test whether a particular regex matched:\nlet matches = set.matches(\"foobar\");\nassert!(!matches.matched(5));\nassert!(matches.matched(6));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2437:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1826":{"id":"0:1826","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[345,39],"end":[345,41]},"visibility":{"restricted":{"parent":"0:512:1639","path":"::input"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2683:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1824":{"id":"0:1824","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[345,28],"end":[345,37]},"visibility":{"restricted":{"parent":"0:512:1639","path":"::input"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2301:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1825:602"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2238-0:2496:1620":{"id":"b:2:2238-0:2496:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1963":{"id":"0:1963","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[17,9],"end":[17,14]},"visibility":{"restricted":{"parent":"0:742:1642","path":"::prog"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Program","id":"0:1947:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1964:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2672:217-0:2211:1616":{"id":"a:2:2672:217-0:2211:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2211:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2672:217-0:2248:1615":{"id":"a:2:2672:217-0:2248:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2248:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2487:1616":{"id":"0:2487:1616","crate_id":0,"name":"CaptureMatches","span":{"filename":"src/re_trait.rs","begin":[235,0],"end":[238,16]},"visibility":"public","docs":"An iterator over all non-overlapping successive leftmost-first matches with\ncaptures.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RegularExpression","id":"0:1049:2675","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Text","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"name":"","id":"0:1049:2675","args":null}}},"bounds":[{"outlives":"'t"}],"generic_params":[]}}]},"impls":[]}},"b:5:683-0:1780:1655":{"id":"b:5:683-0:1780:1655","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:1780:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:685:3800","5:686:2614","5:687:5400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2066:2791":{"id":"0:2066:2791","crate_id":0,"name":"nest_limit","span":{"filename":"src/re_builder.rs","begin":[8,4],"end":[8,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u32"}},"0:942:781":{"id":"0:942:781","crate_id":0,"name":"iter","span":{"filename":"src/re_bytes.rs","begin":[953,4],"end":[955,5]},"visibility":"public","docs":"An iterator that yields all capturing matches in the order in which\nthey appear in the regex. If a particular capture group didn't\nparticipate in the match, then `None` is yielded for that capture.\n\nThe first match always corresponds to the overall match of the regex.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'c","mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2255:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1121":{"id":"0:1121","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[138,0],"end":[143,1]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9012:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2519:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1122:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:7092-0:2220:1626":{"id":"b:2:7092-0:2220:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7202:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7088:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2220:1626","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:7094:2056","2:7095:3416","2:7096:770"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"a:2:2736:4882-0:1965:1658":{"id":"a:2:2736:4882-0:1965:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:1965:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1314:3798":{"id":"0:1314:3798","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1259,4],"end":[1261,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:688:110","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:2599:1622":{"id":"b:2:2537-0:2599:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2599:1622","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2211:1616":{"id":"0:2211:1616","crate_id":0,"name":"CaptureMatches","span":{"filename":"src/re_bytes.rs","begin":[716,0],"end":[718,2]},"visibility":"public","docs":"An iterator that yields all non-overlapping capture groups matching a\nparticular regular expression.\n\nThe iterator stops when no more matches can be found.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the matched byte string.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:2736:4882-0:2211:1616","a:2:8139:3269-0:2211:1616","a:2:8140:3268-0:2211:1616","a:2:2686:225-0:2211:1616","a:2:2672:217-0:2211:1616","b:2:2542-0:2211:1616","b:2:2537-0:2211:1616","b:2:3328-0:2211:1616","b:2:7092-0:2211:1616","b:2:2531-0:2211:1616","b:2:2527-0:2211:1616","b:2:2235-0:2211:1616","b:2:2238-0:2211:1616","0:894","0:888","0:2216"]}},"b:2:2531-0:2229:1627":{"id":"b:2:2531-0:2229:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2229:1627","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:2237:3349":{"id":"2:2237:3349","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2527-0:2012:1657":{"id":"b:2:2527-0:2012:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2012:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2527-0:2229:1627":{"id":"b:2:2527-0:2229:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2229:1627","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:894":{"id":"0:894","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[732,0],"end":[732,56]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7472:3584","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2211:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1173":{"id":"0:1173","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[712,0],"end":[742,1]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":"Auxiliary methods.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2519:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1174:312","0:1175:2938","0:1176:3842","0:1177:3686"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1839:414":{"id":"0:1839:414","crate_id":0,"name":"clone","span":{"filename":"src/literal/imp.rs","begin":[12,9],"end":[12,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:1833:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:533:1800":{"id":"0:533:1800","crate_id":0,"name":"at","span":{"filename":"src/input.rs","begin":[69,4],"end":[69,38]},"visibility":"default","docs":"Return an encoding of the position at byte offset `i`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:1780:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:5:683-0:2238:1617":{"id":"b:5:683-0:2238:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2238:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["5:685:3800","5:686:2614","5:687:5400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1242":{"id":"0:1242","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1040,0],"end":[1048,1]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":"Get a group by index.\n\n`'t` is the lifetime of the matched text.\n\nThe text can't outlive the `Captures` object if this method is\nused, because of how `Index` is defined (normally `a[i]` is part\nof `a` and can't outlive it); to do that, use `get()` instead.\n\n# Panics\n\nIf there is no group at the given index.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"2:2991:3585","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1213:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1244:183","0:1245:755"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2672:217-0:2012:1657":{"id":"a:2:2672:217-0:2012:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2012:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2598:657":{"id":"0:2598:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[1212,9],"end":[1212,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:14-0:2496:1620":{"id":"0:14-0:2496:1620","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[636,15],"end":[636,20]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::re_unicode::Match","name":"Match","id":"0:2496:1620","glob":false}},"a:2:8140:3268-0:2047:1659":{"id":"a:2:8140:3268-0:2047:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstRanges","id":"0:2047:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2051:414":{"id":"0:2051:414","crate_id":0,"name":"clone","span":{"filename":"src/prog.rs","begin":[371,9],"end":[371,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"InstRanges","id":"0:2047:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11912:36842":{"id":"2:11912:36842","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:460:2930":{"id":"0:460:2930","crate_id":0,"name":"into_byte_regex","span":{"filename":"src/exec.rs","begin":[1287,4],"end":[1289,5]},"visibility":"public","docs":"Build a Regex from this executor that can match arbitrary bytes.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"re_bytes::Regex","id":"0:2197:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1959:1926":{"id":"0:1959:1926","crate_id":0,"name":"is_anchored_end","span":{"filename":"src/prog.rs","begin":[54,4],"end":[54,29]},"visibility":"public","docs":"Whether the regex must match at the end of the input.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"0:2096:3498":{"id":"0:2096:3498","crate_id":0,"name":"RegexBuilder","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"A configurable builder for a regular expression.\n\nA builder can be used to configure how the regex is built, for example, by\nsetting the default flags (which can be overridden in the expression\nitself) or setting various limits.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:2083","a:2:2736:4882-0:2096:3498","a:2:8139:3269-0:2096:3498","a:2:8140:3268-0:2096:3498","a:2:2686:225-0:2096:3498","a:2:2672:217-0:2096:3498","b:2:2542-0:2096:3498","b:2:2537-0:2096:3498","b:2:3328-0:2096:3498","b:2:2531-0:2096:3498","b:2:2527-0:2096:3498","b:2:2235-0:2096:3498","b:2:2238-0:2096:3498","0:2099"]}},"0:1840":{"id":"0:1840","crate_id":0,"name":null,"span":{"filename":"src/literal/imp.rs","begin":[12,16],"end":[12,21]},"visibility":{"restricted":{"parent":"0:614:2918","path":"::literal::imp"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:1833:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1841:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2531-0:1628:127":{"id":"b:2:2531-0:1628:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:22-0:2559:1628":{"id":"0:22-0:2559:1628","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[637,12],"end":[637,29]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::re_unicode::SubCaptureMatches","name":"SubCaptureMatches","id":"0:2559:1628","glob":false}},"2:11823:36827":{"id":"2:11823:36827","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:844:1939":{"id":"0:844:1939","crate_id":0,"name":"split","span":{"filename":"src/re_bytes.rs","begin":[317,4],"end":[319,5]},"visibility":"public","docs":"Returns an iterator of substrings of `text` delimited by a match of the\nregular expression. Namely, each element of the iterator corresponds to\ntext that *isn't* matched by the regular expression.\n\nThis method will *not* copy the text given.\n\n# Example\n\nTo split a string delimited by arbitrary amounts of spaces or tabs:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(r\"[ \\t]+\").unwrap();\nlet fields: Vec<&[u8]> = re.split(b\"a b \\t  c\\td    e\").collect();\nassert_eq!(fields, vec![\n    &b\"a\"[..], &b\"b\"[..], &b\"c\"[..], &b\"d\"[..], &b\"e\"[..],\n]);\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2220:1626","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1199":{"id":"0:1199","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[824,0],"end":[850,1]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_collect","map_while","intersperse_with","count","next_chunk","cmp","min_by","by_ref","eq_by","unzip","fold","zip","collect_into","lt","scan","ge","for_each","advance_by","any","min_by_key","all","max","cloned","is_sorted","cycle","reduce","position","last","partition","flat_map","skip","filter","nth","max_by","is_sorted_by","array_chunks","ne","try_reduce","partition_in_place","flatten","filter_map","partial_cmp","step_by","find","max_by_key","sum","le","size_hint","collect","product","map","find_map","is_sorted_by_key","is_partitioned","fuse","skip_while","chain","rev","take","eq","__iterator_get_unchecked","cmp_by","try_find","try_fold","peekable","inspect","take_while","intersperse","copied","min","enumerate","partial_cmp_by","rposition","gt","try_for_each"],"trait":{"name":"Iterator","id":"2:7202:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2543:1627","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1202:2056","0:1203:938","0:1204:3862"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2030:414":{"id":"0:2030:414","crate_id":0,"name":"clone","span":{"filename":"src/prog.rs","begin":[340,9],"end":[340,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2012:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1159":{"id":"0:1159","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[592,0],"end":[709,1]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":"Advanced or \"lower level\" search methods.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2519:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1160:3814","0:1161:2816","0:1162:2817","0:1163:2818","0:1166:3830","0:1168:2819"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2238-0:2599:1622":{"id":"b:2:2238-0:2599:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2599:1622","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2527-0:1790:1654":{"id":"b:2:2527-0:1790:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:1790:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:11-0:2524:1617":{"id":"0:11-0:2524:1617","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[635,46],"end":[635,58]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::re_unicode::CaptureNames","name":"CaptureNames","id":"0:2524:1617","glob":false}},"b:2:2542-0:1642:1651":{"id":"b:2:2542-0:1642:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Exec","id":"0:1642:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8139:3269-0:367:1652":{"id":"a:2:8139:3269-0:367:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecBuilder","id":"0:367:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2531-0:1213:1618":{"id":"b:2:2531-0:1213:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1213:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8140:3268-0:2599:1622":{"id":"a:2:8140:3268-0:2599:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2599:1622","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1291:3798":{"id":"0:1291:3798","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1179,4],"end":[1181,5]},"visibility":"default","docs":"Return a fixed unchanging replacement string.\n\nWhen doing replacements, if access to `Captures` is not needed (e.g.,\nthe replacement byte string does not need `$` expansion), then it can\nbe beneficial to avoid finding sub-captures.\n\nIn general, this is called once for every call to `replacen`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:688:110","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:456:2921":{"id":"0:456:2921","crate_id":0,"name":"searcher","span":{"filename":"src/exec.rs","begin":[1263,4],"end":[1268,5]},"visibility":"public","docs":"Get a searcher that isn't Sync.","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ExecNoSync","id":"0:1647:2694","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1147:3724":{"id":"0:1147:3724","crate_id":0,"name":"splitn","span":{"filename":"src/re_unicode.rs","begin":[394,4],"end":[400,5]},"visibility":"public","docs":"Returns an iterator of at most `limit` substrings of `text` delimited\nby a match of the regular expression. (A `limit` of `0` will return no\nsubstrings.) Namely, each element of the iterator corresponds to text\nthat *isn't* matched by the regular expression. The remainder of the\nstring that is not split will be the last element in the iterator.\n\nThis method will *not* copy the text given.\n\n# Example\n\nGet the first two words in some text:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"\\W+\").unwrap();\nlet fields: Vec<&str> = re.splitn(\"Hey! How are you?\", 3).collect();\nassert_eq!(fields, vec!(\"Hey\", \"How\", \"are you?\"));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2543:1627","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2357:657":{"id":"0:2357:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:384:2757":{"id":"0:384:2757","crate_id":0,"name":"automatic","span":{"filename":"src/exec.rs","begin":[171,4],"end":[174,5]},"visibility":"public","docs":"Set the matching engine to be automatically determined.\n\nThis is the default state and will apply whatever optimizations are\npossible, such as running a DFA.\n\nThis overrides whatever was previously set via the `nfa` or\n`bounded_backtracking` methods.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2531-0:2248:1615":{"id":"b:2:2531-0:2248:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2248:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:931:1618":{"id":"0:931:1618","crate_id":0,"name":"Captures","span":{"filename":"src/re_bytes.rs","begin":[912,0],"end":[916,1]},"visibility":"public","docs":"Captures represents a group of captured byte strings for a single match.\n\nThe 0th capture always corresponds to the entire match. Each subsequent\nindex corresponds to the next capture group in the regex. If a capture\ngroup is named, then the matched byte string is *also* available via the\n`name` method. (Note that the 0th capture is always unnamed and so must be\naccessed with the `get` method.)\n\nPositions returned from a capture group are always byte indices.\n\n`'t` is the lifetime of the matched text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:936","a:2:2736:4882-0:931:1618","a:2:8139:3269-0:931:1618","a:2:8140:3268-0:931:1618","a:2:2686:225-0:931:1618","a:2:2672:217-0:931:1618","b:2:2542-0:931:1618","b:2:2537-0:931:1618","b:2:3328-0:931:1618","b:2:2531-0:931:1618","b:2:2527-0:931:1618","b:2:2235-0:931:1618","b:2:2238-0:931:1618","0:946","0:963","0:969"]}},"5:686:2614":{"id":"5:686:2614","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:756:3396":{"id":"0:756:3396","crate_id":0,"name":"leads_to_match","span":{"filename":"src/prog.rs","begin":[113,4],"end":[124,5]},"visibility":"public","docs":"Return true if and only if an execution engine at instruction `pc` will\nalways lead to a match.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pc",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2736:4882-0:2277:1622":{"id":"a:2:2736:4882-0:2277:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2277:1622","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:847:3724":{"id":"0:847:3724","crate_id":0,"name":"splitn","span":{"filename":"src/re_bytes.rs","begin":[341,4],"end":[347,5]},"visibility":"public","docs":"Returns an iterator of at most `limit` substrings of `text` delimited\nby a match of the regular expression. (A `limit` of `0` will return no\nsubstrings.) Namely, each element of the iterator corresponds to text\nthat *isn't* matched by the regular expression. The remainder of the\nstring that is not split will be the last element in the iterator.\n\nThis method will *not* copy the text given.\n\n# Example\n\nGet the first two words in some text:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(r\"\\W+\").unwrap();\nlet fields: Vec<&[u8]> = re.splitn(b\"Hey! How are you?\", 3).collect();\nassert_eq!(fields, vec![&b\"Hey\"[..], &b\"How\"[..], &b\"are you?\"[..]]);\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2229:1627","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8140:3268-0:2202:1621":{"id":"a:2:8140:3268-0:2202:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2202:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:642:2869":{"id":"0:642:2869","crate_id":0,"name":"find_end","span":{"filename":"src/literal/imp.rs","begin":[108,4],"end":[118,5]},"visibility":"public","docs":"Like find, except matches must end at index `haystack.len()`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8139:3269-0:2581:1621":{"id":"a:2:8139:3269-0:2581:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2581:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1838":{"id":"0:1838","crate_id":0,"name":null,"span":{"filename":"src/literal/imp.rs","begin":[12,9],"end":[12,14]},"visibility":{"restricted":{"parent":"0:614:2918","path":"::literal::imp"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:1833:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1839:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1889:3157":{"id":"0:1889:3157","crate_id":0,"name":"Memmem","span":{"filename":"src/literal/imp.rs","begin":[361,0],"end":[364,1]},"visibility":"public","docs":"A simple wrapper around the memchr crate's memmem implementation.\n\nThe API this exposes mirrors the API of previous substring searchers that\nthis supplanted.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":[]}},"a:2:2736:4882-0:2144:3578":{"id":"a:2:2736:4882-0:2144:3578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2144:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2154":{"id":"0:2154","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":{"restricted":{"parent":"0:2149:1611","path":"::re_builder::set_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2169:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2155:924","0:2158:2792","0:2159:2785","0:2160:2786","0:2161:2787","0:2162:2788","0:2163:2789","0:2164:1589","0:2165:2784","0:2166:1876","0:2167:2180","0:2168:2791"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:987:1624":{"id":"0:987:1624","crate_id":0,"name":"Replacer","span":{"filename":"src/re_bytes.rs","begin":[1111,0],"end":[1156,1]},"visibility":"public","docs":"Replacer describes types that can be used to replace matches in a byte\nstring.\n\nIn general, users of this crate shouldn't need to implement this trait,\nsince implementations are already provided for `&[u8]` along with other\nvariants of bytes types and `FnMut(&Captures) -> Vec<u8>` (or any\n`FnMut(&Captures) -> T` where `T: AsRef<[u8]>`), which covers most use cases.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:988:3801","0:989:3798","0:991:3987"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:1020","0:1007","0:1014","0:1024","0:1003","0:993","0:1010","0:999"]}},"0:394:2792":{"id":"0:394:2792","crate_id":0,"name":"build","span":{"filename":"src/exec.rs","begin":[299,4],"end":[356,5]},"visibility":"public","docs":"Build an executor that can run a regular expression.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48878:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Exec","id":"0:1642:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3328-0:2248:1615":{"id":"b:2:3328-0:2248:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2248:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2402:2056":{"id":"0:2402:2056","crate_id":0,"name":"Item","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"usize"}}},"0:2443:657":{"id":"0:2443:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2542-0:2248:1615":{"id":"b:2:2542-0:2248:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2248:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1107:1614":{"id":"0:1107:1614","crate_id":0,"name":"escape","span":{"filename":"src/re_unicode.rs","begin":[21,0],"end":[23,1]},"visibility":"public","docs":"Escapes all regular expression meta characters in `text`.\n\nThe string returned may be safely used as a literal in a regular\nexpression.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2542-0:85:1650":{"id":"b:2:2542-0:85:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Compiler","id":"0:85:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2686:225-0:2496:1620":{"id":"a:2:2686:225-0:2496:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2672:217-0:2346:2928":{"id":"a:2:2672:217-0:2346:2928","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2346:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1153:3794":{"id":"0:1153:3794","crate_id":0,"name":"replace_all","span":{"filename":"src/re_unicode.rs","begin":[520,4],"end":[526,5]},"visibility":"public","docs":"Replaces all non-overlapping matches in `text` with the replacement\nprovided. This is the same as calling `replacen` with `limit` set to\n`0`.\n\nSee the documentation for `replace` for details on how to access\ncapturing group matches in the replacement string.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["rep",{"kind":"generic","inner":"R"}]],"output":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:688:110","args":{"angle_bracketed":{"args":[{"lifetime":"'t"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Replacer","id":"0:1289:1624","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:897":{"id":"0:897","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[744,0],"end":[766,1]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_collect","map_while","intersperse_with","count","next_chunk","cmp","min_by","by_ref","eq_by","unzip","fold","zip","collect_into","lt","scan","ge","for_each","advance_by","any","min_by_key","all","max","cloned","is_sorted","cycle","reduce","position","last","partition","flat_map","skip","filter","nth","max_by","is_sorted_by","array_chunks","ne","try_reduce","partition_in_place","flatten","filter_map","partial_cmp","step_by","find","max_by_key","sum","le","size_hint","collect","product","map","find_map","is_sorted_by_key","is_partitioned","fuse","skip_while","chain","rev","take","eq","__iterator_get_unchecked","cmp_by","try_find","try_fold","peekable","inspect","take_while","intersperse","copied","min","enumerate","partial_cmp_by","rposition","gt","try_for_each"],"trait":{"name":"Iterator","id":"2:7202:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2220:1626","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:900:2056","0:901:938"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:901:938":{"id":"0:901:938","crate_id":0,"name":"next","span":{"filename":"src/re_bytes.rs","begin":[747,4],"end":[765,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:7092-0:2238:1617":{"id":"b:2:7092-0:2238:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7202:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7088:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2238:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:7094:2056","2:7095:3416","2:7096:770"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:1987":{"id":"0:1987","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[267,9],"end":[267,14]},"visibility":{"restricted":{"parent":"0:742:1642","path":"::prog"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:1965:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1988:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2235-0:2202:1621":{"id":"b:2:2235-0:2202:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2202:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2300:2781":{"id":"0:2300:2781","crate_id":0,"name":"empty","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Create a new empty regex set.\n\n# Example\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::empty();\nassert!(set.is_empty());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[],"output":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2346:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1026:3801":{"id":"0:1026:3801","crate_id":0,"name":"replace_append","span":{"filename":"src/re_bytes.rs","begin":[1253,4],"end":[1255,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["_",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:931:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:6601:241","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:602:681":{"id":"0:602:681","crate_id":0,"name":"from","span":{"filename":"src/input.rs","begin":[401,4],"end":[403,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["c",{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"char"}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3328-0:2449:4144":{"id":"b:2:3328-0:2449:4144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2449:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:328:2651":{"id":"0:328:2651","crate_id":0,"name":"description","span":{"filename":"src/error.rs","begin":[24,4],"end":[30,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(deprecated)]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1972:1626":{"id":"0:1972:1626","crate_id":0,"name":"Split","span":{"filename":"src/prog.rs","begin":[282,4],"end":[282,20]},"visibility":"default","docs":"Split causes the program to diverge to one of two paths in the\nprogram, preferring goto1 in InstSplit.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:1974:1569"]},"discriminant":null}},"0:2035":{"id":"0:2035","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[340,29],"end":[340,38]},"visibility":{"restricted":{"parent":"0:742:1642","path":"::prog"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2301:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2012:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2012:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2036:602"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:8140:3268-0:2496:1620":{"id":"a:2:8140:3268-0:2496:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1968:1569":{"id":"0:1968:1569","crate_id":0,"name":"0","span":{"filename":"src/prog.rs","begin":[276,10],"end":[276,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"b:2:2542-0:2519:1623":{"id":"b:2:2542-0:2519:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2519:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3328-0:2559:1628":{"id":"b:2:3328-0:2559:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2559:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:892:938":{"id":"0:892:938","crate_id":0,"name":"next","span":{"filename":"src/re_bytes.rs","begin":[723,4],"end":[729,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:931:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2202:1621":{"id":"0:2202:1621","crate_id":0,"name":"Matches","span":{"filename":"src/re_bytes.rs","begin":[695,0],"end":[695,66]},"visibility":"public","docs":"An iterator over all non-overlapping matches for a particular string.\n\nThe iterator yields a tuple of integers corresponding to the start and end\nof the match. The indices are byte offsets. The iterator stops when no more\nmatches can be found.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the matched byte string.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:2736:4882-0:2202:1621","a:2:8139:3269-0:2202:1621","a:2:8140:3268-0:2202:1621","a:2:2686:225-0:2202:1621","a:2:2672:217-0:2202:1621","b:2:2542-0:2202:1621","b:2:2537-0:2202:1621","b:2:3328-0:2202:1621","b:2:7092-0:2202:1621","b:2:2531-0:2202:1621","b:2:2527-0:2202:1621","b:2:2235-0:2202:1621","b:2:2238-0:2202:1621","0:879","0:2207","0:885"]}},"a:2:2686:225-0:2581:1621":{"id":"a:2:2686:225-0:2581:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2581:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:1056:2818":{"id":"0:1056:2818","crate_id":0,"name":"find_at","span":{"filename":"src/re_trait.rs","begin":[135,4],"end":[139,32]},"visibility":"default","docs":"Returns the leftmost-first match location if one exists.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Text","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"0:1049:2675","args":null}}}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:1280":{"id":"0:1280","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1145,0],"end":[1152,1]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_collect","map_while","intersperse_with","count","next_chunk","cmp","min_by","by_ref","eq_by","unzip","fold","zip","collect_into","lt","scan","ge","for_each","advance_by","any","min_by_key","all","max","cloned","is_sorted","cycle","reduce","position","last","partition","flat_map","skip","filter","nth","max_by","is_sorted_by","array_chunks","ne","try_reduce","partition_in_place","flatten","filter_map","partial_cmp","step_by","find","max_by_key","sum","le","size_hint","collect","product","map","find_map","is_sorted_by_key","is_partitioned","fuse","skip_while","chain","rev","take","eq","__iterator_get_unchecked","cmp_by","try_find","try_fold","peekable","inspect","take_while","intersperse","copied","min","enumerate","partial_cmp_by","rposition","gt","try_for_each"],"trait":{"name":"Iterator","id":"2:7202:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2581:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1283:2056","0:1284:938"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1293:3987":{"id":"0:1293:3987","crate_id":0,"name":"by_ref","span":{"filename":"src/re_unicode.rs","begin":[1204,4],"end":[1206,5]},"visibility":"default","docs":"Return a `Replacer` that borrows and wraps this `Replacer`.\n\nThis is useful when you want to take a generic `Replacer` (which might\nnot be cloneable) and use it without consuming it, so it can be used\nmore than once.\n\n# Example\n\n```\nuse regex::{Regex, Replacer};\n\nfn replace_all_twice<R: Replacer>(\n    re: Regex,\n    src: &str,\n    mut rep: R,\n) -> String {\n    let dst = re.replace_all(src, rep.by_ref());\n    let dst = re.replace_all(&dst, rep.by_ref());\n    dst.into_owned()\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2590:1625","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2037":{"id":"0:2037","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[340,40],"end":[340,42]},"visibility":{"restricted":{"parent":"0:742:1642","path":"::prog"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2683:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2012:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2267:657":{"id":"0:2267:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[1086,16],"end":[1086,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1252:755":{"id":"0:1252:755","crate_id":0,"name":"index","span":{"filename":"src/re_unicode.rs","begin":[1065,4],"end":[1069,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["name",{"kind":"borrowed_ref","inner":{"lifetime":"'i","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:2211:1616":{"id":"b:2:2238-0:2211:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2211:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2672:217-0:2202:1621":{"id":"a:2:2672:217-0:2202:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2202:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2537-0:2268:1625":{"id":"b:2:2537-0:2268:1625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2268:1625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8140:3268-0:2449:4144":{"id":"a:2:8140:3268-0:2449:4144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2449:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3328-0:2581:1621":{"id":"b:2:3328-0:2581:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2581:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11855:30591":{"id":"2:11855:30591","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:11843:410","self::pattern":"2:11521:1606"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:2552:1615":{"id":"b:2:2537-0:2552:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2552:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11940:30440":{"id":"2:11940:30440","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8139:3269-0:2255:1628":{"id":"a:2:8139:3269-0:2255:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2255:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2537-0:2277:1622":{"id":"b:2:2537-0:2277:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2277:1622","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3328-0:2590:1625":{"id":"b:2:3328-0:2590:1625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2590:1625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:641:2867":{"id":"0:641:2867","crate_id":0,"name":"find_start","span":{"filename":"src/literal/imp.rs","begin":[95,4],"end":[105,5]},"visibility":"public","docs":"Like find, except matches must start at index `0`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["haystack",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"primitive","inner":"usize"}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2162:2788":{"id":"0:2162:2788","crate_id":0,"name":"swap_greed","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the value for the greedy swap (`U`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2169:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11831:30553":{"id":"2:11831:30553","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:11860:1464"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1833:1656":{"id":"0:1833:1656","crate_id":0,"name":"LiteralSearcher","span":{"filename":"src/literal/imp.rs","begin":[13,0],"end":[18,1]},"visibility":"public","docs":"A prefix extracted from a compiled regular expression.\n\nA regex prefix is a set of literal strings that *must* be matched at the\nbeginning of a regex in order for the entire regex to match. Similarly\nfor a regex suffix.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:629","a:2:2736:4882-0:1833:1656","a:2:8139:3269-0:1833:1656","a:2:8140:3268-0:1833:1656","a:2:2686:225-0:1833:1656","a:2:2672:217-0:1833:1656","b:2:2542-0:1833:1656","b:2:2537-0:1833:1656","b:2:3328-0:1833:1656","b:2:2531-0:1833:1656","b:2:2527-0:1833:1656","b:2:2235-0:1833:1656","b:2:2238-0:1833:1656","b:5:683-0:1833:1656","0:1840","0:1838"]}},"0:1974:1569":{"id":"0:1974:1569","crate_id":0,"name":"0","span":{"filename":"src/prog.rs","begin":[282,10],"end":[282,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"InstSplit","id":"0:1998:1863","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"a:2:8140:3268-0:1642:1651":{"id":"a:2:8140:3268-0:1642:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Exec","id":"0:1642:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:545:3116":{"id":"0:545:3116","crate_id":0,"name":"next_char","span":{"filename":"src/input.rs","begin":[109,4],"end":[111,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["at",{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:1780:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2686:225-0:1642:1651":{"id":"a:2:2686:225-0:1642:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Exec","id":"0:1642:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2235-0:2119:3498":{"id":"b:2:2235-0:2119:3498","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2119:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2169:3578":{"id":"0:2169:3578","crate_id":0,"name":"RegexSetBuilder","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"A configurable builder for a set of regular expressions.\n\nA builder can be used to configure how the regexes are built, for example,\nby setting the default flags (which can be overridden in the expression\nitself) or setting various limits.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:2154","a:2:2736:4882-0:2169:3578","a:2:8139:3269-0:2169:3578","a:2:8140:3268-0:2169:3578","a:2:2686:225-0:2169:3578","a:2:2672:217-0:2169:3578","b:2:2542-0:2169:3578","b:2:2537-0:2169:3578","b:2:3328-0:2169:3578","b:2:2531-0:2169:3578","b:2:2527-0:2169:3578","b:2:2235-0:2169:3578","b:2:2238-0:2169:3578","0:2172"]}},"a:2:2736:4882-0:2229:1627":{"id":"a:2:2736:4882-0:2229:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2229:1627","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2514":{"id":"0:2514","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[28,33],"end":[28,42]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2682:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2531-0:2363:4144":{"id":"b:2:2531-0:2363:4144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2363:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2238-0:367:1652":{"id":"b:2:2238-0:367:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecBuilder","id":"0:367:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2023:2019":{"id":"0:2023:2019","crate_id":0,"name":"NotWordBoundary","span":{"filename":"src/prog.rs","begin":[353,4],"end":[353,19]},"visibility":"default","docs":"Word character on both sides or non-word character on both sides.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:2519:1623":{"id":"0:2519:1623","crate_id":0,"name":"Regex","span":{"filename":"src/re_unicode.rs","begin":[136,0],"end":[136,23]},"visibility":"public","docs":"A compiled regular expression for matching Unicode strings.\n\nIt is represented as either a sequence of bytecode instructions (dynamic)\nor as a specialized Rust function (native). It can be used to search, split\nor replace text. All searching is done with an implicit `.*?` at the\nbeginning and end of an expression. To force an expression to match the\nwhole string (or a prefix or a suffix), you must use an anchor like `^` or\n`$` (or `\\A` and `\\z`).\n\nWhile this crate will handle Unicode strings (whether in the regular\nexpression or in the search text), all positions returned are **byte\nindices**. Every byte index is guaranteed to be at a Unicode code point\nboundary.\n\nThe lifetimes `'r` and `'t` in this crate correspond to the lifetime of a\ncompiled regular expression and text to search, respectively.\n\nThe only methods that allocate new strings are the string replacement\nmethods. All other methods (searching and splitting) return borrowed\npointers into the string given.\n\n# Examples\n\nFind the location of a US phone number:\n\n```rust\n# use regex::Regex;\nlet re = Regex::new(\"[0-9]{3}-[0-9]{3}-[0-9]{4}\").unwrap();\nlet mat = re.find(\"phone: 111-222-3333\").unwrap();\nassert_eq!((mat.start(), mat.end()), (7, 19));\n```\n\n# Using the `std::str::pattern` methods with `Regex`\n\n> **Note**: This section requires that this crate is compiled with the\n> `pattern` Cargo feature enabled, which **requires nightly Rust**.\n\nSince `Regex` implements `Pattern`, you can use regexes with methods\ndefined on `&str`. For example, `is_match`, `find`, `find_iter`\nand `split` can be replaced with `str::contains`, `str::find`,\n`str::match_indices` and `str::split`.\n\nHere are some examples:\n\n```rust,ignore\n# use regex::Regex;\nlet re = Regex::new(r\"\\d+\").unwrap();\nlet haystack = \"a111b222c\";\n\nassert!(haystack.contains(&re));\nassert_eq!(haystack.find(&re), Some(1));\nassert_eq!(haystack.match_indices(&re).collect::<Vec<_>>(),\n           vec![(1, \"111\"), (5, \"222\")]);\nassert_eq!(haystack.split(&re).collect::<Vec<_>>(), vec![\"a\", \"b\", \"c\"]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:1130","0:1159","0:1173","a:2:2736:4882-0:2519:1623","a:2:8139:3269-0:2519:1623","a:2:8140:3268-0:2519:1623","a:2:2686:225-0:2519:1623","a:2:2672:217-0:2519:1623","b:2:2542-0:2519:1623","b:2:2537-0:2519:1623","b:2:3328-0:2519:1623","b:2:2531-0:2519:1623","b:2:2527-0:2519:1623","b:2:2235-0:2519:1623","b:2:2238-0:2519:1623","b:5:683-0:2519:1623","b:5:5551-0:2519:1623","0:1121","0:1123","0:1127","0:2522"]}},"0:2313:781":{"id":"0:2313:781","crate_id":0,"name":"iter","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Returns an iterator over indexes in the regex that matched.\n\nThis will always produces matches in ascending order of index, where\nthe index corresponds to the index of the regex that matched with\nrespect to its position when initially building the set.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2363:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:15-0:2581:1621":{"id":"0:15-0:2581:1621","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[636,22],"end":[636,29]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::re_unicode::Matches","name":"Matches","id":"0:2581:1621","glob":false}},"a:2:2672:217-0:1814:1653":{"id":"a:2:2672:217-0:1814:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11846:1630":{"id":"2:11846:1630","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:50712:1843","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2686:225-0:1213:1618":{"id":"a:2:2686:225-0:1213:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1213:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:25-0:2124:1631":{"id":"0:25-0:2124:1631","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[730,4],"end":[730,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::re_builder::set_bytes","name":"set_bytes","id":"0:2124:1631","glob":true}},"0:2192":{"id":"0:2192","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[20,33],"end":[20,42]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2682:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2174:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2219:657":{"id":"0:2219:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[715,9],"end":[715,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1286":{"id":"0:1286","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1154,0],"end":[1154,49]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7472:3584","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2581:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1830:1015":{"id":"0:1830:1015","crate_id":0,"name":"partial_cmp","span":{"filename":"src/input.rs","begin":[345,43],"end":[345,53]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::option::Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"$crate::cmp::Ordering","id":"2:38661:180","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2686:225-0:2552:1615":{"id":"a:2:2686:225-0:2552:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2552:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2542-0:2590:1625":{"id":"b:2:2542-0:2590:1625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2590:1625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2036:602":{"id":"0:2036:602","crate_id":0,"name":"eq","span":{"filename":"src/prog.rs","begin":[340,29],"end":[340,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2012:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1796:414":{"id":"0:1796:414","crate_id":0,"name":"clone","span":{"filename":"src/input.rs","begin":[139,9],"end":[139,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:1790:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8140:3268-0:2248:1615":{"id":"a:2:8140:3268-0:2248:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2248:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1999:1839":{"id":"0:1999:1839","crate_id":0,"name":"goto1","span":{"filename":"src/prog.rs","begin":[323,4],"end":[323,22]},"visibility":"public","docs":"The first instruction to try. A match resulting from following goto1\nhas precedence over a match resulting from following goto2.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"b:2:2537-0:2437:4111":{"id":"b:2:2537-0:2437:4111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2437:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1634:1569":{"id":"0:1634:1569","crate_id":0,"name":"0","span":{"filename":"src/error.rs","begin":[11,19],"end":[11,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"0:463:2938":{"id":"0:463:2938","crate_id":0,"name":"capture_names","span":{"filename":"src/exec.rs","begin":[1305,4],"end":[1307,5]},"visibility":"public","docs":"Return a slice of capture names.\n\nAny capture that isn't named is None.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:608":{"id":"0:608","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[420,0],"end":[425,1]},"visibility":{"restricted":{"parent":"0:512:1639","path":"::input"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ge","le","gt","lt"],"trait":{"name":"PartialOrd","id":"2:2343:186","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"char"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:609:1015"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2527-0:1965:1658":{"id":"b:2:2527-0:1965:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:1965:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1289:1624":{"id":"0:1289:1624","crate_id":0,"name":"Replacer","span":{"filename":"src/re_unicode.rs","begin":[1162,0],"end":[1207,1]},"visibility":"public","docs":"Replacer describes types that can be used to replace matches in a string.\n\nIn general, users of this crate shouldn't need to implement this trait,\nsince implementations are already provided for `&str` along with other\nvariants of string types and `FnMut(&Captures) -> String` (or any\n`FnMut(&Captures) -> T` where `T: AsRef<str>`), which covers most use cases.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:1290:3801","0:1291:3798","0:1293:3987"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:1295","0:1308","0:1315","0:1304","0:1300","0:1321","0:1311","0:1325"]}},"a:2:8139:3269-0:1213:1618":{"id":"a:2:8139:3269-0:1213:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1213:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2238-0:2255:1628":{"id":"b:2:2238-0:2255:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2255:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3328-0:2534:1626":{"id":"b:2:3328-0:2534:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2534:1626","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2542-0:2363:4144":{"id":"b:2:2542-0:2363:4144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2363:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1975:1657":{"id":"0:1975:1657","crate_id":0,"name":"EmptyLook","span":{"filename":"src/prog.rs","begin":[285,4],"end":[285,28]},"visibility":"default","docs":"EmptyLook represents a zero-width assertion in a regex program. A\nzero-width assertion does not consume any of the input text.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:1977:1569"]},"discriminant":null}},"b:2:2531-0:85:1650":{"id":"b:2:2531-0:85:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Compiler","id":"0:85:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2063:2750":{"id":"0:2063:2750","crate_id":0,"name":"pats","span":{"filename":"src/re_builder.rs","begin":[5,4],"end":[5,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:6601:241","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}},"0:2252:414":{"id":"0:2252:414","crate_id":0,"name":"clone","span":{"filename":"src/re_bytes.rs","begin":[859,9],"end":[859,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2248:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1013:3798":{"id":"0:1013:3798","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_bytes.rs","begin":[1208,4],"end":[1210,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:688:110","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2542-0:2096:3498":{"id":"b:2:2542-0:2096:3498","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2096:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1309:3801":{"id":"0:1309:3801","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1245,4],"end":[1247,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1213:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:558":{"id":"0:558","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[157,0],"end":[222,1]},"visibility":{"restricted":{"parent":"0:512:1639","path":"::input"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["is_empty"],"trait":{"name":"Input","id":"0:532:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:1790:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:560:1800","0:562:3116","0:563:3118","0:565:1840","0:567:1826","0:569:797","0:570:2815"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2263:414":{"id":"0:2263:414","crate_id":0,"name":"clone","span":{"filename":"src/re_bytes.rs","begin":[1086,9],"end":[1086,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2255:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2686:225-0:931:1618":{"id":"a:2:2686:225-0:931:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:931:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1007":{"id":"0:1007","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1193,0],"end":[1201,1]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"name":"Replacer","id":"0:987:1624","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:6601:241","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}},"items":["0:1008:3801","0:1009:3798"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2287:1589":{"id":"0:2287:1589","crate_id":0,"name":"unicode","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2346:2928","0:2351:4111","0:2358:4145","0:2363:4144"],"is_stripped":false}},"a:2:2736:4882-0:2437:4111":{"id":"a:2:2736:4882-0:2437:4111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2437:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1794":{"id":"0:1794","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[139,9],"end":[139,14]},"visibility":{"restricted":{"parent":"0:512:1639","path":"::input"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:1790:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1796:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:991:3987":{"id":"0:991:3987","crate_id":0,"name":"by_ref","span":{"filename":"src/re_bytes.rs","begin":[1153,4],"end":[1155,5]},"visibility":"default","docs":"Return a `Replacer` that borrows and wraps this `Replacer`.\n\nThis is useful when you want to take a generic `Replacer` (which might\nnot be cloneable) and use it without consuming it, so it can be used\nmore than once.\n\n# Example\n\n```\nuse regex::bytes::{Regex, Replacer};\n\nfn replace_all_twice<R: Replacer>(\n    re: Regex,\n    src: &[u8],\n    mut rep: R,\n) -> Vec<u8> {\n    let dst = re.replace_all(src, rep.by_ref());\n    let dst = re.replace_all(&dst, rep.by_ref());\n    dst.into_owned()\n}\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2268:1625","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2235-0:2519:1623":{"id":"b:2:2235-0:2519:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2519:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:927":{"id":"0:927","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[870,0],"end":[899,1]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2248:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:928:1836","0:929:797"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2087:2786":{"id":"0:2087:2786","crate_id":0,"name":"multi_line","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the value for the multi-line matching (`m`) flag.\n\nWhen enabled, `^` matches the beginning of lines and `$` matches the\nend of lines.\n\nBy default, they match beginning/end of the input.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2096:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2367":{"id":"0:2367","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2287:1589","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2363:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2369:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2542-0:1213:1618":{"id":"b:2:2542-0:1213:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1213:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2608:657":{"id":"0:2608:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[1300,16],"end":[1300,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2672:217-0:1642:1651":{"id":"a:2:2672:217-0:1642:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Exec","id":"0:1642:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2238:1617":{"id":"0:2238:1617","crate_id":0,"name":"CaptureNames","span":{"filename":"src/re_bytes.rs","begin":[819,0],"end":[819,68]},"visibility":"public","docs":"An iterator over the names of all possible captures.\n\n`None` indicates an unnamed capture; the first element (capture 0, the\nwhole matched region) is always unnamed.\n\n`'r` is the lifetime of the compiled regular expression.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:2736:4882-0:2238:1617","a:2:8139:3269-0:2238:1617","a:2:8140:3268-0:2238:1617","a:2:2686:225-0:2238:1617","a:2:2672:217-0:2238:1617","b:2:2542-0:2238:1617","b:2:2537-0:2238:1617","b:2:3328-0:2238:1617","b:2:7092-0:2238:1617","b:2:2531-0:2238:1617","b:2:2527-0:2238:1617","b:2:2235-0:2238:1617","b:2:2238-0:2238:1617","b:5:683-0:2238:1617","0:922","0:924","0:2245","0:2242","0:914"]}},"0:1327:3801":{"id":"0:1327:3801","crate_id":0,"name":"replace_append","span":{"filename":"src/re_unicode.rs","begin":[1304,4],"end":[1306,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["_",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1213:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1012:3801":{"id":"0:1012:3801","crate_id":0,"name":"replace_append","span":{"filename":"src/re_bytes.rs","begin":[1204,4],"end":[1206,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:931:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:6601:241","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8139:3269-0:2358:4145":{"id":"a:2:8139:3269-0:2358:4145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2358:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:969":{"id":"0:969","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1067,0],"end":[1075,1]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":"Get a group by name.\n\n`'t` is the lifetime of the matched text and `'i` is the lifetime\nof the group name (the index).\n\nThe text can't outlive the `Captures` object if this method is\nused, because of how `Index` is defined (normally `a[i]` is part\nof `a` and can't outlive it); to do that, use `name` instead.\n\n# Panics\n\nIf there is no group named by the given value.","links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"'i","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"2:2991:3585","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'i","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:931:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:972:183","0:973:755"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1001:3801":{"id":"0:1001:3801","crate_id":0,"name":"replace_append","span":{"filename":"src/re_bytes.rs","begin":[1174,4],"end":[1176,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:931:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:6601:241","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2235-0:2268:1625":{"id":"b:2:2235-0:2268:1625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2268:1625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:7092-0:2255:1628":{"id":"b:2:7092-0:2255:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7202:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7088:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2255:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:7094:2056","2:7095:3416","2:7096:770"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:2508:657":{"id":"0:2508:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[28,22],"end":[28,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2531-0:2524:1617":{"id":"b:2:2531-0:2524:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2524:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1299:3798":{"id":"0:1299:3798","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1219,4],"end":[1221,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:688:110","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2686:225-0:2599:1622":{"id":"a:2:2686:225-0:2599:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2599:1622","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:7092-0:2543:1627":{"id":"b:2:7092-0:2543:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7202:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7088:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2543:1627","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:7094:2056","2:7095:3416","2:7096:770"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:97:1876":{"id":"0:97:1876","crate_id":0,"name":"size_limit","span":{"filename":"src/compile.rs","begin":[75,4],"end":[78,5]},"visibility":"public","docs":"The size of the resulting program is limited by size_limit. If\nthe program approximately exceeds the given size (in bytes), then\ncompilation will stop and return an error.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["size_limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:777:2285":{"id":"0:777:2285","crate_id":0,"name":"is_match","span":{"filename":"src/prog.rs","begin":[300,4],"end":[305,5]},"visibility":"public","docs":"Returns true if and only if this is a match instruction.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2534:1626":{"id":"0:2534:1626","crate_id":0,"name":"Split","span":{"filename":"src/re_unicode.rs","begin":[781,0],"end":[784,1]},"visibility":"public","docs":"Yields all substrings delimited by a regular expression match.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the string being split.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:2736:4882-0:2534:1626","a:2:8139:3269-0:2534:1626","a:2:8140:3268-0:2534:1626","a:2:2686:225-0:2534:1626","a:2:2672:217-0:2534:1626","b:2:2542-0:2534:1626","b:2:2537-0:2534:1626","b:2:3328-0:2534:1626","b:2:7092-0:2534:1626","b:2:2531-0:2534:1626","b:2:2527-0:2534:1626","b:2:2235-0:2534:1626","b:2:2238-0:2534:1626","0:2539","0:1191","0:1196"]}},"0:900:2056":{"id":"0:900:2056","crate_id":0,"name":"Item","span":{"filename":"src/re_bytes.rs","begin":[745,4],"end":[745,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}}},"b:2:3328-0:1642:1651":{"id":"b:2:3328-0:1642:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Exec","id":"0:1642:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8139:3269-0:2496:1620":{"id":"a:2:8139:3269-0:2496:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2531-0:2599:1622":{"id":"b:2:2531-0:2599:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2599:1622","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:532:146":{"id":"0:532:146","crate_id":0,"name":"Input","span":{"filename":"src/input.rs","begin":[67,0],"end":[102,1]},"visibility":"public","docs":"An abstraction over input used in the matching engines.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:533:1800","0:534:3116","0:535:3118","0:536:1840","0:537:1826","0:538:797","0:539:1825","0:540:2815"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:541","0:558"]}},"b:2:2537-0:2096:3498":{"id":"b:2:2537-0:2096:3498","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2096:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:3-0:1628:127":{"id":"0:3-0:1628:127","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[626,0],"end":[626,28]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::error::Error","name":"Error","id":"0:1628:127","glob":false}},"2:11887:30589":{"id":"2:11887:30589","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:11843:410","str::splitn":"2:11884:3724","self::pattern":"2:11521:1606"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:50848:4875","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11541:4853","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:524:1822":{"id":"0:524:1822","crate_id":0,"name":"is_start","span":{"filename":"src/input.rs","begin":[22,4],"end":[24,5]},"visibility":"public","docs":"Returns true iff this position is at the beginning of the input.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2124:1631":{"id":"0:2124:1631","crate_id":0,"name":"set_bytes","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2144:3578"],"is_stripped":false}},"b:2:2527-0:2169:3578":{"id":"b:2:2527-0:2169:3578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2169:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2527-0:2599:1622":{"id":"b:2:2527-0:2599:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2599:1622","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:850:2493":{"id":"0:850:2493","crate_id":0,"name":"replace","span":{"filename":"src/re_bytes.rs","begin":[457,4],"end":[463,5]},"visibility":"public","docs":"Replaces the leftmost-first match with the replacement provided. The\nreplacement can be a regular byte string (where `$N` and `$name` are\nexpanded to match capture groups) or a function that takes the matches'\n`Captures` and returns the replaced byte string.\n\nIf no match is found, then a copy of the byte string is returned\nunchanged.\n\n# Replacement string syntax\n\nAll instances of `$name` in the replacement text is replaced with the\ncorresponding capture group `name`.\n\n`name` may be an integer corresponding to the index of the\ncapture group (counted by order of opening parenthesis where `0` is the\nentire match) or it can be a name (consisting of letters, digits or\nunderscores) corresponding to a named capture group.\n\nIf `name` isn't a valid capture group (whether the name doesn't exist\nor isn't a valid index), then it is replaced with the empty string.\n\nThe longest possible name is used. e.g., `$1a` looks up the capture\ngroup named `1a` and not the capture group at index `1`. To exert more\nprecise control over the name, use braces, e.g., `${1}a`.\n\nTo write a literal `$` use `$$`.\n\n# Examples\n\nNote that this function is polymorphic with respect to the replacement.\nIn typical usage, this can just be a normal byte string:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(\"[^01]+\").unwrap();\nassert_eq!(re.replace(b\"1078910\", &b\"\"[..]), &b\"1010\"[..]);\n# }\n```\n\nBut anything satisfying the `Replacer` trait will work. For example, a\nclosure of type `|&Captures| -> Vec<u8>` provides direct access to the\ncaptures corresponding to a match. This allows one to access capturing\ngroup matches easily:\n\n```rust\n# use regex::bytes::Regex;\n# use regex::bytes::Captures; fn main() {\nlet re = Regex::new(r\"([^,\\s]+),\\s+(\\S+)\").unwrap();\nlet result = re.replace(b\"Springsteen, Bruce\", |caps: &Captures| {\n    let mut replacement = caps[2].to_owned();\n    replacement.push(b' ');\n    replacement.extend(&caps[1]);\n    replacement\n});\nassert_eq!(result, &b\"Bruce Springsteen\"[..]);\n# }\n```\n\nBut this is a bit cumbersome to use all the time. Instead, a simple\nsyntax is supported that expands `$name` into the corresponding capture\ngroup. Here's the last example, but using this expansion technique\nwith named capture groups:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?P<last>[^,\\s]+),\\s+(?P<first>\\S+)\").unwrap();\nlet result = re.replace(b\"Springsteen, Bruce\", &b\"$first $last\"[..]);\nassert_eq!(result, &b\"Bruce Springsteen\"[..]);\n# }\n```\n\nNote that using `$2` instead of `$first` or `$1` instead of `$last`\nwould produce the same result. To write a literal `$` use `$$`.\n\nSometimes the replacement string requires use of curly braces to\ndelineate a capture group replacement and surrounding literal text.\nFor example, if we wanted to join two words together with an\nunderscore:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?P<first>\\w+)\\s+(?P<second>\\w+)\").unwrap();\nlet result = re.replace(b\"deep fried\", &b\"${first}_$second\"[..]);\nassert_eq!(result, &b\"deep_fried\"[..]);\n# }\n```\n\nWithout the curly braces, the capture group name `first_` would be\nused, and since it doesn't exist, it would be replaced with the empty\nstring.\n\nFinally, sometimes you just want to replace a literal string with no\nregard for capturing group expansion. This can be done by wrapping a\nbyte string with `NoExpand`:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nuse regex::bytes::NoExpand;\n\nlet re = Regex::new(r\"(?P<last>[^,\\s]+),\\s+(\\S+)\").unwrap();\nlet result = re.replace(b\"Springsteen, Bruce\", NoExpand(b\"$2 $last\"));\nassert_eq!(result, &b\"$2 $last\"[..]);\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["rep",{"kind":"generic","inner":"R"}]],"output":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:688:110","args":{"angle_bracketed":{"args":[{"lifetime":"'t"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Replacer","id":"0:987:1624","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:2449:4144":{"id":"b:2:2238-0:2449:4144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2449:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:938:1836":{"id":"0:938:1836","crate_id":0,"name":"get","span":{"filename":"src/re_bytes.rs","begin":[938,4],"end":[940,5]},"visibility":"public","docs":"Returns the match associated with the capture group at index `i`. If\n`i` does not correspond to a capture group, or if the capture group\ndid not participate in the match, then `None` is returned.\n\n# Examples\n\nGet the text of the match with a default of an empty string if this\ngroup didn't participate in the match:\n\n```rust\n# use regex::bytes::Regex;\nlet re = Regex::new(r\"[a-z]+(?:([0-9]+)|([A-Z]+))\").unwrap();\nlet caps = re.captures(b\"abc123\").unwrap();\n\nlet text1 = caps.get(1).map_or(&b\"\"[..], |m| m.as_bytes());\nlet text2 = caps.get(2).map_or(&b\"\"[..], |m| m.as_bytes());\nassert_eq!(text1, &b\"123\"[..]);\nassert_eq!(text2, &b\"\"[..]);\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2174:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1311":{"id":"0:1311","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1254,0],"end":[1262,1]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"name":"Replacer","id":"0:1289:1624","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:688:110","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}},"items":["0:1313:3801","0:1314:3798"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2736:4882-0:1628:127":{"id":"a:2:2736:4882-0:1628:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1646:657":{"id":"0:1646:657","crate_id":0,"name":"fmt","span":{"filename":"src/exec.rs","begin":[34,9],"end":[34,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2276:657":{"id":"0:2276:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[1161,9],"end":[1161,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2388:2285":{"id":"0:2388:2285","crate_id":0,"name":"is_match","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"Returns true if and only if one of the regexes in this set matches\nthe text given.\n\nThis method should be preferred if you only need to test whether any\nof the regexes in the set should match, but don't care about *which*\nregexes matched. This is because the underlying matching engine will\nquit immediately after seeing the first match instead of continuing to\nfind all matches.\n\nNote that as with searches using `Regex`, the expression is unanchored\nby default. That is, if the regex does not start with `^` or `\\A`, or\nend with `$` or `\\z`, then it is permitted to match anywhere in the\ntext.\n\n# Example\n\nTests whether a set matches some text:\n\n```rust\n# use regex::RegexSet;\nlet set = RegexSet::new(&[r\"\\w+\", r\"\\d+\"]).unwrap();\nassert!(set.is_match(\"foo\"));\nassert!(!set.is_match(\"☃\"));\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2572:1616":{"id":"0:2572:1616","crate_id":0,"name":"CaptureMatches","span":{"filename":"src/re_unicode.rs","begin":[1117,0],"end":[1119,2]},"visibility":"public","docs":"An iterator that yields all non-overlapping capture groups matching a\nparticular regular expression.\n\nThe iterator stops when no more matches can be found.\n\n`'r` is the lifetime of the compiled regular expression and `'t` is the\nlifetime of the matched string.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:2736:4882-0:2572:1616","a:2:8139:3269-0:2572:1616","a:2:8140:3268-0:2572:1616","a:2:2686:225-0:2572:1616","a:2:2672:217-0:2572:1616","b:2:2542-0:2572:1616","b:2:2537-0:2572:1616","b:2:3328-0:2572:1616","b:2:7092-0:2572:1616","b:2:2531-0:2572:1616","b:2:2527-0:2572:1616","b:2:2235-0:2572:1616","b:2:2238-0:2572:1616","0:1277","0:2577","0:1271"]}},"a:2:2736:4882-0:2581:1621":{"id":"a:2:2736:4882-0:2581:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2581:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1303:3798":{"id":"0:1303:3798","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1229,4],"end":[1231,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:688:110","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11916:36845":{"id":"2:11916:36845","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:11843:410","self::pattern":"2:11521:1606"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11546:4851","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8140:3268-0:2174:1620":{"id":"a:2:8140:3268-0:2174:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2174:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2094:2180":{"id":"0:2094:2180","crate_id":0,"name":"dfa_size_limit","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the approximate size of the cache used by the DFA.\n\nThis roughly corresponds to the number of bytes that the DFA will\nuse while searching.\n\nNote that this is a *per thread* limit. There is no way to set a global\nlimit. In particular, if a regex is used from multiple threads\nsimultaneously, then each thread may use up to the number of bytes\nspecified here.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2096:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2542-0:2238:1617":{"id":"b:2:2542-0:2238:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2238:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1964:414":{"id":"0:1964:414","crate_id":0,"name":"clone","span":{"filename":"src/prog.rs","begin":[17,9],"end":[17,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Program","id":"0:1947:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:537:1826":{"id":"0:537:1826","crate_id":0,"name":"prefix_at","span":{"filename":"src/input.rs","begin":[86,4],"end":[90,25]},"visibility":"default","docs":"Scan the input for a matching prefix.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefixes",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:1833:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["at",{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:1780:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:1780:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"0:560:1800":{"id":"0:560:1800","crate_id":0,"name":"at","span":{"filename":"src/input.rs","begin":[158,4],"end":[165,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:1780:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1274:2056":{"id":"0:1274:2056","crate_id":0,"name":"Item","span":{"filename":"src/re_unicode.rs","begin":[1122,4],"end":[1122,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1213:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}},"b:2:2235-0:2346:2928":{"id":"b:2:2235-0:2346:2928","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2346:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2542-0:2277:1622":{"id":"b:2:2542-0:2277:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2277:1622","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1230:657":{"id":"0:1230:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[1003,4],"end":[1005,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1953:1880":{"id":"0:1953:1880","crate_id":0,"name":"byte_classes","span":{"filename":"src/prog.rs","begin":[38,4],"end":[38,29]},"visibility":"public","docs":"A set of equivalence classes for discriminating bytes in the compiled\nprogram.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:6601:241","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}},"0:879":{"id":"0:879","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[697,0],"end":[704,1]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_collect","map_while","intersperse_with","count","next_chunk","cmp","min_by","by_ref","eq_by","unzip","fold","zip","collect_into","lt","scan","ge","for_each","advance_by","any","min_by_key","all","max","cloned","is_sorted","cycle","reduce","position","last","partition","flat_map","skip","filter","nth","max_by","is_sorted_by","array_chunks","ne","try_reduce","partition_in_place","flatten","filter_map","partial_cmp","step_by","find","max_by_key","sum","le","size_hint","collect","product","map","find_map","is_sorted_by_key","is_partitioned","fuse","skip_while","chain","rev","take","eq","__iterator_get_unchecked","cmp_by","try_find","try_fold","peekable","inspect","take_while","intersperse","copied","min","enumerate","partial_cmp_by","rposition","gt","try_for_each"],"trait":{"name":"Iterator","id":"2:7202:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2202:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:882:2056","0:883:938"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:877:3686":{"id":"0:877:3686","crate_id":0,"name":"capture_locations","span":{"filename":"src/re_bytes.rs","begin":[672,4],"end":[674,5]},"visibility":"public","docs":"Returns an empty set of capture locations that can be reused in\nmultiple calls to `captures_read` or `captures_read_at`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2248:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2546:1442":{"id":"2:2546:1442","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48878:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:595:3128":{"id":"0:595:3128","crate_id":0,"name":"len_utf8","span":{"filename":"src/input.rs","begin":[368,4],"end":[370,5]},"visibility":"public","docs":"Returns the length of the character's UTF-8 encoding.\n\nIf the character is absent, then `1` is returned.","links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8139:3269-0:2351:4111":{"id":"a:2:8139:3269-0:2351:4111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2351:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:7092-0:2534:1626":{"id":"b:2:7092-0:2534:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7202:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7088:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2534:1626","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:7094:2056","2:7095:3416","2:7096:770"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:27-0:2373:1630":{"id":"0:27-0:2373:1630","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[732,4],"end":[732,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::re_set::bytes","name":"bytes","id":"0:2373:1630","glob":true}},"0:1957:1916":{"id":"0:1957:1916","crate_id":0,"name":"is_reverse","span":{"filename":"src/prog.rs","begin":[50,4],"end":[50,24]},"visibility":"public","docs":"When true, the program matches text in reverse (for use only in the\nDFA).","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"0:2281":{"id":"0:2281","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1249,9],"end":[1249,14]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2277:1622","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2283:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2310:4113":{"id":"0:2310:4113","crate_id":0,"name":"matched_any","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"Whether this set contains any matches.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1133:2545":{"id":"0:1133:2545","crate_id":0,"name":"find","span":{"filename":"src/re_unicode.rs","begin":[222,4],"end":[224,5]},"visibility":"public","docs":"Returns the start and end byte range of the leftmost-first match in\n`text`. If no match exists, then `None` is returned.\n\nNote that this should only be used if you want to discover the position\nof the match. Testing the existence of a match is faster if you use\n`is_match`.\n\n# Example\n\nFind the start and end location of the first word with exactly 13\nUnicode word characters:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet text = \"I categorically deny having triskaidekaphobia.\";\nlet mat = Regex::new(r\"\\b\\w{13}\\b\").unwrap().find(text).unwrap();\nassert_eq!(mat.start(), 2);\nassert_eq!(mat.end(), 15);\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8139:3269-0:2202:1621":{"id":"a:2:8139:3269-0:2202:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2202:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2686:225-0:2524:1617":{"id":"a:2:2686:225-0:2524:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2524:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2686:225-0:85:1650":{"id":"a:2:2686:225-0:85:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Compiler","id":"0:85:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:606":{"id":"0:606","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[413,0],"end":[418,1]},"visibility":{"restricted":{"parent":"0:512:1639","path":"::input"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2301:185","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"primitive","inner":"char"},"items":["0:607:602"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2531-0:2144:3578":{"id":"b:2:2531-0:2144:3578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2144:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2527-0:2437:4111":{"id":"b:2:2527-0:2437:4111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2437:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2228:657":{"id":"0:2228:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[738,9],"end":[738,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8139:3269-0:2572:1616":{"id":"a:2:8139:3269-0:2572:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2572:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:5:683-0:2363:4144":{"id":"b:5:683-0:2363:4144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2363:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["5:685:3800","5:686:2614","5:687:5400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2235-0:1642:1651":{"id":"b:2:2235-0:1642:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Exec","id":"0:1642:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1956:1912":{"id":"0:1956:1912","crate_id":0,"name":"is_dfa","span":{"filename":"src/prog.rs","begin":[47,4],"end":[47,20]},"visibility":"public","docs":"When true, the program is compiled for DFA matching. For example, this\nimplies `is_bytes` and also inserts a preceding `.*?` for unanchored\nregexes.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"0:2355:414":{"id":"0:2355:414","crate_id":0,"name":"clone","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2351:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:1213:1618":{"id":"b:2:2537-0:1213:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1213:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2247:657":{"id":"0:2247:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_bytes.rs","begin":[818,16],"end":[818,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5304:2082":{"id":"5:5304:2082","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7158:221"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1977:1569":{"id":"0:1977:1569","crate_id":0,"name":"0","span":{"filename":"src/prog.rs","begin":[285,14],"end":[285,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"InstEmptyLook","id":"0:2005:1861","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:1827":{"id":"0:1827","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[345,39],"end":[345,41]},"visibility":{"restricted":{"parent":"0:512:1639","path":"::input"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2306:124","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2527-0:2277:1622":{"id":"b:2:2527-0:2277:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2277:1622","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:683-0:2197:1623":{"id":"b:5:683-0:2197:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2197:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:685:3800","5:686:2614","5:687:5400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8139:3269-0:1814:1653":{"id":"a:2:8139:3269-0:1814:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2672:217-0:2119:3498":{"id":"a:2:2672:217-0:2119:3498","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2119:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2065:2180":{"id":"0:2065:2180","crate_id":0,"name":"dfa_size_limit","span":{"filename":"src/re_builder.rs","begin":[7,4],"end":[7,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"0:862:2817":{"id":"0:862:2817","crate_id":0,"name":"is_match_at","span":{"filename":"src/re_bytes.rs","begin":[580,4],"end":[582,5]},"visibility":"public","docs":"Returns the same as is_match, but starts the search at the given\noffset.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2672:217-0:2197:1623":{"id":"a:2:2672:217-0:2197:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2197:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2527-0:1814:1653":{"id":"b:2:2527-0:1814:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2444:4145":{"id":"0:2444:4145","crate_id":0,"name":"SetMatchesIntoIter","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"public","docs":"An owned iterator over the set of matches from a regex set.\n\nThis will always produces matches in ascending order of index, where the\nindex corresponds to the index of the regex that matched with respect to\nits position when initially building the set.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2736:4882-0:2444:4145","a:2:8139:3269-0:2444:4145","a:2:8140:3268-0:2444:4145","a:2:2686:225-0:2444:4145","a:2:2672:217-0:2444:4145","b:2:2542-0:2444:4145","b:2:2537-0:2444:4145","b:2:3328-0:2444:4145","b:2:7092-0:2444:4145","b:2:2531-0:2444:4145","b:2:2527-0:2444:4145","b:2:2235-0:2444:4145","b:2:2238-0:2444:4145","0:2415","0:2413","0:2447","0:2409"]}},"0:2017:2010":{"id":"0:2017:2010","crate_id":0,"name":"StartText","span":{"filename":"src/prog.rs","begin":[347,4],"end":[347,13]},"visibility":"default","docs":"Start of input.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:1831":{"id":"0:1831","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[345,55],"end":[345,58]},"visibility":{"restricted":{"parent":"0:512:1639","path":"::input"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["min","clamp","max"],"trait":{"name":"Ord","id":"2:2337:179","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1832:421"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2317:770":{"id":"0:2317:770","crate_id":0,"name":"into_iter","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:7088:149","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8139:3269-0:2174:1620":{"id":"a:2:8139:3269-0:2174:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2174:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2686:225-0:2012:1657":{"id":"a:2:2686:225-0:2012:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2012:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:386:2769":{"id":"0:386:2769","crate_id":0,"name":"bounded_backtracking","span":{"filename":"src/exec.rs","begin":[194,4],"end":[197,5]},"visibility":"public","docs":"Sets the matching engine to use a bounded backtracking engine no\nmatter what optimizations are possible.\n\nOne must use this with care, since the bounded backtracking engine\nuses memory proportion to `len(regex) * len(text)`.\n\nThis overrides whatever was previously set via the `automatic` or\n`nfa` methods.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8139:3269-0:2559:1628":{"id":"a:2:8139:3269-0:2559:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2559:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11829:36829":{"id":"2:11829:36829","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:2329":{"id":"0:2329","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2287:1589","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7472:3584","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2358:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11840:36830":{"id":"2:11840:36830","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:11849:1368","str::slice_mut_unchecked":"2:11841:36831","crate::ops::Index":"2:2991:3585"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:2603":{"id":"0:2603","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1300,9],"end":[1300,14]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2599:1622","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2605:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:11834:10672":{"id":"2:11834:10672","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:48736:176"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9702:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9702:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2112:2788":{"id":"0:2112:2788","crate_id":0,"name":"swap_greed","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the value for the greedy swap (`U`) flag.\n\nWhen enabled, a pattern like `a*` is lazy (tries to find shortest\nmatch) and `a*?` is greedy (tries to find longest match).\n\nBy default, `a*` is greedy and `a*?` is lazy.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2119:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1958:1821":{"id":"0:1958:1821","crate_id":0,"name":"is_anchored_start","span":{"filename":"src/prog.rs","begin":[52,4],"end":[52,31]},"visibility":"public","docs":"Whether the regex must match from the start of the input.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"b:2:2542-0:2255:1628":{"id":"b:2:2542-0:2255:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2255:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1196":{"id":"0:1196","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[810,0],"end":[810,47]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7472:3584","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2534:1626","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2672:217-0:2351:4111":{"id":"a:2:2672:217-0:2351:4111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2351:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2238-0:85:1650":{"id":"b:2:2238-0:85:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Compiler","id":"0:85:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2531-0:2358:4145":{"id":"b:2:2531-0:2358:4145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2358:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2736:4882-0:2552:1615":{"id":"a:2:2736:4882-0:2552:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2552:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2686:225-0:1947:1660":{"id":"a:2:2686:225-0:1947:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Program","id":"0:1947:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:3328-0:1213:1618":{"id":"b:2:3328-0:1213:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1213:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11843:30576":{"id":"2:11843:30576","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:11842:30575"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:1833:1656":{"id":"b:2:2238-0:1833:1656","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:1833:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2238-0:2590:1625":{"id":"b:2:2238-0:2590:1625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2590:1625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2527-0:1213:1618":{"id":"b:2:2527-0:1213:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1213:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:683-0:2012:1657":{"id":"b:5:683-0:2012:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2012:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:685:3800","5:686:2614","5:687:5400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1819":{"id":"0:1819","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[345,16],"end":[345,20]},"visibility":{"restricted":{"parent":"0:512:1639","path":"::input"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2684:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2235-0:1213:1618":{"id":"b:2:2235-0:1213:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:1213:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2527-0:2220:1626":{"id":"b:2:2527-0:2220:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2220:1626","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2672:217-0:1947:1660":{"id":"a:2:2672:217-0:1947:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2672:217","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Program","id":"0:1947:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11832:1836":{"id":"2:11832:1836","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:48736:176"},"attrs":["#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"SliceIndex","id":"2:9702:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9702:219","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2333:938":{"id":"0:2333:938","crate_id":0,"name":"next","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:2432:2928":{"id":"b:2:2238-0:2432:2928","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2432:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:821":{"id":"0:821","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[80,0],"end":[85,1]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9012:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2197:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:822:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1780:1655":{"id":"0:1780:1655","crate_id":0,"name":"InputAt","span":{"filename":"src/input.rs","begin":[13,0],"end":[18,1]},"visibility":"public","docs":"Represents a location in the input.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:523","a:2:2736:4882-0:1780:1655","a:2:8139:3269-0:1780:1655","a:2:8140:3268-0:1780:1655","a:2:2686:225-0:1780:1655","a:2:2672:217-0:1780:1655","b:2:2542-0:1780:1655","b:2:2537-0:1780:1655","b:2:3328-0:1780:1655","b:2:2531-0:1780:1655","b:2:2527-0:1780:1655","b:2:2235-0:1780:1655","b:2:2238-0:1780:1655","b:5:683-0:1780:1655","0:1788","0:1787","0:1785"]}},"0:993":{"id":"0:993","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1164,0],"end":[1171,1]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Replacer","id":"0:987:1624","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"name":"Replacer","id":"0:987:1624","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2268:1625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:996:3801","0:997:3798"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2056:1354":{"id":"0:2056:1354","crate_id":0,"name":"start","span":{"filename":"src/prog.rs","begin":[424,4],"end":[424,17]},"visibility":"public","docs":"The start (inclusive) of this byte range.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"u8"}},"0:2559:1628":{"id":"0:2559:1628","crate_id":0,"name":"SubCaptureMatches","span":{"filename":"src/re_unicode.rs","begin":[1082,0],"end":[1085,1]},"visibility":"public","docs":"An iterator that yields all capturing matches in the order in which they\nappear in the regex.\n\nIf a particular capture group didn't participate in the match, then `None`\nis yielded for that capture. The first match always corresponds to the\noverall match of the regex.\n\nThe lifetime `'c` corresponds to the lifetime of the `Captures` value, and\nthe lifetime `'t` corresponds to the originally matched text.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:2736:4882-0:2559:1628","a:2:8139:3269-0:2559:1628","a:2:8140:3268-0:2559:1628","a:2:2686:225-0:2559:1628","a:2:2672:217-0:2559:1628","b:2:2542-0:2559:1628","b:2:2537-0:2559:1628","b:2:3328-0:2559:1628","b:2:7092-0:2559:1628","b:2:2531-0:2559:1628","b:2:2527-0:2559:1628","b:2:2235-0:2559:1628","b:2:2238-0:2559:1628","b:5:683-0:2559:1628","0:2564","0:1256","0:1268","0:1265","0:2568"]}},"b:2:3328-0:2047:1659":{"id":"b:2:3328-0:2047:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstRanges","id":"0:2047:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2537-0:85:1650":{"id":"b:2:2537-0:85:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Compiler","id":"0:85:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2225":{"id":"0:2225","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[738,9],"end":[738,14]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2220:1626","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2228:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2686:225-0:2346:2928":{"id":"a:2:2686:225-0:2346:2928","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2346:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1861:3189":{"id":"0:1861:3189","crate_id":0,"name":"LiteralIter","span":{"filename":"src/literal/imp.rs","begin":[222,0],"end":[228,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"enum","inner":{"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:1863:1987","0:1865:1843","0:1868:3190","0:1871:3165","0:1874:3171"],"impls":[]}},"0:2052":{"id":"0:2052","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[371,16],"end":[371,21]},"visibility":{"restricted":{"parent":"0:742:1642","path":"::prog"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstRanges","id":"0:2047:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2053:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2238-0:2559:1628":{"id":"b:2:2238-0:2559:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2559:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11905:36839":{"id":"2:11905:36839","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:11521:1606","`DoubleEndedIterator`":"2:7125:120","prim@char":"1:11843:410","str::match_indices":"2:11902:36838"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:50894:4872","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11541:4853","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3328-0:1628:127":{"id":"b:2:3328-0:1628:127","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2181":{"id":"0:2181","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[20,15],"end":[20,20]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2174:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2183:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1873:1569":{"id":"0:1873:1569","crate_id":0,"name":"0","span":{"filename":"src/literal/imp.rs","begin":[226,7],"end":[226,20]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Literal","id":"20:2645:1989","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"0:1295":{"id":"0:1295","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1215,0],"end":[1222,1]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Replacer","id":"0:1289:1624","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"outlives":"'a"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"name":"Replacer","id":"0:1289:1624","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2590:1625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["0:1298:3801","0:1299:3798"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:8139:3269-0:931:1618":{"id":"a:2:8139:3269-0:931:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:931:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2235-0:85:1650":{"id":"b:2:2235-0:85:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Compiler","id":"0:85:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2134:2785":{"id":"0:2134:2785","crate_id":0,"name":"case_insensitive","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the value for the case insensitive (`i`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2144:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2235-0:2229:1627":{"id":"b:2:2235-0:2229:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2229:1627","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2736:4882-0:1642:1651":{"id":"a:2:2736:4882-0:1642:1651","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Exec","id":"0:1642:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2542-0:931:1618":{"id":"b:2:2542-0:931:1618","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:931:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2518:602":{"id":"0:2518:602","crate_id":0,"name":"eq","span":{"filename":"src/re_unicode.rs","begin":[28,33],"end":[28,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2527-0:2519:1623":{"id":"b:2:2527-0:2519:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2519:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1205":{"id":"0:1205","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[852,0],"end":[852,48]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7472:3584","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2543:1627","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2090:2789":{"id":"0:2090:2789","crate_id":0,"name":"ignore_whitespace","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the value for the ignore whitespace (`x`) flag.\n\nWhen enabled, whitespace such as new lines and spaces will be ignored\nbetween expressions of the pattern, and `#` can be used to start a\ncomment until the next new line.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2096:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11852:2442":{"id":"2:11852:2442","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:11843:410","self::pattern":"2:11521:1606"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2013:2005":{"id":"0:2013:2005","crate_id":0,"name":"StartLine","span":{"filename":"src/prog.rs","begin":[343,4],"end":[343,13]},"visibility":"default","docs":"Start of line or input.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"2:2541:1443":{"id":"2:2541:1443","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48878:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1647:2694":{"id":"0:1647:2694","crate_id":0,"name":"ExecNoSync","span":{"filename":"src/exec.rs","begin":[53,0],"end":[58,1]},"visibility":"public","docs":"`ExecNoSync` is like `Exec`, except it embeds a reference to a cache. This\nmeans it is no longer Sync, but we can now avoid the overhead of\nsynchronization to fetch the cache.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":[]}},"0:646:1825":{"id":"0:646:1825","crate_id":0,"name":"is_empty","span":{"filename":"src/literal/imp.rs","begin":[142,4],"end":[144,5]},"visibility":"public","docs":"Returns true iff this prefix is empty.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2686:225-0:2543:1627":{"id":"a:2:2686:225-0:2543:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2543:1627","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"2:2545:127":{"id":"2:2545:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:39834:8893","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:2542-0:2599:1622":{"id":"b:2:2542-0:2599:1622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2599:1622","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11931:36848":{"id":"2:11931:36848","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11843:410","self::pattern":"2:11521:1606"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:2358:4145":{"id":"b:2:2238-0:2358:4145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2358:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2325:938":{"id":"0:2325:938","crate_id":0,"name":"next","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1991:1862":{"id":"0:1991:1862","crate_id":0,"name":"InstSave","span":{"filename":"src/prog.rs","begin":[310,0],"end":[316,1]},"visibility":"public","docs":"Representation of the Save instruction.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":["0:1992:1837","0:1993:1802"],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":[]}},"2:11850:36832":{"id":"2:11850:36832","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:50990:4870","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:5:683-0:1965:1658":{"id":"b:5:683-0:1965:1658","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:1965:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:685:3800","5:686:2614","5:687:5400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2448:657":{"id":"0:2448:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2686:225-0:2559:1628":{"id":"a:2:2686:225-0:2559:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'c","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2559:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:1263:3862":{"id":"0:1263:3862","crate_id":0,"name":"size_hint","span":{"filename":"src/re_unicode.rs","begin":[1096,4],"end":[1098,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2034":{"id":"0:2034","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[340,29],"end":[340,38]},"visibility":{"restricted":{"parent":"0:742:1642","path":"::prog"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:2682:223","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2012:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2032":{"id":"0:2032","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[340,22],"end":[340,27]},"visibility":{"restricted":{"parent":"0:742:1642","path":"::prog"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2012:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2033:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:829:3609":{"id":"0:829:3609","crate_id":0,"name":"from_str","span":{"filename":"src/re_bytes.rs","begin":[108,4],"end":[110,5]},"visibility":"default","docs":"Attempts to parse a string into a regular expression","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["s",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:48878:207","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2197:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2235-0:1790:1654":{"id":"b:2:2235-0:1790:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:1790:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:645:2888":{"id":"0:645:2888","crate_id":0,"name":"lcs","span":{"filename":"src/literal/imp.rs","begin":[137,4],"end":[139,5]},"visibility":"public","docs":"Returns a matcher for the longest common suffix of this matcher.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Memmem","id":"0:1889:3157","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2527-0:2268:1625":{"id":"b:2:2527-0:2268:1625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2268:1625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1118":{"id":"0:1118","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[74,0],"end":[78,1]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Range","id":"2:46913:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"items":["0:1120:681"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:1014":{"id":"0:1014","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1213,0],"end":[1221,1]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"name":"Replacer","id":"0:987:1624","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:688:110","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}],"bindings":[]}}}}}},"items":["0:1016:3801","0:1017:3798"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2542-0:2543:1627":{"id":"b:2:2542-0:2543:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2543:1627","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2531-0:2432:2928":{"id":"b:2:2531-0:2432:2928","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2432:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1195:938":{"id":"0:1195:938","crate_id":0,"name":"next","span":{"filename":"src/re_unicode.rs","begin":[789,4],"end":[807,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1785":{"id":"0:1785","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[12,9],"end":[12,14]},"visibility":{"restricted":{"parent":"0:512:1639","path":"::input"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:1780:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1786:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:2144:3578":{"id":"0:2144:3578","crate_id":0,"name":"RegexSetBuilder","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"A configurable builder for a set of regular expressions.\n\nA builder can be used to configure how the regexes are built, for example,\nby setting the default flags (which can be overridden in the expression\nitself) or setting various limits.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:2129","a:2:2736:4882-0:2144:3578","a:2:8139:3269-0:2144:3578","a:2:8140:3268-0:2144:3578","a:2:2686:225-0:2144:3578","a:2:2672:217-0:2144:3578","b:2:2542-0:2144:3578","b:2:2537-0:2144:3578","b:2:3328-0:2144:3578","b:2:2531-0:2144:3578","b:2:2527-0:2144:3578","b:2:2235-0:2144:3578","b:2:2238-0:2144:3578","0:2147"]}},"0:1986:1569":{"id":"0:1986:1569","crate_id":0,"name":"0","span":{"filename":"src/prog.rs","begin":[295,10],"end":[295,19]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"InstBytes","id":"0:2054:1859","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"0:2589:657":{"id":"0:2589:657","crate_id":0,"name":"fmt","span":{"filename":"src/re_unicode.rs","begin":[1142,9],"end":[1142,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:8966:131","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:8955:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:21-0:2543:1627":{"id":"0:21-0:2543:1627","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[637,4],"end":[637,10]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"kind":"import","inner":{"source":"crate::re_unicode::SplitN","name":"SplitN","id":"0:2543:1627","glob":false}},"0:378:924":{"id":"0:378:924","crate_id":0,"name":"new","span":{"filename":"src/exec.rs","begin":[135,4],"end":[137,5]},"visibility":"public","docs":"Create a regex execution builder.\n\nThis uses default settings for everything except the regex itself,\nwhich must be provided. Further knobs can be set by calling methods,\nand then finally, `build` to actually create the executor.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["re",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2531-0:2351:4111":{"id":"b:2:2531-0:2351:4111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2351:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2042:1841":{"id":"0:2042:1841","crate_id":0,"name":"c","span":{"filename":"src/prog.rs","begin":[367,4],"end":[367,15]},"visibility":"public","docs":"The character to test.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"char"}},"0:2113:2789":{"id":"0:2113:2789","crate_id":0,"name":"ignore_whitespace","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the value for the ignore whitespace (`x`) flag.\n\nWhen enabled, whitespace such as new lines and spaces will be ignored\nbetween expressions of the pattern, and `#` can be used to start a\ncomment until the next new line.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2119:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2686:225-0:2363:4144":{"id":"a:2:2686:225-0:2363:4144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2363:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:600:681":{"id":"0:600:681","crate_id":0,"name":"from","span":{"filename":"src/input.rs","begin":[395,4],"end":[397,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["c",{"kind":"primitive","inner":"char"}]],"output":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2400":{"id":"0:2400","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2373:1630","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7088:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2437:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2401:3416","0:2402:2056","0:2403:770"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2527-0:2444:4145":{"id":"b:2:2527-0:2444:4145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2444:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2187":{"id":"0:2187","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[20,29],"end":[20,31]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralEq","id":"2:2683:222","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2174:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2542-0:2581:1621":{"id":"b:2:2542-0:2581:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2581:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1318:3798":{"id":"0:1318:3798","crate_id":0,"name":"no_expansion","span":{"filename":"src/re_unicode.rs","begin":[1269,4],"end":[1271,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Cow","id":"5:688:110","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8140:3268-0:85:1650":{"id":"a:2:8140:3268-0:85:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Compiler","id":"0:85:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2527-0:85:1650":{"id":"b:2:2527-0:85:1650","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Compiler","id":"0:85:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:2736:4882-0:367:1652":{"id":"a:2:2736:4882-0:367:1652","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ExecBuilder","id":"0:367:1652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2235-0:2012:1657":{"id":"b:2:2235-0:2012:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2012:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2527-0:2174:1620":{"id":"b:2:2527-0:2174:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2174:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:776":{"id":"0:776","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[298,0],"end":[306,1]},"visibility":{"restricted":{"parent":"0:742:1642","path":"::prog"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:1965:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:777:2285"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2531-0:2047:1659":{"id":"b:2:2531-0:2047:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstRanges","id":"0:2047:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2064:1876":{"id":"0:2064:1876","crate_id":0,"name":"size_limit","span":{"filename":"src/re_builder.rs","begin":[6,4],"end":[6,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"usize"}},"0:1645":{"id":"0:1645","crate_id":0,"name":null,"span":{"filename":"src/exec.rs","begin":[34,9],"end":[34,14]},"visibility":{"restricted":{"parent":"0:333:1636","path":"::exec"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Exec","id":"0:1642:1651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1646:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:629":{"id":"0:629","crate_id":0,"name":null,"span":{"filename":"src/literal/imp.rs","begin":[39,0],"end":[169,1]},"visibility":{"restricted":{"parent":"0:614:2918","path":"::literal::imp"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"LiteralSearcher","id":"0:1833:1656","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:630:2781","0:631:1824","0:632:2719","0:634:2948","0:635:2545","0:641:2867","0:642:2869","0:643:781","0:644:2965","0:645:2888","0:646:1825","0:647:797","0:649:2483"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:95":{"id":"0:95","crate_id":0,"name":null,"span":{"filename":"src/compile.rs","begin":[54,0],"end":[845,1]},"visibility":{"restricted":{"parent":"0:57:1634","path":"::compile"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Compiler","id":"0:85:1650","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:96:924","0:97:1876","0:98:1630","0:99:1905","0:100:1635","0:101:1915","0:102:1634"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:2736:4882-0:2119:3498":{"id":"a:2:2736:4882-0:2119:3498","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2119:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:863:2818":{"id":"0:863:2818","crate_id":0,"name":"find_at","span":{"filename":"src/re_bytes.rs","begin":[590,4],"end":[599,5]},"visibility":"public","docs":"Returns the same as find, but starts the search at the given\noffset.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2174:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2736:4882-0:2268:1625":{"id":"a:2:2736:4882-0:2268:1625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"ReplacerRef","id":"0:2268:1625","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:2736:4882-0:2211:1616":{"id":"a:2:2736:4882-0:2211:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2736:4882","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2211:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:8140:3268-0:2351:4111":{"id":"a:2:8140:3268-0:2351:4111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2351:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2358:4145":{"id":"0:2358:4145","crate_id":0,"name":"SetMatchesIntoIter","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"An owned iterator over the set of matches from a regex set.\n\nThis will always produces matches in ascending order of index, where the\nindex corresponds to the index of the regex that matched with respect to\nits position when initially building the set.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2736:4882-0:2358:4145","a:2:8139:3269-0:2358:4145","a:2:8140:3268-0:2358:4145","a:2:2686:225-0:2358:4145","a:2:2672:217-0:2358:4145","b:2:2542-0:2358:4145","b:2:2537-0:2358:4145","b:2:3328-0:2358:4145","b:2:7092-0:2358:4145","b:2:2531-0:2358:4145","b:2:2527-0:2358:4145","b:2:2235-0:2358:4145","b:2:2238-0:2358:4145","0:2329","0:2323","0:2327","0:2361"]}},"0:2419:938":{"id":"0:2419:938","crate_id":0,"name":"next","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2476:1621":{"id":"0:2476:1621","crate_id":0,"name":"Matches","span":{"filename":"src/re_trait.rs","begin":[165,0],"end":[174,1]},"visibility":"public","docs":"An iterator over all non-overlapping successive leftmost-first matches.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"name":"RegularExpression","id":"0:1049:2675","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Text","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"R"},"trait":{"name":"","id":"0:1049:2675","args":null}}},"bounds":[{"outlives":"'t"}],"generic_params":[]}}]},"impls":[]}},"0:1160:3814":{"id":"0:1160:3814","crate_id":0,"name":"shortest_match","span":{"filename":"src/re_unicode.rs","begin":[614,4],"end":[616,5]},"visibility":"public","docs":"Returns the end location of a match in the text given.\n\nThis method may have the same performance characteristics as\n`is_match`, except it provides an end location for a match. In\nparticular, the location returned *may be shorter* than the proper end\nof the leftmost-first match.\n\n# Example\n\nTypically, `a+` would match the entire first sequence of `a` in some\ntext, but `shortest_match` can give up as soon as it sees the first\n`a`.\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet text = \"aaaaa\";\nlet pos = Regex::new(r\"a+\").unwrap().shortest_match(text);\nassert_eq!(pos, Some(1));\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:771":{"id":"0:771","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[242,0],"end":[248,1]},"visibility":{"restricted":{"parent":"0:742:1642","path":"::prog"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7088:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Program","id":"0:1947:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"items":["0:773:2056","0:774:3416","0:775:770"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:8139:3269-0:2543:1627":{"id":"a:2:8139:3269-0:2543:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2543:1627","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:11875:30586":{"id":"2:11875:30586","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:11521:1606","`DoubleEndedIterator`":"2:7125:120","prim@char":"1:11843:410","str::split":"2:11869:1939"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:50744:4874","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"name":"Pattern","id":"2:11526:4852","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11541:4853","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2531-0:2543:1627":{"id":"b:2:2531-0:2543:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2543:1627","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:11946:4749":{"id":"2:11946:4749","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4498:4749"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:51043:4867","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:761":{"id":"0:761","crate_id":0,"name":null,"span":{"filename":"src/prog.rs","begin":[161,0],"end":[168,1]},"visibility":{"restricted":{"parent":"0:742:1642","path":"::prog"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Deref","id":"2:2908:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Program","id":"0:1947:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:762:227","0:763:542"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:461:2932":{"id":"0:461:2932","crate_id":0,"name":"into_byte_regex_set","span":{"filename":"src/exec.rs","begin":[1292,4],"end":[1294,5]},"visibility":"public","docs":"Build a RegexSet from this executor that can match arbitrary bytes.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"re_set::bytes::RegexSet","id":"0:2432:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2686:225-0:2174:1620":{"id":"a:2:2686:225-0:2174:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2174:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2542-0:2047:1659":{"id":"b:2:2542-0:2047:1659","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"InstRanges","id":"0:2047:1659","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1024":{"id":"0:1024","crate_id":0,"name":null,"span":{"filename":"src/re_bytes.rs","begin":[1252,0],"end":[1260,1]},"visibility":{"restricted":{"parent":"0:790:1632","path":"::re_bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["no_expansion","by_ref"],"trait":{"name":"Replacer","id":"0:987:1624","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"NoExpand","id":"0:2277:1622","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:1026:3801","0:1027:3798"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:631:1824":{"id":"0:631:1824","crate_id":0,"name":"prefixes","span":{"filename":"src/literal/imp.rs","begin":[46,4],"end":[49,5]},"visibility":"public","docs":"Returns a matcher for literal prefixes from the given set.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["lits",{"kind":"resolved_path","inner":{"name":"Literals","id":"20:2633:2669","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2135:2786":{"id":"0:2135:2786","crate_id":0,"name":"multi_line","span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":"public","docs":"Set the value for the multi-line matching (`m`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2144:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2428":{"id":"0:2428","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2373:1630","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2432:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2429:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"a:2:8140:3268-0:2119:3498":{"id":"a:2:8140:3268-0:2119:3498","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2119:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2328:4151":{"id":"0:2328:4151","crate_id":0,"name":"next_back","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:7092-0:2358:4145":{"id":"b:2:7092-0:2358:4145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7202:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7088:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2358:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:7094:2056","2:7095:3416","2:7096:770"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"a:2:2686:225-0:2238:1617":{"id":"a:2:2686:225-0:2238:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2238:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"b:2:2537-0:2449:4144":{"id":"b:2:2537-0:2449:4144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2449:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2542-0:2496:1620":{"id":"b:2:2542-0:2496:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2496:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2545:127","2:2546:1442"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2238-0:2572:1616":{"id":"b:2:2238-0:2572:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2572:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1951:1874":{"id":"0:1951:1874","crate_id":0,"name":"capture_name_idx","span":{"filename":"src/prog.rs","begin":[29,4],"end":[29,53]},"visibility":"public","docs":"Pointers to all named capture groups into `captures`.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Arc","id":"5:5705:69","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"HashMap","id":"1:734:141","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}}},"0:1277":{"id":"0:1277","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1133,0],"end":[1133,56]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FusedIterator","id":"2:7472:3584","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2572:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3328-0:2543:1627":{"id":"b:2:3328-0:2543:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2543:1627","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2411:938":{"id":"0:2411:938","crate_id":0,"name":"next","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:11830:310":{"id":"2:11830:310","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:11831:30553","`u8`":"1:11860:1464"},"attrs":["#[must_use]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:2432:2928":{"id":"b:2:2537-0:2432:2928","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSet","id":"0:2432:2928","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:5:683-0:2437:4111":{"id":"b:5:683-0:2437:4111","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2437:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:685:3800","5:686:2614","5:687:5400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:7092-0:2524:1617":{"id":"b:2:7092-0:2524:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7202:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7088:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2524:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:7094:2056","2:7095:3416","2:7096:770"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"0:85:1650":{"id":"0:85:1650","crate_id":0,"name":"Compiler","span":{"filename":"src/compile.rs","begin":[32,0],"end":[52,1]},"visibility":"public","docs":"A compiler translates a regular expression AST to a sequence of\ninstructions. The sequence of instructions represents an NFA.","links":{},"attrs":["#[allow(missing_debug_implementations)]"],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:95","a:2:2736:4882-0:85:1650","a:2:8139:3269-0:85:1650","a:2:8140:3268-0:85:1650","a:2:2686:225-0:85:1650","a:2:2672:217-0:85:1650","b:2:2542-0:85:1650","b:2:2537-0:85:1650","b:2:3328-0:85:1650","b:2:2531-0:85:1650","b:2:2527-0:85:1650","b:2:2235-0:85:1650","b:2:2238-0:85:1650"]}},"0:2147":{"id":"0:2147","crate_id":0,"name":null,"span":{"filename":"src/re_builder.rs","begin":[420,0],"end":[420,44]},"visibility":{"restricted":{"parent":"0:2124:1631","path":"::re_builder::set_bytes"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2144:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2148:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:98:1630":{"id":"0:98:1630","crate_id":0,"name":"bytes","span":{"filename":"src/compile.rs","begin":[91,4],"end":[94,5]},"visibility":"public","docs":"If bytes is true, then the program is compiled as a byte based\nautomaton, which incorporates UTF-8 decoding into the machine. If it's\nfalse, then the automaton is Unicode scalar value based, e.g., an\nengine utilizing such an automaton is responsible for UTF-8 decoding.\n\nThe specific invariant is that when returning a byte based machine,\nthe neither the `Char` nor `Ranges` instructions are produced.\nConversely, when producing a Unicode scalar value machine, the `Bytes`\ninstruction is never produced.\n\nNote that `dfa(true)` implies `bytes(true)`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"generic","inner":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1949:1783":{"id":"0:1949:1783","crate_id":0,"name":"matches","span":{"filename":"src/prog.rs","begin":[24,4],"end":[24,29]},"visibility":"public","docs":"Pointers to each Match instruction in the sequence.\n\nThis is always length 1 unless this program represents a regex set.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:6601:241","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}},"b:5:683-0:1814:1653":{"id":"b:5:683-0:1814:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:685:3800","5:686:2614","5:687:5400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1797":{"id":"0:1797","crate_id":0,"name":null,"span":{"filename":"src/input.rs","begin":[139,16],"end":[139,20]},"visibility":{"restricted":{"parent":"0:512:1639","path":"::input"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:2684:108","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:1790:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}},"0:759:1905":{"id":"0:759:1905","crate_id":0,"name":"only_utf8","span":{"filename":"src/prog.rs","begin":[141,4],"end":[143,5]},"visibility":"public","docs":"Returns true if this program exclusively matches valid UTF-8 bytes.\n\nThat is, if an invalid UTF-8 byte is seen, then no match is possible.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:2119:3498":{"id":"b:2:2238-0:2119:3498","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2119:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:7092-0:2211:1616":{"id":"b:2:7092-0:2211:1616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7202:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7088:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2211:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:7094:2056","2:7095:3416","2:7096:770"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"b:2:7092-0:2444:4145":{"id":"b:2:7092-0:2444:4145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"name":"Iterator","id":"2:7202:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7088:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2444:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:7094:2056","2:7095:3416","2:7096:770"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"I"}}},"b:5:683-0:2524:1617":{"id":"b:5:683-0:2524:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:679:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2524:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["5:685:3800","5:686:2614","5:687:5400"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:3328-0:2363:4144":{"id":"b:2:3328-0:2363:4144","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2363:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2555":{"id":"0:2555","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[869,9],"end":[869,14]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2552:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2556:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:5305:30439":{"id":"5:5305:30439","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:11941:30437"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1251:183":{"id":"0:1251:183","crate_id":0,"name":"Output","span":{"filename":"src/re_unicode.rs","begin":[1063,4],"end":[1063,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"primitive","inner":"str"}}},"0:1960:2015":{"id":"0:1960:2015","crate_id":0,"name":"has_unicode_word_boundary","span":{"filename":"src/prog.rs","begin":[56,4],"end":[56,39]},"visibility":"public","docs":"Whether this program contains a Unicode word boundary instruction.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"primitive","inner":"bool"}},"b:2:2527-0:2559:1628":{"id":"b:2:2527-0:2559:1628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2559:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2609:2172":{"id":"0:2609:2172","crate_id":0,"name":"SparseSet","span":{"filename":"src/sparse.rs","begin":[16,0],"end":[25,1]},"visibility":"public","docs":"A sparse set used for representing ordered NFA states.\n\nThis supports constant time addition and membership testing. Clearing an\nentire set can also be done in constant time. Iteration yields elements\nin the order in which they were inserted.\n\nThe data structure is based on: https://research.swtch.com/sparse\nNote though that we don't actually use uninitialized memory. We generally\nreuse allocations, so the initial allocation cost is bareable. However,\nits other properties listed above are extremely useful.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":[]}},"0:2116:1876":{"id":"0:2116:1876","crate_id":0,"name":"size_limit","span":{"filename":"src/re_builder.rs","begin":[232,0],"end":[232,42]},"visibility":"public","docs":"Set the approximate size limit of the compiled regular expression.\n\nThis roughly corresponds to the number of bytes occupied by a single\ncompiled program. If the program exceeds this number, then a\ncompilation error is returned.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2119:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:8139:3269-0:1790:1654":{"id":"a:2:8139:3269-0:1790:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8139:3269","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:1790:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2160:2786":{"id":"0:2160:2786","crate_id":0,"name":"multi_line","span":{"filename":"src/re_builder.rs","begin":[421,0],"end":[421,47]},"visibility":"public","docs":"Set the value for the multi-line matching (`m`) flag.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["yes",{"kind":"primitive","inner":"bool"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2169:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:457:2923":{"id":"0:457:2923","crate_id":0,"name":"searcher_str","span":{"filename":"src/exec.rs","begin":[1272,4],"end":[1274,5]},"visibility":"public","docs":"Get a searcher that isn't Sync and can match on &str.","links":{},"attrs":["#[inline(always)]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"ExecNoSyncStr","id":"0:1654:2698","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2351:4111":{"id":"0:2351:4111","crate_id":0,"name":"SetMatches","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"public","docs":"A set of matches returned by a regex set.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:2309","a:2:2736:4882-0:2351:4111","a:2:8139:3269-0:2351:4111","a:2:8140:3268-0:2351:4111","a:2:2686:225-0:2351:4111","a:2:2672:217-0:2351:4111","b:2:2542-0:2351:4111","b:2:2537-0:2351:4111","b:2:3328-0:2351:4111","b:2:2531-0:2351:4111","b:2:2527-0:2351:4111","b:2:2235-0:2351:4111","b:2:2238-0:2351:4111","b:5:683-0:2351:4111","0:2354","0:2356","0:2318","0:2314"]}},"0:758:1993":{"id":"0:758:1993","crate_id":0,"name":"uses_bytes","span":{"filename":"src/prog.rs","begin":[134,4],"end":[136,5]},"visibility":"public","docs":"Returns true if this program uses Byte instructions instead of\nChar/Range instructions.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:2686:225-0:2519:1623":{"id":"a:2:2686:225-0:2519:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2686:225","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2519:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:835:3646":{"id":"0:835:3646","crate_id":0,"name":"find_iter","span":{"filename":"src/re_bytes.rs","begin":[188,4],"end":[190,5]},"visibility":"public","docs":"Returns an iterator for each successive non-overlapping match in\n`text`, returning the start and end byte indices with respect to\n`text`.\n\n# Example\n\nFind the start and end location of every word with exactly 13 ASCII\nword bytes:\n\n```rust\n# use regex::bytes::Regex;\n# fn main() {\nlet text = b\"Retroactively relinquishing remunerations is reprehensible.\";\nfor mat in Regex::new(r\"\\b\\w{13}\\b\").unwrap().find_iter(text) {\n    println!(\"{:?}\", mat);\n}\n# }\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'r","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":"'t","mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2202:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1876:1569":{"id":"0:1876:1569","crate_id":0,"name":"0","span":{"filename":"src/literal/imp.rs","begin":[227,11],"end":[227,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"Literal","id":"20:2645:1989","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"b:5:5551-0:2197:1623":{"id":"b:5:5551-0:2197:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9012:119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5549:229","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2197:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5553:1422"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2567:414":{"id":"0:2567:414","crate_id":0,"name":"clone","span":{"filename":"src/re_unicode.rs","begin":[1081,9],"end":[1081,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SubCaptureMatches","id":"0:2559:1628","args":{"angle_bracketed":{"args":[{"lifetime":"'c"},{"lifetime":"'t"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1023:3801":{"id":"0:1023:3801","crate_id":0,"name":"replace_append","span":{"filename":"src/re_bytes.rs","begin":[1236,4],"end":[1238,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["caps",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"resolved_path","inner":{"name":"Captures","id":"0:931:1618","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["dst",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Vec","id":"5:6601:241","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"u8"}}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1637":{"id":"0:1637","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[5,9],"end":[5,14]},"visibility":{"restricted":{"parent":"0:324:1609","path":"::error"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2252:105","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Error","id":"0:1628:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1638:414"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2531-0:1947:1660":{"id":"b:2:2531-0:1947:1660","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Program","id":"0:1947:1660","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2531-0:2534:1626":{"id":"b:2:2531-0:2534:1626","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Split","id":"0:2534:1626","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:528:797":{"id":"0:528:797","crate_id":0,"name":"len","span":{"filename":"src/input.rs","begin":[45,4],"end":[47,5]},"visibility":"public","docs":"Returns the UTF-8 width of the character at this position.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:2248:1615":{"id":"b:2:2238-0:2248:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2248:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1174:312":{"id":"0:1174:312","crate_id":0,"name":"as_str","span":{"filename":"src/re_unicode.rs","begin":[714,4],"end":[716,5]},"visibility":"public","docs":"Returns the original string of this regex.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2524:1617":{"id":"0:2524:1617","crate_id":0,"name":"CaptureNames","span":{"filename":"src/re_unicode.rs","begin":[751,0],"end":[751,68]},"visibility":"public","docs":"An iterator over the names of all possible captures.\n\n`None` indicates an unnamed capture; the first element (capture 0, the\nwhole matched region) is always unnamed.\n\n`'r` is the lifetime of the compiled regular expression.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:2736:4882-0:2524:1617","a:2:8139:3269-0:2524:1617","a:2:8140:3268-0:2524:1617","a:2:2686:225-0:2524:1617","a:2:2672:217-0:2524:1617","b:2:2542-0:2524:1617","b:2:2537-0:2524:1617","b:2:3328-0:2524:1617","b:2:7092-0:2524:1617","b:2:2531-0:2524:1617","b:2:2527-0:2524:1617","b:2:2235-0:2524:1617","b:2:2238-0:2524:1617","b:5:683-0:2524:1617","0:1189","0:2528","0:1179","0:2531","0:1187"]}},"0:2577":{"id":"0:2577","crate_id":0,"name":null,"span":{"filename":"src/re_unicode.rs","begin":[1116,9],"end":[1116,14]},"visibility":{"restricted":{"parent":"0:1086:1613","path":"::re_unicode"}},"docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'r","kind":{"lifetime":{"outlives":[]}}},{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9007:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureMatches","id":"0:2572:1616","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["0:2580:657"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:3328-0:2174:1620":{"id":"b:2:3328-0:2174:1620","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3326:68","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Match","id":"0:2174:1620","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:3330:1456"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2235-0:2552:1615":{"id":"b:2:2235-0:2552:1615","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureLocations","id":"0:2552:1615","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:8140:3268-0:1790:1654":{"id":"a:2:8140:3268-0:1790:1654","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'t","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8140:3268","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CharInput","id":"0:1790:1654","args":{"angle_bracketed":{"args":[{"lifetime":"'t"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"0:2314":{"id":"0:2314","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":{"restricted":{"parent":"0:2287:1589","path":"::re_set::unicode"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:7088:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatches","id":"0:2351:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:2315:3416","0:2316:2056","0:2317:770"],"negative":false,"synthetic":false,"blanket_impl":null}},"0:790:1632":{"id":"0:790:1632","crate_id":0,"name":"re_bytes","span":{"filename":"src/re_bytes.rs","begin":[1,0],"end":[1260,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:2174:1620","0:2197:1623","0:2202:1621","0:2211:1616","0:2220:1626","0:2229:1627","0:2238:1617","0:2248:1615","0:931:1618","0:2255:1628","0:987:1624","0:2268:1625","0:2277:1622"],"is_stripped":true}},"0:2455:414":{"id":"0:2455:414","crate_id":0,"name":"clone","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2449:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:535:3118":{"id":"0:535:3118","crate_id":0,"name":"previous_char","span":{"filename":"src/input.rs","begin":[79,4],"end":[79,49]},"visibility":"default","docs":"Return the Unicode character occurring previous to `at`.\n\nIf no such character could be decoded, then `Char` is absent.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["at",{"kind":"resolved_path","inner":{"name":"InputAt","id":"0:1780:1655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"b:2:2527-0:2238:1617":{"id":"b:2:2527-0:2238:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2238:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2416":{"id":"0:2416","crate_id":0,"name":null,"span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":{"restricted":{"parent":"0:2373:1630","path":"::re_set::bytes"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["try_collect","map_while","intersperse_with","count","next_chunk","cmp","min_by","by_ref","eq_by","unzip","fold","zip","collect_into","lt","scan","ge","for_each","advance_by","any","min_by_key","all","max","cloned","is_sorted","cycle","reduce","position","last","partition","flat_map","skip","filter","nth","max_by","is_sorted_by","array_chunks","ne","try_reduce","partition_in_place","flatten","filter_map","partial_cmp","step_by","find","max_by_key","sum","le","size_hint","collect","product","map","find_map","is_sorted_by_key","is_partitioned","fuse","skip_while","chain","rev","take","eq","__iterator_get_unchecked","cmp_by","try_find","try_fold","peekable","inspect","take_while","intersperse","copied","min","enumerate","partial_cmp_by","rposition","gt","try_for_each"],"trait":{"name":"Iterator","id":"2:7202:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIter","id":"0:2449:4144","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:2418:2056","0:2419:938","0:2420:3862"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:2:2235-0:1814:1653":{"id":"b:2:2235-0:1814:1653","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Char","id":"0:1814:1653","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:875:2938":{"id":"0:875:2938","crate_id":0,"name":"capture_names","span":{"filename":"src/re_bytes.rs","begin":[661,4],"end":[663,5]},"visibility":"public","docs":"Returns an iterator over the capture names.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2238:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:2012:1657":{"id":"b:2:2537-0:2012:1657","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"EmptyLook","id":"0:2012:1657","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:861:2816":{"id":"0:861:2816","crate_id":0,"name":"shortest_match_at","span":{"filename":"src/re_bytes.rs","begin":[566,4],"end":[572,5]},"visibility":"public","docs":"Returns the same as shortest_match, but starts the search at the given\noffset.\n\nThe significance of the starting point is that it takes the surrounding\ncontext into consideration. For example, the `\\A` anchor can only\nmatch when `start == 0`.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["text",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}],["start",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2537-0:2543:1627":{"id":"b:2:2537-0:2543:1627","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SplitN","id":"0:2543:1627","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:0:1661":{"id":"0:0:1661","crate_id":0,"name":"regex","span":{"filename":"src/lib.rs","begin":[1,0],"end":[769,1]},"visibility":"public","docs":"This crate provides a library for parsing, compiling, and executing regular\nexpressions. Its syntax is similar to Perl-style regular expressions, but lacks\na few features like look around and backreferences. In exchange, all searches\nexecute in linear time with respect to the size of the regular expression and\nsearch text.\n\nThis crate's documentation provides some simple examples, describes\n[Unicode support](#unicode) and exhaustively lists the\n[supported syntax](#syntax).\n\nFor more specific details on the API for regular expressions, please see the\ndocumentation for the [`Regex`](struct.Regex.html) type.\n\n# Usage\n\nThis crate is [on crates.io](https://crates.io/crates/regex) and can be\nused by adding `regex` to your dependencies in your project's `Cargo.toml`.\n\n```toml\n[dependencies]\nregex = \"1\"\n```\n\n# Example: find a date\n\nGeneral use of regular expressions in this package involves compiling an\nexpression and then using it to search, split or replace text. For example,\nto confirm that some text resembles a date:\n\n```rust\nuse regex::Regex;\nlet re = Regex::new(r\"^\\d{4}-\\d{2}-\\d{2}$\").unwrap();\nassert!(re.is_match(\"2014-01-01\"));\n```\n\nNotice the use of the `^` and `$` anchors. In this crate, every expression\nis executed with an implicit `.*?` at the beginning and end, which allows\nit to match anywhere in the text. Anchors can be used to ensure that the\nfull text matches an expression.\n\nThis example also demonstrates the utility of\n[raw strings](https://doc.rust-lang.org/stable/reference/tokens.html#raw-string-literals)\nin Rust, which\nare just like regular strings except they are prefixed with an `r` and do\nnot process any escape sequences. For example, `\"\\\\d\"` is the same\nexpression as `r\"\\d\"`.\n\n# Example: Avoid compiling the same regex in a loop\n\nIt is an anti-pattern to compile the same regular expression in a loop\nsince compilation is typically expensive. (It takes anywhere from a few\nmicroseconds to a few **milliseconds** depending on the size of the\nregex.) Not only is compilation itself expensive, but this also prevents\noptimizations that reuse allocations internally to the matching engines.\n\nIn Rust, it can sometimes be a pain to pass regular expressions around if\nthey're used from inside a helper function. Instead, we recommend using the\n[`lazy_static`](https://crates.io/crates/lazy_static) crate to ensure that\nregular expressions are compiled exactly once.\n\nFor example:\n\n```rust\nuse lazy_static::lazy_static;\nuse regex::Regex;\n\nfn some_helper_function(text: &str) -> bool {\n    lazy_static! {\n        static ref RE: Regex = Regex::new(\"...\").unwrap();\n    }\n    RE.is_match(text)\n}\n\nfn main() {}\n```\n\nSpecifically, in this example, the regex will be compiled when it is used for\nthe first time. On subsequent uses, it will reuse the previous compilation.\n\n# Example: iterating over capture groups\n\nThis crate provides convenient iterators for matching an expression\nrepeatedly against a search string to find successive non-overlapping\nmatches. For example, to find all dates in a string and be able to access\nthem by their component pieces:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(\\d{4})-(\\d{2})-(\\d{2})\").unwrap();\nlet text = \"2012-03-14, 2013-01-01 and 2014-07-05\";\nfor cap in re.captures_iter(text) {\n    println!(\"Month: {} Day: {} Year: {}\", &cap[2], &cap[3], &cap[1]);\n}\n// Output:\n// Month: 03 Day: 14 Year: 2012\n// Month: 01 Day: 01 Year: 2013\n// Month: 07 Day: 05 Year: 2014\n# }\n```\n\nNotice that the year is in the capture group indexed at `1`. This is\nbecause the *entire match* is stored in the capture group at index `0`.\n\n# Example: replacement with named capture groups\n\nBuilding on the previous example, perhaps we'd like to rearrange the date\nformats. This can be done with text replacement. But to make the code\nclearer, we can *name*  our capture groups and use those names as variables\nin our replacement text:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?P<y>\\d{4})-(?P<m>\\d{2})-(?P<d>\\d{2})\").unwrap();\nlet before = \"2012-03-14, 2013-01-01 and 2014-07-05\";\nlet after = re.replace_all(before, \"$m/$d/$y\");\nassert_eq!(after, \"03/14/2012, 01/01/2013 and 07/05/2014\");\n# }\n```\n\nThe `replace` methods are actually polymorphic in the replacement, which\nprovides more flexibility than is seen here. (See the documentation for\n`Regex::replace` for more details.)\n\nNote that if your regex gets complicated, you can use the `x` flag to\nenable insignificant whitespace mode, which also lets you write comments:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?x)\n  (?P<y>\\d{4}) # the year\n  -\n  (?P<m>\\d{2}) # the month\n  -\n  (?P<d>\\d{2}) # the day\n\").unwrap();\nlet before = \"2012-03-14, 2013-01-01 and 2014-07-05\";\nlet after = re.replace_all(before, \"$m/$d/$y\");\nassert_eq!(after, \"03/14/2012, 01/01/2013 and 07/05/2014\");\n# }\n```\n\nIf you wish to match against whitespace in this mode, you can still use `\\s`,\n`\\n`, `\\t`, etc. For escaping a single space character, you can escape it\ndirectly with `\\ `, use its hex character code `\\x20` or temporarily disable\nthe `x` flag, e.g., `(?-x: )`.\n\n# Example: match multiple regular expressions simultaneously\n\nThis demonstrates how to use a `RegexSet` to match multiple (possibly\noverlapping) regular expressions in a single scan of the search text:\n\n```rust\nuse regex::RegexSet;\n\nlet set = RegexSet::new(&[\n    r\"\\w+\",\n    r\"\\d+\",\n    r\"\\pL+\",\n    r\"foo\",\n    r\"bar\",\n    r\"barfoo\",\n    r\"foobar\",\n]).unwrap();\n\n// Iterate over and collect all of the matches.\nlet matches: Vec<_> = set.matches(\"foobar\").into_iter().collect();\nassert_eq!(matches, vec![0, 2, 3, 4, 6]);\n\n// You can also test whether a particular regex matched:\nlet matches = set.matches(\"foobar\");\nassert!(!matches.matched(5));\nassert!(matches.matched(6));\n```\n\n# Pay for what you use\n\nWith respect to searching text with a regular expression, there are three\nquestions that can be asked:\n\n1. Does the text match this expression?\n2. If so, where does it match?\n3. Where did the capturing groups match?\n\nGenerally speaking, this crate could provide a function to answer only #3,\nwhich would subsume #1 and #2 automatically. However, it can be significantly\nmore expensive to compute the location of capturing group matches, so it's best\nnot to do it if you don't need to.\n\nTherefore, only use what you need. For example, don't use `find` if you\nonly need to test if an expression matches a string. (Use `is_match`\ninstead.)\n\n# Unicode\n\nThis implementation executes regular expressions **only** on valid UTF-8\nwhile exposing match locations as byte indices into the search string. (To\nrelax this restriction, use the [`bytes`](bytes/index.html) sub-module.)\n\nOnly simple case folding is supported. Namely, when matching\ncase-insensitively, the characters are first mapped using the \"simple\" case\nfolding rules defined by Unicode.\n\nRegular expressions themselves are **only** interpreted as a sequence of\nUnicode scalar values. This means you can use Unicode characters directly\nin your expression:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?i)Δ+\").unwrap();\nlet mat = re.find(\"ΔδΔ\").unwrap();\nassert_eq!((mat.start(), mat.end()), (0, 6));\n# }\n```\n\nMost features of the regular expressions in this crate are Unicode aware. Here\nare some examples:\n\n* `.` will match any valid UTF-8 encoded Unicode scalar value except for `\\n`.\n  (To also match `\\n`, enable the `s` flag, e.g., `(?s:.)`.)\n* `\\w`, `\\d` and `\\s` are Unicode aware. For example, `\\s` will match all forms\n  of whitespace categorized by Unicode.\n* `\\b` matches a Unicode word boundary.\n* Negated character classes like `[^a]` match all Unicode scalar values except\n  for `a`.\n* `^` and `$` are **not** Unicode aware in multi-line mode. Namely, they only\n  recognize `\\n` and not any of the other forms of line terminators defined\n  by Unicode.\n\nUnicode general categories, scripts, script extensions, ages and a smattering\nof boolean properties are available as character classes. For example, you can\nmatch a sequence of numerals, Greek or Cherokee letters:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"[\\pN\\p{Greek}\\p{Cherokee}]+\").unwrap();\nlet mat = re.find(\"abcΔᎠβⅠᏴγδⅡxyz\").unwrap();\nassert_eq!((mat.start(), mat.end()), (3, 23));\n# }\n```\n\nFor a more detailed breakdown of Unicode support with respect to\n[UTS#18](https://unicode.org/reports/tr18/),\nplease see the\n[UNICODE](https://github.com/rust-lang/regex/blob/master/UNICODE.md)\ndocument in the root of the regex repository.\n\n# Opt out of Unicode support\n\nThe `bytes` sub-module provides a `Regex` type that can be used to match\non `&[u8]`. By default, text is interpreted as UTF-8 just like it is with\nthe main `Regex` type. However, this behavior can be disabled by turning\noff the `u` flag, even if doing so could result in matching invalid UTF-8.\nFor example, when the `u` flag is disabled, `.` will match any byte instead\nof any Unicode scalar value.\n\nDisabling the `u` flag is also possible with the standard `&str`-based `Regex`\ntype, but it is only allowed where the UTF-8 invariant is maintained. For\nexample, `(?-u:\\w)` is an ASCII-only `\\w` character class and is legal in an\n`&str`-based `Regex`, but `(?-u:\\xFF)` will attempt to match the raw byte\n`\\xFF`, which is invalid UTF-8 and therefore is illegal in `&str`-based\nregexes.\n\nFinally, since Unicode support requires bundling large Unicode data\ntables, this crate exposes knobs to disable the compilation of those\ndata tables, which can be useful for shrinking binary size and reducing\ncompilation times. For details on how to do that, see the section on [crate\nfeatures](#crate-features).\n\n# Syntax\n\nThe syntax supported in this crate is documented below.\n\nNote that the regular expression parser and abstract syntax are exposed in\na separate crate, [`regex-syntax`](https://docs.rs/regex-syntax).\n\n## Matching one character\n\n<pre class=\"rust\">\n.             any character except new line (includes new line with s flag)\n\\d            digit (\\p{Nd})\n\\D            not digit\n\\pN           One-letter name Unicode character class\n\\p{Greek}     Unicode character class (general category or script)\n\\PN           Negated one-letter name Unicode character class\n\\P{Greek}     negated Unicode character class (general category or script)\n</pre>\n\n### Character classes\n\n<pre class=\"rust\">\n[xyz]         A character class matching either x, y or z (union).\n[^xyz]        A character class matching any character except x, y and z.\n[a-z]         A character class matching any character in range a-z.\n[[:alpha:]]   ASCII character class ([A-Za-z])\n[[:^alpha:]]  Negated ASCII character class ([^A-Za-z])\n[x[^xyz]]     Nested/grouping character class (matching any character except y and z)\n[a-y&&xyz]    Intersection (matching x or y)\n[0-9&&[^4]]   Subtraction using intersection and negation (matching 0-9 except 4)\n[0-9--4]      Direct subtraction (matching 0-9 except 4)\n[a-g~~b-h]    Symmetric difference (matching `a` and `h` only)\n[\\[\\]]        Escaping in character classes (matching [ or ])\n</pre>\n\nAny named character class may appear inside a bracketed `[...]` character\nclass. For example, `[\\p{Greek}[:digit:]]` matches any Greek or ASCII\ndigit. `[\\p{Greek}&&\\pL]` matches Greek letters.\n\nPrecedence in character classes, from most binding to least:\n\n1. Ranges: `a-cd` == `[a-c]d`\n2. Union: `ab&&bc` == `[ab]&&[bc]`\n3. Intersection: `^a-z&&b` == `^[a-z&&b]`\n4. Negation\n\n## Composites\n\n<pre class=\"rust\">\nxy    concatenation (x followed by y)\nx|y   alternation (x or y, prefer x)\n</pre>\n\n## Repetitions\n\n<pre class=\"rust\">\nx*        zero or more of x (greedy)\nx+        one or more of x (greedy)\nx?        zero or one of x (greedy)\nx*?       zero or more of x (ungreedy/lazy)\nx+?       one or more of x (ungreedy/lazy)\nx??       zero or one of x (ungreedy/lazy)\nx{n,m}    at least n x and at most m x (greedy)\nx{n,}     at least n x (greedy)\nx{n}      exactly n x\nx{n,m}?   at least n x and at most m x (ungreedy/lazy)\nx{n,}?    at least n x (ungreedy/lazy)\nx{n}?     exactly n x\n</pre>\n\n## Empty matches\n\n<pre class=\"rust\">\n^     the beginning of text (or start-of-line with multi-line mode)\n$     the end of text (or end-of-line with multi-line mode)\n\\A    only the beginning of text (even with multi-line mode enabled)\n\\z    only the end of text (even with multi-line mode enabled)\n\\b    a Unicode word boundary (\\w on one side and \\W, \\A, or \\z on other)\n\\B    not a Unicode word boundary\n</pre>\n\nThe empty regex is valid and matches the empty string. For example, the empty\nregex matches `abc` at positions `0`, `1`, `2` and `3`.\n\n## Grouping and flags\n\n<pre class=\"rust\">\n(exp)          numbered capture group (indexed by opening parenthesis)\n(?P&lt;name&gt;exp)  named (also numbered) capture group (allowed chars: [_0-9a-zA-Z.\\[\\]])\n(?:exp)        non-capturing group\n(?flags)       set flags within current group\n(?flags:exp)   set flags for exp (non-capturing)\n</pre>\n\nFlags are each a single character. For example, `(?x)` sets the flag `x`\nand `(?-x)` clears the flag `x`. Multiple flags can be set or cleared at\nthe same time: `(?xy)` sets both the `x` and `y` flags and `(?x-y)` sets\nthe `x` flag and clears the `y` flag.\n\nAll flags are by default disabled unless stated otherwise. They are:\n\n<pre class=\"rust\">\ni     case-insensitive: letters match both upper and lower case\nm     multi-line mode: ^ and $ match begin/end of line\ns     allow . to match \\n\nU     swap the meaning of x* and x*?\nu     Unicode support (enabled by default)\nx     ignore whitespace and allow line comments (starting with `#`)\n</pre>\n\nFlags can be toggled within a pattern. Here's an example that matches\ncase-insensitively for the first part but case-sensitively for the second part:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?i)a+(?-i)b+\").unwrap();\nlet cap = re.captures(\"AaAaAbbBBBb\").unwrap();\nassert_eq!(&cap[0], \"AaAaAbb\");\n# }\n```\n\nNotice that the `a+` matches either `a` or `A`, but the `b+` only matches\n`b`.\n\nMulti-line mode means `^` and `$` no longer match just at the beginning/end of\nthe input, but at the beginning/end of lines:\n\n```\n# use regex::Regex;\nlet re = Regex::new(r\"(?m)^line \\d+\").unwrap();\nlet m = re.find(\"line one\\nline 2\\n\").unwrap();\nassert_eq!(m.as_str(), \"line 2\");\n```\n\nNote that `^` matches after new lines, even at the end of input:\n\n```\n# use regex::Regex;\nlet re = Regex::new(r\"(?m)^\").unwrap();\nlet m = re.find_iter(\"test\\n\").last().unwrap();\nassert_eq!((m.start(), m.end()), (5, 5));\n```\n\nHere is an example that uses an ASCII word boundary instead of a Unicode\nword boundary:\n\n```rust\n# use regex::Regex;\n# fn main() {\nlet re = Regex::new(r\"(?-u:\\b).+(?-u:\\b)\").unwrap();\nlet cap = re.captures(\"$$abc$$\").unwrap();\nassert_eq!(&cap[0], \"abc\");\n# }\n```\n\n## Escape sequences\n\n<pre class=\"rust\">\n\\*          literal *, works for any punctuation character: \\.+*?()|[]{}^$\n\\a          bell (\\x07)\n\\f          form feed (\\x0C)\n\\t          horizontal tab\n\\n          new line\n\\r          carriage return\n\\v          vertical tab (\\x0B)\n\\123        octal character code (up to three digits) (when enabled)\n\\x7F        hex character code (exactly two digits)\n\\x{10FFFF}  any hex character code corresponding to a Unicode code point\n\\u007F      hex character code (exactly four digits)\n\\u{7F}      any hex character code corresponding to a Unicode code point\n\\U0000007F  hex character code (exactly eight digits)\n\\U{7F}      any hex character code corresponding to a Unicode code point\n</pre>\n\n## Perl character classes (Unicode friendly)\n\nThese classes are based on the definitions provided in\n[UTS#18](https://www.unicode.org/reports/tr18/#Compatibility_Properties):\n\n<pre class=\"rust\">\n\\d     digit (\\p{Nd})\n\\D     not digit\n\\s     whitespace (\\p{White_Space})\n\\S     not whitespace\n\\w     word character (\\p{Alphabetic} + \\p{M} + \\d + \\p{Pc} + \\p{Join_Control})\n\\W     not word character\n</pre>\n\n## ASCII character classes\n\n<pre class=\"rust\">\n[[:alnum:]]    alphanumeric ([0-9A-Za-z])\n[[:alpha:]]    alphabetic ([A-Za-z])\n[[:ascii:]]    ASCII ([\\x00-\\x7F])\n[[:blank:]]    blank ([\\t ])\n[[:cntrl:]]    control ([\\x00-\\x1F\\x7F])\n[[:digit:]]    digits ([0-9])\n[[:graph:]]    graphical ([!-~])\n[[:lower:]]    lower case ([a-z])\n[[:print:]]    printable ([ -~])\n[[:punct:]]    punctuation ([!-/:-@\\[-`{-~])\n[[:space:]]    whitespace ([\\t\\n\\v\\f\\r ])\n[[:upper:]]    upper case ([A-Z])\n[[:word:]]     word characters ([0-9A-Za-z_])\n[[:xdigit:]]   hex digit ([0-9A-Fa-f])\n</pre>\n\n# Crate features\n\nBy default, this crate tries pretty hard to make regex matching both as fast\nas possible and as correct as it can be, within reason. This means that there\nis a lot of code dedicated to performance, the handling of Unicode data and the\nUnicode data itself. Overall, this leads to more dependencies, larger binaries\nand longer compile times.  This trade off may not be appropriate in all cases,\nand indeed, even when all Unicode and performance features are disabled, one\nis still left with a perfectly serviceable regex engine that will work well\nin many cases.\n\nThis crate exposes a number of features for controlling that trade off. Some\nof these features are strictly performance oriented, such that disabling them\nwon't result in a loss of functionality, but may result in worse performance.\nOther features, such as the ones controlling the presence or absence of Unicode\ndata, can result in a loss of functionality. For example, if one disables the\n`unicode-case` feature (described below), then compiling the regex `(?i)a`\nwill fail since Unicode case insensitivity is enabled by default. Instead,\ncallers must use `(?i-u)a` instead to disable Unicode case folding. Stated\ndifferently, enabling or disabling any of the features below can only add or\nsubtract from the total set of valid regular expressions. Enabling or disabling\na feature will never modify the match semantics of a regular expression.\n\nAll features below are enabled by default.\n\n### Ecosystem features\n\n* **std** -\n  When enabled, this will cause `regex` to use the standard library. Currently,\n  disabling this feature will always result in a compilation error. It is\n  intended to add `alloc`-only support to regex in the future.\n\n### Performance features\n\n* **perf** -\n  Enables all performance related features. This feature is enabled by default\n  and will always cover all features that improve performance, even if more\n  are added in the future.\n* **perf-dfa** -\n  Enables the use of a lazy DFA for matching. The lazy DFA is used to compile\n  portions of a regex to a very fast DFA on an as-needed basis. This can\n  result in substantial speedups, usually by an order of magnitude on large\n  haystacks. The lazy DFA does not bring in any new dependencies, but it can\n  make compile times longer.\n* **perf-inline** -\n  Enables the use of aggressive inlining inside match routines. This reduces\n  the overhead of each match. The aggressive inlining, however, increases\n  compile times and binary size.\n* **perf-literal** -\n  Enables the use of literal optimizations for speeding up matches. In some\n  cases, literal optimizations can result in speedups of _several_ orders of\n  magnitude. Disabling this drops the `aho-corasick` and `memchr` dependencies.\n* **perf-cache** -\n  This feature used to enable a faster internal cache at the cost of using\n  additional dependencies, but this is no longer an option. A fast internal\n  cache is now used unconditionally with no additional dependencies. This may\n  change in the future.\n\n### Unicode features\n\n* **unicode** -\n  Enables all Unicode features. This feature is enabled by default, and will\n  always cover all Unicode features, even if more are added in the future.\n* **unicode-age** -\n  Provide the data for the\n  [Unicode `Age` property](https://www.unicode.org/reports/tr44/tr44-24.html#Character_Age).\n  This makes it possible to use classes like `\\p{Age:6.0}` to refer to all\n  codepoints first introduced in Unicode 6.0\n* **unicode-bool** -\n  Provide the data for numerous Unicode boolean properties. The full list\n  is not included here, but contains properties like `Alphabetic`, `Emoji`,\n  `Lowercase`, `Math`, `Uppercase` and `White_Space`.\n* **unicode-case** -\n  Provide the data for case insensitive matching using\n  [Unicode's \"simple loose matches\" specification](https://www.unicode.org/reports/tr18/#Simple_Loose_Matches).\n* **unicode-gencat** -\n  Provide the data for\n  [Unicode general categories](https://www.unicode.org/reports/tr44/tr44-24.html#General_Category_Values).\n  This includes, but is not limited to, `Decimal_Number`, `Letter`,\n  `Math_Symbol`, `Number` and `Punctuation`.\n* **unicode-perl** -\n  Provide the data for supporting the Unicode-aware Perl character classes,\n  corresponding to `\\w`, `\\s` and `\\d`. This is also necessary for using\n  Unicode-aware word boundary assertions. Note that if this feature is\n  disabled, the `\\s` and `\\d` character classes are still available if the\n  `unicode-bool` and `unicode-gencat` features are enabled, respectively.\n* **unicode-script** -\n  Provide the data for\n  [Unicode scripts and script extensions](https://www.unicode.org/reports/tr24/).\n  This includes, but is not limited to, `Arabic`, `Cyrillic`, `Hebrew`,\n  `Latin` and `Thai`.\n* **unicode-segment** -\n  Provide the data necessary to provide the properties used to implement the\n  [Unicode text segmentation algorithms](https://www.unicode.org/reports/tr29/).\n  This enables using classes like `\\p{gcb=Extend}`, `\\p{wb=Katakana}` and\n  `\\p{sb=ATerm}`.\n\n\n# Untrusted input\n\nThis crate can handle both untrusted regular expressions and untrusted\nsearch text.\n\nUntrusted regular expressions are handled by capping the size of a compiled\nregular expression.\n(See [`RegexBuilder::size_limit`](struct.RegexBuilder.html#method.size_limit).)\nWithout this, it would be trivial for an attacker to exhaust your system's\nmemory with expressions like `a{100}{100}{100}`.\n\nUntrusted search text is allowed because the matching engine(s) in this\ncrate have time complexity `O(mn)` (with `m ~ regex` and `n ~ search\ntext`), which means there's no way to cause exponential blow-up like with\nsome other regular expression engines. (We pay for this by disallowing\nfeatures like arbitrary look-ahead and backreferences.)\n\nWhen a DFA is used, pathological cases with exponential state blow-up are\navoided by constructing the DFA lazily or in an \"online\" manner. Therefore,\nat most one new state can be created for each byte of input. This satisfies\nour time complexity guarantees, but can lead to memory growth\nproportional to the size of the input. As a stopgap, the DFA is only\nallowed to store a fixed number of states. When the limit is reached, its\nstates are wiped and continues on, possibly duplicating previous work. If\nthe limit is reached too frequently, it gives up and hands control off to\nanother matching engine with fixed memory requirements.\n(The DFA size limit can also be tweaked. See\n[`RegexBuilder::dfa_size_limit`](struct.RegexBuilder.html#method.dfa_size_limit).)","links":{},"attrs":["#![deny(missing_docs)]","#![warn(missing_debug_implementations)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:23:1630","0:3-0:1628:127","0:8-0:1107:1614","0:9-0:2552:1615","0:10-0:2572:1616","0:11-0:2524:1617","0:12-0:1213:1618","0:14-0:2496:1620","0:15-0:2581:1621","0:16-0:2599:1622","0:17-0:2519:1623","0:18-0:1289:1624","0:19-0:2590:1625","0:20-0:2534:1626","0:21-0:2543:1627","0:22-0:2559:1628","0:4-0:2149:1611","0:5-0:2101:1589","0:6-0:2287:1589"],"is_stripped":false}},"b:2:2537-0:2238:1617":{"id":"b:2:2537-0:2238:1617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2507:235","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"CaptureNames","id":"0:2238:1617","args":{"angle_bracketed":{"args":[{"lifetime":"'r"}],"bindings":[]}}}},"items":["2:2540:127","2:2541:1443"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2527-0:2119:3498":{"id":"b:2:2527-0:2119:3498","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2501:147","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2119:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2530:2148"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2322:770":{"id":"0:2322:770","crate_id":0,"name":"into_iter","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"name":"","id":"2:7088:149","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:2581:1621":{"id":"b:2:2238-0:2581:1621","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Matches","id":"0:2581:1621","args":{"angle_bracketed":{"args":[{"lifetime":"'r"},{"lifetime":"'t"}],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2315:3416":{"id":"0:2315:3416","crate_id":0,"name":"IntoIter","span":{"filename":"src/re_set.rs","begin":[451,0],"end":[478,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2358:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:2093:1876":{"id":"0:2093:1876","crate_id":0,"name":"size_limit","span":{"filename":"src/re_builder.rs","begin":[231,0],"end":[231,39]},"visibility":"public","docs":"Set the approximate size limit of the compiled regular expression.\n\nThis roughly corresponds to the number of bytes occupied by a single\ncompiled program. If the program exceeds this number, then a\ncompilation error is returned.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["limit",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"RegexBuilder","id":"0:2096:3498","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:1984:1843":{"id":"0:1984:1843","crate_id":0,"name":"Bytes","span":{"filename":"src/prog.rs","begin":[295,4],"end":[295,20]},"visibility":"default","docs":"Bytes is like Ranges, except it expresses a single byte range. It is\nused in conjunction with Split instructions to implement multi-byte\ncharacter classes.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":{"tuple":["0:1986:1569"]},"discriminant":null}},"2:3330:1456":{"id":"2:3330:1456","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:47073:8402","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2238-0:2444:4145":{"id":"b:2:2238-0:2444:4145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2444:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"5:5303:37502":{"id":"5:5303:37502","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:288:2048","`String`":"5:7158:221"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:288:2048","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:6909:5418","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:7158:221","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:2235-0:2169:3578":{"id":"b:2:2235-0:2169:3578","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2229:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"RegexSetBuilder","id":"0:2169:3578","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2237:3349"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:2412:3862":{"id":"0:2412:3862","crate_id":0,"name":"size_hint","span":{"filename":"src/re_set.rs","begin":[480,0],"end":[507,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"tuple","inner":[{"kind":"primitive","inner":"usize"},{"kind":"resolved_path","inner":{"name":"Option","id":"2:48734:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:2015:2009":{"id":"0:2015:2009","crate_id":0,"name":"EndLine","span":{"filename":"src/prog.rs","begin":[345,4],"end":[345,11]},"visibility":"default","docs":"End of line or input.","links":{},"attrs":[],"deprecation":null,"kind":"variant","inner":{"kind":"plain","discriminant":null}},"0:2201:414":{"id":"0:2201:414","crate_id":0,"name":"clone","span":{"filename":"src/re_bytes.rs","begin":[77,9],"end":[77,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2197:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2540:127":{"id":"2:2540:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"name":"TryFrom","id":"2:2511:234","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}}}}}},"b:2:2238-0:2197:1623":{"id":"b:2:2238-0:2197:1623","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2679:3990","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2232:98","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"Regex","id":"0:2197:1623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2240:1808"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1971:1569":{"id":"0:1971:1569","crate_id":0,"name":"0","span":{"filename":"src/prog.rs","begin":[279,9],"end":[279,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"InstSave","id":"0:1991:1862","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"b:2:2531-0:2444:4145":{"id":"b:2:2531-0:2444:4145","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2504:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}}},"for":{"kind":"resolved_path","inner":{"name":"SetMatchesIntoIter","id":"0:2444:4145","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2533:681"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:1988:414":{"id":"0:1988:414","crate_id":0,"name":"clone","span":{"filename":"src/prog.rs","begin":[267,9],"end":[267,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Inst","id":"0:1965:1658","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:7094:2056":{"id":"2:7094:2056","crate_id":2,"name":"Item","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"name":"Iterator","id":"2:7202:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"paths":{"17:13082:7454":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:8176:11981":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"1:5745:4588":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"2:20678:12005":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"5:1612:6114":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"22:844:5838":{"crate_id":22,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"21:977:4740":{"crate_id":21,"path":["aho_corasick","ahocorasick","FindIter"],"kind":"struct"},"17:9118:37759":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"5:5012:1338":{"crate_id":5,"path":["alloc","slice"],"kind":"module"},"6:506:8925":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"16:2487:7646":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"2:2686:225":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"17:11559:7072":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"21:1203:6364":{"crate_id":21,"path":["aho_corasick","nfa","NFA"],"kind":"struct"},"6:4675:9375":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"6:7276:9839":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"20:2134:4604":{"crate_id":20,"path":["regex_syntax","ast","ClassUnicode"],"kind":"struct"},"2:22102:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"2:2229:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"15:214:10077":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"16:2605:7651":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"20:2876:2003":{"crate_id":20,"path":["regex_syntax","hir","ClassUnicodeRange"],"kind":"struct"},"12:1866:6567":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"2:48921:3417":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"22:632:5845":{"crate_id":22,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"6:5635:9554":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:10932:6208":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"17:11515:7063":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"1:8239:8729":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"16:7357:8029":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:50712:1843":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:4743:12003":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"2:51132:8454":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"6:4284:9233":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"1:4666:12008":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"6:4112:9130":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"1:2343:9857":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:46913:195":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"17:386:6614":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"12:1085:8202":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"17:11813:7109":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"2:47707:4677":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:3197:8618":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"1:11848:1338":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"1:4087:10371":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"2:2995:4835":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"16:2894:22924":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"2:8569:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"22:114:4764":{"crate_id":22,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:54716:8584":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:8152:1626":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"17:9339:6755":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"1:11863:1463":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"6:6510:9777":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"6:4569:9328":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"17:13572:7599":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2:52316:8484":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"6:1713:9111":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"20:1754:4603":{"crate_id":20,"path":["regex_syntax","ast","ErrorKind"],"kind":"enum"},"1:4397:12018":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"1:8741:183":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"1:10915:6206":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"12:669:8189":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"17:13436:7573":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"6:1674:9094":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"9:382:10090":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"21:1678:1620":{"crate_id":21,"path":["aho_corasick","Match"],"kind":"struct"},"2:12137:34415":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"12:646:5450":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"5:6941:6123":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"18:574:6336":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"16:6463:7884":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"17:13478:7578":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"21:1417:6371":{"crate_id":21,"path":["aho_corasick","packed","teddy","compile","Mask"],"kind":"struct"},"16:4357:7702":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"17:11217:6990":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"5:7065:4563":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"16:6790:7936":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"6:1707:9110":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"6:6434:9727":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"1:8213:8627":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:4720:6184":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"1:2869:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"1:6738:12070":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"20:1730:6486":{"crate_id":20,"path":["regex_syntax","ast","print","Printer"],"kind":"struct"},"2:7202:156":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:11842:921":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"5:6022:1529":{"crate_id":5,"path":["alloc","vec"],"kind":"module"},"5:3057:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"2:3377:17170":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"2:47103:8404":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"22:707:6342":{"crate_id":22,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"18:80:4762":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"17:12934:7419":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"1:6463:4585":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"5:110:283":{"crate_id":5,"path":["alloc","alloc","alloc"],"kind":"function"},"16:2993:7685":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"17:10608:6697":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"2:10655:5895":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:3236:8620":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"2:6917:2082":{"crate_id":2,"path":["core","iter","sources","repeat","repeat"],"kind":"function"},"20:1922:2035":{"crate_id":20,"path":["regex_syntax","ast","Alternation"],"kind":"struct"},"2:51009:4857":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"6:474:6480":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"6:4459:9292":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"18:515:5845":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"1:10123:10516":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"5:219:5466":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"16:6210:7847":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"5:4234:6137":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:10156:5903":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"6:4310:9245":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"9:592:22730":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"1:8146:1843":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"6:532:8945":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"21:1657:6461":{"crate_id":21,"path":["aho_corasick","prefilter","StartBytesOne"],"kind":"struct"},"1:10037:8776":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"17:12816:7388":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"1:1436:143":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"6:1614:9046":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"16:6200:7846":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:51449:9937":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:7679:11900":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:51725:8483":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"22:872:5840":{"crate_id":22,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"21:1239:2223":{"crate_id":21,"path":["aho_corasick","nfa","Transitions"],"kind":"enum"},"2:11059:17285":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"6:4267:9227":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"18:548:140":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"20:2095:27588":{"crate_id":20,"path":["regex_syntax","ast","ClassAsciiKind"],"kind":"enum"},"2:57559:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:11345:4858":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"6:573:8967":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"2:20639:12081":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"1:847:3417":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"20:2869:4605":{"crate_id":20,"path":["regex_syntax","hir","ClassUnicodeIter"],"kind":"struct"},"16:7343:7680":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"12:2198:8894":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"5:0:283":{"crate_id":5,"path":["alloc"],"kind":"module"},"2:20473:35456":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"17:8368:23849":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"1:10193:8645":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"2:9024:5332":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"17:11259:6995":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"2:2942:4834":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:22831:5930":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"2:4728:35357":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"16:7980:23794":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:54635:8577":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"17:12948:7422":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"1:7613:5443":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"1:5482:9617":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"2:4563:5781":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"2:9279:5497":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:49251:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:5007:8637":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:51708:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"17:10721:6910":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"6:6991:9814":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"1:3234:8619":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"2:48734:178":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"7:79:22705":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"2:12355:202":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"17:13518:7589":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"12:659:3416":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"12:1518:22864":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"2:11482:3586":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"2:6563:4669":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:51304:17161":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"16:2557:7649":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"1:1786:8604":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"2:50592:5880":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:5494:4664":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:48878:207":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2:54579:8575":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"1:2539:6180":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"1:11151:8796":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"1:11056:9956":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"1:8220:9946":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"17:11137:6974":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"16:5235:7722":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"17:9433:6762":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"17:10332:23958":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"6:6362:9714":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"21:1663:6462":{"crate_id":21,"path":["aho_corasick","prefilter","StartBytesTwo"],"kind":"struct"},"2:12189:8358":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:12324:6176":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:49854:5327":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"17:11235:6991":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"6:4645:9362":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:51226:8464":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"6:0:802":{"crate_id":6,"path":["libc"],"kind":"module"},"2:10142:4875":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"17:10973:6944":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"1:5669:4577":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"20:3099:4598":{"crate_id":20,"path":["regex_syntax","parser","Parser"],"kind":"struct"},"20:2148:27589":{"crate_id":20,"path":["regex_syntax","ast","ClassUnicodeKind"],"kind":"enum"},"17:9223:23862":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"21:1348:38453":{"crate_id":21,"path":["aho_corasick","packed","api","SearchKind"],"kind":"enum"},"2:51290:8465":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:10087:5901":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:49091:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:7641:11884":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"1:6277:163":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"21:1393:6417":{"crate_id":21,"path":["aho_corasick","packed","rabinkarp","RabinKarp"],"kind":"struct"},"21:1129:6394":{"crate_id":21,"path":["aho_corasick","dfa","ByteClass"],"kind":"struct"},"1:9110:28592":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","fast","DtorState"],"kind":"enum"},"17:11617:7079":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"2:20847:12005":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"16:4327:7701":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:47303:33914":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"21:1159:6183":{"crate_id":21,"path":["aho_corasick","dfa","Repr"],"kind":"struct"},"17:11661:7087":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"21:1295:2668":{"crate_id":21,"path":["aho_corasick","packed","api","MatchKind"],"kind":"enum"},"17:10221:6859":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"17:12134:7173":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"2:52907:8509":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"2:2511:234":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"1:1849:8607":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"6:1692:9101":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"12:738:8192":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"6:4639:9361":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"5:3093:6566":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"21:1313:3206":{"crate_id":21,"path":["aho_corasick","packed","api","Config"],"kind":"struct"},"16:2825:7660":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"5:3623:8292":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"21:1532:6439":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","Mask128"],"kind":"struct"},"2:51533:17327":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"5:7081:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"14:202:17168":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"16:4606:7709":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"17:13168:7479":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"16:2657:7653":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"6:4290:9235":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:20405:4766":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"6:6534:9787":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"12:1555:8207":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"17:13031:7441":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"22:546:5843":{"crate_id":22,"path":["memchr","cow","CowBytes"],"kind":"struct"},"1:8324:4724":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:3206:4714":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"9:649:22732":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"21:1386:4852":{"crate_id":21,"path":["aho_corasick","packed","pattern","Pattern"],"kind":"struct"},"2:3243:4716":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"17:12164:7179":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:6610:10368":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"17:11161:6978":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"6:4149:9157":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"1:3159:8616":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"5:688:110":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"6:4408:9288":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"17:8510:6723":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:48039:4647":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:11526:4852":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"20:1626:1855":{"crate_id":20,"path":["regex_syntax","is_word_byte"],"kind":"function"},"1:6354:4582":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"16:6829:7939":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"22:97:4763":{"crate_id":22,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"16:6241:7849":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"22:761:6336":{"crate_id":22,"path":["memchr","memmem","x86","avx","std","Forward"],"kind":"struct"},"16:5447:7728":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"1:11447:8797":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"20:2396:2067":{"crate_id":20,"path":["regex_syntax","ast","RepetitionRange"],"kind":"enum"},"5:6503:5427":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"1:8392:2307":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"2:2784:4816":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"6:6303:9680":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:48971:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:8917:106":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"9:505:10100":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"17:1021:6620":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:50067:2307":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"2:48017:8333":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"6:4106:9129":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"12:300:8890":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"2:52336:8485":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"6:1684:9100":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:3119:33091":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"1:11853:631":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:46835:4844":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"16:5949:7796":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"2:51043:4867":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:6519:4590":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"1:6082:6195":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"2:52428:8489":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2:4373:4709":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"5:7053:4562":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"2:7516:35459":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"1:11497:8666":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:2936:3279":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"1:11825:28560":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"21:1149:6396":{"crate_id":21,"path":["aho_corasick","dfa","PremultipliedByteClass"],"kind":"struct"},"16:7166:23790":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"21:1119:5710":{"crate_id":21,"path":["aho_corasick","dfa","Standard"],"kind":"struct"},"1:1575:5420":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"1:7672:8672":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"12:861:8198":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"17:9328:6753":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:53127:8516":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:11747:111":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"22:665:140":{"crate_id":22,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"5:1443:8190":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:9968:8606":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"16:6704:7919":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:3506:5422":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"2:48048:4649":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"17:10283:6864":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"16:6816:7937":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"17:10949:6930":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"16:6052:7831":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"5:1055:10366":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"2:47827:4685":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"17:9283:6747":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"1:1568:3416":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"5:961:6114":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"17:11368:7027":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"17:12251:7196":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"16:2300:7633":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:4547:11993":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"17:13557:7598":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"17:1771:6621":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"16:8069:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"6:119:17611":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"17:10350:6633":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"5:3943:5450":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"16:6146:7839":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"20:2363:6568":{"crate_id":20,"path":["regex_syntax","ast","RepetitionOp"],"kind":"struct"},"17:8774:6613":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"5:5615:5422":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"2:20719:12005":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"6:6564:9802":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:12926:7416":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"17:9791:6798":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"2:47813:4684":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:21135:12100":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"16:4662:7711":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"17:10921:6924":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"20:2050:6541":{"crate_id":20,"path":["regex_syntax","ast","ClassPerl"],"kind":"struct"},"17:8561:6605":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"16:2631:7652":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"1:7793:8677":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"2:21820:11986":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"17:11708:7093":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"1:6602:8653":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"12:60:10360":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"17:11014:6948":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"21:1263:5806":{"crate_id":21,"path":["aho_corasick","nfa","Builder"],"kind":"struct"},"21:1078:6363":{"crate_id":21,"path":["aho_corasick","classes","ByteClasses"],"kind":"struct"},"17:10670:6906":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"1:10806:8675":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"2:9160:8346":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"16:7278:7677":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"16:5614:7745":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"6:4345:9264":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"5:7112:33866":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:242:6611":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"2:51481:9945":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"21:1648:6460":{"crate_id":21,"path":["aho_corasick","prefilter","StartBytesBuilder"],"kind":"struct"},"16:7872:8089":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"6:6548:9796":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"17:13024:7440":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"16:5388:7667":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"1:2361:11941":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"17:11247:6994":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:52360:8486":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"6:1568:9017":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"7:0:1507":{"crate_id":7,"path":["unwind"],"kind":"module"},"1:929:8190":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"17:11547:7070":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2:47380:4697":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"17:11070:6963":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"17:12103:7168":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"6:7008:9823":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"5:3680:5420":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"6:1601:9039":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"12:2069:8199":{"crate_id":12,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"1:3342:6135":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"2:52490:8491":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"16:4721:7713":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"16:7603:8046":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:22201:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"14:40:6945":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"16:2868:7662":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:4081:4718":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"17:12265:7199":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"1:8265:8740":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"2:8732:35458":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"22:769:6336":{"crate_id":22,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"2:2822:4823":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"2:20852:12073":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"16:3188:7688":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"2:4399:4710":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"5:7252:5421":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"1:10849:8760":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"1:10298:8757":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"12:762:5420":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"17:10108:6850":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"2:50876:4871":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"2:52561:8494":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:6169:6186":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"1:8096:8623":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"2:22399:166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"2:57585:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:8171:8731":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:49371:4576":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:0:487":{"crate_id":2,"path":["core"],"kind":"module"},"20:2575:127":{"crate_id":20,"path":["regex_syntax","error","Error"],"kind":"enum"},"6:4364:9274":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:11859:727":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"1:11856:729":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"1:1586:6566":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"1:11861:1461":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"2:53685:8536":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"16:5839:23784":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"20:2186:6560":{"crate_id":20,"path":["regex_syntax","ast","ClassBracketed"],"kind":"struct"},"2:49757:130":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"6:1511:8986":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"6:1586:9027":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"15:0:4436":{"crate_id":15,"path":["addr2line"],"kind":"module"},"16:7396:23791":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"1:4079:10370":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"2:49796:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"17:12909:7411":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"16:5541:7738":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"17:9627:6778":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"17:10642:23855":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"20:2624:4613":{"crate_id":20,"path":["regex_syntax","hir","interval","IntervalSetIter"],"kind":"struct"},"21:1052:2668":{"crate_id":21,"path":["aho_corasick","ahocorasick","MatchKind"],"kind":"enum"},"1:1074:8200":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"20:1661:4598":{"crate_id":20,"path":["regex_syntax","ast","parse","Parser"],"kind":"struct"},"6:1531:8994":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:54655:8579":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"18:636:6353":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"21:1094:6393":{"crate_id":21,"path":["aho_corasick","classes","ByteClassBuilder"],"kind":"struct"},"17:11343:7023":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:30074:33883":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"1:11490:8666":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"21:1139:6395":{"crate_id":21,"path":["aho_corasick","dfa","Premultiplied"],"kind":"struct"},"21:1229:6406":{"crate_id":21,"path":["aho_corasick","nfa","Dense"],"kind":"struct"},"2:4344:4707":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:29974:4636":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"6:6419:9722":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"21:1584:3171":{"crate_id":21,"path":["aho_corasick","prefilter","Packed"],"kind":"struct"},"17:12148:7175":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"2:47729:4678":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"5:1212:7945":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2:47082:7995":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"17:11087:6965":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"6:4788:9424":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"17:9681:6676":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"17:13203:7487":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"16:2261:22898":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:20690:12072":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"2:22069:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"6:5564:9513":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:47089:8403":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"17:10845:6885":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"21:1437:1651":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","Exec"],"kind":"enum"},"2:50990:4870":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"2:47617:4663":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"6:5508:9489":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"1:2831:6183":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"1:8474:8632":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"6:4826:9446":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"6:547:8954":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"2:47001:200":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"16:4849:7717":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"12:1872:6464":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"16:8056:8106":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"5:2142:37651":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"20:2906:4607":{"crate_id":20,"path":["regex_syntax","hir","ClassBytesIter"],"kind":"struct"},"6:5702:9588":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:51473:9943":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"2:4426:410":{"crate_id":2,"path":["core","char"],"kind":"module"},"17:13126:7468":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"1:505:5855":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"1:8735:8757":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"21:1429:6416":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","Teddy"],"kind":"struct"},"2:48947:205":{"crate_id":2,"path":["core","sync","atomic","Ordering","Relaxed"],"kind":"foreign_type"},"17:11893:7118":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"16:6270:7666":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"17:10233:6860":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"5:7128:8311":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"1:7848:8681":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"17:9193:37765":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"5:6645:6146":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"17:12198:7192":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"5:3568:6114":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:7575:12005":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:4353:4708":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"17:10583:23854":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"17:8137:23842":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"6:4437:9290":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"1:3662:8624":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"17:12485:7219":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"1:3157:8615":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"12:1852:6565":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"2:50948:4873":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"6:7289:9840":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"17:9700:6786":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"1:646:11887":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"16:6735:7922":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"20:2544:27602":{"crate_id":20,"path":["regex_syntax","either","Either"],"kind":"enum"},"5:1432:8189":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:9702:219":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"5:4264:6135":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"16:6903:8772":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"16:2579:7650":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"6:4356:9269":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"1:10612:8785":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"1:5368:8645":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"1:3195:8617":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"17:12337:6885":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"1:3051:8614":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"9:956:22714":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"1:3435:28504":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"21:1402:5806":{"crate_id":21,"path":["aho_corasick","packed","teddy","compile","Builder"],"kind":"struct"},"17:13527:7593":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:8047:8722":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"1:9064:8656":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"16:3010:22926":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"20:1724:6484":{"crate_id":20,"path":["regex_syntax","ast","print","PrinterBuilder"],"kind":"struct"},"17:10121:6851":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"17:13192:7483":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"6:4327:9255":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"1:3601:11984":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"2:12103:135":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"16:7942:8097":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:10875:6920":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"2:39834:8893":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"22:716:37769":{"crate_id":22,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:47664:8417":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"16:7847:8087":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"2:50289:5882":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:3858:11989":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"2:4001:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"6:4389:9287":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"17:10625:6904":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"16:5203:6722":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:21287:5927":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"1:11865:775":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"1:558:5863":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"2:54293:8570":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"17:13354:7545":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"5:5549:229":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:10729:5887":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"1:7532:6202":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"2:7125:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"6:6339:9696":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"20:2671:6582":{"crate_id":20,"path":["regex_syntax","hir","translate","TranslatorBuilder"],"kind":"struct"},"17:11528:7065":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"6:6332:9692":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"5:784:6117":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"1:10402:8617":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"2:48685:8627":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"6:554:8957":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"2:47423:5790":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"2:22300:167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:20450:35457":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"11:0:4433":{"crate_id":11,"path":["adler"],"kind":"module"},"5:4064:6135":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"20:1988:27585":{"crate_id":20,"path":["regex_syntax","ast","SpecialLiteralKind"],"kind":"enum"},"2:49784:109":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"17:8941:6732":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"16:7435:8034":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"6:4210:9198":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"17:11149:6975":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"5:5095:6114":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"16:4385:7703":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"21:1494:6431":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddySlim2Mask256"],"kind":"struct"},"16:7970:8099":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"16:5494:23781":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"17:8981:6733":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"16:6059:37756":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"6:6279:9663":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"22:731:37771":{"crate_id":22,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:46937:196":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:1771:599":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:51477:9944":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"2:3151:4838":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"2:1760:8317":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"18:644:6336":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"6:1580:9025":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"4:0:4429":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"6:5605:9531":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"1:7266:28770":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"16:4413:7704":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"6:6385:9715":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"17:12980:7429":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:2921:4715":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"5:7169:8314":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"6:6519:9780":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"5:1387:3416":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"2:12313:106":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"1:11864:1460":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"2:50634:5899":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"5:2375:9849":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"17:487:6617":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"17:1962:6628":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"2:47503:1991":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"typedef"},"17:12739:7372":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"1:2217:11933":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"20:2252:6561":{"crate_id":20,"path":["regex_syntax","ast","ClassSetRange"],"kind":"struct"},"9:586:8897":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"17:247:6612":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"17:11034:6958":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"17:8631:6607":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"1:3894:11990":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"2:50055:144":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"20:2823:1989":{"crate_id":20,"path":["regex_syntax","hir","Literal"],"kind":"enum"},"6:4585:9336":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:10062:6847":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"1:5233:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"20:2451:2029":{"crate_id":20,"path":["regex_syntax","ast","CaptureName"],"kind":"struct"},"1:5702:4579":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"17:8441:23852":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"2:3326:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:8966:131":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"2:50532:5891":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"1:3665:8625":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"5:2874:37684":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"12:444:141":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"1:11391:8626":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:2691:4712":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"2:9012:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"6:4683:9380":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"1:7587:5806":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"12:387:10361":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"2:47386:5787":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"2:50513:5889":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:7840:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"2:11294:8353":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"1:6114:8652":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"17:967:6619":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"0:23:1630":{"crate_id":0,"path":["regex","bytes"],"kind":"module"},"1:10819:8646":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"1:11814:11888":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"1:10987:8758":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:47696:4686":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"6:4820:9443":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"1:11857:730":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"6:500:8922":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"2:47319:5792":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:2301:185":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:8956:5323":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"1:11844:1480":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"2:8245:4852":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:10139:6735":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"1:2613:8613":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"16:7249:8016":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"5:3127:6565":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"6:4814:9441":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"17:13366:7548":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"1:11226:9957":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"2:50684:4865":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"2:8356:1132":{"crate_id":2,"path":["core","result"],"kind":"module"},"20:2064:27587":{"crate_id":20,"path":["regex_syntax","ast","ClassPerlKind"],"kind":"enum"},"2:48629:4610":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"12:353:6109":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"14:7:8182":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"12:1840:5422":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"2:20768:6371":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"17:12349:7210":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"6:6440:9728":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"16:6676:7673":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"2:21758:33907":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:39870:8395":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"16:4635:7710":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"2:48861:5240":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"20:2348:2037":{"crate_id":20,"path":["regex_syntax","ast","Repetition"],"kind":"struct"},"16:4545:7707":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"17:8951:37767":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"9:111:10083":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"1:8129:4670":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:47716:4665":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"17:10270:6863":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"17:9857:6808":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:29980:4637":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"12:834:8196":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"1:5319:8642":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"20:2376:2045":{"crate_id":20,"path":["regex_syntax","ast","RepetitionKind"],"kind":"enum"},"17:8822:37762":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"22:81:4762":{"crate_id":22,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"18:614:37771":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"2:7475:4655":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"20:1653:2670":{"crate_id":20,"path":["regex_syntax","ast","parse","ParserBuilder"],"kind":"struct"},"20:2706:6586":{"crate_id":20,"path":["regex_syntax","hir","translate","TranslatorI"],"kind":"struct"},"1:8898:4580":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:47489:8413":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"2:48870:190":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"20:2786:1985":{"crate_id":20,"path":["regex_syntax","hir","HirKind"],"kind":"enum"},"17:12748:7373":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"22:816:5836":{"crate_id":22,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"1:4108:10372":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"2:5417:4674":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"2:4299:3024":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"1:3864:11988":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"16:3854:7696":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"22:232:3152":{"crate_id":22,"path":["memchr","memmem"],"kind":"module"},"20:2465:6569":{"crate_id":20,"path":["regex_syntax","ast","SetFlags"],"kind":"struct"},"2:48929:5450":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"2:51634:202":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"16:5963:191":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:50980:4869":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"16:7044:37755":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"17:10182:6854":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"6:4471:9293":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"17:10403:6911":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"22:836:5837":{"crate_id":22,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"1:8490:8755":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"16:6593:7910":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"6:1517:8989":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"20:1734:6487":{"crate_id":20,"path":["regex_syntax","ast","print","Writer"],"kind":"struct"},"2:11592:17158":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"5:5:1529":{"crate_id":5,"path":["alloc","vec"],"kind":"macro"},"1:10654:8789":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"6:5851:9631":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:2832:4825":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:2498:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"16:5374:7664":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"6:4747:9409":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:21299:35404":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"2:48937:3416":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:51461:9940":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:8087:8621":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"16:7237:8015":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"17:11787:7105":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"2:54739:8585":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"5:3902:6114":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"1:11330:8624":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:1636:578":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"12:725:8191":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"21:1475:6428":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddySlim1Mask256"],"kind":"struct"},"2:51465:9941":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"6:5615:9538":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:6313:8653":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"16:5122:7720":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"6:4277:9230":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:11535:3172":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"20:2504:27595":{"crate_id":20,"path":["regex_syntax","ast","FlagsItemKind"],"kind":"enum"},"16:3689:7694":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:52937:8510":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"16:6668:7917":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"2:47799:4683":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:49733:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"2:52668:8499":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"20:2030:1995":{"crate_id":20,"path":["regex_syntax","ast","Class"],"kind":"enum"},"20:2431:2026":{"crate_id":20,"path":["regex_syntax","ast","GroupKind"],"kind":"enum"},"2:49870:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"16:153:6104":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"6:579:8970":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"9:827:22803":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"2:2723:5301":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"16:4519:7706":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"6:1606:9041":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:10631:9952":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"2:3088:4837":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:7097:4657":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"6:494:8920":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"17:9947:23933":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:47409:5788":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"2:47355:4867":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:4976:8637":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"6:4771:9416":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"18:727:5838":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"6:568:8965":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"2:2768:4817":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:46979:198":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:9016:5329":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"3:0:434":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:50726:1626":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"17:12836:7396":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"2:52512:8492":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"6:4506:9296":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"20:3001:2037":{"crate_id":20,"path":["regex_syntax","hir","Repetition"],"kind":"struct"},"16:7825:8086":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"1:3765:8626":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"17:3249:6632":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"2:57202:12109":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"6:4550:9319":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"17:8418:23851":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"2:9976:5894":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"10:0:4432":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"5:2873:3800":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"2:54831:8589":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"2:53415:8531":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"18:481:5843":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"5:1463:8290":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"21:1099:6376":{"crate_id":21,"path":["aho_corasick","dfa","DFA"],"kind":"enum"},"1:9364:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"2:2991:3585":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"1:8830:8763":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"16:2793:7659":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"2:52382:8487":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:4828:12041":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"2:4024:5461":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:4664:12007":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"1:1597:6464":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"5:6933:5422":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"6:4516:9303":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"17:9446:6763":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"5:288:2048":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"22:220:1583":{"crate_id":22,"path":["memchr","memchr","memchr"],"kind":"function"},"20:2478:6099":{"crate_id":20,"path":["regex_syntax","ast","Flags"],"kind":"struct"},"16:7637:8050":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:53158:8517":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"2:20727:12076":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"5:6203:6114":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"12:2178:2024":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"17:9691:6784":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"16:5510:7734":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"21:1670:6463":{"crate_id":21,"path":["aho_corasick","prefilter","StartBytesThree"],"kind":"struct"},"2:53181:8518":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"17:8526:6604":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:50085:8445":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"17:11951:7144":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"6:5759:9610":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"12:985:7945":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"17:10420:6882":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"6:4525:9308":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"17:10394:6879":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"13:220:8885":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"17:9539:6772":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"15:193:10355":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"17:13594:7605":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"17:13114:7465":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"17:8911:37764":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"5:781:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2:20433:35400":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"5:5705:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"20:1962:27584":{"crate_id":20,"path":["regex_syntax","ast","LiteralKind"],"kind":"enum"},"6:1701:9107":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"8:0:4430":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"1:7788:8676":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"1:7656:11886":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"5:6601:241":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"5:1376:5450":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:14:2655":{"crate_id":2,"path":["core","write"],"kind":"macro"},"2:10128:1627":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:54041:8568":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:5354:8644":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"1:3125:28420":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"5:7000:3416":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"17:12609:7322":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"1:3966:11995":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"18:96:4763":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"17:13492:7580":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:50453:8447":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"5:881:3417":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"6:1744:9123":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"6:4427:9289":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:2371:11946":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"1:1824:8606":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"1:8165:8729":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"16:2282:7631":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"16:3566:7691":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"1:2573:8612":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"5:6276:3416":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"18:582:4766":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"1:10210:10997":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"22:224:3151":{"crate_id":22,"path":["memchr","memchr","memchr3"],"kind":"function"},"1:10405:8619":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"1:6217:203":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"5:5143:4855":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"20:2732:127":{"crate_id":20,"path":["regex_syntax","hir","Error"],"kind":"struct"},"17:12896:7405":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2:1474:2040":{"crate_id":2,"path":["core","mem"],"kind":"module"},"17:11721:7096":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"17:12756:7374":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"5:2162:9848":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"22:788:5834":{"crate_id":22,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:10810:8269":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"5:6963:3416":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"17:13327:7533":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"2:9230:140":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:48543:152":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"12:2053:7945":{"crate_id":12,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:20878:12078":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"5:3488:3417":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:52406:8488":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"20:2840:1995":{"crate_id":20,"path":["regex_syntax","hir","Class"],"kind":"enum"},"17:12225:7194":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"1:10666:8678":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"1:8108:11950":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"1:7823:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"16:7211:7772":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"2:2866:4833":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:9013:9948":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"16:6719:37753":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"2:51687:8478":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"2:54690:8582":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:21:668":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"5:7158:221":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"17:10374:6874":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"17:11576:7075":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"6:5544:9502":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"1:6350:4581":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"3:223:207":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"9:800:8899":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"1:956:8197":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"2:54617:8576":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"6:4317:9248":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"17:11639:7086":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:50579:4660":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"2:52959:8511":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"5:5741:10991":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"5:3132:37694":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:58912:8596":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"21:1379:6424":{"crate_id":21,"path":["aho_corasick","packed","pattern","PatternIter"],"kind":"struct"},"16:4262:7699":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"12:822:11891":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"16:4888:7718":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"21:1548:38451":{"crate_id":21,"path":["aho_corasick","prefilter","Candidate"],"kind":"enum"},"6:6985:9812":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"6:4693:9386":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"2:47456:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"2:21704:8371":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"5:1091:10367":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"18:538:5847":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"1:11866:1517":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"1:1580:6565":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"5:4939:4575":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"2:8955:207":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"6:4537:9315":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"17:13100:7458":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"16:5737:7617":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"2:21669:8369":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"2:21721:33868":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"6:7224:9826":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"17:12797:7387":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"5:3872:5422":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"1:8805:3416":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"1:8767:8759":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"17:9712:6790":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"2:52613:8496":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:950:8196":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"2:2501:147":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:47363:5786":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"2:30002:67":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2:1737:17235":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"2:47646:4672":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"22:824:3172":{"crate_id":22,"path":["memchr","memmem","Searcher"],"kind":"struct"},"17:9317:6752":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"17:9671:6782":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"16:0:4437":{"crate_id":16,"path":["gimli"],"kind":"module"},"16:7426:8033":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"6:1524:8992":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:53385:8530":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"1:8139:4683":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"19:0:1011":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"17:9382:6758":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"17:9458:6765":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"17:9644:6780":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"6:4654:9365":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"21:1469:6427":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddySlim1Mask128"],"kind":"struct"},"16:4441:7705":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"16:5664:7753":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"18:599:37769":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:11862:1462":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"5:3501:5450":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"5:5139:2031":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:47626:4671":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:11370:8625":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"20:3115:4616":{"crate_id":20,"path":["regex_syntax","unicode","CaseFoldError"],"kind":"struct"},"17:9577:6776":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"6:6402:9717":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"17:9658:6781":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"21:1561:6442":{"crate_id":21,"path":["aho_corasick","prefilter","PrefilterObj"],"kind":"struct"},"17:10822:23856":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"6:5533:9494":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"17:13214:7488":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"21:1481:6429":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddyFat1Mask256"],"kind":"struct"},"20:2665:6487":{"crate_id":20,"path":["regex_syntax","hir","print","Writer"],"kind":"struct"},"1:8781:8760":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:57637:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:51457:9939":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"1:621:5707":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"2:21613:8364":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:1989:181":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:9022:191":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"9:33:10082":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"1:7939:8684":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"20:1702:27600":{"crate_id":20,"path":["regex_syntax","ast","parse","ClassState"],"kind":"enum"},"1:6533:4591":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"2:12116:17192":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"2:50077:8444":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"17:10434:6883":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"5:1257:8204":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"20:3211:1858":{"crate_id":20,"path":["regex_syntax","utf8","Utf8Sequences"],"kind":"struct"},"2:4222:4700":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"17:13141:7472":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"17:1903:23892":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"17:10159:6853":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"16:7557:8038":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"16:2433:7644":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"17:10997:6945":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"1:2345:11936":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"6:4234:9212":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"6:4736:9403":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"1:7464:6618":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"5:36:5419":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"2:9284:5498":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:4491:12034":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"1:4095:12014":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"6:5723:9600":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"1:6875:10463":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"1:9054:215":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"6:595:8980":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"22:691:6336":{"crate_id":22,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"17:9844:6806":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"20:1948:1989":{"crate_id":20,"path":["regex_syntax","ast","Literal"],"kind":"struct"},"6:4249:9218":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:49514:5331":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:11855:732":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:2683:222":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"17:10321:6867":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"1:8912:8764":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"17:11734:6820":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"2:49291:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"6:4602:9347":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"6:5737:9603":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"5:2604:9852":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"2:47536:6157":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"17:9021:6734":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"1:3908:11991":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:9515:6171":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"22:726:6348":{"crate_id":22,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:21645:3025":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:20880:6371":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:47402:4866":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:878:8191":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"2:54541:8574":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:12164:189":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"5:3477:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"5:5725:4575":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"17:12322:7207":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"17:12768:7379":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"16:7452:195":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"2:53261:8519":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"17:11125:6971":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"7:32:22698":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"1:413:162":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:11541:4853":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"16:7388:8032":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"2:9894:1626":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:53835:8537":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:860:5450":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"20:254:38425":{"crate_id":20,"path":["regex_syntax","ast","visitor","ClassFrame"],"kind":"enum"},"16:5219:6723":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:50776:4877":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:48802:5450":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"18:719:5837":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"17:11997:7154":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"1:9371:8676":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"17:9831:6804":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"14:0:4435":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"1:8843:12064":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"2:4:995":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"2:53080:8515":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"6:6582:9805":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:39883:5302":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"0:0:1661":{"crate_id":0,"path":["regex"],"kind":"module"},"17:9165:37761":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"1:6567:214":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:1672:1067":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"2:2794:4818":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"17:12176:7181":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"16:8014:7995":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"16:2465:7645":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"16:6654:7915":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"17:9631:6779":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"20:2982:2026":{"crate_id":20,"path":["regex_syntax","hir","GroupKind"],"kind":"enum"},"17:9601:6777":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"12:0:4434":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"17:12860:7400":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"1:11841:367":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"17:10708:6908":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"21:1217:2307":{"crate_id":21,"path":["aho_corasick","nfa","State"],"kind":"struct"},"1:11867:1104":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"1:3956:11994":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:48810:3416":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"1:904:5422":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"17:12278:7200":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"20:2686:27603":{"crate_id":20,"path":["regex_syntax","hir","translate","HirFrame"],"kind":"enum"},"20:2931:2004":{"crate_id":20,"path":["regex_syntax","hir","Anchor"],"kind":"enum"},"1:8291:8631":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"5:7180:8315":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"6:7247:9832":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:48600:11983":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"17:9909:6813":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"16:7135:37754":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"17:12695:7367":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"2:22168:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"17:11828:7112":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"1:5422:8646":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"1:933:8193":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"1:962:8198":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"2:51500:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"17:9820:6803":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"1:534:5861":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"20:2773:1854":{"crate_id":20,"path":["regex_syntax","hir","Hir"],"kind":"struct"},"6:4371:9276":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"5:6351:6114":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"6:4339:9261":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"6:5694:9587":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"17:12638:7333":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"16:6252:7850":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"6:123:17612":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"22:681:5848":{"crate_id":22,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"17:12674:7362":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"6:7259:9834":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:4557:9707":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"1:5165:187":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"17:10445:6885":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"1:10641:8677":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"2:11089:3043":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"16:2535:7648":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:38661:180":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"22:753:6353":{"crate_id":22,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"1:11145:8659":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"17:12964:7425":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"17:9488:6769":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"6:5709:9589":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"1:7699:8395":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"20:1881:27583":{"crate_id":20,"path":["regex_syntax","ast","Ast"],"kind":"enum"},"17:12630:7332":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"17:8871:6731":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"17:11939:7142":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"16:7543:7670":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"2:51147:8459":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"5:6979:8307":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"1:11854:632":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:50542:5892":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"2:47343:5795":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"21:1339:3172":{"crate_id":21,"path":["aho_corasick","packed","api","Searcher"],"kind":"struct"},"2:50270:8446":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"6:62:17557":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"2:48672:8433":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"17:9751:6795":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"1:8080:1987":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"6:4257:9221":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:12850:7399":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"17:12033:7159":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"6:6489:9763":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"16:7567:23792":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"17:10854:23857":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"17:9475:6768":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:5661:35491":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"17:13404:7558":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"2:8737:10108":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"17:12874:7401":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"1:9176:6224":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"1:8978:8772":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"2:12436:5417":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"1:4622:12043":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"6:4195:9191":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"21:1602:6374":{"crate_id":21,"path":["aho_corasick","prefilter","ByteSet"],"kind":"struct"},"16:7319:8028":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"17:12237:7195":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"2:49331:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"21:1358:4740":{"crate_id":21,"path":["aho_corasick","packed","api","FindIter"],"kind":"struct"},"5:6670:6152":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"21:921:4743":{"crate_id":21,"path":["aho_corasick","state_id","StateID"],"kind":"trait"},"21:1284:6411":{"crate_id":21,"path":["aho_corasick","nfa","QueuedSet"],"kind":"struct"},"2:2679:3990":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"17:12060:7162":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"1:9864:8430":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"1:1065:8199":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"16:6186:7665":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"17:10360:6869":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"16:5793:7622":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"1:1898:5705":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"5:3699:6114":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"16:7329:7679":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"1:8225:12015":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:50504:5890":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"6:6458:9738":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"17:9722:6791":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"21:1639:6458":{"crate_id":21,"path":["aho_corasick","prefilter","RareBytesThree"],"kind":"struct"},"1:8415:8751":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:21794:8383":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"17:562:6618":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"16:6472:7885":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"1:11019:9945":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"17:13231:7495":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:47748:4680":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"6:1894:18945":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"17:8596:6606":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"17:10528:6897":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"21:1193:4603":{"crate_id":21,"path":["aho_corasick","error","ErrorKind"],"kind":"enum"},"2:50894:4872":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"17:10497:23960":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"16:7309:7678":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"16:7890:8090":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"16:6070:7833":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"21:915:12005":{"crate_id":21,"path":["aho_corasick","state_id","private","Sealed"],"kind":"trait"},"20:2266:6562":{"crate_id":20,"path":["regex_syntax","ast","ClassSetUnion"],"kind":"struct"},"6:541:8951":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:21696:8370":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"5:5197:1368":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"17:9501:6751":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:47055:4839":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"1:1083:8204":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"20:1842:6468":{"crate_id":20,"path":["regex_syntax","ast","Position"],"kind":"struct"},"2:3389:8321":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"2:20452:35454":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"2:2815:4826":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"6:4499:9295":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"5:1973:8292":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"21:1566:5846":{"crate_id":21,"path":["aho_corasick","prefilter","PrefilterState"],"kind":"struct"},"17:10774:6633":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"2:48708:8341":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"9:896:22712":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:10049:4874":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:11521:1606":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"16:7659:23793":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"1:8992:28042":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"17:10532:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"17:12781:7384":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"6:4162:9167":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:2827:4824":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"20:1677:6479":{"crate_id":20,"path":["regex_syntax","ast","parse","ParserI"],"kind":"struct"},"17:12291:7201":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"2:6656:4642":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"2:2680:4713":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"6:4241:9216":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"6:4755:9411":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:1825:4717":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"18:624:37772":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"16:7298:8027":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"20:1603:4618":{"crate_id":20,"path":["regex_syntax","utf8","ScalarRange"],"kind":"struct"},"6:4608:9350":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"18:609:6348":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"21:1508:6433":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddySlim3Mask128"],"kind":"struct"},"2:51161:8462":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:50624:5898":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"2:38678:4766":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2:51325:8470":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"21:1368:6419":{"crate_id":21,"path":["aho_corasick","packed","pattern","Patterns"],"kind":"struct"},"20:3139:37788":{"crate_id":20,"path":["regex_syntax","unicode","CanonicalClassQuery"],"kind":"enum"},"16:5981:7801":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"17:9350:6717":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"17:13091:7457":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"16:5460:7733":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"5:2884:37683":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"20:2857:4604":{"crate_id":20,"path":["regex_syntax","hir","ClassUnicode"],"kind":"struct"},"2:2458:12005":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"5:3086:3417":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"17:13176:7480":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:53029:8514":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"5:1708:5420":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"2:4227:4701":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:21486:8360":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:2359:11940":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"6:4544:9316":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"6:6321:9687":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"5:4297:6137":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"2:8564:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"17:9401:6759":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"17:13382:7552":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"1:6917:6198":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"6:5514:9492":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"9:863:22711":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"2:50670:4868":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:53575:8533":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:1564:3417":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"21:1591:6447":{"crate_id":21,"path":["aho_corasick","prefilter","RareBytesBuilder"],"kind":"struct"},"1:10706:28561":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"9:19:10080":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"17:8110:23829":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"17:8701:6609":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"16:2705:7655":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"2:4707:11889":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"16:6017:7815":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"2:51453:9938":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:1788:8605":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"20:444:1853":{"crate_id":20,"path":["regex_syntax","hir"],"kind":"module"},"11:36:8896":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"1:6466:4586":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"1:11858:731":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"2:51521:8475":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"2:2908:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"5:6909:5418":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"2:3954:2612":{"crate_id":2,"path":["core","ascii","escape_default"],"kind":"function"},"17:10296:6865":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"12:1138:8204":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"1:8789:3417":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"12:777:6111":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"16:6528:7897":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"2:53339:8529":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"11:44:8209":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"20:3120:4599":{"crate_id":20,"path":["regex_syntax","unicode","UnicodeWordError"],"kind":"struct"},"6:5792:9619":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"12:2205:4562":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"1:8875:12066":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"6:4136:9147":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"16:5525:7737":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"1:2476:8611":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"17:11761:7102":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"21:1072:6390":{"crate_id":21,"path":["aho_corasick","buffer","Buffer"],"kind":"struct"},"2:2973:4843":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"5:6971:195":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"18:652:6336":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"16:4574:7708":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"16:4144:7697":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:9014:5328":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"17:12550:7270":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"1:11248:6211":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"17:11199:6982":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"5:5814:6135":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"2:22333:168":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"18:671:5834":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"20:3195:1856":{"crate_id":20,"path":["regex_syntax","utf8","Utf8Range"],"kind":"struct"},"12:697:8190":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"2:54644:8578":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"2:7479:4656":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"18:113:4764":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:9483:6166":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"5:836:6120":{"crate_id":5,"path":["alloc","collections","binary_heap","retain","RebuildOnDrop"],"kind":"struct"},"17:12008:7156":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"6:4189:9190":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:7047:4659":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"20:2746:4603":{"crate_id":20,"path":["regex_syntax","hir","ErrorKind"],"kind":"enum"},"2:47566:4660":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"2:46796:4845":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:7864:8291":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"18:690:5835":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"16:5433:7724":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:22135:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"2:2761:979":{"crate_id":2,"path":["core","ops"],"kind":"module"},"2:50553:5881":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"6:1642:9071":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"5:6003:12111":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"17:12514:7239":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"5:4219:242":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"6:4216:9200":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"14:160:8182":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"17:13393:7557":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"1:4625:12018":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"1:1592:6567":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"2:49131:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:47442:5791":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"20:1627:27596":{"crate_id":20,"path":["regex_syntax","ast","parse","Primitive"],"kind":"enum"},"2:7051:4658":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"6:4125:9139":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:3166:134":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"16:6877:23789":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"6:5886:9656":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"1:920:8205":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:49818:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"1:914:5420":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"1:8935:28091":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"2:48794:3417":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"2:57598:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"2:51358:4879":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:5546:6186":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"20:2678:6583":{"crate_id":20,"path":["regex_syntax","hir","translate","Translator"],"kind":"struct"},"20:2605:4612":{"crate_id":20,"path":["regex_syntax","hir","interval","IntervalSet"],"kind":"struct"},"17:13279:7532":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"17:9061:6735":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"12:320:6107":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"5:1228:8200":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:11847:308":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"16:4217:7698":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"2:50702:4861":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"21:1487:6430":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddySlim2Mask128"],"kind":"struct"},"21:1015:6379":{"crate_id":21,"path":["aho_corasick","ahocorasick","StreamChunkIter"],"kind":"struct"},"21:1617:6452":{"crate_id":21,"path":["aho_corasick","prefilter","RareByteOffset"],"kind":"struct"},"1:5553:6187":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"17:8881:37768":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"16:5558:23782":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:10444:5443":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"9:188:10087":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"6:4778:9419":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:49766:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"12:1044:22863":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"1:8958:6468":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"1:2208:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"1:6390:4589":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"2:51000:4859":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"17:12307:7203":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"6:7218:9825":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"6:587:8975":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"6:5453:9450":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"16:2930:22925":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"2:1751:9855":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"2:51034:4697":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:47416:5789":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"1:8970:8770":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"2:4289:4706":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:10341:6205":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"1:11184:8662":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"20:1935:2031":{"crate_id":20,"path":["regex_syntax","ast","Concat"],"kind":"struct"},"5:7141:8313":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:48066:4653":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"22:222:3150":{"crate_id":22,"path":["memchr","memchr","memchr2"],"kind":"function"},"1:3426:5323":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"12:1832:3417":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"17:8752:1843":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"1:10831:28563":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"1:6066:6176":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"17:9553:6735":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"21:1501:6432":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddyFat2Mask256"],"kind":"struct"},"5:4103:3417":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:51445:9936":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"2:2682:223":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"6:5682:9580":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"6:526:8942":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"21:1044:2667":{"crate_id":21,"path":["aho_corasick","ahocorasick","AhoCorasickBuilder"],"kind":"struct"},"6:4621:9355":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"5:7235:5420":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"18:736:5839":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"1:939:11891":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"6:4716:9396":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"1:6818:6211":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","fast","Key"],"kind":"struct"},"21:1576:5806":{"crate_id":21,"path":["aho_corasick","prefilter","Builder"],"kind":"struct"},"9:920:22713":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"2:47473:33866":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"22:624:6336":{"crate_id":22,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"18:707:3172":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:47282:8405":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"20:1740:127":{"crate_id":20,"path":["regex_syntax","ast","Error"],"kind":"struct"},"17:13148:7473":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"21:1409:1650":{"crate_id":21,"path":["aho_corasick","packed","teddy","compile","Compiler"],"kind":"struct"},"16:5472:7668":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:47546:8414":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"16:6517:7896":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"1:3279:11972":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"6:562:8962":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"6:1538:8997":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:8272:23846":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:2736:4882":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"2:47687:4676":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"2:50830:1627":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"2:2861:4832":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"20:2719:6099":{"crate_id":20,"path":["regex_syntax","hir","translate","Flags"],"kind":"struct"},"2:8140:3268":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"12:1003:8199":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2:47586:4661":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"5:1243:8199":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"22:655:5847":{"crate_id":22,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:11271:8352":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:3451:11967":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"6:6555:9799":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"17:13506:7587":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"5:4818:6135":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"12:853:8197":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"16:6496:23787":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"14:187:22876":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:48819:4731":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"6:4708:9391":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"20:2913:2051":{"crate_id":20,"path":["regex_syntax","hir","ClassBytesRange"],"kind":"struct"},"9:622:22731":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"1:10676:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"2:47655:4673":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:2802:4820":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"2:2849:4829":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:11199:8663":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"2:2837:4827":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"16:7288:8026":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"6:6963:9811":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"17:8666:6608":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:2672:217":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"2:9401:6164":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"16:3716:7695":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"20:2645:1989":{"crate_id":20,"path":["regex_syntax","hir","literal","Literal"],"kind":"struct"},"1:1847:6224":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"20:2081:6545":{"crate_id":20,"path":["regex_syntax","ast","ClassAscii"],"kind":"struct"},"5:5391:5426":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"2:21395:12075":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:7662:6216":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"2:50930:1621":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"17:11300:7007":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"1:7810:8679":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"18:521:5842":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"17:11054:6959":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"16:6171:7843":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"16:4786:7715":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"1:5907:203":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"16:6842:7942":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"17:12884:7402":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"2:54664:8580":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"16:7059:4731":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"16:6161:23785":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"16:6137:7838":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:3989:8323":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:5891:6186":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"2:50038:8439":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:3970:11996":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:47739:4679":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:1919:5462":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"5:6157:5422":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"20:2217:27592":{"crate_id":20,"path":["regex_syntax","ast","ClassSetItem"],"kind":"enum"},"2:52715:8500":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"17:13184:7482":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"6:4663:9371":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:47764:4681":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"6:6312:9686":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"16:2509:7647":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"2:3640:3416":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"2:47461:8412":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:47333:5794":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"17:9071:37760":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"16:2727:7656":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"16:534:7620":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"1:8231:8736":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"17:11800:7107":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"1:3387:8622":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"1:5539:203":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:46882:4836":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"20:3015:2045":{"crate_id":20,"path":["regex_syntax","hir","RepetitionKind"],"kind":"enum"},"17:420:6616":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"17:11748:7101":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:4150:4699":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"17:10894:6923":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"6:4807:9438":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"17:12361:7217":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"1:10399:8615":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"21:990:4741":{"crate_id":21,"path":["aho_corasick","ahocorasick","FindOverlappingIter"],"kind":"struct"},"2:2684:108":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"20:2655:6484":{"crate_id":20,"path":["regex_syntax","hir","print","PrinterBuilder"],"kind":"struct"},"17:8991:37766":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"1:7025:10373":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"21:1253:6408":{"crate_id":21,"path":["aho_corasick","nfa","IterTransitionsMut"],"kind":"struct"},"16:5780:7768":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"2:54371:8571":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"22:853:5839":{"crate_id":22,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:52591:8495":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"17:13374:7551":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"17:9263:6744":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"2:2853:4830":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"16:3599:7692":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"2:49051:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:925:8189":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"5:679:228":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:21539:8361":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"20:2169:27590":{"crate_id":20,"path":["regex_syntax","ast","ClassUnicodeOpKind"],"kind":"enum"},"2:54433:8572":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:8139:3269":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:51110:17156":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"2:22234:5866":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"17:8055:23831":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"6:4700:984":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"6:1556:9008":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:51469:9942":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"22:648:5846":{"crate_id":22,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:51338:4878":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"5:3245:5420":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"2:7088:149":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"12:815:8193":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"2:21742:33909":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"16:2842:7661":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"1:2210:8610":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"16:7483:7682":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"16:6284:7683":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"16:2320:7639":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"17:11873:7117":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"17:10752:6911":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"17:13413:7560":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"6:5751:9608":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:11075:8348":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"16:7956:7684":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"16:6619:7911":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"6:4222:9203":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"1:11232:9958":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"2:20871:12005":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"6:1649:9075":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"5:1454:195":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"1:11860:1464":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"1:5676:4578":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"2:47073:8402":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"13:0:4428":{"crate_id":13,"path":["std_detect"],"kind":"module"},"1:8859:12065":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"2:6805:1987":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:11849:1368":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"6:5551:9504":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:3369:8732":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"1:891:8192":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"2:50696:4862":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"17:10257:6862":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"16:5184:22896":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"1:5305:8638":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"12:632:3417":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"16:6345:7671":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"16:4817:7716":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"16:7511:8036":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"2:30180:33889":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"16:5411:7669":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:29757:11985":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"2:50046:5499":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"2:1606:1334":{"crate_id":2,"path":["core","mem","size_of"],"kind":"function"},"2:52791:8506":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"2:12381:139":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"1:4311:8630":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"1:11465:9960":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"1:5339:8643":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"2:7472:3584":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:29940:4635":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2:50848:4875":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"17:12087:7166":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"17:9274:6745":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"6:4591:9339":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"1:5811:6188":{"crate_id":1,"path":["std","sync","mpmc","array","Channel"],"kind":"struct"},"2:2939:2290":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"17:12972:7427":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"6:4575:9330":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"17:12617:7325":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"1:4159:8628":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"5:4722:201":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"5:273:6114":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"20:2279:6564":{"crate_id":20,"path":["regex_syntax","ast","ClassSetBinaryOp"],"kind":"struct"},"17:9303:6751":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"17:10682:6907":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"2:20418:35400":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"6:5845:9630":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"16:7267:8023":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:50030:5500":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:1643:4631":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"2:52983:8512":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:3977:8322":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"6:6287:9668":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"1:4057:10369":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:2857:4831":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"2:7084:133":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"22:741:37772":{"crate_id":22,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"6:4304:9242":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:10170:5902":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"2:6865:4570":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"2:54183:8569":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:1051:7945":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"6:4726:9402":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"17:13039:7442":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"1:9102:8774":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"17:11485:7054":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"5:1413:8192":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"6:4669:9372":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"5:1959:8291":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"18:755:5840":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:11234:8350":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"2:1602:665":{"crate_id":2,"path":["core","mem","forget"],"kind":"function"},"17:10075:6848":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"2:21808:8384":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"6:4296:9237":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:50744:4874":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"20:2950:2012":{"crate_id":20,"path":["regex_syntax","hir","WordBoundary"],"kind":"enum"},"17:8339:23848":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"2:2798:4822":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"21:1516:6434":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddySlim3Mask256"],"kind":"struct"},"1:11843:410":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"16:7929:8094":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"1:734:141":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"16:6567:7909":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"17:11606:7078":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"2:48058:4651":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"6:4447:9291":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"1:4837:12042":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"16:5703:7755":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"1:8753:8758":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"2:2507:235":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"17:9526:6771":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"5:6949:37660":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"5:1329:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"2:48583:8340":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"16:3026:6639":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"16:5761:7761":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"20:1713:6483":{"crate_id":20,"path":["regex_syntax","ast","parse","NestLimiter"],"kind":"struct"},"22:556:6603":{"crate_id":22,"path":["memchr","cow","Imp"],"kind":"enum"},"17:9250:6743":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"12:1029:8200":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"1:8965:8769":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"5:6089:6146":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"2:20665:12082":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"2:2749:5303":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"20:1855:6521":{"crate_id":20,"path":["regex_syntax","ast","WithComments"],"kind":"struct"},"1:8269:9696":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"2:54769:8587":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:11809:1786":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"2:53497:8532":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:8484:3417":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:39874:8396":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"22:699:4766":{"crate_id":22,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"1:11128:6209":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"5:2065:8293":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:58933:8597":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"16:6298:7851":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"16:5628:7746":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"1:4239:8629":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"2:9692:12005":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"16:6330:7860":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"5:2876:9845":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"2:9869:5450":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:4419:12019":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"20:1690:27599":{"crate_id":20,"path":["regex_syntax","ast","parse","GroupState"],"kind":"enum"},"5:3098:37695":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"17:11594:7076":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"20:2894:4606":{"crate_id":20,"path":["regex_syntax","hir","ClassBytes"],"kind":"struct"},"2:48720:8342":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"2:2592:127":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:25641:5929":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"22:798:3215":{"crate_id":22,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:361:5872":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"17:11853:7114":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"17:8162:23843":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"17:11186:6981":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"21:1524:6435":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","TeddyFat3Mask256"],"kind":"struct"},"1:7513:6200":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"5:7006:3416":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"2:20471:35452":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"20:2200:27591":{"crate_id":20,"path":["regex_syntax","ast","ClassSet"],"kind":"enum"},"1:641:8599":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:48010:4644":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"16:6316:7858":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"17:0:4438":{"crate_id":17,"path":["object"],"kind":"module"},"12:1845:5420":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"16:7497:7672":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"16:5163:7721":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"17:13536:7595":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"16:7469:7681":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:4754:781":{"crate_id":2,"path":["core","iter"],"kind":"module"},"5:3153:6464":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"17:11536:7067":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"2:9500:6167":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"2:47608:4662":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"17:10546:23853":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"1:7475:8798":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"1:7934:8683":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"6:5578:9524":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"17:2916:6629":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:48852:4732":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"16:4921:7719":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"20:2325:27594":{"crate_id":20,"path":["regex_syntax","ast","AssertionKind"],"kind":"enum"},"2:47291:5793":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"2:21681:33901":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"2:20721:12074":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"17:10245:6861":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"16:2341:7640":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"16:2771:7658":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"5:2880:37685":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"16:6781:7933":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"16:7093:7975":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"12:1628:6112":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"6:7265:9835":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:21130:12077":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"17:12118:7172":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"16:6123:7663":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"1:638:8598":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"5:2055:5855":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"21:1187:127":{"crate_id":21,"path":["aho_corasick","error","Error"],"kind":"struct"},"18:681:3215":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"22:807:5835":{"crate_id":22,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:51315:8466":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"17:11288:7004":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"14:215:8186":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"16:3457:6643":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"21:953:2666":{"crate_id":21,"path":["aho_corasick","ahocorasick","AhoCorasick"],"kind":"struct"},"20:2491:6570":{"crate_id":20,"path":["regex_syntax","ast","FlagsItem"],"kind":"struct"},"17:10466:6888":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"2:9018:5330":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:47276:4697":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:9059:216":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:53651:8535":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"20:2312:6101":{"crate_id":20,"path":["regex_syntax","ast","Assertion"],"kind":"struct"},"2:2810:4821":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:2549:6167":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"18:531:5846":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"1:7783:6677":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:54792:8588":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"17:10490:6890":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"20:3090:2670":{"crate_id":20,"path":["regex_syntax","parser","ParserBuilder"],"kind":"struct"},"6:5520:9493":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:6474:3012":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"16:7909:8093":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"17:8393:23850":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"20:2013:27586":{"crate_id":20,"path":["regex_syntax","ast","HexLiteralKind"],"kind":"enum"},"17:12073:7163":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"1:5990:6188":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"17:13071:7450":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"17:13158:7476":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"2:2306:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"17:9183:6738":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"12:274:8887":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"6:4561:9324":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"17:10207:6855":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"2:49507:5330":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:9043:164":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"2:11546:4851":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:11307:6212":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"20:1830:4610":{"crate_id":20,"path":["regex_syntax","ast","Span"],"kind":"struct"},"20:3160:1857":{"crate_id":20,"path":["regex_syntax","utf8","Utf8Sequence"],"kind":"enum"},"2:48649:33900":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"17:8475:23830":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"13:108:37751":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"12:1120:8203":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"17:13221:7490":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"20:3056:4608":{"crate_id":20,"path":["regex_syntax","hir","HirInfo"],"kind":"struct"},"2:30016:33884":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"9:0:4431":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"16:5596:7741":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"1:10696:8623":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"5:864:1867":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"17:11356:7024":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"17:8494:6722":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"17:9873:6810":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"2:52761:8505":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"21:1086:6391":{"crate_id":21,"path":["aho_corasick","classes","ByteClassRepresentatives"],"kind":"struct"},"2:54495:8573":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:11038:8657":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"1:0:1360":{"crate_id":1,"path":["std"],"kind":"module"},"17:11909:7123":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"2:57611:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"20:2633:2669":{"crate_id":20,"path":["regex_syntax","hir","literal","Literals"],"kind":"struct"},"20:268:38424":{"crate_id":20,"path":["regex_syntax","ast","visitor","ClassInduct"],"kind":"enum"},"17:3125:6631":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:9244:144":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"17:9778:6797":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"1:8247:8738":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"17:11974:7153":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"21:1322:38452":{"crate_id":21,"path":["aho_corasick","packed","api","ForceAlgorithm"],"kind":"enum"},"1:484:6178":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"2:54754:8586":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"9:709:2307":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"6:1547:9002":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"17:12211:7193":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"1:8797:8762":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"17:9764:6796":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"17:10385:6878":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"1:1927:5706":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"20:2520:6572":{"crate_id":20,"path":["regex_syntax","ast","Flag"],"kind":"enum"},"2:2459:17188":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"17:9293:6750":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"17:9155:6737":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:10506:6892":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"16:2389:7642":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"17:12022:7158":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"5:3119:6567":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"16:5878:22897":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"17:11500:7058":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"2:52650:8498":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"16:4689:7712":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"2:49171:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"21:1034:38454":{"crate_id":21,"path":["aho_corasick","ahocorasick","StreamChunk"],"kind":"enum"},"9:676:22719":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"17:9738:6793":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"2:1552:6135":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"17:11174:6980":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"2:51652:192":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"2:2778:4813":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"17:10796:6913":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"2:21787:9861":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"2:2337:179":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"16:6376:23786":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"6:5490:9476":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"21:1273:1650":{"crate_id":21,"path":["aho_corasick","nfa","Compiler"],"kind":"struct"},"16:6359:7862":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"1:5053:188":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"17:8212:23844":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"21:1180:5806":{"crate_id":21,"path":["aho_corasick","dfa","Builder"],"kind":"struct"},"1:4559:9709":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"2:51644:208":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"2:52530:8493":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"6:5482:9474":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"6:7230:9827":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"6:5782:9616":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"1:2867:207":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"17:8295:23847":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"17:13007:7433":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"17:10476:23959":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"20:3106:127":{"crate_id":20,"path":["regex_syntax","unicode","Error"],"kind":"enum"},"17:9422:6761":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"20:3125:27606":{"crate_id":20,"path":["regex_syntax","unicode","ClassQuery"],"kind":"enum"},"1:9987:10375":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"2:49500:5328":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"2:51253:8356":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"12:98:8886":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"6:5743:9606":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"17:8796:6724":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"2:22432:8388":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"18:507:6336":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:588:4695":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:2578:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"1:7592:5859":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"2:47023:4556":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"17:13059:7449":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"2:3932:6135":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"5:2094:9844":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"1:11868:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:52861:8508":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"2:3178:4842":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"1:5485:12062":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:49751:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"18:699:5836":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"2:57572:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:9083:8657":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"14:31:8182":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:2343:186":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"2:50614:5900":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"12:2190:37749":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"12:2184:8891":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"17:9108:6736":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"6:4631:9358":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"21:1290:6412":{"crate_id":21,"path":["aho_corasick","nfa","AllBytesIter"],"kind":"struct"},"17:11330:7019":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"6:4485:9294":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"5:1422:8205":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"16:3402:7690":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"16:4749:7714":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"16:2411:7643":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"2:21629:9858":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:10014:5904":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"17:12955:7424":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"2:2252:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:7148:3867":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"21:1610:6375":{"crate_id":21,"path":["aho_corasick","prefilter","RareByteOffsets"],"kind":"struct"},"17:1931:6625":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"6:6425:9724":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:49493:5329":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"12:393:10362":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"2:47096:3024":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"20:3035:2067":{"crate_id":20,"path":["regex_syntax","hir","RepetitionRange"],"kind":"enum"},"2:20602:12080":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"22:0:1583":{"crate_id":22,"path":["memchr"],"kind":"module"},"2:54675:8581":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"16:2749:7657":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"6:7299:9842":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:8501:8756":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:48946:180":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"17:9031:37763":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"17:12730:7368":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"22:638:5842":{"crate_id":22,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"17:11271:6996":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"2:2504:132":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:3191:34238":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"2:50285:9935":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:2232:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"6:4615:9352":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"17:11684:7092":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"5:6924:8306":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"2:22366:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"1:10999:8759":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"12:810:8205":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"2:48785:2056":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:10688:5896":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"5:632:8286":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"1:3978:11998":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:49011:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:3444:11949":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"5:1366:3417":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:73:1462":{"crate_id":2,"path":["core","u32"],"kind":"module"},"12:1836:3416":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:53621:8534":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"6:5871:9645":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:13580:7602":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"2:2843:4828":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"17:11841:7113":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:48033:4646":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"22:883:5841":{"crate_id":22,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"5:6484:5426":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2:2495:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"16:6690:7674":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:47788:4667":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"5:6918:3416":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"1:8159:4869":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"14:165:22869":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"5:7098:8308":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"17:9885:6811":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:2763:4812":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"2:4108:4719":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"2:2932:3337":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:47778:4682":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"16:6034:7821":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"2:48024:4581":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"17:9362:6735":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"1:10926:6207":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"2:22267:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"5:4034:6135":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"1:10636:9954":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"1:11011:28558":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"21:1624:6453":{"crate_id":21,"path":["aho_corasick","prefilter","RareBytesOne"],"kind":"struct"},"2:52813:8507":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:4561:9711":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"1:3312:4647":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"6:4201:9193":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"2:48566:8338":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"16:6743:23788":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:1986:182":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"2:9007:111":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"1:7856:8682":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"1:355:5871":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"16:3632:7693":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"16:6865:7944":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"1:4662:12004":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"16:2683:7654":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"15:175:10351":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"16:5815:23783":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:51018:4856":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"12:751:5422":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"6:5730:9602":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"5:1404:8191":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"6:1728:9118":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"1:7944:4603":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"12:1681:143":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"1:8432:12053":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"2:3172:4840":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:51178:8463":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"21:542:993":{"crate_id":21,"path":["aho_corasick","packed"],"kind":"module"},"1:2213:6153":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"6:1506:8984":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:2790:4815":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"2:8141:2665":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:8811:8647":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"17:12046:7161":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"2:52631:8497":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:50794:4876":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"5:1071:10990":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"12:2080:8200":{"crate_id":12,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"22:777:4740":{"crate_id":22,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:3122:28415":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"17:10088:6849":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"12:1065:37750":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"17:11436:7029":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"1:7576:5873":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"16:7372:37752":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"6:7236:9828":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"1:3922:11993":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"16:4297:7700":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:2773:4814":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"18:491:6603":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"17:11774:7104":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"1:10686:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"18:564:5848":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"6:5592:9525":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"18:0:1583":{"crate_id":18,"path":["memchr"],"kind":"module"},"1:9376:6204":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"9:977:8272":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:46957:199":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:11850:1446":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"16:6109:7836":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"5:4630:657":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"2:51695:8480":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:2806:4819":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"6:7253:9833":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"20:0:1663":{"crate_id":20,"path":["regex_syntax"],"kind":"module"},"17:11106:6970":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:4886:4723":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"6:5670:9575":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"17:10520:6895":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"6:1660:9083":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"20:2594:131":{"crate_id":20,"path":["regex_syntax","error","Formatter"],"kind":"struct"},"1:11685:6215":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"2:47678:4675":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"17:8241:23845":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"20:2294:27593":{"crate_id":20,"path":["regex_syntax","ast","ClassSetBinaryOpKind"],"kind":"enum"},"16:2367:7641":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"2:51737:5465":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:4218:204":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"21:1631:6455":{"crate_id":21,"path":["aho_corasick","prefilter","RareBytesTwo"],"kind":"struct"},"1:7800:8678":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"17:9930:6815":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"18:660:4740":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:11846:1029":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"21:1331:5806":{"crate_id":21,"path":["aho_corasick","packed","api","Builder"],"kind":"struct"},"17:9805:6799":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"2:21592:8362":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"17:13459:7574":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"6:1720:9114":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:9937:4858":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"2:9020:5331":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"21:1005:4742":{"crate_id":21,"path":["aho_corasick","ahocorasick","StreamFindIter"],"kind":"struct"},"20:2969:2024":{"crate_id":20,"path":["regex_syntax","hir","Group"],"kind":"struct"},"2:21393:12005":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"12:119:6106":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"6:7176:9824":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"20:2417:2024":{"crate_id":20,"path":["regex_syntax","ast","Group"],"kind":"struct"},"18:766:5841":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"21:0:1662":{"crate_id":21,"path":["aho_corasick"],"kind":"module"},"2:49211:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"2:3161:231":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"2:51025:4866":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"17:10455:6887":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"17:13340:7539":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"16:7117:37757":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"1:7695:8675":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"2:47636:4150":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"12:1859:6566":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"2:47595:4670":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"17:13047:7443":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"21:963:6603":{"crate_id":21,"path":["aho_corasick","ahocorasick","Imp"],"kind":"enum"},"17:9897:6812":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"2:11310:8354":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"20:2661:6486":{"crate_id":20,"path":["regex_syntax","hir","print","Printer"],"kind":"struct"},"2:50605:5897":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"2:57624:243":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:652:17969":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:53005:8513":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"16:3263:7689":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"17:9371:6736":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"1:679:10994":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"18:590:6342":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"14:221:8187":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"2:2154:579":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"16:5996:7803":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"21:1540:6440":{"crate_id":21,"path":["aho_corasick","packed","teddy","runtime","Mask256"],"kind":"struct"},"2:54701:8583":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"6:5597:9526":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:9026:5333":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:1571:5422":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"5:3611:8291":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"1:11214:8665":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"2:46897:197":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"6:488:8917":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:52460:8490":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:11075:8656":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"1:8342:8748":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"5:6513:5428":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"1:3916:11992":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"20:1868:6522":{"crate_id":20,"path":["regex_syntax","ast","Comment"],"kind":"struct"},"17:8814:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"2:5882:4687":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"12:1534:8206":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"1:8923:5860":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"17:13134:7471":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"17:10310:6866":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:9845:3417":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"6:4377:9278":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:870:3416":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:50522:5893":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"17:11315:7013":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"6:482:8914":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"}},"external_crates":{"20":{"name":"regex_syntax","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"22":{"name":"memchr","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"aho_corasick","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":24}